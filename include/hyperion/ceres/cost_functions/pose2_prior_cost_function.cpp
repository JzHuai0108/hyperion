// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     COST_FUNCTION.cpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#include "pose2_prior_cost_function.hpp"

#include <sym/ops/storage_ops.h>
#include <sym/util/epsilon.h>

#include "sym/pose2_delta_factor.hpp"
#include "sym/pose2_delta_factor_with_jacobian0.hpp"

namespace hyperion::ceres {

using namespace sym_ceres;

auto Pose2PriorCostFunction::Evaluate(double const* const* parameters, double* residuals,
                                      double** jacobians) const -> bool {
  // Create aliases.
  const auto _x = sym::StorageOps<sym::Pose2<double>>::FromStorage(parameters[0]);

  // Evaluation without Jacobians.
  if (!jacobians) {
    Eigen::Map<Eigen::Matrix<double, 3, 1>>{residuals} =
        Pose2DeltaFactor<double>(_x, y_, sqrt_info_, sym::kDefaultEpsilon<double>);
    return true;
  }

  // Evaluation with Jacobians.
  Eigen::Map<Eigen::Matrix<double, 3, 1>>{residuals} = Pose2DeltaFactorWithJacobian0<double>(
      _x, y_, sqrt_info_, sym::kDefaultEpsilon<double>, jacobians[0]);
  return true;
}

}  // namespace hyperion::ceres
