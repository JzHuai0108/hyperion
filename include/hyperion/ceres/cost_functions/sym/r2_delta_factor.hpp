// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

namespace sym_ceres {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: r2_delta_factor
 *
 * Args:
 *     x: Matrix21
 *     y: Matrix21
 *     sqrt_info: Matrix22
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix21
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 2, 1> R2DeltaFactor(const Eigen::Matrix<Scalar, 2, 1>& x,
                                          const Eigen::Matrix<Scalar, 2, 1>& y,
                                          const Eigen::Matrix<Scalar, 2, 2>& sqrt_info,
                                          const Scalar epsilon) {
  // Total ops: 8

  // Unused inputs
  (void)epsilon;

  // Input arrays

  // Intermediate terms (2)
  const Scalar _tmp0 = -x(0, 0) + y(0, 0);
  const Scalar _tmp1 = -x(1, 0) + y(1, 0);

  // Output terms (1)
  Eigen::Matrix<Scalar, 2, 1> _res;

  _res(0, 0) = _tmp0 * sqrt_info(0, 0) + _tmp1 * sqrt_info(0, 1);
  _res(1, 0) = _tmp0 * sqrt_info(1, 0) + _tmp1 * sqrt_info(1, 1);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_ceres
