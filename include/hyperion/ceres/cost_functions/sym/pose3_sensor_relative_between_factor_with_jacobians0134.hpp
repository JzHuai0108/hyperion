// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>

namespace sym_ceres {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: pose3_sensor_relative_between_factor
 *
 * Args:
 *     x: Pose3
 *     x_T_a: Pose3
 *     a_T_b: Pose3
 *     y: Pose3
 *     y_T_b: Pose3
 *     sqrt_info: Matrix66
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix61
 *     res_D_x: (6x7) jacobian (result_dim x storage_dim) of res (6) wrt arg x (7) (row-major)
 *     res_D_x_T_a: (6x7) jacobian (result_dim x storage_dim) of res (6) wrt arg x_T_a (7)
 * (row-major) res_D_y: (6x7) jacobian (result_dim x storage_dim) of res (6) wrt arg y (7)
 * (row-major) res_D_y_T_b: (6x7) jacobian (result_dim x storage_dim) of res (6) wrt arg y_T_b (7)
 * (row-major)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 6, 1> Pose3SensorRelativeBetweenFactorWithJacobians0134(
    const sym::Pose3<Scalar>& x, const sym::Pose3<Scalar>& x_T_a, const sym::Pose3<Scalar>& a_T_b,
    const sym::Pose3<Scalar>& y, const sym::Pose3<Scalar>& y_T_b,
    const Eigen::Matrix<Scalar, 6, 6>& sqrt_info, const Scalar epsilon,
    Scalar* const res_D_x = nullptr, Scalar* const res_D_x_T_a = nullptr,
    Scalar* const res_D_y = nullptr, Scalar* const res_D_y_T_b = nullptr) {
  // Total ops: 4501

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x = x.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x_T_a = x_T_a.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _a_T_b = a_T_b.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y = y.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y_T_b = y_T_b.Data();

  // Intermediate terms (908)
  const Scalar _tmp0 = 2 * _y[3];
  const Scalar _tmp1 = _tmp0 * _y[1];
  const Scalar _tmp2 = -_tmp1;
  const Scalar _tmp3 = 2 * _y[0];
  const Scalar _tmp4 = _tmp3 * _y[2];
  const Scalar _tmp5 = _tmp2 + _tmp4;
  const Scalar _tmp6 = 2 * _y[1];
  const Scalar _tmp7 = _tmp6 * _y[2];
  const Scalar _tmp8 = _tmp3 * _y[3];
  const Scalar _tmp9 = _tmp7 + _tmp8;
  const Scalar _tmp10 = std::pow(_y[0], Scalar(2));
  const Scalar _tmp11 = -2 * _tmp10;
  const Scalar _tmp12 = std::pow(_y[1], Scalar(2));
  const Scalar _tmp13 = 1 - 2 * _tmp12;
  const Scalar _tmp14 = _tmp11 + _tmp13;
  const Scalar _tmp15 = _tmp14 * _y_T_b[6] + _tmp5 * _y_T_b[4] + _tmp9 * _y_T_b[5] + _y[6];
  const Scalar _tmp16 = _x[3] * _x_T_a[1];
  const Scalar _tmp17 = _x[2] * _x_T_a[0];
  const Scalar _tmp18 = _x[0] * _x_T_a[2];
  const Scalar _tmp19 = _x[1] * _x_T_a[3];
  const Scalar _tmp20 = _tmp16 + _tmp17 - _tmp18 + _tmp19;
  const Scalar _tmp21 = _x[3] * _x_T_a[2];
  const Scalar _tmp22 = _x[2] * _x_T_a[3];
  const Scalar _tmp23 = _x[0] * _x_T_a[1];
  const Scalar _tmp24 = _x[1] * _x_T_a[0];
  const Scalar _tmp25 = _tmp21 + _tmp22 + _tmp23 - _tmp24;
  const Scalar _tmp26 = 2 * _tmp25;
  const Scalar _tmp27 = _tmp20 * _tmp26;
  const Scalar _tmp28 = _x[3] * _x_T_a[3];
  const Scalar _tmp29 = _x[2] * _x_T_a[2];
  const Scalar _tmp30 = _x[0] * _x_T_a[0];
  const Scalar _tmp31 = _x[1] * _x_T_a[1];
  const Scalar _tmp32 = _tmp28 - _tmp29 - _tmp30 - _tmp31;
  const Scalar _tmp33 = _x[3] * _x_T_a[0];
  const Scalar _tmp34 = _x[2] * _x_T_a[1];
  const Scalar _tmp35 = _x[0] * _x_T_a[3];
  const Scalar _tmp36 = _x[1] * _x_T_a[2];
  const Scalar _tmp37 = _tmp33 - _tmp34 + _tmp35 + _tmp36;
  const Scalar _tmp38 = 2 * _tmp37;
  const Scalar _tmp39 = _tmp32 * _tmp38;
  const Scalar _tmp40 = _tmp27 + _tmp39;
  const Scalar _tmp41 = _tmp1 + _tmp4;
  const Scalar _tmp42 = std::pow(_y[2], Scalar(2));
  const Scalar _tmp43 = -2 * _tmp42;
  const Scalar _tmp44 = _tmp13 + _tmp43;
  const Scalar _tmp45 = _tmp0 * _y[2];
  const Scalar _tmp46 = -_tmp45;
  const Scalar _tmp47 = _tmp3 * _y[1];
  const Scalar _tmp48 = _tmp46 + _tmp47;
  const Scalar _tmp49 = _tmp41 * _y_T_b[6] + _tmp44 * _y_T_b[4] + _tmp48 * _y_T_b[5] + _y[4];
  const Scalar _tmp50 = 2 * _tmp20;
  const Scalar _tmp51 = _tmp37 * _tmp50;
  const Scalar _tmp52 = _tmp26 * _tmp32;
  const Scalar _tmp53 = -_tmp52;
  const Scalar _tmp54 = _tmp51 + _tmp53;
  const Scalar _tmp55 = 2 * std::pow(_tmp37, Scalar(2));
  const Scalar _tmp56 = -_tmp55;
  const Scalar _tmp57 = 2 * std::pow(_tmp25, Scalar(2));
  const Scalar _tmp58 = 1 - _tmp57;
  const Scalar _tmp59 = _tmp56 + _tmp58;
  const Scalar _tmp60 = -_tmp8;
  const Scalar _tmp61 = _tmp60 + _tmp7;
  const Scalar _tmp62 = _tmp11 + _tmp43 + 1;
  const Scalar _tmp63 = _tmp45 + _tmp47;
  const Scalar _tmp64 = _tmp61 * _y_T_b[6] + _tmp62 * _y_T_b[5] + _tmp63 * _y_T_b[4] + _y[5];
  const Scalar _tmp65 = 2 * _x[0];
  const Scalar _tmp66 = _tmp65 * _x[1];
  const Scalar _tmp67 = 2 * _x[2];
  const Scalar _tmp68 = _tmp67 * _x[3];
  const Scalar _tmp69 = _tmp66 + _tmp68;
  const Scalar _tmp70 = 2 * _x[3];
  const Scalar _tmp71 = _tmp70 * _x[0];
  const Scalar _tmp72 = -_tmp71;
  const Scalar _tmp73 = _tmp67 * _x[1];
  const Scalar _tmp74 = _tmp72 + _tmp73;
  const Scalar _tmp75 = std::pow(_x[2], Scalar(2));
  const Scalar _tmp76 = -2 * _tmp75;
  const Scalar _tmp77 = std::pow(_x[0], Scalar(2));
  const Scalar _tmp78 = 1 - 2 * _tmp77;
  const Scalar _tmp79 = _tmp76 + _tmp78;
  const Scalar _tmp80 = _tmp69 * _x_T_a[4] + _tmp74 * _x_T_a[6] + _tmp79 * _x_T_a[5] + _x[5];
  const Scalar _tmp81 = _tmp67 * _x[0];
  const Scalar _tmp82 = _tmp70 * _x[1];
  const Scalar _tmp83 = -_tmp82;
  const Scalar _tmp84 = _tmp81 + _tmp83;
  const Scalar _tmp85 = _tmp71 + _tmp73;
  const Scalar _tmp86 = std::pow(_x[1], Scalar(2));
  const Scalar _tmp87 = -2 * _tmp86;
  const Scalar _tmp88 = _tmp78 + _tmp87;
  const Scalar _tmp89 = _tmp84 * _x_T_a[4] + _tmp85 * _x_T_a[5] + _tmp88 * _x_T_a[6] + _x[6];
  const Scalar _tmp90 = -_tmp68;
  const Scalar _tmp91 = _tmp66 + _tmp90;
  const Scalar _tmp92 = _tmp81 + _tmp82;
  const Scalar _tmp93 = _tmp76 + _tmp87 + 1;
  const Scalar _tmp94 = _tmp91 * _x_T_a[5] + _tmp92 * _x_T_a[6] + _tmp93 * _x_T_a[4] + _x[4];
  const Scalar _tmp95 = -_a_T_b[5] + _tmp15 * _tmp40 - _tmp40 * _tmp89 + _tmp49 * _tmp54 -
                        _tmp54 * _tmp94 + _tmp59 * _tmp64 - _tmp59 * _tmp80;
  const Scalar _tmp96 = _y[2] * _y_T_b[0];
  const Scalar _tmp97 = _y[0] * _y_T_b[2];
  const Scalar _tmp98 = _y[3] * _y_T_b[1];
  const Scalar _tmp99 = _y[1] * _y_T_b[3];
  const Scalar _tmp100 = _tmp96 - _tmp97 + _tmp98 + _tmp99;
  const Scalar _tmp101 = _y[0] * _y_T_b[3];
  const Scalar _tmp102 = _y[2] * _y_T_b[1];
  const Scalar _tmp103 = _y[3] * _y_T_b[0];
  const Scalar _tmp104 = _y[1] * _y_T_b[2];
  const Scalar _tmp105 = _tmp101 - _tmp102 + _tmp103 + _tmp104;
  const Scalar _tmp106 = _y[2] * _y_T_b[3];
  const Scalar _tmp107 = _y[0] * _y_T_b[1];
  const Scalar _tmp108 = _y[3] * _y_T_b[2];
  const Scalar _tmp109 = _y[1] * _y_T_b[0];
  const Scalar _tmp110 = _tmp106 + _tmp107 + _tmp108 - _tmp109;
  const Scalar _tmp111 = _y[3] * _y_T_b[3];
  const Scalar _tmp112 = _y[2] * _y_T_b[2];
  const Scalar _tmp113 = _y[0] * _y_T_b[0];
  const Scalar _tmp114 = _y[1] * _y_T_b[1];
  const Scalar _tmp115 = _tmp111 - _tmp112 - _tmp113 - _tmp114;
  const Scalar _tmp116 = -_tmp100 * _tmp37 + _tmp105 * _tmp20 + _tmp110 * _tmp32 - _tmp115 * _tmp25;
  const Scalar _tmp117 = _tmp100 * _tmp20 + _tmp105 * _tmp37 + _tmp110 * _tmp25 + _tmp115 * _tmp32;
  const Scalar _tmp118 = _tmp100 * _tmp25 + _tmp105 * _tmp32 - _tmp110 * _tmp20 - _tmp115 * _tmp37;
  const Scalar _tmp119 = _tmp100 * _tmp32 - _tmp105 * _tmp25 + _tmp110 * _tmp37 - _tmp115 * _tmp20;
  const Scalar _tmp120 =
      _a_T_b[0] * _tmp116 - _a_T_b[1] * _tmp117 - _a_T_b[2] * _tmp118 + _a_T_b[3] * _tmp119;
  const Scalar _tmp121 = _a_T_b[3] * _tmp117;
  const Scalar _tmp122 = _a_T_b[2] * _tmp116;
  const Scalar _tmp123 = _a_T_b[0] * _tmp118;
  const Scalar _tmp124 = _a_T_b[1] * _tmp119;
  const Scalar _tmp125 = _tmp121 + _tmp122 + _tmp123 + _tmp124;
  const Scalar _tmp126 = 2 * std::min<Scalar>(0, (((_tmp125) > 0) - ((_tmp125) < 0))) + 1;
  const Scalar _tmp127 = 2 * _tmp126;
  const Scalar _tmp128 = 1 - epsilon;
  const Scalar _tmp129 = std::min<Scalar>(_tmp128, std::fabs(_tmp125));
  const Scalar _tmp130 = std::acos(_tmp129) / std::sqrt(Scalar(1 - std::pow(_tmp129, Scalar(2))));
  const Scalar _tmp131 = _tmp127 * _tmp130;
  const Scalar _tmp132 = _tmp120 * _tmp131;
  const Scalar _tmp133 =
      -_a_T_b[0] * _tmp117 - _a_T_b[1] * _tmp116 + _a_T_b[2] * _tmp119 + _a_T_b[3] * _tmp118;
  const Scalar _tmp134 = _tmp131 * _tmp133;
  const Scalar _tmp135 = 2 * std::pow(_tmp20, Scalar(2));
  const Scalar _tmp136 = -_tmp135;
  const Scalar _tmp137 = _tmp136 + _tmp56 + 1;
  const Scalar _tmp138 = _tmp26 * _tmp37;
  const Scalar _tmp139 = _tmp32 * _tmp50;
  const Scalar _tmp140 = _tmp138 + _tmp139;
  const Scalar _tmp141 = -_tmp39;
  const Scalar _tmp142 = _tmp141 + _tmp27;
  const Scalar _tmp143 = -_a_T_b[6] + _tmp137 * _tmp15 - _tmp137 * _tmp89 + _tmp140 * _tmp49 -
                         _tmp140 * _tmp94 + _tmp142 * _tmp64 - _tmp142 * _tmp80;
  const Scalar _tmp144 = -_tmp139;
  const Scalar _tmp145 = _tmp138 + _tmp144;
  const Scalar _tmp146 = _tmp136 + _tmp58;
  const Scalar _tmp147 = _tmp51 + _tmp52;
  const Scalar _tmp148 = -_a_T_b[4] + _tmp145 * _tmp15 - _tmp145 * _tmp89 + _tmp146 * _tmp49 -
                         _tmp146 * _tmp94 + _tmp147 * _tmp64 - _tmp147 * _tmp80;
  const Scalar _tmp149 =
      -_a_T_b[0] * _tmp119 + _a_T_b[1] * _tmp118 - _a_T_b[2] * _tmp117 + _a_T_b[3] * _tmp116;
  const Scalar _tmp150 = _tmp131 * _tmp149;
  const Scalar _tmp151 = _tmp127 * sqrt_info(1, 0);
  const Scalar _tmp152 = _tmp130 * _tmp133;
  const Scalar _tmp153 = _tmp149 * sqrt_info(1, 2);
  const Scalar _tmp154 = _tmp127 * sqrt_info(2, 0);
  const Scalar _tmp155 = _tmp127 * sqrt_info(4, 0);
  const Scalar _tmp156 = (Scalar(1) / Scalar(2)) * _tmp33;
  const Scalar _tmp157 = -_tmp156;
  const Scalar _tmp158 = (Scalar(1) / Scalar(2)) * _tmp35;
  const Scalar _tmp159 = (Scalar(1) / Scalar(2)) * _tmp36;
  const Scalar _tmp160 = -_tmp159;
  const Scalar _tmp161 = (Scalar(1) / Scalar(2)) * _tmp34;
  const Scalar _tmp162 = -_tmp161;
  const Scalar _tmp163 = _tmp160 + _tmp162;
  const Scalar _tmp164 = _tmp157 + _tmp158 + _tmp163;
  const Scalar _tmp165 = (Scalar(1) / Scalar(2)) * _tmp19;
  const Scalar _tmp166 = -_tmp165;
  const Scalar _tmp167 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp168 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp169 = -_tmp168;
  const Scalar _tmp170 = (Scalar(1) / Scalar(2)) * _tmp16;
  const Scalar _tmp171 = -_tmp170;
  const Scalar _tmp172 = _tmp169 + _tmp171;
  const Scalar _tmp173 = _tmp166 + _tmp167 + _tmp172;
  const Scalar _tmp174 = (Scalar(1) / Scalar(2)) * _tmp29;
  const Scalar _tmp175 = (Scalar(1) / Scalar(2)) * _tmp31;
  const Scalar _tmp176 = -_tmp175;
  const Scalar _tmp177 = (Scalar(1) / Scalar(2)) * _tmp28;
  const Scalar _tmp178 = (Scalar(1) / Scalar(2)) * _tmp30;
  const Scalar _tmp179 = _tmp177 + _tmp178;
  const Scalar _tmp180 = _tmp174 + _tmp176 + _tmp179;
  const Scalar _tmp181 = (Scalar(1) / Scalar(2)) * _tmp23;
  const Scalar _tmp182 = -_tmp181;
  const Scalar _tmp183 = (Scalar(1) / Scalar(2)) * _tmp21;
  const Scalar _tmp184 = (Scalar(1) / Scalar(2)) * _tmp24;
  const Scalar _tmp185 = -_tmp184;
  const Scalar _tmp186 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp187 = -_tmp186;
  const Scalar _tmp188 = _tmp185 + _tmp187;
  const Scalar _tmp189 = _tmp182 + _tmp183 + _tmp188;
  const Scalar _tmp190 =
      _tmp100 * _tmp164 + _tmp105 * _tmp173 - _tmp110 * _tmp180 - _tmp115 * _tmp189;
  const Scalar _tmp191 =
      _tmp100 * _tmp173 - _tmp105 * _tmp164 + _tmp110 * _tmp189 - _tmp115 * _tmp180;
  const Scalar _tmp192 =
      -_tmp100 * _tmp189 + _tmp105 * _tmp180 + _tmp110 * _tmp173 - _tmp115 * _tmp164;
  const Scalar _tmp193 =
      _tmp100 * _tmp180 + _tmp105 * _tmp189 + _tmp110 * _tmp164 + _tmp115 * _tmp173;
  const Scalar _tmp194 =
      _a_T_b[0] * _tmp190 + _a_T_b[1] * _tmp191 + _a_T_b[2] * _tmp192 + _a_T_b[3] * _tmp193;
  const Scalar _tmp195 = _tmp121 + _tmp122 + _tmp123 + _tmp124;
  const Scalar _tmp196 = std::fabs(_tmp195);
  const Scalar _tmp197 = std::min<Scalar>(_tmp128, _tmp196);
  const Scalar _tmp198 = 1 - std::pow(_tmp197, Scalar(2));
  const Scalar _tmp199 = _tmp126 * ((((_tmp128 - _tmp196) > 0) - ((_tmp128 - _tmp196) < 0)) + 1) *
                         (((_tmp195) > 0) - ((_tmp195) < 0));
  const Scalar _tmp200 = _tmp199 / _tmp198;
  const Scalar _tmp201 = _tmp120 * _tmp200;
  const Scalar _tmp202 = _tmp194 * _tmp201;
  const Scalar _tmp203 =
      -_a_T_b[0] * _tmp191 + _a_T_b[1] * _tmp190 - _a_T_b[2] * _tmp193 + _a_T_b[3] * _tmp192;
  const Scalar _tmp204 = std::acos(_tmp197);
  const Scalar _tmp205 = _tmp204 / std::sqrt(_tmp198);
  const Scalar _tmp206 = _tmp127 * _tmp205;
  const Scalar _tmp207 = _tmp203 * _tmp206;
  const Scalar _tmp208 = _tmp197 * _tmp199 * _tmp204 / (_tmp198 * std::sqrt(_tmp198));
  const Scalar _tmp209 = _tmp120 * _tmp208;
  const Scalar _tmp210 = _tmp194 * _tmp209;
  const Scalar _tmp211 = _tmp133 * _tmp200;
  const Scalar _tmp212 = _tmp194 * _tmp211;
  const Scalar _tmp213 =
      -_a_T_b[0] * _tmp193 - _a_T_b[1] * _tmp192 + _a_T_b[2] * _tmp191 + _a_T_b[3] * _tmp190;
  const Scalar _tmp214 = _tmp206 * _tmp213;
  const Scalar _tmp215 = -_tmp73;
  const Scalar _tmp216 = _tmp69 * _x_T_a[6] + _x_T_a[4] * (_tmp215 + _tmp71);
  const Scalar _tmp217 = std::pow(_x[3], Scalar(2));
  const Scalar _tmp218 = -_tmp217;
  const Scalar _tmp219 = _tmp218 + _tmp86;
  const Scalar _tmp220 = -_tmp75;
  const Scalar _tmp221 = _tmp220 + _tmp77;
  const Scalar _tmp222 = _tmp84 * _x_T_a[6] + _x_T_a[4] * (_tmp219 + _tmp221);
  const Scalar _tmp223 = _tmp173 * _tmp50;
  const Scalar _tmp224 = 2 * _tmp32;
  const Scalar _tmp225 = _tmp180 * _tmp224;
  const Scalar _tmp226 = _tmp164 * _tmp38 + _tmp189 * _tmp26;
  const Scalar _tmp227 = _tmp223 + _tmp225 + _tmp226;
  const Scalar _tmp228 = 4 * _tmp37;
  const Scalar _tmp229 = -_tmp189 * _tmp228;
  const Scalar _tmp230 = 4 * _tmp20;
  const Scalar _tmp231 = -_tmp180 * _tmp230;
  const Scalar _tmp232 = _tmp229 + _tmp231;
  const Scalar _tmp233 = -_tmp81;
  const Scalar _tmp234 = -_tmp86;
  const Scalar _tmp235 = _tmp217 + _tmp234;
  const Scalar _tmp236 = _x_T_a[4] * (_tmp233 + _tmp83) + _x_T_a[6] * (_tmp221 + _tmp235);
  const Scalar _tmp237 = _tmp173 * _tmp38;
  const Scalar _tmp238 = _tmp189 * _tmp224;
  const Scalar _tmp239 = _tmp164 * _tmp50 + _tmp180 * _tmp26;
  const Scalar _tmp240 = -_tmp237 - _tmp238 + _tmp239;
  const Scalar _tmp241 = -_tmp137 * _tmp222 - _tmp140 * _tmp236 - _tmp142 * _tmp216 +
                         _tmp15 * _tmp232 + _tmp227 * _tmp49 - _tmp227 * _tmp94 - _tmp232 * _tmp89 +
                         _tmp240 * _tmp64 - _tmp240 * _tmp80;
  const Scalar _tmp242 = -_tmp223 - _tmp225 + _tmp226;
  const Scalar _tmp243 = 4 * _tmp25;
  const Scalar _tmp244 = -_tmp164 * _tmp243;
  const Scalar _tmp245 = _tmp231 + _tmp244;
  const Scalar _tmp246 = _tmp173 * _tmp26;
  const Scalar _tmp247 = _tmp164 * _tmp224;
  const Scalar _tmp248 = _tmp180 * _tmp38 + _tmp189 * _tmp50;
  const Scalar _tmp249 = _tmp246 + _tmp247 + _tmp248;
  const Scalar _tmp250 = -_tmp145 * _tmp222 - _tmp146 * _tmp236 - _tmp147 * _tmp216 +
                         _tmp15 * _tmp242 - _tmp242 * _tmp89 + _tmp245 * _tmp49 - _tmp245 * _tmp94 +
                         _tmp249 * _tmp64 - _tmp249 * _tmp80;
  const Scalar _tmp251 = _tmp206 * (_a_T_b[0] * _tmp192 - _a_T_b[1] * _tmp193 -
                                    _a_T_b[2] * _tmp190 + _a_T_b[3] * _tmp191);
  const Scalar _tmp252 = _tmp149 * sqrt_info(0, 2);
  const Scalar _tmp253 = _tmp194 * _tmp208;
  const Scalar _tmp254 = _tmp200 * _tmp252;
  const Scalar _tmp255 = _tmp229 + _tmp244;
  const Scalar _tmp256 = -_tmp246 - _tmp247 + _tmp248;
  const Scalar _tmp257 = _tmp237 + _tmp238 + _tmp239;
  const Scalar _tmp258 = _tmp15 * _tmp257 - _tmp216 * _tmp59 - _tmp222 * _tmp40 - _tmp236 * _tmp54 +
                         _tmp255 * _tmp64 - _tmp255 * _tmp80 + _tmp256 * _tmp49 - _tmp256 * _tmp94 -
                         _tmp257 * _tmp89;
  const Scalar _tmp259 = _tmp133 * _tmp208;
  const Scalar _tmp260 = _tmp194 * _tmp259;
  const Scalar _tmp261 =
      -_tmp194 * _tmp254 - _tmp202 * sqrt_info(0, 1) + _tmp207 * sqrt_info(0, 2) +
      _tmp210 * sqrt_info(0, 1) - _tmp212 * sqrt_info(0, 0) + _tmp214 * sqrt_info(0, 0) +
      _tmp241 * sqrt_info(0, 5) + _tmp250 * sqrt_info(0, 3) + _tmp251 * sqrt_info(0, 1) +
      _tmp252 * _tmp253 + _tmp258 * sqrt_info(0, 4) + _tmp260 * sqrt_info(0, 0);
  const Scalar _tmp262 = -_tmp174;
  const Scalar _tmp263 = _tmp175 + _tmp179 + _tmp262;
  const Scalar _tmp264 = -_tmp183;
  const Scalar _tmp265 = _tmp181 + _tmp188 + _tmp264;
  const Scalar _tmp266 = -_tmp158;
  const Scalar _tmp267 = _tmp156 + _tmp163 + _tmp266;
  const Scalar _tmp268 = -_tmp167;
  const Scalar _tmp269 = _tmp165 + _tmp172 + _tmp268;
  const Scalar _tmp270 =
      _tmp100 * _tmp263 + _tmp105 * _tmp265 - _tmp110 * _tmp267 - _tmp115 * _tmp269;
  const Scalar _tmp271 =
      _tmp100 * _tmp267 + _tmp105 * _tmp269 + _tmp110 * _tmp263 + _tmp115 * _tmp265;
  const Scalar _tmp272 =
      -_tmp100 * _tmp269 + _tmp105 * _tmp267 + _tmp110 * _tmp265 - _tmp115 * _tmp263;
  const Scalar _tmp273 =
      _tmp100 * _tmp265 - _tmp105 * _tmp263 + _tmp110 * _tmp269 - _tmp115 * _tmp267;
  const Scalar _tmp274 =
      _a_T_b[0] * _tmp270 + _a_T_b[1] * _tmp273 + _a_T_b[2] * _tmp272 + _a_T_b[3] * _tmp271;
  const Scalar _tmp275 = _tmp211 * _tmp274;
  const Scalar _tmp276 = _tmp259 * _tmp274;
  const Scalar _tmp277 = -_tmp228 * _tmp269;
  const Scalar _tmp278 = -_tmp243 * _tmp263;
  const Scalar _tmp279 = _tmp277 + _tmp278;
  const Scalar _tmp280 = -_tmp66;
  const Scalar _tmp281 = -_tmp77;
  const Scalar _tmp282 =
      _x_T_a[4] * (_tmp217 + _tmp220 + _tmp281 + _tmp86) + _x_T_a[5] * (_tmp280 + _tmp90);
  const Scalar _tmp283 = _tmp26 * _tmp265;
  const Scalar _tmp284 = _tmp224 * _tmp263;
  const Scalar _tmp285 = _tmp267 * _tmp38 + _tmp269 * _tmp50;
  const Scalar _tmp286 = -_tmp283 - _tmp284 + _tmp285;
  const Scalar _tmp287 = _tmp265 * _tmp38;
  const Scalar _tmp288 = _tmp224 * _tmp269;
  const Scalar _tmp289 = _tmp26 * _tmp267 + _tmp263 * _tmp50;
  const Scalar _tmp290 = _tmp287 + _tmp288 + _tmp289;
  const Scalar _tmp291 = _tmp281 + _tmp75;
  const Scalar _tmp292 = _tmp91 * _x_T_a[4] + _x_T_a[5] * (_tmp219 + _tmp291);
  const Scalar _tmp293 = _tmp85 * _x_T_a[4] + _x_T_a[5] * (_tmp233 + _tmp82);
  const Scalar _tmp294 = _tmp15 * _tmp290 + _tmp279 * _tmp64 - _tmp279 * _tmp80 - _tmp282 * _tmp59 +
                         _tmp286 * _tmp49 - _tmp286 * _tmp94 - _tmp290 * _tmp89 - _tmp292 * _tmp54 -
                         _tmp293 * _tmp40;
  const Scalar _tmp295 = _tmp208 * _tmp252;
  const Scalar _tmp296 = _tmp201 * _tmp274;
  const Scalar _tmp297 =
      _a_T_b[0] * _tmp272 - _a_T_b[1] * _tmp271 - _a_T_b[2] * _tmp270 + _a_T_b[3] * _tmp273;
  const Scalar _tmp298 = _tmp206 * _tmp297;
  const Scalar _tmp299 = _tmp209 * _tmp274;
  const Scalar _tmp300 = _tmp205 * (-_a_T_b[0] * _tmp271 - _a_T_b[1] * _tmp272 +
                                    _a_T_b[2] * _tmp273 + _a_T_b[3] * _tmp270);
  const Scalar _tmp301 = _tmp127 * _tmp300;
  const Scalar _tmp302 =
      -_a_T_b[0] * _tmp273 + _a_T_b[1] * _tmp270 - _a_T_b[2] * _tmp271 + _a_T_b[3] * _tmp272;
  const Scalar _tmp303 = _tmp206 * _tmp302;
  const Scalar _tmp304 = _tmp265 * _tmp50;
  const Scalar _tmp305 = _tmp224 * _tmp267;
  const Scalar _tmp306 = _tmp26 * _tmp269 + _tmp263 * _tmp38;
  const Scalar _tmp307 = _tmp304 + _tmp305 + _tmp306;
  const Scalar _tmp308 = -_tmp230 * _tmp267;
  const Scalar _tmp309 = _tmp277 + _tmp308;
  const Scalar _tmp310 = -_tmp287 - _tmp288 + _tmp289;
  const Scalar _tmp311 = -_tmp137 * _tmp293 - _tmp140 * _tmp292 - _tmp142 * _tmp282 +
                         _tmp15 * _tmp309 + _tmp307 * _tmp49 - _tmp307 * _tmp94 - _tmp309 * _tmp89 +
                         _tmp310 * _tmp64 - _tmp310 * _tmp80;
  const Scalar _tmp312 = -_tmp304 - _tmp305 + _tmp306;
  const Scalar _tmp313 = _tmp278 + _tmp308;
  const Scalar _tmp314 = _tmp283 + _tmp284 + _tmp285;
  const Scalar _tmp315 = -_tmp145 * _tmp293 - _tmp146 * _tmp292 - _tmp147 * _tmp282 +
                         _tmp15 * _tmp312 - _tmp312 * _tmp89 + _tmp313 * _tmp49 - _tmp313 * _tmp94 +
                         _tmp314 * _tmp64 - _tmp314 * _tmp80;
  const Scalar _tmp316 =
      -_tmp254 * _tmp274 + _tmp274 * _tmp295 - _tmp275 * sqrt_info(0, 0) +
      _tmp276 * sqrt_info(0, 0) + _tmp294 * sqrt_info(0, 4) - _tmp296 * sqrt_info(0, 1) +
      _tmp298 * sqrt_info(0, 1) + _tmp299 * sqrt_info(0, 1) + _tmp301 * sqrt_info(0, 0) +
      _tmp303 * sqrt_info(0, 2) + _tmp311 * sqrt_info(0, 5) + _tmp315 * sqrt_info(0, 3);
  const Scalar _tmp317 = 2 * _x[1];
  const Scalar _tmp318 = _tmp185 + _tmp186;
  const Scalar _tmp319 = _tmp182 + _tmp264;
  const Scalar _tmp320 = _tmp318 + _tmp319;
  const Scalar _tmp321 = _tmp177 - _tmp178;
  const Scalar _tmp322 = _tmp174 + _tmp175 + _tmp321;
  const Scalar _tmp323 = _tmp166 + _tmp268;
  const Scalar _tmp324 = _tmp169 + _tmp170;
  const Scalar _tmp325 = _tmp323 + _tmp324;
  const Scalar _tmp326 = _tmp157 + _tmp266;
  const Scalar _tmp327 = _tmp159 + _tmp162;
  const Scalar _tmp328 = _tmp326 + _tmp327;
  const Scalar _tmp329 =
      _tmp100 * _tmp320 + _tmp105 * _tmp322 + _tmp110 * _tmp325 + _tmp115 * _tmp328;
  const Scalar _tmp330 =
      -_tmp100 * _tmp322 + _tmp105 * _tmp320 + _tmp110 * _tmp328 - _tmp115 * _tmp325;
  const Scalar _tmp331 =
      _tmp100 * _tmp328 - _tmp105 * _tmp325 + _tmp110 * _tmp322 - _tmp115 * _tmp320;
  const Scalar _tmp332 =
      _tmp100 * _tmp325 + _tmp105 * _tmp328 - _tmp110 * _tmp320 - _tmp115 * _tmp322;
  const Scalar _tmp333 =
      _a_T_b[0] * _tmp332 + _a_T_b[1] * _tmp331 + _a_T_b[2] * _tmp330 + _a_T_b[3] * _tmp329;
  const Scalar _tmp334 =
      -_a_T_b[0] * _tmp331 + _a_T_b[1] * _tmp332 - _a_T_b[2] * _tmp329 + _a_T_b[3] * _tmp330;
  const Scalar _tmp335 = _tmp206 * _tmp334;
  const Scalar _tmp336 = _tmp211 * _tmp333;
  const Scalar _tmp337 =
      -_a_T_b[0] * _tmp329 - _a_T_b[1] * _tmp330 + _a_T_b[2] * _tmp331 + _a_T_b[3] * _tmp332;
  const Scalar _tmp338 = _tmp206 * _tmp337;
  const Scalar _tmp339 =
      _a_T_b[0] * _tmp330 - _a_T_b[1] * _tmp329 - _a_T_b[2] * _tmp332 + _a_T_b[3] * _tmp331;
  const Scalar _tmp340 = _tmp206 * sqrt_info(0, 1);
  const Scalar _tmp341 = _tmp259 * _tmp333;
  const Scalar _tmp342 = _tmp209 * _tmp333;
  const Scalar _tmp343 = _tmp74 * _x_T_a[5] + _x_T_a[6] * (_tmp218 + _tmp234 + _tmp75 + _tmp77);
  const Scalar _tmp344 = -_tmp228 * _tmp322;
  const Scalar _tmp345 = -_tmp243 * _tmp325;
  const Scalar _tmp346 = _tmp344 + _tmp345;
  const Scalar _tmp347 = _tmp26 * _tmp328;
  const Scalar _tmp348 = _tmp224 * _tmp325;
  const Scalar _tmp349 = _tmp320 * _tmp38 + _tmp322 * _tmp50;
  const Scalar _tmp350 = -_tmp347 - _tmp348 + _tmp349;
  const Scalar _tmp351 = _tmp328 * _tmp38;
  const Scalar _tmp352 = _tmp224 * _tmp322;
  const Scalar _tmp353 = _tmp26 * _tmp320 + _tmp325 * _tmp50;
  const Scalar _tmp354 = _tmp351 + _tmp352 + _tmp353;
  const Scalar _tmp355 = _tmp92 * _x_T_a[5] + _x_T_a[6] * (_tmp280 + _tmp68);
  const Scalar _tmp356 = _x_T_a[5] * (_tmp235 + _tmp291) + _x_T_a[6] * (_tmp215 + _tmp72);
  const Scalar _tmp357 = _tmp15 * _tmp354 - _tmp343 * _tmp59 + _tmp346 * _tmp64 - _tmp346 * _tmp80 +
                         _tmp350 * _tmp49 - _tmp350 * _tmp94 - _tmp354 * _tmp89 - _tmp355 * _tmp54 -
                         _tmp356 * _tmp40;
  const Scalar _tmp358 = _tmp328 * _tmp50;
  const Scalar _tmp359 = _tmp224 * _tmp320;
  const Scalar _tmp360 = _tmp26 * _tmp322 + _tmp325 * _tmp38;
  const Scalar _tmp361 = -_tmp358 - _tmp359 + _tmp360;
  const Scalar _tmp362 = -_tmp230 * _tmp320;
  const Scalar _tmp363 = _tmp345 + _tmp362;
  const Scalar _tmp364 = _tmp347 + _tmp348 + _tmp349;
  const Scalar _tmp365 = -_tmp145 * _tmp356 - _tmp146 * _tmp355 - _tmp147 * _tmp343 +
                         _tmp15 * _tmp361 - _tmp361 * _tmp89 + _tmp363 * _tmp49 - _tmp363 * _tmp94 +
                         _tmp364 * _tmp64 - _tmp364 * _tmp80;
  const Scalar _tmp366 = _tmp358 + _tmp359 + _tmp360;
  const Scalar _tmp367 = _tmp344 + _tmp362;
  const Scalar _tmp368 = -_tmp351 - _tmp352 + _tmp353;
  const Scalar _tmp369 = -_tmp137 * _tmp356 - _tmp140 * _tmp355 - _tmp142 * _tmp343 +
                         _tmp15 * _tmp367 + _tmp366 * _tmp49 - _tmp366 * _tmp94 - _tmp367 * _tmp89 +
                         _tmp368 * _tmp64 - _tmp368 * _tmp80;
  const Scalar _tmp370 = _tmp201 * _tmp333;
  const Scalar _tmp371 = -_tmp254 * _tmp333 + _tmp295 * _tmp333 + _tmp335 * sqrt_info(0, 2) -
                         _tmp336 * sqrt_info(0, 0) + _tmp338 * sqrt_info(0, 0) + _tmp339 * _tmp340 +
                         _tmp341 * sqrt_info(0, 0) + _tmp342 * sqrt_info(0, 1) +
                         _tmp357 * sqrt_info(0, 4) + _tmp365 * sqrt_info(0, 3) +
                         _tmp369 * sqrt_info(0, 5) - _tmp370 * sqrt_info(0, 1);
  const Scalar _tmp372 = _tmp205 * _tmp213;
  const Scalar _tmp373 = _tmp153 * _tmp200;
  const Scalar _tmp374 = _tmp259 * sqrt_info(1, 0);
  const Scalar _tmp375 = _tmp151 * _tmp372 + _tmp153 * _tmp253 - _tmp194 * _tmp373 +
                         _tmp194 * _tmp374 - _tmp202 * sqrt_info(1, 1) + _tmp207 * sqrt_info(1, 2) +
                         _tmp210 * sqrt_info(1, 1) - _tmp212 * sqrt_info(1, 0) +
                         _tmp241 * sqrt_info(1, 5) + _tmp250 * sqrt_info(1, 3) +
                         _tmp251 * sqrt_info(1, 1) + _tmp258 * sqrt_info(1, 4);
  const Scalar _tmp376 = _tmp200 * _tmp274;
  const Scalar _tmp377 = _tmp153 * _tmp208;
  const Scalar _tmp378 = _tmp151 * _tmp300 - _tmp153 * _tmp376 + _tmp274 * _tmp374 +
                         _tmp274 * _tmp377 - _tmp275 * sqrt_info(1, 0) + _tmp294 * sqrt_info(1, 4) -
                         _tmp296 * sqrt_info(1, 1) + _tmp298 * sqrt_info(1, 1) +
                         _tmp299 * sqrt_info(1, 1) + _tmp303 * sqrt_info(1, 2) +
                         _tmp311 * sqrt_info(1, 5) + _tmp315 * sqrt_info(1, 3);
  const Scalar _tmp379 = _tmp200 * _tmp333;
  const Scalar _tmp380 = _tmp151 * _tmp205;
  const Scalar _tmp381 = _tmp206 * _tmp339;
  const Scalar _tmp382 = -_tmp153 * _tmp379 + _tmp333 * _tmp374 + _tmp333 * _tmp377 +
                         _tmp335 * sqrt_info(1, 2) - _tmp336 * sqrt_info(1, 0) + _tmp337 * _tmp380 +
                         _tmp342 * sqrt_info(1, 1) + _tmp357 * sqrt_info(1, 4) +
                         _tmp365 * sqrt_info(1, 3) + _tmp369 * sqrt_info(1, 5) -
                         _tmp370 * sqrt_info(1, 1) + _tmp381 * sqrt_info(1, 1);
  const Scalar _tmp383 = _tmp206 * sqrt_info(2, 2);
  const Scalar _tmp384 = _tmp149 * _tmp208;
  const Scalar _tmp385 = _tmp194 * _tmp384;
  const Scalar _tmp386 = _tmp149 * _tmp200;
  const Scalar _tmp387 = _tmp386 * sqrt_info(2, 2);
  const Scalar _tmp388 = _tmp154 * _tmp372 - _tmp194 * _tmp387 - _tmp202 * sqrt_info(2, 1) +
                         _tmp203 * _tmp383 + _tmp210 * sqrt_info(2, 1) - _tmp212 * sqrt_info(2, 0) +
                         _tmp241 * sqrt_info(2, 5) + _tmp250 * sqrt_info(2, 3) +
                         _tmp251 * sqrt_info(2, 1) + _tmp258 * sqrt_info(2, 4) +
                         _tmp260 * sqrt_info(2, 0) + _tmp385 * sqrt_info(2, 2);
  const Scalar _tmp389 = _tmp384 * sqrt_info(2, 2);
  const Scalar _tmp390 = _tmp206 * sqrt_info(2, 1);
  const Scalar _tmp391 = _tmp154 * _tmp300 - _tmp274 * _tmp387 + _tmp274 * _tmp389 -
                         _tmp275 * sqrt_info(2, 0) + _tmp276 * sqrt_info(2, 0) +
                         _tmp294 * sqrt_info(2, 4) - _tmp296 * sqrt_info(2, 1) + _tmp297 * _tmp390 +
                         _tmp299 * sqrt_info(2, 1) + _tmp302 * _tmp383 + _tmp311 * sqrt_info(2, 5) +
                         _tmp315 * sqrt_info(2, 3);
  const Scalar _tmp392 = _tmp154 * _tmp205;
  const Scalar _tmp393 = _tmp259 * sqrt_info(2, 0);
  const Scalar _tmp394 = -_tmp333 * _tmp387 + _tmp333 * _tmp389 + _tmp333 * _tmp393 +
                         _tmp334 * _tmp383 - _tmp336 * sqrt_info(2, 0) + _tmp337 * _tmp392 +
                         _tmp339 * _tmp390 + _tmp342 * sqrt_info(2, 1) + _tmp357 * sqrt_info(2, 4) +
                         _tmp365 * sqrt_info(2, 3) + _tmp369 * sqrt_info(2, 5) -
                         _tmp370 * sqrt_info(2, 1);
  const Scalar _tmp395 = _tmp209 * sqrt_info(3, 1);
  const Scalar _tmp396 = _tmp149 * sqrt_info(3, 2);
  const Scalar _tmp397 = _tmp208 * _tmp396;
  const Scalar _tmp398 = _tmp200 * _tmp396;
  const Scalar _tmp399 =
      _tmp194 * _tmp395 + _tmp194 * _tmp397 - _tmp194 * _tmp398 - _tmp202 * sqrt_info(3, 1) +
      _tmp207 * sqrt_info(3, 2) - _tmp212 * sqrt_info(3, 0) + _tmp214 * sqrt_info(3, 0) +
      _tmp241 * sqrt_info(3, 5) + _tmp250 * sqrt_info(3, 3) + _tmp251 * sqrt_info(3, 1) +
      _tmp258 * sqrt_info(3, 4) + _tmp260 * sqrt_info(3, 0);
  const Scalar _tmp400 = _tmp274 * _tmp395 + _tmp274 * _tmp397 - _tmp275 * sqrt_info(3, 0) +
                         _tmp276 * sqrt_info(3, 0) + _tmp294 * sqrt_info(3, 4) -
                         _tmp296 * sqrt_info(3, 1) + _tmp298 * sqrt_info(3, 1) +
                         _tmp301 * sqrt_info(3, 0) + _tmp303 * sqrt_info(3, 2) +
                         _tmp311 * sqrt_info(3, 5) + _tmp315 * sqrt_info(3, 3) - _tmp376 * _tmp396;
  const Scalar _tmp401 = _tmp206 * sqrt_info(3, 1);
  const Scalar _tmp402 = _tmp333 * _tmp395 + _tmp333 * _tmp397 + _tmp335 * sqrt_info(3, 2) -
                         _tmp336 * sqrt_info(3, 0) + _tmp338 * sqrt_info(3, 0) + _tmp339 * _tmp401 +
                         _tmp341 * sqrt_info(3, 0) + _tmp357 * sqrt_info(3, 4) +
                         _tmp365 * sqrt_info(3, 3) + _tmp369 * sqrt_info(3, 5) -
                         _tmp370 * sqrt_info(3, 1) - _tmp379 * _tmp396;
  const Scalar _tmp403 = _tmp194 * _tmp386;
  const Scalar _tmp404 =
      _tmp155 * _tmp372 - _tmp202 * sqrt_info(4, 1) + _tmp207 * sqrt_info(4, 2) +
      _tmp210 * sqrt_info(4, 1) - _tmp212 * sqrt_info(4, 0) + _tmp241 * sqrt_info(4, 5) +
      _tmp250 * sqrt_info(4, 3) + _tmp251 * sqrt_info(4, 1) + _tmp258 * sqrt_info(4, 4) +
      _tmp260 * sqrt_info(4, 0) + _tmp385 * sqrt_info(4, 2) - _tmp403 * sqrt_info(4, 2);
  const Scalar _tmp405 = _tmp274 * _tmp386;
  const Scalar _tmp406 = _tmp274 * _tmp384;
  const Scalar _tmp407 = _tmp201 * sqrt_info(4, 1);
  const Scalar _tmp408 =
      _tmp155 * _tmp300 - _tmp274 * _tmp407 - _tmp275 * sqrt_info(4, 0) +
      _tmp276 * sqrt_info(4, 0) + _tmp294 * sqrt_info(4, 4) + _tmp298 * sqrt_info(4, 1) +
      _tmp299 * sqrt_info(4, 1) + _tmp303 * sqrt_info(4, 2) + _tmp311 * sqrt_info(4, 5) +
      _tmp315 * sqrt_info(4, 3) - _tmp405 * sqrt_info(4, 2) + _tmp406 * sqrt_info(4, 2);
  const Scalar _tmp409 = _tmp333 * _tmp386;
  const Scalar _tmp410 = _tmp155 * _tmp205;
  const Scalar _tmp411 = _tmp333 * _tmp384;
  const Scalar _tmp412 =
      _tmp335 * sqrt_info(4, 2) - _tmp336 * sqrt_info(4, 0) + _tmp337 * _tmp410 +
      _tmp341 * sqrt_info(4, 0) + _tmp342 * sqrt_info(4, 1) + _tmp357 * sqrt_info(4, 4) +
      _tmp365 * sqrt_info(4, 3) + _tmp369 * sqrt_info(4, 5) - _tmp370 * sqrt_info(4, 1) +
      _tmp381 * sqrt_info(4, 1) - _tmp409 * sqrt_info(4, 2) + _tmp411 * sqrt_info(4, 2);
  const Scalar _tmp413 = _tmp201 * sqrt_info(5, 1);
  const Scalar _tmp414 =
      -_tmp194 * _tmp413 + _tmp207 * sqrt_info(5, 2) + _tmp210 * sqrt_info(5, 1) -
      _tmp212 * sqrt_info(5, 0) + _tmp214 * sqrt_info(5, 0) + _tmp241 * sqrt_info(5, 5) +
      _tmp250 * sqrt_info(5, 3) + _tmp251 * sqrt_info(5, 1) + _tmp258 * sqrt_info(5, 4) +
      _tmp260 * sqrt_info(5, 0) + _tmp385 * sqrt_info(5, 2) - _tmp403 * sqrt_info(5, 2);
  const Scalar _tmp415 =
      -_tmp274 * _tmp413 - _tmp275 * sqrt_info(5, 0) + _tmp276 * sqrt_info(5, 0) +
      _tmp294 * sqrt_info(5, 4) + _tmp298 * sqrt_info(5, 1) + _tmp299 * sqrt_info(5, 1) +
      _tmp301 * sqrt_info(5, 0) + _tmp303 * sqrt_info(5, 2) + _tmp311 * sqrt_info(5, 5) +
      _tmp315 * sqrt_info(5, 3) - _tmp405 * sqrt_info(5, 2) + _tmp406 * sqrt_info(5, 2);
  const Scalar _tmp416 =
      -_tmp333 * _tmp413 + _tmp335 * sqrt_info(5, 2) - _tmp336 * sqrt_info(5, 0) +
      _tmp338 * sqrt_info(5, 0) + _tmp341 * sqrt_info(5, 0) + _tmp342 * sqrt_info(5, 1) +
      _tmp357 * sqrt_info(5, 4) + _tmp365 * sqrt_info(5, 3) + _tmp369 * sqrt_info(5, 5) +
      _tmp381 * sqrt_info(5, 1) - _tmp409 * sqrt_info(5, 2) + _tmp411 * sqrt_info(5, 2);
  const Scalar _tmp417 = -_tmp51;
  const Scalar _tmp418 = _tmp417 + _tmp52;
  const Scalar _tmp419 = -_tmp138;
  const Scalar _tmp420 = _tmp144 + _tmp419;
  const Scalar _tmp421 = _tmp57 - 1;
  const Scalar _tmp422 = _tmp135 + _tmp421;
  const Scalar _tmp423 = -_tmp27;
  const Scalar _tmp424 = _tmp39 + _tmp423;
  const Scalar _tmp425 = _tmp417 + _tmp53;
  const Scalar _tmp426 = _tmp421 + _tmp55;
  const Scalar _tmp427 = _tmp141 + _tmp423;
  const Scalar _tmp428 = _tmp139 + _tmp419;
  const Scalar _tmp429 = _tmp135 + _tmp55 - 1;
  const Scalar _tmp430 = _tmp184 + _tmp187 + _tmp319;
  const Scalar _tmp431 = _tmp100 * _tmp430;
  const Scalar _tmp432 = _tmp176 + _tmp262 + _tmp321;
  const Scalar _tmp433 = _tmp105 * _tmp432;
  const Scalar _tmp434 = _tmp165 + _tmp167 + _tmp324;
  const Scalar _tmp435 = _tmp160 + _tmp161 + _tmp326;
  const Scalar _tmp436 = _tmp115 * _tmp435;
  const Scalar _tmp437 = _tmp110 * _tmp434 + _tmp431 - _tmp433 - _tmp436;
  const Scalar _tmp438 = _tmp115 * _tmp430;
  const Scalar _tmp439 = _tmp110 * _tmp432;
  const Scalar _tmp440 = _tmp100 * _tmp435 + _tmp439;
  const Scalar _tmp441 = _tmp105 * _tmp434 + _tmp438 + _tmp440;
  const Scalar _tmp442 = _tmp105 * _tmp435;
  const Scalar _tmp443 = _tmp110 * _tmp430;
  const Scalar _tmp444 = -_tmp115 * _tmp432;
  const Scalar _tmp445 = -_tmp100 * _tmp434 + _tmp442 + _tmp443 + _tmp444;
  const Scalar _tmp446 = _tmp110 * _tmp435;
  const Scalar _tmp447 = _tmp100 * _tmp432;
  const Scalar _tmp448 = _tmp105 * _tmp430 + _tmp447;
  const Scalar _tmp449 = -_tmp115 * _tmp434 - _tmp446 + _tmp448;
  const Scalar _tmp450 =
      _a_T_b[0] * _tmp449 + _a_T_b[1] * _tmp437 + _a_T_b[2] * _tmp445 + _a_T_b[3] * _tmp441;
  const Scalar _tmp451 = _tmp209 * _tmp450;
  const Scalar _tmp452 = _tmp259 * _tmp450;
  const Scalar _tmp453 = _tmp38 * _tmp432;
  const Scalar _tmp454 = 2 * _tmp434;
  const Scalar _tmp455 = _tmp25 * _tmp454;
  const Scalar _tmp456 = _tmp430 * _tmp50;
  const Scalar _tmp457 = _tmp224 * _tmp435;
  const Scalar _tmp458 = _tmp453 + _tmp455 - _tmp456 - _tmp457;
  const Scalar _tmp459 = -_tmp243 * _tmp432;
  const Scalar _tmp460 = -_tmp230 * _tmp435;
  const Scalar _tmp461 = _tmp459 + _tmp460;
  const Scalar _tmp462 = _tmp38 * _tmp435;
  const Scalar _tmp463 = _tmp20 * _tmp454 + _tmp462;
  const Scalar _tmp464 = _tmp26 * _tmp430;
  const Scalar _tmp465 = _tmp224 * _tmp432;
  const Scalar _tmp466 = _tmp464 + _tmp465;
  const Scalar _tmp467 = _tmp463 + _tmp466;
  const Scalar _tmp468 = _tmp15 * _tmp458 - _tmp458 * _tmp89 + _tmp461 * _tmp49 - _tmp461 * _tmp94 +
                         _tmp467 * _tmp64 - _tmp467 * _tmp80;
  const Scalar _tmp469 = _tmp453 + _tmp456;
  const Scalar _tmp470 = _tmp455 + _tmp457 + _tmp469;
  const Scalar _tmp471 = -_tmp228 * _tmp434;
  const Scalar _tmp472 = _tmp460 + _tmp471;
  const Scalar _tmp473 = _tmp38 * _tmp430;
  const Scalar _tmp474 = _tmp32 * _tmp454;
  const Scalar _tmp475 = _tmp432 * _tmp50;
  const Scalar _tmp476 = _tmp26 * _tmp435;
  const Scalar _tmp477 = _tmp475 + _tmp476;
  const Scalar _tmp478 = -_tmp473 - _tmp474 + _tmp477;
  const Scalar _tmp479 = _tmp15 * _tmp472 + _tmp470 * _tmp49 - _tmp470 * _tmp94 - _tmp472 * _tmp89 +
                         _tmp478 * _tmp64 - _tmp478 * _tmp80;
  const Scalar _tmp480 =
      -_a_T_b[0] * _tmp437 + _a_T_b[1] * _tmp449 - _a_T_b[2] * _tmp441 + _a_T_b[3] * _tmp445;
  const Scalar _tmp481 = _tmp206 * _tmp480;
  const Scalar _tmp482 =
      -_a_T_b[0] * _tmp441 - _a_T_b[1] * _tmp445 + _a_T_b[2] * _tmp437 + _a_T_b[3] * _tmp449;
  const Scalar _tmp483 = _tmp206 * _tmp482;
  const Scalar _tmp484 = _tmp208 * _tmp450;
  const Scalar _tmp485 =
      _a_T_b[0] * _tmp445 - _a_T_b[1] * _tmp441 - _a_T_b[2] * _tmp449 + _a_T_b[3] * _tmp437;
  const Scalar _tmp486 = _tmp211 * sqrt_info(0, 0);
  const Scalar _tmp487 = _tmp459 + _tmp471;
  const Scalar _tmp488 = -_tmp465;
  const Scalar _tmp489 = _tmp463 - _tmp464 + _tmp488;
  const Scalar _tmp490 = _tmp473 + _tmp474 + _tmp477;
  const Scalar _tmp491 = _tmp15 * _tmp490 + _tmp487 * _tmp64 - _tmp487 * _tmp80 + _tmp489 * _tmp49 -
                         _tmp489 * _tmp94 - _tmp490 * _tmp89;
  const Scalar _tmp492 = _tmp201 * _tmp450;
  const Scalar _tmp493 = _tmp252 * _tmp484 - _tmp254 * _tmp450 + _tmp340 * _tmp485 -
                         _tmp450 * _tmp486 + _tmp451 * sqrt_info(0, 1) + _tmp452 * sqrt_info(0, 0) +
                         _tmp468 * sqrt_info(0, 3) + _tmp479 * sqrt_info(0, 5) +
                         _tmp481 * sqrt_info(0, 2) + _tmp483 * sqrt_info(0, 0) +
                         _tmp491 * sqrt_info(0, 4) - _tmp492 * sqrt_info(0, 1);
  const Scalar _tmp494 = 2 * _tmp493;
  const Scalar _tmp495 = _tmp156 + _tmp158 + _tmp327;
  const Scalar _tmp496 = _tmp168 + _tmp171 + _tmp323;
  const Scalar _tmp497 = _tmp110 * _tmp496 + _tmp433;
  const Scalar _tmp498 = -_tmp115 * _tmp495 - _tmp431 + _tmp497;
  const Scalar _tmp499 = _tmp105 * _tmp496;
  const Scalar _tmp500 = _tmp100 * _tmp495 - _tmp438 - _tmp439 + _tmp499;
  const Scalar _tmp501 = _tmp100 * _tmp496 + _tmp444;
  const Scalar _tmp502 = -_tmp105 * _tmp495 + _tmp443 + _tmp501;
  const Scalar _tmp503 = _tmp115 * _tmp496;
  const Scalar _tmp504 = _tmp110 * _tmp495 + _tmp448 + _tmp503;
  const Scalar _tmp505 =
      _a_T_b[0] * _tmp500 + _a_T_b[1] * _tmp502 + _a_T_b[2] * _tmp498 + _a_T_b[3] * _tmp504;
  const Scalar _tmp506 = _tmp211 * _tmp505;
  const Scalar _tmp507 = _tmp205 * (-_a_T_b[0] * _tmp504 - _a_T_b[1] * _tmp498 +
                                    _a_T_b[2] * _tmp502 + _a_T_b[3] * _tmp500);
  const Scalar _tmp508 = _tmp127 * _tmp507;
  const Scalar _tmp509 = _tmp208 * _tmp505;
  const Scalar _tmp510 = _tmp120 * _tmp509;
  const Scalar _tmp511 = -_tmp228 * _tmp430;
  const Scalar _tmp512 = -_tmp243 * _tmp495;
  const Scalar _tmp513 = _tmp511 + _tmp512;
  const Scalar _tmp514 = _tmp26 * _tmp496;
  const Scalar _tmp515 = _tmp224 * _tmp495;
  const Scalar _tmp516 = _tmp469 - _tmp514 - _tmp515;
  const Scalar _tmp517 = _tmp38 * _tmp496;
  const Scalar _tmp518 = _tmp224 * _tmp430;
  const Scalar _tmp519 = _tmp26 * _tmp432;
  const Scalar _tmp520 = _tmp495 * _tmp50 + _tmp519;
  const Scalar _tmp521 = _tmp517 + _tmp518 + _tmp520;
  const Scalar _tmp522 = _tmp15 * _tmp521 + _tmp49 * _tmp516 + _tmp513 * _tmp64 - _tmp513 * _tmp80 -
                         _tmp516 * _tmp94 - _tmp521 * _tmp89;
  const Scalar _tmp523 = _tmp133 * _tmp509;
  const Scalar _tmp524 = _tmp201 * _tmp505;
  const Scalar _tmp525 = _tmp38 * _tmp495;
  const Scalar _tmp526 = _tmp496 * _tmp50;
  const Scalar _tmp527 = _tmp464 + _tmp488 + _tmp525 - _tmp526;
  const Scalar _tmp528 = -_tmp230 * _tmp432;
  const Scalar _tmp529 = _tmp512 + _tmp528;
  const Scalar _tmp530 = _tmp469 + _tmp514 + _tmp515;
  const Scalar _tmp531 = _tmp15 * _tmp527 + _tmp49 * _tmp529 - _tmp527 * _tmp89 - _tmp529 * _tmp94 +
                         _tmp530 * _tmp64 - _tmp530 * _tmp80;
  const Scalar _tmp532 = _tmp466 + _tmp525 + _tmp526;
  const Scalar _tmp533 = _tmp511 + _tmp528;
  const Scalar _tmp534 = -_tmp517 - _tmp518 + _tmp520;
  const Scalar _tmp535 = _tmp15 * _tmp533 + _tmp49 * _tmp532 - _tmp532 * _tmp94 - _tmp533 * _tmp89 +
                         _tmp534 * _tmp64 - _tmp534 * _tmp80;
  const Scalar _tmp536 =
      -_a_T_b[0] * _tmp502 + _a_T_b[1] * _tmp500 - _a_T_b[2] * _tmp504 + _a_T_b[3] * _tmp498;
  const Scalar _tmp537 = _tmp206 * _tmp536;
  const Scalar _tmp538 =
      _a_T_b[0] * _tmp498 - _a_T_b[1] * _tmp504 - _a_T_b[2] * _tmp500 + _a_T_b[3] * _tmp502;
  const Scalar _tmp539 =
      _tmp252 * _tmp509 - _tmp254 * _tmp505 + _tmp340 * _tmp538 - _tmp506 * sqrt_info(0, 0) +
      _tmp508 * sqrt_info(0, 0) + _tmp510 * sqrt_info(0, 1) + _tmp522 * sqrt_info(0, 4) +
      _tmp523 * sqrt_info(0, 0) - _tmp524 * sqrt_info(0, 1) + _tmp531 * sqrt_info(0, 3) +
      _tmp535 * sqrt_info(0, 5) + _tmp537 * sqrt_info(0, 2);
  const Scalar _tmp540 = 2 * _x_T_a[2];
  const Scalar _tmp541 = _tmp181 + _tmp183 + _tmp318;
  const Scalar _tmp542 = _tmp100 * _tmp541 + _tmp436 + _tmp497;
  const Scalar _tmp543 = -_tmp115 * _tmp541 + _tmp440 - _tmp499;
  const Scalar _tmp544 = -_tmp110 * _tmp541 + _tmp442 + _tmp501;
  const Scalar _tmp545 = _tmp105 * _tmp541 + _tmp446 - _tmp447 - _tmp503;
  const Scalar _tmp546 =
      _a_T_b[0] * _tmp544 + _a_T_b[1] * _tmp543 + _a_T_b[2] * _tmp545 + _a_T_b[3] * _tmp542;
  const Scalar _tmp547 = _tmp211 * _tmp546;
  const Scalar _tmp548 =
      -_a_T_b[0] * _tmp543 + _a_T_b[1] * _tmp544 - _a_T_b[2] * _tmp542 + _a_T_b[3] * _tmp545;
  const Scalar _tmp549 = _tmp206 * _tmp548;
  const Scalar _tmp550 = _tmp209 * _tmp546;
  const Scalar _tmp551 = _tmp435 * _tmp50;
  const Scalar _tmp552 = _tmp224 * _tmp541;
  const Scalar _tmp553 = _tmp517 + _tmp519;
  const Scalar _tmp554 = _tmp551 + _tmp552 + _tmp553;
  const Scalar _tmp555 = -_tmp228 * _tmp432;
  const Scalar _tmp556 = -_tmp230 * _tmp541;
  const Scalar _tmp557 = _tmp555 + _tmp556;
  const Scalar _tmp558 = _tmp26 * _tmp541 + _tmp526;
  const Scalar _tmp559 = -_tmp462 + _tmp488 + _tmp558;
  const Scalar _tmp560 = _tmp15 * _tmp557 + _tmp49 * _tmp554 - _tmp554 * _tmp94 - _tmp557 * _tmp89 +
                         _tmp559 * _tmp64 - _tmp559 * _tmp80;
  const Scalar _tmp561 = -_tmp551 - _tmp552 + _tmp553;
  const Scalar _tmp562 = -_tmp243 * _tmp496;
  const Scalar _tmp563 = _tmp556 + _tmp562;
  const Scalar _tmp564 = _tmp224 * _tmp496;
  const Scalar _tmp565 = _tmp38 * _tmp541 + _tmp475;
  const Scalar _tmp566 = _tmp476 + _tmp564 + _tmp565;
  const Scalar _tmp567 = _tmp15 * _tmp561 + _tmp49 * _tmp563 - _tmp561 * _tmp89 - _tmp563 * _tmp94 +
                         _tmp566 * _tmp64 - _tmp566 * _tmp80;
  const Scalar _tmp568 = _tmp259 * _tmp546;
  const Scalar _tmp569 = _tmp201 * _tmp546;
  const Scalar _tmp570 = _tmp208 * _tmp546;
  const Scalar _tmp571 = _tmp206 * (_a_T_b[0] * _tmp545 - _a_T_b[1] * _tmp542 -
                                    _a_T_b[2] * _tmp544 + _a_T_b[3] * _tmp543);
  const Scalar _tmp572 =
      -_a_T_b[0] * _tmp542 - _a_T_b[1] * _tmp545 + _a_T_b[2] * _tmp543 + _a_T_b[3] * _tmp544;
  const Scalar _tmp573 = _tmp206 * _tmp572;
  const Scalar _tmp574 = _tmp555 + _tmp562;
  const Scalar _tmp575 = -_tmp476 - _tmp564 + _tmp565;
  const Scalar _tmp576 = _tmp462 + _tmp465 + _tmp558;
  const Scalar _tmp577 = _tmp15 * _tmp576 + _tmp49 * _tmp575 + _tmp574 * _tmp64 - _tmp574 * _tmp80 -
                         _tmp575 * _tmp94 - _tmp576 * _tmp89;
  const Scalar _tmp578 =
      _tmp252 * _tmp570 - _tmp254 * _tmp546 - _tmp547 * sqrt_info(0, 0) +
      _tmp549 * sqrt_info(0, 2) + _tmp550 * sqrt_info(0, 1) + _tmp560 * sqrt_info(0, 5) +
      _tmp567 * sqrt_info(0, 3) + _tmp568 * sqrt_info(0, 0) - _tmp569 * sqrt_info(0, 1) +
      _tmp571 * sqrt_info(0, 1) + _tmp573 * sqrt_info(0, 0) + _tmp577 * sqrt_info(0, 4);
  const Scalar _tmp579 = 2 * _tmp578;
  const Scalar _tmp580 = _tmp205 * _tmp482;
  const Scalar _tmp581 = _tmp206 * _tmp485;
  const Scalar _tmp582 = _tmp211 * _tmp450;
  const Scalar _tmp583 = _tmp200 * _tmp450;
  const Scalar _tmp584 = _tmp151 * _tmp580 + _tmp153 * _tmp484 - _tmp153 * _tmp583 +
                         _tmp374 * _tmp450 + _tmp451 * sqrt_info(1, 1) + _tmp468 * sqrt_info(1, 3) +
                         _tmp479 * sqrt_info(1, 5) + _tmp481 * sqrt_info(1, 2) +
                         _tmp491 * sqrt_info(1, 4) - _tmp492 * sqrt_info(1, 1) +
                         _tmp581 * sqrt_info(1, 1) - _tmp582 * sqrt_info(1, 0);
  const Scalar _tmp585 = 2 * _tmp584;
  const Scalar _tmp586 = _tmp201 * sqrt_info(1, 1);
  const Scalar _tmp587 = _tmp206 * _tmp538;
  const Scalar _tmp588 = _tmp200 * _tmp505;
  const Scalar _tmp589 = _tmp151 * _tmp507 + _tmp153 * _tmp509 - _tmp153 * _tmp588 -
                         _tmp505 * _tmp586 - _tmp506 * sqrt_info(1, 0) + _tmp510 * sqrt_info(1, 1) +
                         _tmp522 * sqrt_info(1, 4) + _tmp523 * sqrt_info(1, 0) +
                         _tmp531 * sqrt_info(1, 3) + _tmp535 * sqrt_info(1, 5) +
                         _tmp537 * sqrt_info(1, 2) + _tmp587 * sqrt_info(1, 1);
  const Scalar _tmp590 = _tmp200 * _tmp546;
  const Scalar _tmp591 = _tmp153 * _tmp570 - _tmp153 * _tmp590 + _tmp374 * _tmp546 +
                         _tmp380 * _tmp572 - _tmp547 * sqrt_info(1, 0) + _tmp549 * sqrt_info(1, 2) +
                         _tmp550 * sqrt_info(1, 1) + _tmp560 * sqrt_info(1, 5) +
                         _tmp567 * sqrt_info(1, 3) - _tmp569 * sqrt_info(1, 1) +
                         _tmp571 * sqrt_info(1, 1) + _tmp577 * sqrt_info(1, 4);
  const Scalar _tmp592 = 2 * _tmp591;
  const Scalar _tmp593 = _tmp149 * _tmp484;
  const Scalar _tmp594 = _tmp211 * sqrt_info(2, 0);
  const Scalar _tmp595 = _tmp149 * _tmp583;
  const Scalar _tmp596 = _tmp154 * _tmp580 + _tmp383 * _tmp480 + _tmp390 * _tmp485 +
                         _tmp393 * _tmp450 - _tmp450 * _tmp594 + _tmp451 * sqrt_info(2, 1) +
                         _tmp468 * sqrt_info(2, 3) + _tmp479 * sqrt_info(2, 5) +
                         _tmp491 * sqrt_info(2, 4) - _tmp492 * sqrt_info(2, 1) +
                         _tmp593 * sqrt_info(2, 2) - _tmp595 * sqrt_info(2, 2);
  const Scalar _tmp597 = 2 * _tmp596;
  const Scalar _tmp598 = _tmp149 * _tmp509;
  const Scalar _tmp599 = _tmp386 * _tmp505;
  const Scalar _tmp600 = _tmp154 * _tmp507 + _tmp383 * _tmp536 + _tmp390 * _tmp538 -
                         _tmp505 * _tmp594 + _tmp510 * sqrt_info(2, 1) + _tmp522 * sqrt_info(2, 4) +
                         _tmp523 * sqrt_info(2, 0) - _tmp524 * sqrt_info(2, 1) +
                         _tmp531 * sqrt_info(2, 3) + _tmp535 * sqrt_info(2, 5) +
                         _tmp598 * sqrt_info(2, 2) - _tmp599 * sqrt_info(2, 2);
  const Scalar _tmp601 = _tmp149 * _tmp570;
  const Scalar _tmp602 =
      _tmp383 * _tmp548 - _tmp387 * _tmp546 + _tmp392 * _tmp572 - _tmp547 * sqrt_info(2, 0) +
      _tmp550 * sqrt_info(2, 1) + _tmp560 * sqrt_info(2, 5) + _tmp567 * sqrt_info(2, 3) +
      _tmp568 * sqrt_info(2, 0) - _tmp569 * sqrt_info(2, 1) + _tmp571 * sqrt_info(2, 1) +
      _tmp577 * sqrt_info(2, 4) + _tmp601 * sqrt_info(2, 2);
  const Scalar _tmp603 = 2 * _tmp602;
  const Scalar _tmp604 = _tmp206 * sqrt_info(3, 2);
  const Scalar _tmp605 = _tmp395 * _tmp450 - _tmp396 * _tmp583 + _tmp397 * _tmp450 +
                         _tmp401 * _tmp485 + _tmp452 * sqrt_info(3, 0) + _tmp468 * sqrt_info(3, 3) +
                         _tmp479 * sqrt_info(3, 5) + _tmp480 * _tmp604 + _tmp483 * sqrt_info(3, 0) +
                         _tmp491 * sqrt_info(3, 4) - _tmp492 * sqrt_info(3, 1) -
                         _tmp582 * sqrt_info(3, 0);
  const Scalar _tmp606 = 2 * _tmp605;
  const Scalar _tmp607 =
      _tmp396 * _tmp509 - _tmp396 * _tmp588 - _tmp506 * sqrt_info(3, 0) +
      _tmp508 * sqrt_info(3, 0) + _tmp510 * sqrt_info(3, 1) + _tmp522 * sqrt_info(3, 4) +
      _tmp523 * sqrt_info(3, 0) - _tmp524 * sqrt_info(3, 1) + _tmp531 * sqrt_info(3, 3) +
      _tmp535 * sqrt_info(3, 5) + _tmp537 * sqrt_info(3, 2) + _tmp587 * sqrt_info(3, 1);
  const Scalar _tmp608 = _tmp395 * _tmp546 - _tmp396 * _tmp590 + _tmp397 * _tmp546 -
                         _tmp547 * sqrt_info(3, 0) + _tmp548 * _tmp604 + _tmp560 * sqrt_info(3, 5) +
                         _tmp567 * sqrt_info(3, 3) + _tmp568 * sqrt_info(3, 0) -
                         _tmp569 * sqrt_info(3, 1) + _tmp571 * sqrt_info(3, 1) +
                         _tmp573 * sqrt_info(3, 0) + _tmp577 * sqrt_info(3, 4);
  const Scalar _tmp609 = 2 * _tmp608;
  const Scalar _tmp610 =
      _tmp155 * _tmp580 - _tmp407 * _tmp450 + _tmp451 * sqrt_info(4, 1) +
      _tmp452 * sqrt_info(4, 0) + _tmp468 * sqrt_info(4, 3) + _tmp479 * sqrt_info(4, 5) +
      _tmp481 * sqrt_info(4, 2) + _tmp491 * sqrt_info(4, 4) + _tmp581 * sqrt_info(4, 1) -
      _tmp582 * sqrt_info(4, 0) + _tmp593 * sqrt_info(4, 2) - _tmp595 * sqrt_info(4, 2);
  const Scalar _tmp611 = 2 * _tmp610;
  const Scalar _tmp612 =
      _tmp155 * _tmp507 - _tmp407 * _tmp505 - _tmp506 * sqrt_info(4, 0) +
      _tmp510 * sqrt_info(4, 1) + _tmp522 * sqrt_info(4, 4) + _tmp523 * sqrt_info(4, 0) +
      _tmp531 * sqrt_info(4, 3) + _tmp535 * sqrt_info(4, 5) + _tmp537 * sqrt_info(4, 2) +
      _tmp587 * sqrt_info(4, 1) + _tmp598 * sqrt_info(4, 2) - _tmp599 * sqrt_info(4, 2);
  const Scalar _tmp613 = _tmp386 * _tmp546;
  const Scalar _tmp614 =
      -_tmp407 * _tmp546 + _tmp410 * _tmp572 - _tmp547 * sqrt_info(4, 0) +
      _tmp549 * sqrt_info(4, 2) + _tmp550 * sqrt_info(4, 1) + _tmp560 * sqrt_info(4, 5) +
      _tmp567 * sqrt_info(4, 3) + _tmp568 * sqrt_info(4, 0) + _tmp571 * sqrt_info(4, 1) +
      _tmp577 * sqrt_info(4, 4) + _tmp601 * sqrt_info(4, 2) - _tmp613 * sqrt_info(4, 2);
  const Scalar _tmp615 = 2 * _tmp614;
  const Scalar _tmp616 =
      -_tmp413 * _tmp450 + _tmp451 * sqrt_info(5, 1) + _tmp452 * sqrt_info(5, 0) +
      _tmp468 * sqrt_info(5, 3) + _tmp479 * sqrt_info(5, 5) + _tmp481 * sqrt_info(5, 2) +
      _tmp483 * sqrt_info(5, 0) + _tmp491 * sqrt_info(5, 4) + _tmp581 * sqrt_info(5, 1) -
      _tmp582 * sqrt_info(5, 0) + _tmp593 * sqrt_info(5, 2) - _tmp595 * sqrt_info(5, 2);
  const Scalar _tmp617 = 2 * _tmp616;
  const Scalar _tmp618 =
      -_tmp413 * _tmp505 - _tmp506 * sqrt_info(5, 0) + _tmp508 * sqrt_info(5, 0) +
      _tmp510 * sqrt_info(5, 1) + _tmp522 * sqrt_info(5, 4) + _tmp523 * sqrt_info(5, 0) +
      _tmp531 * sqrt_info(5, 3) + _tmp535 * sqrt_info(5, 5) + _tmp537 * sqrt_info(5, 2) +
      _tmp587 * sqrt_info(5, 1) + _tmp598 * sqrt_info(5, 2) - _tmp599 * sqrt_info(5, 2);
  const Scalar _tmp619 =
      -_tmp413 * _tmp546 - _tmp547 * sqrt_info(5, 0) + _tmp549 * sqrt_info(5, 2) +
      _tmp550 * sqrt_info(5, 1) + _tmp560 * sqrt_info(5, 5) + _tmp567 * sqrt_info(5, 3) +
      _tmp568 * sqrt_info(5, 0) + _tmp571 * sqrt_info(5, 1) + _tmp573 * sqrt_info(5, 0) +
      _tmp577 * sqrt_info(5, 4) + _tmp601 * sqrt_info(5, 2) - _tmp613 * sqrt_info(5, 2);
  const Scalar _tmp620 = 2 * _tmp619;
  const Scalar _tmp621 = 2 * _tmp539;
  const Scalar _tmp622 = 2 * _tmp589;
  const Scalar _tmp623 = 2 * _tmp600;
  const Scalar _tmp624 = 2 * _tmp607;
  const Scalar _tmp625 = 2 * _x_T_a[0];
  const Scalar _tmp626 = 2 * _tmp612;
  const Scalar _tmp627 = 2 * _tmp618;
  const Scalar _tmp628 = -_tmp137 * _tmp84 - _tmp140 * _tmp93 - _tmp142 * _tmp69;
  const Scalar _tmp629 = -_tmp40 * _tmp84 - _tmp54 * _tmp93 - _tmp59 * _tmp69;
  const Scalar _tmp630 = -_tmp145 * _tmp84 - _tmp146 * _tmp93 - _tmp147 * _tmp69;
  const Scalar _tmp631 = -_tmp145 * _tmp85 - _tmp146 * _tmp91 - _tmp147 * _tmp79;
  const Scalar _tmp632 = -_tmp40 * _tmp85 - _tmp54 * _tmp91 - _tmp59 * _tmp79;
  const Scalar _tmp633 = -_tmp137 * _tmp85 - _tmp140 * _tmp91 - _tmp142 * _tmp79;
  const Scalar _tmp634 = -_tmp137 * _tmp88 - _tmp140 * _tmp92 - _tmp142 * _tmp74;
  const Scalar _tmp635 = -_tmp145 * _tmp88 - _tmp146 * _tmp92 - _tmp147 * _tmp74;
  const Scalar _tmp636 = -_tmp40 * _tmp88 - _tmp54 * _tmp92 - _tmp59 * _tmp74;
  const Scalar _tmp637 = -_tmp4;
  const Scalar _tmp638 = std::pow(_y[3], Scalar(2));
  const Scalar _tmp639 = -_tmp12;
  const Scalar _tmp640 = -_tmp42;
  const Scalar _tmp641 =
      _y_T_b[4] * (_tmp2 + _tmp637) + _y_T_b[6] * (_tmp10 + _tmp638 + _tmp639 + _tmp640);
  const Scalar _tmp642 = -_tmp638;
  const Scalar _tmp643 = _tmp10 + _tmp642;
  const Scalar _tmp644 = _tmp12 + _tmp640;
  const Scalar _tmp645 = _tmp5 * _y_T_b[6] + _y_T_b[4] * (_tmp643 + _tmp644);
  const Scalar _tmp646 = -_tmp7;
  const Scalar _tmp647 = _tmp63 * _y_T_b[6] + _y_T_b[4] * (_tmp646 + _tmp8);
  const Scalar _tmp648 = _tmp137 * _tmp645 + _tmp140 * _tmp641 + _tmp142 * _tmp647;
  const Scalar _tmp649 = (Scalar(1) / Scalar(2)) * _tmp108;
  const Scalar _tmp650 = (Scalar(1) / Scalar(2)) * _tmp109;
  const Scalar _tmp651 = -_tmp650;
  const Scalar _tmp652 = _tmp649 + _tmp651;
  const Scalar _tmp653 = (Scalar(1) / Scalar(2)) * _tmp106;
  const Scalar _tmp654 = -_tmp653;
  const Scalar _tmp655 = (Scalar(1) / Scalar(2)) * _tmp107;
  const Scalar _tmp656 = -_tmp655;
  const Scalar _tmp657 = _tmp654 + _tmp656;
  const Scalar _tmp658 = _tmp652 + _tmp657;
  const Scalar _tmp659 = (Scalar(1) / Scalar(2)) * _tmp114;
  const Scalar _tmp660 = -_tmp659;
  const Scalar _tmp661 = (Scalar(1) / Scalar(2)) * _tmp112;
  const Scalar _tmp662 = (Scalar(1) / Scalar(2)) * _tmp111;
  const Scalar _tmp663 = (Scalar(1) / Scalar(2)) * _tmp113;
  const Scalar _tmp664 = _tmp662 + _tmp663;
  const Scalar _tmp665 = _tmp660 + _tmp661 + _tmp664;
  const Scalar _tmp666 = (Scalar(1) / Scalar(2)) * _tmp96;
  const Scalar _tmp667 = (Scalar(1) / Scalar(2)) * _tmp98;
  const Scalar _tmp668 = -_tmp667;
  const Scalar _tmp669 = (Scalar(1) / Scalar(2)) * _tmp97;
  const Scalar _tmp670 = -_tmp669;
  const Scalar _tmp671 = (Scalar(1) / Scalar(2)) * _tmp99;
  const Scalar _tmp672 = -_tmp671;
  const Scalar _tmp673 = _tmp670 + _tmp672;
  const Scalar _tmp674 = _tmp666 + _tmp668 + _tmp673;
  const Scalar _tmp675 = (Scalar(1) / Scalar(2)) * _tmp101;
  const Scalar _tmp676 = (Scalar(1) / Scalar(2)) * _tmp104;
  const Scalar _tmp677 = -_tmp676;
  const Scalar _tmp678 = (Scalar(1) / Scalar(2)) * _tmp102;
  const Scalar _tmp679 = -_tmp678;
  const Scalar _tmp680 = (Scalar(1) / Scalar(2)) * _tmp103;
  const Scalar _tmp681 = -_tmp680;
  const Scalar _tmp682 = _tmp679 + _tmp681;
  const Scalar _tmp683 = _tmp675 + _tmp677 + _tmp682;
  const Scalar _tmp684 = _tmp20 * _tmp658 - _tmp25 * _tmp674 + _tmp32 * _tmp683 - _tmp37 * _tmp665;
  const Scalar _tmp685 = -_tmp20 * _tmp683 + _tmp25 * _tmp665 + _tmp32 * _tmp658 - _tmp37 * _tmp674;
  const Scalar _tmp686 = _tmp20 * _tmp665 + _tmp25 * _tmp683 + _tmp32 * _tmp674 + _tmp37 * _tmp658;
  const Scalar _tmp687 = -_tmp20 * _tmp674 - _tmp25 * _tmp658 + _tmp32 * _tmp665 + _tmp37 * _tmp683;
  const Scalar _tmp688 =
      _a_T_b[0] * _tmp684 - _a_T_b[1] * _tmp686 - _a_T_b[2] * _tmp685 + _a_T_b[3] * _tmp687;
  const Scalar _tmp689 = _tmp206 * _tmp688;
  const Scalar _tmp690 =
      _a_T_b[0] * _tmp685 + _a_T_b[1] * _tmp687 + _a_T_b[2] * _tmp684 + _a_T_b[3] * _tmp686;
  const Scalar _tmp691 = _tmp208 * _tmp690;
  const Scalar _tmp692 = _tmp145 * _tmp645 + _tmp146 * _tmp641 + _tmp147 * _tmp647;
  const Scalar _tmp693 = _tmp201 * _tmp690;
  const Scalar _tmp694 = _tmp211 * _tmp690;
  const Scalar _tmp695 =
      -_a_T_b[0] * _tmp687 + _a_T_b[1] * _tmp685 - _a_T_b[2] * _tmp686 + _a_T_b[3] * _tmp684;
  const Scalar _tmp696 = _tmp206 * _tmp695;
  const Scalar _tmp697 =
      -_a_T_b[0] * _tmp686 - _a_T_b[1] * _tmp684 + _a_T_b[2] * _tmp687 + _a_T_b[3] * _tmp685;
  const Scalar _tmp698 = _tmp206 * _tmp697;
  const Scalar _tmp699 = _tmp40 * _tmp645 + _tmp54 * _tmp641 + _tmp59 * _tmp647;
  const Scalar _tmp700 = _tmp209 * _tmp690;
  const Scalar _tmp701 = _tmp259 * _tmp690;
  const Scalar _tmp702 =
      _tmp252 * _tmp691 - _tmp254 * _tmp690 + _tmp648 * sqrt_info(0, 5) +
      _tmp689 * sqrt_info(0, 1) + _tmp692 * sqrt_info(0, 3) - _tmp693 * sqrt_info(0, 1) -
      _tmp694 * sqrt_info(0, 0) + _tmp696 * sqrt_info(0, 2) + _tmp698 * sqrt_info(0, 0) +
      _tmp699 * sqrt_info(0, 4) + _tmp700 * sqrt_info(0, 1) + _tmp701 * sqrt_info(0, 0);
  const Scalar _tmp703 = 2 * _y[2];
  const Scalar _tmp704 = _tmp42 + _tmp639;
  const Scalar _tmp705 = -_tmp10;
  const Scalar _tmp706 = _tmp638 + _tmp705;
  const Scalar _tmp707 = _y_T_b[5] * (_tmp704 + _tmp706) + _y_T_b[6] * (_tmp60 + _tmp646);
  const Scalar _tmp708 = -_tmp47;
  const Scalar _tmp709 = _tmp41 * _y_T_b[5] + _y_T_b[6] * (_tmp45 + _tmp708);
  const Scalar _tmp710 = _tmp61 * _y_T_b[5] + _y_T_b[6] * (_tmp643 + _tmp704);
  const Scalar _tmp711 = _tmp137 * _tmp707 + _tmp140 * _tmp709 + _tmp142 * _tmp710;
  const Scalar _tmp712 = -_tmp649;
  const Scalar _tmp713 = _tmp651 + _tmp712;
  const Scalar _tmp714 = _tmp653 + _tmp656 + _tmp713;
  const Scalar _tmp715 = -_tmp666;
  const Scalar _tmp716 = _tmp667 + _tmp673 + _tmp715;
  const Scalar _tmp717 = _tmp662 - _tmp663;
  const Scalar _tmp718 = _tmp659 + _tmp661 + _tmp717;
  const Scalar _tmp719 = -_tmp675;
  const Scalar _tmp720 = _tmp676 + _tmp682 + _tmp719;
  const Scalar _tmp721 = _tmp20 * _tmp714 + _tmp25 * _tmp716 + _tmp32 * _tmp720 + _tmp37 * _tmp718;
  const Scalar _tmp722 = -_tmp20 * _tmp720 - _tmp25 * _tmp718 + _tmp32 * _tmp714 + _tmp37 * _tmp716;
  const Scalar _tmp723 = -_tmp20 * _tmp716 + _tmp25 * _tmp714 + _tmp32 * _tmp718 - _tmp37 * _tmp720;
  const Scalar _tmp724 = _tmp20 * _tmp718 - _tmp25 * _tmp720 + _tmp32 * _tmp716 - _tmp37 * _tmp714;
  const Scalar _tmp725 =
      -_a_T_b[0] * _tmp721 - _a_T_b[1] * _tmp724 + _a_T_b[2] * _tmp722 + _a_T_b[3] * _tmp723;
  const Scalar _tmp726 = _tmp206 * _tmp725;
  const Scalar _tmp727 =
      _a_T_b[0] * _tmp723 + _a_T_b[1] * _tmp722 + _a_T_b[2] * _tmp724 + _a_T_b[3] * _tmp721;
  const Scalar _tmp728 = _tmp259 * _tmp727;
  const Scalar _tmp729 = _tmp40 * _tmp707 + _tmp54 * _tmp709 + _tmp59 * _tmp710;
  const Scalar _tmp730 = _tmp208 * _tmp727;
  const Scalar _tmp731 = _tmp211 * _tmp727;
  const Scalar _tmp732 =
      -_a_T_b[0] * _tmp722 + _a_T_b[1] * _tmp723 - _a_T_b[2] * _tmp721 + _a_T_b[3] * _tmp724;
  const Scalar _tmp733 = _tmp206 * _tmp732;
  const Scalar _tmp734 = _tmp201 * _tmp727;
  const Scalar _tmp735 = _tmp145 * _tmp707 + _tmp146 * _tmp709 + _tmp147 * _tmp710;
  const Scalar _tmp736 =
      _a_T_b[0] * _tmp724 - _a_T_b[1] * _tmp721 - _a_T_b[2] * _tmp723 + _a_T_b[3] * _tmp722;
  const Scalar _tmp737 = _tmp209 * _tmp727;
  const Scalar _tmp738 =
      _tmp252 * _tmp730 - _tmp254 * _tmp727 + _tmp340 * _tmp736 + _tmp711 * sqrt_info(0, 5) +
      _tmp726 * sqrt_info(0, 0) + _tmp728 * sqrt_info(0, 0) + _tmp729 * sqrt_info(0, 4) -
      _tmp731 * sqrt_info(0, 0) + _tmp733 * sqrt_info(0, 2) - _tmp734 * sqrt_info(0, 1) +
      _tmp735 * sqrt_info(0, 3) + _tmp737 * sqrt_info(0, 1);
  const Scalar _tmp739 = _tmp48 * _y_T_b[4] + _y_T_b[5] * (_tmp12 + _tmp42 + _tmp642 + _tmp705);
  const Scalar _tmp740 = _y_T_b[4] * (_tmp644 + _tmp706) + _y_T_b[5] * (_tmp46 + _tmp708);
  const Scalar _tmp741 = _tmp9 * _y_T_b[4] + _y_T_b[5] * (_tmp1 + _tmp637);
  const Scalar _tmp742 = _tmp40 * _tmp741 + _tmp54 * _tmp739 + _tmp59 * _tmp740;
  const Scalar _tmp743 = _tmp654 + _tmp655 + _tmp713;
  const Scalar _tmp744 = _tmp670 + _tmp671;
  const Scalar _tmp745 = _tmp668 + _tmp715;
  const Scalar _tmp746 = _tmp744 + _tmp745;
  const Scalar _tmp747 = -_tmp661;
  const Scalar _tmp748 = _tmp659 + _tmp664 + _tmp747;
  const Scalar _tmp749 = _tmp679 + _tmp680;
  const Scalar _tmp750 = _tmp677 + _tmp719;
  const Scalar _tmp751 = _tmp749 + _tmp750;
  const Scalar _tmp752 = -_tmp20 * _tmp743 - _tmp25 * _tmp746 + _tmp32 * _tmp751 + _tmp37 * _tmp748;
  const Scalar _tmp753 = _tmp20 * _tmp751 + _tmp25 * _tmp748 + _tmp32 * _tmp743 + _tmp37 * _tmp746;
  const Scalar _tmp754 = _tmp20 * _tmp746 - _tmp25 * _tmp743 + _tmp32 * _tmp748 - _tmp37 * _tmp751;
  const Scalar _tmp755 = -_tmp20 * _tmp748 + _tmp25 * _tmp751 + _tmp32 * _tmp746 - _tmp37 * _tmp743;
  const Scalar _tmp756 =
      -_a_T_b[0] * _tmp753 - _a_T_b[1] * _tmp754 + _a_T_b[2] * _tmp752 + _a_T_b[3] * _tmp755;
  const Scalar _tmp757 = _tmp206 * _tmp756;
  const Scalar _tmp758 =
      _a_T_b[0] * _tmp755 + _a_T_b[1] * _tmp752 + _a_T_b[2] * _tmp754 + _a_T_b[3] * _tmp753;
  const Scalar _tmp759 = _tmp208 * _tmp758;
  const Scalar _tmp760 = _tmp209 * _tmp758;
  const Scalar _tmp761 = _tmp201 * _tmp758;
  const Scalar _tmp762 = _tmp145 * _tmp741 + _tmp146 * _tmp739 + _tmp147 * _tmp740;
  const Scalar _tmp763 =
      -_a_T_b[0] * _tmp752 + _a_T_b[1] * _tmp755 - _a_T_b[2] * _tmp753 + _a_T_b[3] * _tmp754;
  const Scalar _tmp764 = _tmp206 * _tmp763;
  const Scalar _tmp765 = _tmp259 * _tmp758;
  const Scalar _tmp766 =
      _a_T_b[0] * _tmp754 - _a_T_b[1] * _tmp753 - _a_T_b[2] * _tmp755 + _a_T_b[3] * _tmp752;
  const Scalar _tmp767 = _tmp137 * _tmp741 + _tmp140 * _tmp739 + _tmp142 * _tmp740;
  const Scalar _tmp768 = _tmp252 * _tmp759 - _tmp254 * _tmp758 + _tmp340 * _tmp766 -
                         _tmp486 * _tmp758 + _tmp742 * sqrt_info(0, 4) + _tmp757 * sqrt_info(0, 0) +
                         _tmp760 * sqrt_info(0, 1) - _tmp761 * sqrt_info(0, 1) +
                         _tmp762 * sqrt_info(0, 3) + _tmp764 * sqrt_info(0, 2) +
                         _tmp765 * sqrt_info(0, 0) + _tmp767 * sqrt_info(0, 5);
  const Scalar _tmp769 = _tmp153 * _tmp691 - _tmp373 * _tmp690 + _tmp374 * _tmp690 +
                         _tmp380 * _tmp697 + _tmp648 * sqrt_info(1, 5) + _tmp689 * sqrt_info(1, 1) +
                         _tmp692 * sqrt_info(1, 3) - _tmp693 * sqrt_info(1, 1) -
                         _tmp694 * sqrt_info(1, 0) + _tmp696 * sqrt_info(1, 2) +
                         _tmp699 * sqrt_info(1, 4) + _tmp700 * sqrt_info(1, 1);
  const Scalar _tmp770 = _tmp205 * _tmp725;
  const Scalar _tmp771 = _tmp206 * _tmp736;
  const Scalar _tmp772 = _tmp151 * _tmp770 + _tmp153 * _tmp730 - _tmp373 * _tmp727 +
                         _tmp374 * _tmp727 + _tmp711 * sqrt_info(1, 5) + _tmp729 * sqrt_info(1, 4) -
                         _tmp731 * sqrt_info(1, 0) + _tmp733 * sqrt_info(1, 2) -
                         _tmp734 * sqrt_info(1, 1) + _tmp735 * sqrt_info(1, 3) +
                         _tmp737 * sqrt_info(1, 1) + _tmp771 * sqrt_info(1, 1);
  const Scalar _tmp773 = _tmp205 * _tmp756;
  const Scalar _tmp774 = _tmp200 * _tmp758;
  const Scalar _tmp775 = _tmp211 * _tmp758;
  const Scalar _tmp776 = _tmp206 * _tmp766;
  const Scalar _tmp777 = _tmp151 * _tmp773 + _tmp153 * _tmp759 - _tmp153 * _tmp774 +
                         _tmp374 * _tmp758 - _tmp586 * _tmp758 + _tmp742 * sqrt_info(1, 4) +
                         _tmp760 * sqrt_info(1, 1) + _tmp762 * sqrt_info(1, 3) +
                         _tmp764 * sqrt_info(1, 2) + _tmp767 * sqrt_info(1, 5) -
                         _tmp775 * sqrt_info(1, 0) + _tmp776 * sqrt_info(1, 1);
  const Scalar _tmp778 = _tmp384 * _tmp690;
  const Scalar _tmp779 = _tmp383 * _tmp695 - _tmp387 * _tmp690 + _tmp390 * _tmp688 +
                         _tmp392 * _tmp697 + _tmp648 * sqrt_info(2, 5) + _tmp692 * sqrt_info(2, 3) -
                         _tmp693 * sqrt_info(2, 1) - _tmp694 * sqrt_info(2, 0) +
                         _tmp699 * sqrt_info(2, 4) + _tmp700 * sqrt_info(2, 1) +
                         _tmp701 * sqrt_info(2, 0) + _tmp778 * sqrt_info(2, 2);
  const Scalar _tmp780 = _tmp149 * _tmp730;
  const Scalar _tmp781 = _tmp154 * _tmp770 + _tmp383 * _tmp732 - _tmp387 * _tmp727 +
                         _tmp390 * _tmp736 + _tmp711 * sqrt_info(2, 5) + _tmp728 * sqrt_info(2, 0) +
                         _tmp729 * sqrt_info(2, 4) - _tmp731 * sqrt_info(2, 0) -
                         _tmp734 * sqrt_info(2, 1) + _tmp735 * sqrt_info(2, 3) +
                         _tmp737 * sqrt_info(2, 1) + _tmp780 * sqrt_info(2, 2);
  const Scalar _tmp782 = _tmp384 * _tmp758;
  const Scalar _tmp783 = _tmp154 * _tmp773 + _tmp383 * _tmp763 - _tmp387 * _tmp758 +
                         _tmp390 * _tmp766 - _tmp594 * _tmp758 + _tmp742 * sqrt_info(2, 4) +
                         _tmp760 * sqrt_info(2, 1) - _tmp761 * sqrt_info(2, 1) +
                         _tmp762 * sqrt_info(2, 3) + _tmp765 * sqrt_info(2, 0) +
                         _tmp767 * sqrt_info(2, 5) + _tmp782 * sqrt_info(2, 2);
  const Scalar _tmp784 = _tmp395 * _tmp690 + _tmp397 * _tmp690 - _tmp398 * _tmp690 +
                         _tmp604 * _tmp695 + _tmp648 * sqrt_info(3, 5) + _tmp689 * sqrt_info(3, 1) +
                         _tmp692 * sqrt_info(3, 3) - _tmp693 * sqrt_info(3, 1) -
                         _tmp694 * sqrt_info(3, 0) + _tmp698 * sqrt_info(3, 0) +
                         _tmp699 * sqrt_info(3, 4) + _tmp701 * sqrt_info(3, 0);
  const Scalar _tmp785 = _tmp395 * _tmp727 + _tmp397 * _tmp727 - _tmp398 * _tmp727 +
                         _tmp401 * _tmp736 + _tmp604 * _tmp732 + _tmp711 * sqrt_info(3, 5) +
                         _tmp726 * sqrt_info(3, 0) + _tmp728 * sqrt_info(3, 0) +
                         _tmp729 * sqrt_info(3, 4) - _tmp731 * sqrt_info(3, 0) -
                         _tmp734 * sqrt_info(3, 1) + _tmp735 * sqrt_info(3, 3);
  const Scalar _tmp786 = _tmp395 * _tmp758 - _tmp396 * _tmp774 + _tmp397 * _tmp758 +
                         _tmp401 * _tmp766 + _tmp742 * sqrt_info(3, 4) + _tmp757 * sqrt_info(3, 0) -
                         _tmp761 * sqrt_info(3, 1) + _tmp762 * sqrt_info(3, 3) +
                         _tmp764 * sqrt_info(3, 2) + _tmp765 * sqrt_info(3, 0) +
                         _tmp767 * sqrt_info(3, 5) - _tmp775 * sqrt_info(3, 0);
  const Scalar _tmp787 = _tmp386 * _tmp690;
  const Scalar _tmp788 =
      _tmp410 * _tmp697 + _tmp648 * sqrt_info(4, 5) + _tmp689 * sqrt_info(4, 1) +
      _tmp692 * sqrt_info(4, 3) - _tmp693 * sqrt_info(4, 1) - _tmp694 * sqrt_info(4, 0) +
      _tmp696 * sqrt_info(4, 2) + _tmp699 * sqrt_info(4, 4) + _tmp700 * sqrt_info(4, 1) +
      _tmp701 * sqrt_info(4, 0) + _tmp778 * sqrt_info(4, 2) - _tmp787 * sqrt_info(4, 2);
  const Scalar _tmp789 = _tmp386 * _tmp727;
  const Scalar _tmp790 =
      _tmp155 * _tmp770 - _tmp407 * _tmp727 + _tmp711 * sqrt_info(4, 5) +
      _tmp728 * sqrt_info(4, 0) + _tmp729 * sqrt_info(4, 4) - _tmp731 * sqrt_info(4, 0) +
      _tmp733 * sqrt_info(4, 2) + _tmp735 * sqrt_info(4, 3) + _tmp737 * sqrt_info(4, 1) +
      _tmp771 * sqrt_info(4, 1) + _tmp780 * sqrt_info(4, 2) - _tmp789 * sqrt_info(4, 2);
  const Scalar _tmp791 = _tmp386 * _tmp758;
  const Scalar _tmp792 =
      _tmp155 * _tmp773 - _tmp407 * _tmp758 + _tmp742 * sqrt_info(4, 4) +
      _tmp760 * sqrt_info(4, 1) + _tmp762 * sqrt_info(4, 3) + _tmp764 * sqrt_info(4, 2) +
      _tmp765 * sqrt_info(4, 0) + _tmp767 * sqrt_info(4, 5) - _tmp775 * sqrt_info(4, 0) +
      _tmp776 * sqrt_info(4, 1) + _tmp782 * sqrt_info(4, 2) - _tmp791 * sqrt_info(4, 2);
  const Scalar _tmp793 =
      -_tmp413 * _tmp690 + _tmp648 * sqrt_info(5, 5) + _tmp689 * sqrt_info(5, 1) +
      _tmp692 * sqrt_info(5, 3) - _tmp694 * sqrt_info(5, 0) + _tmp696 * sqrt_info(5, 2) +
      _tmp698 * sqrt_info(5, 0) + _tmp699 * sqrt_info(5, 4) + _tmp700 * sqrt_info(5, 1) +
      _tmp701 * sqrt_info(5, 0) + _tmp778 * sqrt_info(5, 2) - _tmp787 * sqrt_info(5, 2);
  const Scalar _tmp794 =
      -_tmp413 * _tmp727 + _tmp711 * sqrt_info(5, 5) + _tmp726 * sqrt_info(5, 0) +
      _tmp728 * sqrt_info(5, 0) + _tmp729 * sqrt_info(5, 4) - _tmp731 * sqrt_info(5, 0) +
      _tmp733 * sqrt_info(5, 2) + _tmp735 * sqrt_info(5, 3) + _tmp737 * sqrt_info(5, 1) +
      _tmp771 * sqrt_info(5, 1) + _tmp780 * sqrt_info(5, 2) - _tmp789 * sqrt_info(5, 2);
  const Scalar _tmp795 =
      -_tmp413 * _tmp758 + _tmp742 * sqrt_info(5, 4) + _tmp757 * sqrt_info(5, 0) +
      _tmp760 * sqrt_info(5, 1) + _tmp762 * sqrt_info(5, 3) + _tmp764 * sqrt_info(5, 2) +
      _tmp765 * sqrt_info(5, 0) + _tmp767 * sqrt_info(5, 5) - _tmp775 * sqrt_info(5, 0) +
      _tmp776 * sqrt_info(5, 1) + _tmp782 * sqrt_info(5, 2) - _tmp791 * sqrt_info(5, 2);
  const Scalar _tmp796 = _tmp652 + _tmp653 + _tmp655;
  const Scalar _tmp797 = _tmp669 + _tmp672 + _tmp745;
  const Scalar _tmp798 = _tmp25 * _tmp797;
  const Scalar _tmp799 = _tmp660 + _tmp717 + _tmp747;
  const Scalar _tmp800 = _tmp37 * _tmp799;
  const Scalar _tmp801 = _tmp678 + _tmp681 + _tmp750;
  const Scalar _tmp802 = _tmp32 * _tmp801 + _tmp800;
  const Scalar _tmp803 = _tmp20 * _tmp796 + _tmp798 + _tmp802;
  const Scalar _tmp804 = _tmp37 * _tmp797;
  const Scalar _tmp805 = _tmp25 * _tmp799;
  const Scalar _tmp806 = _tmp20 * _tmp801;
  const Scalar _tmp807 = _tmp32 * _tmp796 + _tmp804 - _tmp805 - _tmp806;
  const Scalar _tmp808 = -_tmp37 * _tmp801;
  const Scalar _tmp809 = _tmp32 * _tmp799;
  const Scalar _tmp810 = -_tmp20 * _tmp797 + _tmp809;
  const Scalar _tmp811 = _tmp25 * _tmp796 + _tmp808 + _tmp810;
  const Scalar _tmp812 = _tmp25 * _tmp801;
  const Scalar _tmp813 = _tmp20 * _tmp799;
  const Scalar _tmp814 = _tmp32 * _tmp797 + _tmp813;
  const Scalar _tmp815 = -_tmp37 * _tmp796 - _tmp812 + _tmp814;
  const Scalar _tmp816 =
      _a_T_b[0] * _tmp811 + _a_T_b[1] * _tmp807 + _a_T_b[2] * _tmp815 + _a_T_b[3] * _tmp803;
  const Scalar _tmp817 = _tmp259 * _tmp816;
  const Scalar _tmp818 = _tmp201 * _tmp816;
  const Scalar _tmp819 =
      -_a_T_b[0] * _tmp803 - _a_T_b[1] * _tmp815 + _a_T_b[2] * _tmp807 + _a_T_b[3] * _tmp811;
  const Scalar _tmp820 = _tmp206 * _tmp819;
  const Scalar _tmp821 =
      -_a_T_b[0] * _tmp807 + _a_T_b[1] * _tmp811 - _a_T_b[2] * _tmp803 + _a_T_b[3] * _tmp815;
  const Scalar _tmp822 = _tmp206 * _tmp821;
  const Scalar _tmp823 =
      _a_T_b[0] * _tmp815 - _a_T_b[1] * _tmp803 - _a_T_b[2] * _tmp811 + _a_T_b[3] * _tmp807;
  const Scalar _tmp824 = _tmp200 * _tmp816;
  const Scalar _tmp825 = _tmp209 * _tmp816;
  const Scalar _tmp826 = _tmp208 * _tmp816;
  const Scalar _tmp827 = _tmp211 * _tmp816;
  const Scalar _tmp828 = -_tmp252 * _tmp824 + _tmp252 * _tmp826 + _tmp340 * _tmp823 +
                         _tmp817 * sqrt_info(0, 0) - _tmp818 * sqrt_info(0, 1) +
                         _tmp820 * sqrt_info(0, 0) + _tmp822 * sqrt_info(0, 2) +
                         _tmp825 * sqrt_info(0, 1) - _tmp827 * sqrt_info(0, 0);
  const Scalar _tmp829 = 2 * _y_T_b[3];
  const Scalar _tmp830 = _tmp650 + _tmp657 + _tmp712;
  const Scalar _tmp831 = _tmp20 * _tmp830;
  const Scalar _tmp832 = _tmp675 + _tmp676 + _tmp749;
  const Scalar _tmp833 = _tmp32 * _tmp832 - _tmp798 - _tmp800 + _tmp831;
  const Scalar _tmp834 = _tmp32 * _tmp830 + _tmp805;
  const Scalar _tmp835 = -_tmp20 * _tmp832 - _tmp804 + _tmp834;
  const Scalar _tmp836 = -_tmp25 * _tmp830;
  const Scalar _tmp837 = _tmp37 * _tmp832 + _tmp810 + _tmp836;
  const Scalar _tmp838 = _tmp37 * _tmp830;
  const Scalar _tmp839 = _tmp25 * _tmp832 + _tmp814 + _tmp838;
  const Scalar _tmp840 =
      _a_T_b[0] * _tmp835 + _a_T_b[1] * _tmp837 + _a_T_b[2] * _tmp833 + _a_T_b[3] * _tmp839;
  const Scalar _tmp841 = _tmp208 * _tmp840;
  const Scalar _tmp842 =
      -_a_T_b[0] * _tmp839 - _a_T_b[1] * _tmp833 + _a_T_b[2] * _tmp837 + _a_T_b[3] * _tmp835;
  const Scalar _tmp843 = _tmp206 * _tmp842;
  const Scalar _tmp844 = _tmp201 * _tmp840;
  const Scalar _tmp845 =
      -_a_T_b[0] * _tmp837 + _a_T_b[1] * _tmp835 - _a_T_b[2] * _tmp839 + _a_T_b[3] * _tmp833;
  const Scalar _tmp846 = _tmp206 * _tmp845;
  const Scalar _tmp847 = _tmp259 * _tmp840;
  const Scalar _tmp848 =
      _a_T_b[0] * _tmp833 - _a_T_b[1] * _tmp839 - _a_T_b[2] * _tmp835 + _a_T_b[3] * _tmp837;
  const Scalar _tmp849 = _tmp209 * _tmp840;
  const Scalar _tmp850 = _tmp252 * _tmp841 - _tmp254 * _tmp840 + _tmp340 * _tmp848 -
                         _tmp486 * _tmp840 + _tmp843 * sqrt_info(0, 0) - _tmp844 * sqrt_info(0, 1) +
                         _tmp846 * sqrt_info(0, 2) + _tmp847 * sqrt_info(0, 0) +
                         _tmp849 * sqrt_info(0, 1);
  const Scalar _tmp851 = 2 * _y_T_b[2];
  const Scalar _tmp852 = _tmp666 + _tmp667 + _tmp744;
  const Scalar _tmp853 = -_tmp25 * _tmp852 + _tmp802 - _tmp831;
  const Scalar _tmp854 = _tmp37 * _tmp852 + _tmp806 + _tmp834;
  const Scalar _tmp855 = _tmp20 * _tmp852 + _tmp808 + _tmp809 + _tmp836;
  const Scalar _tmp856 = _tmp32 * _tmp852 + _tmp812 - _tmp813 - _tmp838;
  const Scalar _tmp857 =
      _a_T_b[0] * _tmp856 + _a_T_b[1] * _tmp853 + _a_T_b[2] * _tmp855 + _a_T_b[3] * _tmp854;
  const Scalar _tmp858 = _tmp211 * _tmp857;
  const Scalar _tmp859 = _tmp201 * _tmp857;
  const Scalar _tmp860 = _tmp259 * _tmp857;
  const Scalar _tmp861 = _tmp208 * _tmp857;
  const Scalar _tmp862 =
      _a_T_b[0] * _tmp855 - _a_T_b[1] * _tmp854 - _a_T_b[2] * _tmp856 + _a_T_b[3] * _tmp853;
  const Scalar _tmp863 =
      -_a_T_b[0] * _tmp854 - _a_T_b[1] * _tmp855 + _a_T_b[2] * _tmp853 + _a_T_b[3] * _tmp856;
  const Scalar _tmp864 = _tmp206 * _tmp863;
  const Scalar _tmp865 =
      -_a_T_b[0] * _tmp853 + _a_T_b[1] * _tmp856 - _a_T_b[2] * _tmp854 + _a_T_b[3] * _tmp855;
  const Scalar _tmp866 = _tmp206 * _tmp865;
  const Scalar _tmp867 = _tmp209 * _tmp857;
  const Scalar _tmp868 = _tmp252 * _tmp861 - _tmp254 * _tmp857 + _tmp340 * _tmp862 -
                         _tmp858 * sqrt_info(0, 0) - _tmp859 * sqrt_info(0, 1) +
                         _tmp860 * sqrt_info(0, 0) + _tmp864 * sqrt_info(0, 0) +
                         _tmp866 * sqrt_info(0, 2) + _tmp867 * sqrt_info(0, 1);
  const Scalar _tmp869 = 2 * _y_T_b[1];
  const Scalar _tmp870 = _tmp206 * _tmp823;
  const Scalar _tmp871 = -_tmp153 * _tmp824 + _tmp153 * _tmp826 + _tmp374 * _tmp816 +
                         _tmp380 * _tmp819 - _tmp818 * sqrt_info(1, 1) + _tmp822 * sqrt_info(1, 2) +
                         _tmp825 * sqrt_info(1, 1) - _tmp827 * sqrt_info(1, 0) +
                         _tmp870 * sqrt_info(1, 1);
  const Scalar _tmp872 = _tmp211 * _tmp840;
  const Scalar _tmp873 = _tmp205 * _tmp842;
  const Scalar _tmp874 = _tmp200 * _tmp840;
  const Scalar _tmp875 = _tmp206 * _tmp848;
  const Scalar _tmp876 = _tmp151 * _tmp873 + _tmp153 * _tmp841 - _tmp153 * _tmp874 +
                         _tmp374 * _tmp840 - _tmp586 * _tmp840 + _tmp846 * sqrt_info(1, 2) +
                         _tmp849 * sqrt_info(1, 1) - _tmp872 * sqrt_info(1, 0) +
                         _tmp875 * sqrt_info(1, 1);
  const Scalar _tmp877 = _tmp206 * _tmp862;
  const Scalar _tmp878 = _tmp205 * _tmp863;
  const Scalar _tmp879 = _tmp151 * _tmp878 + _tmp153 * _tmp861 - _tmp373 * _tmp857 +
                         _tmp374 * _tmp857 - _tmp586 * _tmp857 - _tmp858 * sqrt_info(1, 0) +
                         _tmp866 * sqrt_info(1, 2) + _tmp867 * sqrt_info(1, 1) +
                         _tmp877 * sqrt_info(1, 1);
  const Scalar _tmp880 = _tmp149 * _tmp824;
  const Scalar _tmp881 = _tmp384 * _tmp816;
  const Scalar _tmp882 = _tmp383 * _tmp821 + _tmp390 * _tmp823 + _tmp392 * _tmp819 -
                         _tmp594 * _tmp816 + _tmp817 * sqrt_info(2, 0) - _tmp818 * sqrt_info(2, 1) +
                         _tmp825 * sqrt_info(2, 1) - _tmp880 * sqrt_info(2, 2) +
                         _tmp881 * sqrt_info(2, 2);
  const Scalar _tmp883 = _tmp154 * _tmp873 + _tmp383 * _tmp845 - _tmp387 * _tmp840 +
                         _tmp389 * _tmp840 + _tmp390 * _tmp848 - _tmp594 * _tmp840 -
                         _tmp844 * sqrt_info(2, 1) + _tmp847 * sqrt_info(2, 0) +
                         _tmp849 * sqrt_info(2, 1);
  const Scalar _tmp884 = _tmp384 * _tmp857;
  const Scalar _tmp885 = _tmp154 * _tmp878 + _tmp383 * _tmp865 - _tmp387 * _tmp857 +
                         _tmp390 * _tmp862 - _tmp858 * sqrt_info(2, 0) - _tmp859 * sqrt_info(2, 1) +
                         _tmp860 * sqrt_info(2, 0) + _tmp867 * sqrt_info(2, 1) +
                         _tmp884 * sqrt_info(2, 2);
  const Scalar _tmp886 = _tmp395 * _tmp816 + _tmp397 * _tmp816 + _tmp401 * _tmp823 +
                         _tmp817 * sqrt_info(3, 0) - _tmp818 * sqrt_info(3, 1) +
                         _tmp820 * sqrt_info(3, 0) + _tmp822 * sqrt_info(3, 2) -
                         _tmp827 * sqrt_info(3, 0) - _tmp880 * sqrt_info(3, 2);
  const Scalar _tmp887 = _tmp395 * _tmp840 - _tmp396 * _tmp874 + _tmp397 * _tmp840 +
                         _tmp401 * _tmp848 + _tmp843 * sqrt_info(3, 0) - _tmp844 * sqrt_info(3, 1) +
                         _tmp846 * sqrt_info(3, 2) + _tmp847 * sqrt_info(3, 0) -
                         _tmp872 * sqrt_info(3, 0);
  const Scalar _tmp888 = _tmp395 * _tmp857 + _tmp397 * _tmp857 - _tmp398 * _tmp857 -
                         _tmp858 * sqrt_info(3, 0) - _tmp859 * sqrt_info(3, 1) +
                         _tmp860 * sqrt_info(3, 0) + _tmp864 * sqrt_info(3, 0) +
                         _tmp866 * sqrt_info(3, 2) + _tmp877 * sqrt_info(3, 1);
  const Scalar _tmp889 = -_tmp407 * _tmp816 + _tmp410 * _tmp819 + _tmp817 * sqrt_info(4, 0) +
                         _tmp822 * sqrt_info(4, 2) + _tmp825 * sqrt_info(4, 1) -
                         _tmp827 * sqrt_info(4, 0) + _tmp870 * sqrt_info(4, 1) -
                         _tmp880 * sqrt_info(4, 2) + _tmp881 * sqrt_info(4, 2);
  const Scalar _tmp890 = _tmp384 * _tmp840;
  const Scalar _tmp891 = _tmp386 * _tmp840;
  const Scalar _tmp892 = _tmp155 * _tmp873 - _tmp407 * _tmp840 + _tmp846 * sqrt_info(4, 2) +
                         _tmp847 * sqrt_info(4, 0) + _tmp849 * sqrt_info(4, 1) -
                         _tmp872 * sqrt_info(4, 0) + _tmp875 * sqrt_info(4, 1) +
                         _tmp890 * sqrt_info(4, 2) - _tmp891 * sqrt_info(4, 2);
  const Scalar _tmp893 = _tmp386 * _tmp857;
  const Scalar _tmp894 = _tmp155 * _tmp878 - _tmp407 * _tmp857 - _tmp858 * sqrt_info(4, 0) +
                         _tmp860 * sqrt_info(4, 0) + _tmp866 * sqrt_info(4, 2) +
                         _tmp867 * sqrt_info(4, 1) + _tmp877 * sqrt_info(4, 1) +
                         _tmp884 * sqrt_info(4, 2) - _tmp893 * sqrt_info(4, 2);
  const Scalar _tmp895 =
      -_tmp413 * _tmp816 + _tmp817 * sqrt_info(5, 0) + _tmp820 * sqrt_info(5, 0) +
      _tmp822 * sqrt_info(5, 2) + _tmp825 * sqrt_info(5, 1) - _tmp827 * sqrt_info(5, 0) +
      _tmp870 * sqrt_info(5, 1) - _tmp880 * sqrt_info(5, 2) + _tmp881 * sqrt_info(5, 2);
  const Scalar _tmp896 =
      -_tmp413 * _tmp840 + _tmp843 * sqrt_info(5, 0) + _tmp846 * sqrt_info(5, 2) +
      _tmp847 * sqrt_info(5, 0) + _tmp849 * sqrt_info(5, 1) - _tmp872 * sqrt_info(5, 0) +
      _tmp875 * sqrt_info(5, 1) + _tmp890 * sqrt_info(5, 2) - _tmp891 * sqrt_info(5, 2);
  const Scalar _tmp897 =
      -_tmp413 * _tmp857 - _tmp858 * sqrt_info(5, 0) + _tmp860 * sqrt_info(5, 0) +
      _tmp864 * sqrt_info(5, 0) + _tmp866 * sqrt_info(5, 2) + _tmp867 * sqrt_info(5, 1) +
      _tmp877 * sqrt_info(5, 1) + _tmp884 * sqrt_info(5, 2) - _tmp893 * sqrt_info(5, 2);
  const Scalar _tmp898 = 2 * _y_T_b[0];
  const Scalar _tmp899 = _tmp40 * _tmp5 + _tmp44 * _tmp54 + _tmp59 * _tmp63;
  const Scalar _tmp900 = _tmp145 * _tmp5 + _tmp146 * _tmp44 + _tmp147 * _tmp63;
  const Scalar _tmp901 = _tmp137 * _tmp5 + _tmp140 * _tmp44 + _tmp142 * _tmp63;
  const Scalar _tmp902 = _tmp137 * _tmp9 + _tmp140 * _tmp48 + _tmp142 * _tmp62;
  const Scalar _tmp903 = _tmp40 * _tmp9 + _tmp48 * _tmp54 + _tmp59 * _tmp62;
  const Scalar _tmp904 = _tmp145 * _tmp9 + _tmp146 * _tmp48 + _tmp147 * _tmp62;
  const Scalar _tmp905 = _tmp14 * _tmp145 + _tmp146 * _tmp41 + _tmp147 * _tmp61;
  const Scalar _tmp906 = _tmp14 * _tmp40 + _tmp41 * _tmp54 + _tmp59 * _tmp61;
  const Scalar _tmp907 = _tmp137 * _tmp14 + _tmp140 * _tmp41 + _tmp142 * _tmp61;

  // Output terms (5)
  Eigen::Matrix<Scalar, 6, 1> _res;

  _res(0, 0) = _tmp132 * sqrt_info(0, 1) + _tmp134 * sqrt_info(0, 0) + _tmp143 * sqrt_info(0, 5) +
               _tmp148 * sqrt_info(0, 3) + _tmp150 * sqrt_info(0, 2) + _tmp95 * sqrt_info(0, 4);
  _res(1, 0) = _tmp131 * _tmp153 + _tmp132 * sqrt_info(1, 1) + _tmp143 * sqrt_info(1, 5) +
               _tmp148 * sqrt_info(1, 3) + _tmp151 * _tmp152 + _tmp95 * sqrt_info(1, 4);
  _res(2, 0) = _tmp132 * sqrt_info(2, 1) + _tmp143 * sqrt_info(2, 5) + _tmp148 * sqrt_info(2, 3) +
               _tmp150 * sqrt_info(2, 2) + _tmp152 * _tmp154 + _tmp95 * sqrt_info(2, 4);
  _res(3, 0) = _tmp132 * sqrt_info(3, 1) + _tmp134 * sqrt_info(3, 0) + _tmp143 * sqrt_info(3, 5) +
               _tmp148 * sqrt_info(3, 3) + _tmp150 * sqrt_info(3, 2) + _tmp95 * sqrt_info(3, 4);
  _res(4, 0) = _tmp132 * sqrt_info(4, 1) + _tmp143 * sqrt_info(4, 5) + _tmp148 * sqrt_info(4, 3) +
               _tmp150 * sqrt_info(4, 2) + _tmp152 * _tmp155 + _tmp95 * sqrt_info(4, 4);
  _res(5, 0) = _tmp132 * sqrt_info(5, 1) + _tmp134 * sqrt_info(5, 0) + _tmp143 * sqrt_info(5, 5) +
               _tmp148 * sqrt_info(5, 3) + _tmp150 * sqrt_info(5, 2) + _tmp95 * sqrt_info(5, 4);

  if (res_D_x != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 7, Eigen::RowMajor>> _res_D_x{res_D_x};

    _res_D_x(0, 0) = -_tmp261 * _tmp67 + _tmp316 * _tmp317 + _tmp371 * _tmp70;
    _res_D_x(1, 0) = _tmp317 * _tmp378 - _tmp375 * _tmp67 + _tmp382 * _tmp70;
    _res_D_x(2, 0) = _tmp317 * _tmp391 - _tmp388 * _tmp67 + _tmp394 * _tmp70;
    _res_D_x(3, 0) = _tmp317 * _tmp400 - _tmp399 * _tmp67 + _tmp402 * _tmp70;
    _res_D_x(4, 0) = _tmp317 * _tmp408 - _tmp404 * _tmp67 + _tmp412 * _tmp70;
    _res_D_x(5, 0) = _tmp317 * _tmp415 - _tmp414 * _tmp67 + _tmp416 * _tmp70;
    _res_D_x(0, 1) = _tmp261 * _tmp70 - _tmp316 * _tmp65 + _tmp371 * _tmp67;
    _res_D_x(1, 1) = _tmp375 * _tmp70 - _tmp378 * _tmp65 + _tmp382 * _tmp67;
    _res_D_x(2, 1) = _tmp388 * _tmp70 - _tmp391 * _tmp65 + _tmp394 * _tmp67;
    _res_D_x(3, 1) = _tmp399 * _tmp70 - _tmp400 * _tmp65 + _tmp402 * _tmp67;
    _res_D_x(4, 1) = _tmp404 * _tmp70 - _tmp408 * _tmp65 + _tmp412 * _tmp67;
    _res_D_x(5, 1) = _tmp414 * _tmp70 - _tmp415 * _tmp65 + _tmp416 * _tmp67;
    _res_D_x(0, 2) = _tmp261 * _tmp65 + _tmp316 * _tmp70 - _tmp317 * _tmp371;
    _res_D_x(1, 2) = -_tmp317 * _tmp382 + _tmp375 * _tmp65 + _tmp378 * _tmp70;
    _res_D_x(2, 2) = -_tmp317 * _tmp394 + _tmp388 * _tmp65 + _tmp391 * _tmp70;
    _res_D_x(3, 2) = -_tmp317 * _tmp402 + _tmp399 * _tmp65 + _tmp400 * _tmp70;
    _res_D_x(4, 2) = -_tmp317 * _tmp412 + _tmp404 * _tmp65 + _tmp408 * _tmp70;
    _res_D_x(5, 2) = -_tmp317 * _tmp416 + _tmp414 * _tmp65 + _tmp415 * _tmp70;
    _res_D_x(0, 3) = -_tmp261 * _tmp317 - _tmp316 * _tmp67 - _tmp371 * _tmp65;
    _res_D_x(1, 3) = -_tmp317 * _tmp375 - _tmp378 * _tmp67 - _tmp382 * _tmp65;
    _res_D_x(2, 3) = -_tmp317 * _tmp388 - _tmp391 * _tmp67 - _tmp394 * _tmp65;
    _res_D_x(3, 3) = -_tmp317 * _tmp399 - _tmp400 * _tmp67 - _tmp402 * _tmp65;
    _res_D_x(4, 3) = -_tmp317 * _tmp404 - _tmp408 * _tmp67 - _tmp412 * _tmp65;
    _res_D_x(5, 3) = -_tmp317 * _tmp414 - _tmp415 * _tmp67 - _tmp416 * _tmp65;
    _res_D_x(0, 4) =
        _tmp418 * sqrt_info(0, 4) + _tmp420 * sqrt_info(0, 5) + _tmp422 * sqrt_info(0, 3);
    _res_D_x(1, 4) =
        _tmp418 * sqrt_info(1, 4) + _tmp420 * sqrt_info(1, 5) + _tmp422 * sqrt_info(1, 3);
    _res_D_x(2, 4) =
        _tmp418 * sqrt_info(2, 4) + _tmp420 * sqrt_info(2, 5) + _tmp422 * sqrt_info(2, 3);
    _res_D_x(3, 4) =
        _tmp418 * sqrt_info(3, 4) + _tmp420 * sqrt_info(3, 5) + _tmp422 * sqrt_info(3, 3);
    _res_D_x(4, 4) =
        _tmp418 * sqrt_info(4, 4) + _tmp420 * sqrt_info(4, 5) + _tmp422 * sqrt_info(4, 3);
    _res_D_x(5, 4) =
        _tmp418 * sqrt_info(5, 4) + _tmp420 * sqrt_info(5, 5) + _tmp422 * sqrt_info(5, 3);
    _res_D_x(0, 5) =
        _tmp424 * sqrt_info(0, 5) + _tmp425 * sqrt_info(0, 3) + _tmp426 * sqrt_info(0, 4);
    _res_D_x(1, 5) =
        _tmp424 * sqrt_info(1, 5) + _tmp425 * sqrt_info(1, 3) + _tmp426 * sqrt_info(1, 4);
    _res_D_x(2, 5) =
        _tmp424 * sqrt_info(2, 5) + _tmp425 * sqrt_info(2, 3) + _tmp426 * sqrt_info(2, 4);
    _res_D_x(3, 5) =
        _tmp424 * sqrt_info(3, 5) + _tmp425 * sqrt_info(3, 3) + _tmp426 * sqrt_info(3, 4);
    _res_D_x(4, 5) =
        _tmp424 * sqrt_info(4, 5) + _tmp425 * sqrt_info(4, 3) + _tmp426 * sqrt_info(4, 4);
    _res_D_x(5, 5) =
        _tmp424 * sqrt_info(5, 5) + _tmp425 * sqrt_info(5, 3) + _tmp426 * sqrt_info(5, 4);
    _res_D_x(0, 6) =
        _tmp427 * sqrt_info(0, 4) + _tmp428 * sqrt_info(0, 3) + _tmp429 * sqrt_info(0, 5);
    _res_D_x(1, 6) =
        _tmp427 * sqrt_info(1, 4) + _tmp428 * sqrt_info(1, 3) + _tmp429 * sqrt_info(1, 5);
    _res_D_x(2, 6) =
        _tmp427 * sqrt_info(2, 4) + _tmp428 * sqrt_info(2, 3) + _tmp429 * sqrt_info(2, 5);
    _res_D_x(3, 6) =
        _tmp427 * sqrt_info(3, 4) + _tmp428 * sqrt_info(3, 3) + _tmp429 * sqrt_info(3, 5);
    _res_D_x(4, 6) =
        _tmp427 * sqrt_info(4, 4) + _tmp428 * sqrt_info(4, 3) + _tmp429 * sqrt_info(4, 5);
    _res_D_x(5, 6) =
        _tmp427 * sqrt_info(5, 4) + _tmp428 * sqrt_info(5, 3) + _tmp429 * sqrt_info(5, 5);
  }

  if (res_D_x_T_a != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 7, Eigen::RowMajor>> _res_D_x_T_a{res_D_x_T_a};

    _res_D_x_T_a(0, 0) = _tmp494 * _x_T_a[1] - _tmp539 * _tmp540 + _tmp579 * _x_T_a[3];
    _res_D_x_T_a(1, 0) = -_tmp540 * _tmp589 + _tmp585 * _x_T_a[1] + _tmp592 * _x_T_a[3];
    _res_D_x_T_a(2, 0) = -_tmp540 * _tmp600 + _tmp597 * _x_T_a[1] + _tmp603 * _x_T_a[3];
    _res_D_x_T_a(3, 0) = -_tmp540 * _tmp607 + _tmp606 * _x_T_a[1] + _tmp609 * _x_T_a[3];
    _res_D_x_T_a(4, 0) = -_tmp540 * _tmp612 + _tmp611 * _x_T_a[1] + _tmp615 * _x_T_a[3];
    _res_D_x_T_a(5, 0) = -_tmp540 * _tmp618 + _tmp617 * _x_T_a[1] + _tmp620 * _x_T_a[3];
    _res_D_x_T_a(0, 1) = -_tmp494 * _x_T_a[0] + _tmp540 * _tmp578 + _tmp621 * _x_T_a[3];
    _res_D_x_T_a(1, 1) = _tmp540 * _tmp591 - _tmp585 * _x_T_a[0] + _tmp622 * _x_T_a[3];
    _res_D_x_T_a(2, 1) = _tmp540 * _tmp602 - _tmp597 * _x_T_a[0] + _tmp623 * _x_T_a[3];
    _res_D_x_T_a(3, 1) = _tmp540 * _tmp608 - _tmp606 * _x_T_a[0] + _tmp624 * _x_T_a[3];
    _res_D_x_T_a(4, 1) = _tmp540 * _tmp614 - _tmp610 * _tmp625 + _tmp626 * _x_T_a[3];
    _res_D_x_T_a(5, 1) = _tmp540 * _tmp619 - _tmp616 * _tmp625 + _tmp627 * _x_T_a[3];
    _res_D_x_T_a(0, 2) = _tmp494 * _x_T_a[3] - _tmp579 * _x_T_a[1] + _tmp621 * _x_T_a[0];
    _res_D_x_T_a(1, 2) = _tmp585 * _x_T_a[3] - _tmp592 * _x_T_a[1] + _tmp622 * _x_T_a[0];
    _res_D_x_T_a(2, 2) = _tmp597 * _x_T_a[3] - _tmp603 * _x_T_a[1] + _tmp623 * _x_T_a[0];
    _res_D_x_T_a(3, 2) = _tmp606 * _x_T_a[3] - _tmp609 * _x_T_a[1] + _tmp624 * _x_T_a[0];
    _res_D_x_T_a(4, 2) = _tmp611 * _x_T_a[3] - _tmp615 * _x_T_a[1] + _tmp626 * _x_T_a[0];
    _res_D_x_T_a(5, 2) = _tmp617 * _x_T_a[3] - _tmp620 * _x_T_a[1] + _tmp627 * _x_T_a[0];
    _res_D_x_T_a(0, 3) = -_tmp493 * _tmp540 - _tmp579 * _x_T_a[0] - _tmp621 * _x_T_a[1];
    _res_D_x_T_a(1, 3) = -_tmp540 * _tmp584 - _tmp592 * _x_T_a[0] - _tmp622 * _x_T_a[1];
    _res_D_x_T_a(2, 3) = -_tmp540 * _tmp596 - _tmp603 * _x_T_a[0] - _tmp623 * _x_T_a[1];
    _res_D_x_T_a(3, 3) = -_tmp540 * _tmp605 - _tmp608 * _tmp625 - _tmp624 * _x_T_a[1];
    _res_D_x_T_a(4, 3) = -_tmp540 * _tmp610 - _tmp614 * _tmp625 - _tmp626 * _x_T_a[1];
    _res_D_x_T_a(5, 3) = -_tmp540 * _tmp616 - _tmp620 * _x_T_a[0] - _tmp627 * _x_T_a[1];
    _res_D_x_T_a(0, 4) =
        _tmp628 * sqrt_info(0, 5) + _tmp629 * sqrt_info(0, 4) + _tmp630 * sqrt_info(0, 3);
    _res_D_x_T_a(1, 4) =
        _tmp628 * sqrt_info(1, 5) + _tmp629 * sqrt_info(1, 4) + _tmp630 * sqrt_info(1, 3);
    _res_D_x_T_a(2, 4) =
        _tmp628 * sqrt_info(2, 5) + _tmp629 * sqrt_info(2, 4) + _tmp630 * sqrt_info(2, 3);
    _res_D_x_T_a(3, 4) =
        _tmp628 * sqrt_info(3, 5) + _tmp629 * sqrt_info(3, 4) + _tmp630 * sqrt_info(3, 3);
    _res_D_x_T_a(4, 4) =
        _tmp628 * sqrt_info(4, 5) + _tmp629 * sqrt_info(4, 4) + _tmp630 * sqrt_info(4, 3);
    _res_D_x_T_a(5, 4) =
        _tmp628 * sqrt_info(5, 5) + _tmp629 * sqrt_info(5, 4) + _tmp630 * sqrt_info(5, 3);
    _res_D_x_T_a(0, 5) =
        _tmp631 * sqrt_info(0, 3) + _tmp632 * sqrt_info(0, 4) + _tmp633 * sqrt_info(0, 5);
    _res_D_x_T_a(1, 5) =
        _tmp631 * sqrt_info(1, 3) + _tmp632 * sqrt_info(1, 4) + _tmp633 * sqrt_info(1, 5);
    _res_D_x_T_a(2, 5) =
        _tmp631 * sqrt_info(2, 3) + _tmp632 * sqrt_info(2, 4) + _tmp633 * sqrt_info(2, 5);
    _res_D_x_T_a(3, 5) =
        _tmp631 * sqrt_info(3, 3) + _tmp632 * sqrt_info(3, 4) + _tmp633 * sqrt_info(3, 5);
    _res_D_x_T_a(4, 5) =
        _tmp631 * sqrt_info(4, 3) + _tmp632 * sqrt_info(4, 4) + _tmp633 * sqrt_info(4, 5);
    _res_D_x_T_a(5, 5) =
        _tmp631 * sqrt_info(5, 3) + _tmp632 * sqrt_info(5, 4) + _tmp633 * sqrt_info(5, 5);
    _res_D_x_T_a(0, 6) =
        _tmp634 * sqrt_info(0, 5) + _tmp635 * sqrt_info(0, 3) + _tmp636 * sqrt_info(0, 4);
    _res_D_x_T_a(1, 6) =
        _tmp634 * sqrt_info(1, 5) + _tmp635 * sqrt_info(1, 3) + _tmp636 * sqrt_info(1, 4);
    _res_D_x_T_a(2, 6) =
        _tmp634 * sqrt_info(2, 5) + _tmp635 * sqrt_info(2, 3) + _tmp636 * sqrt_info(2, 4);
    _res_D_x_T_a(3, 6) =
        _tmp634 * sqrt_info(3, 5) + _tmp635 * sqrt_info(3, 3) + _tmp636 * sqrt_info(3, 4);
    _res_D_x_T_a(4, 6) =
        _tmp634 * sqrt_info(4, 5) + _tmp635 * sqrt_info(4, 3) + _tmp636 * sqrt_info(4, 4);
    _res_D_x_T_a(5, 6) =
        _tmp634 * sqrt_info(5, 5) + _tmp635 * sqrt_info(5, 3) + _tmp636 * sqrt_info(5, 4);
  }

  if (res_D_y != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 7, Eigen::RowMajor>> _res_D_y{res_D_y};

    _res_D_y(0, 0) = _tmp0 * _tmp738 + _tmp6 * _tmp768 - _tmp702 * _tmp703;
    _res_D_y(1, 0) = _tmp0 * _tmp772 + _tmp6 * _tmp777 - _tmp703 * _tmp769;
    _res_D_y(2, 0) = _tmp0 * _tmp781 + _tmp6 * _tmp783 - _tmp703 * _tmp779;
    _res_D_y(3, 0) = _tmp0 * _tmp785 + _tmp6 * _tmp786 - _tmp703 * _tmp784;
    _res_D_y(4, 0) = _tmp0 * _tmp790 + _tmp6 * _tmp792 - _tmp703 * _tmp788;
    _res_D_y(5, 0) = _tmp0 * _tmp794 + _tmp6 * _tmp795 - _tmp703 * _tmp793;
    _res_D_y(0, 1) = _tmp0 * _tmp702 - _tmp3 * _tmp768 + _tmp703 * _tmp738;
    _res_D_y(1, 1) = _tmp0 * _tmp769 - _tmp3 * _tmp777 + _tmp703 * _tmp772;
    _res_D_y(2, 1) = _tmp0 * _tmp779 - _tmp3 * _tmp783 + _tmp703 * _tmp781;
    _res_D_y(3, 1) = _tmp0 * _tmp784 - _tmp3 * _tmp786 + _tmp703 * _tmp785;
    _res_D_y(4, 1) = _tmp0 * _tmp788 - _tmp3 * _tmp792 + _tmp703 * _tmp790;
    _res_D_y(5, 1) = _tmp0 * _tmp793 - _tmp3 * _tmp795 + _tmp703 * _tmp794;
    _res_D_y(0, 2) = _tmp0 * _tmp768 + _tmp3 * _tmp702 - _tmp6 * _tmp738;
    _res_D_y(1, 2) = _tmp0 * _tmp777 + _tmp3 * _tmp769 - _tmp6 * _tmp772;
    _res_D_y(2, 2) = _tmp0 * _tmp783 + _tmp3 * _tmp779 - _tmp6 * _tmp781;
    _res_D_y(3, 2) = _tmp0 * _tmp786 + _tmp3 * _tmp784 - _tmp6 * _tmp785;
    _res_D_y(4, 2) = _tmp0 * _tmp792 + _tmp3 * _tmp788 - _tmp6 * _tmp790;
    _res_D_y(5, 2) = _tmp0 * _tmp795 + _tmp3 * _tmp793 - _tmp6 * _tmp794;
    _res_D_y(0, 3) = -_tmp3 * _tmp738 - _tmp6 * _tmp702 - _tmp703 * _tmp768;
    _res_D_y(1, 3) = -_tmp3 * _tmp772 - _tmp6 * _tmp769 - _tmp703 * _tmp777;
    _res_D_y(2, 3) = -_tmp3 * _tmp781 - _tmp6 * _tmp779 - _tmp703 * _tmp783;
    _res_D_y(3, 3) = -_tmp3 * _tmp785 - _tmp6 * _tmp784 - _tmp703 * _tmp786;
    _res_D_y(4, 3) = -_tmp3 * _tmp790 - _tmp6 * _tmp788 - _tmp703 * _tmp792;
    _res_D_y(5, 3) = -_tmp3 * _tmp794 - _tmp6 * _tmp793 - _tmp703 * _tmp795;
    _res_D_y(0, 4) =
        _tmp140 * sqrt_info(0, 5) + _tmp146 * sqrt_info(0, 3) + _tmp54 * sqrt_info(0, 4);
    _res_D_y(1, 4) =
        _tmp140 * sqrt_info(1, 5) + _tmp146 * sqrt_info(1, 3) + _tmp54 * sqrt_info(1, 4);
    _res_D_y(2, 4) =
        _tmp140 * sqrt_info(2, 5) + _tmp146 * sqrt_info(2, 3) + _tmp54 * sqrt_info(2, 4);
    _res_D_y(3, 4) =
        _tmp140 * sqrt_info(3, 5) + _tmp146 * sqrt_info(3, 3) + _tmp54 * sqrt_info(3, 4);
    _res_D_y(4, 4) =
        _tmp140 * sqrt_info(4, 5) + _tmp146 * sqrt_info(4, 3) + _tmp54 * sqrt_info(4, 4);
    _res_D_y(5, 4) =
        _tmp140 * sqrt_info(5, 5) + _tmp146 * sqrt_info(5, 3) + _tmp54 * sqrt_info(5, 4);
    _res_D_y(0, 5) =
        _tmp142 * sqrt_info(0, 5) + _tmp147 * sqrt_info(0, 3) + _tmp59 * sqrt_info(0, 4);
    _res_D_y(1, 5) =
        _tmp142 * sqrt_info(1, 5) + _tmp147 * sqrt_info(1, 3) + _tmp59 * sqrt_info(1, 4);
    _res_D_y(2, 5) =
        _tmp142 * sqrt_info(2, 5) + _tmp147 * sqrt_info(2, 3) + _tmp59 * sqrt_info(2, 4);
    _res_D_y(3, 5) =
        _tmp142 * sqrt_info(3, 5) + _tmp147 * sqrt_info(3, 3) + _tmp59 * sqrt_info(3, 4);
    _res_D_y(4, 5) =
        _tmp142 * sqrt_info(4, 5) + _tmp147 * sqrt_info(4, 3) + _tmp59 * sqrt_info(4, 4);
    _res_D_y(5, 5) =
        _tmp142 * sqrt_info(5, 5) + _tmp147 * sqrt_info(5, 3) + _tmp59 * sqrt_info(5, 4);
    _res_D_y(0, 6) =
        _tmp137 * sqrt_info(0, 5) + _tmp145 * sqrt_info(0, 3) + _tmp40 * sqrt_info(0, 4);
    _res_D_y(1, 6) =
        _tmp137 * sqrt_info(1, 5) + _tmp145 * sqrt_info(1, 3) + _tmp40 * sqrt_info(1, 4);
    _res_D_y(2, 6) =
        _tmp137 * sqrt_info(2, 5) + _tmp145 * sqrt_info(2, 3) + _tmp40 * sqrt_info(2, 4);
    _res_D_y(3, 6) =
        _tmp137 * sqrt_info(3, 5) + _tmp145 * sqrt_info(3, 3) + _tmp40 * sqrt_info(3, 4);
    _res_D_y(4, 6) =
        _tmp137 * sqrt_info(4, 5) + _tmp145 * sqrt_info(4, 3) + _tmp40 * sqrt_info(4, 4);
    _res_D_y(5, 6) =
        _tmp137 * sqrt_info(5, 5) + _tmp145 * sqrt_info(5, 3) + _tmp40 * sqrt_info(5, 4);
  }

  if (res_D_y_T_b != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 7, Eigen::RowMajor>> _res_D_y_T_b{res_D_y_T_b};

    _res_D_y_T_b(0, 0) = _tmp828 * _tmp829 - _tmp850 * _tmp851 + _tmp868 * _tmp869;
    _res_D_y_T_b(1, 0) = _tmp829 * _tmp871 - _tmp851 * _tmp876 + _tmp869 * _tmp879;
    _res_D_y_T_b(2, 0) = _tmp829 * _tmp882 - _tmp851 * _tmp883 + _tmp869 * _tmp885;
    _res_D_y_T_b(3, 0) = _tmp829 * _tmp886 - _tmp851 * _tmp887 + _tmp869 * _tmp888;
    _res_D_y_T_b(4, 0) = _tmp829 * _tmp889 - _tmp851 * _tmp892 + _tmp869 * _tmp894;
    _res_D_y_T_b(5, 0) = _tmp829 * _tmp895 - _tmp851 * _tmp896 + _tmp869 * _tmp897;
    _res_D_y_T_b(0, 1) = _tmp828 * _tmp851 + _tmp829 * _tmp850 - _tmp868 * _tmp898;
    _res_D_y_T_b(1, 1) = _tmp829 * _tmp876 + _tmp851 * _tmp871 - _tmp879 * _tmp898;
    _res_D_y_T_b(2, 1) = _tmp829 * _tmp883 + _tmp851 * _tmp882 - _tmp885 * _tmp898;
    _res_D_y_T_b(3, 1) = _tmp829 * _tmp887 + _tmp851 * _tmp886 - _tmp888 * _tmp898;
    _res_D_y_T_b(4, 1) = _tmp829 * _tmp892 + _tmp851 * _tmp889 - _tmp894 * _tmp898;
    _res_D_y_T_b(5, 1) = _tmp829 * _tmp896 + _tmp851 * _tmp895 - _tmp897 * _tmp898;
    _res_D_y_T_b(0, 2) = -_tmp828 * _tmp869 + _tmp829 * _tmp868 + _tmp850 * _tmp898;
    _res_D_y_T_b(1, 2) = _tmp829 * _tmp879 - _tmp869 * _tmp871 + _tmp876 * _tmp898;
    _res_D_y_T_b(2, 2) = _tmp829 * _tmp885 - _tmp869 * _tmp882 + _tmp883 * _tmp898;
    _res_D_y_T_b(3, 2) = _tmp829 * _tmp888 - _tmp869 * _tmp886 + _tmp887 * _tmp898;
    _res_D_y_T_b(4, 2) = _tmp829 * _tmp894 - _tmp869 * _tmp889 + _tmp892 * _tmp898;
    _res_D_y_T_b(5, 2) = _tmp829 * _tmp897 - _tmp869 * _tmp895 + _tmp896 * _tmp898;
    _res_D_y_T_b(0, 3) = -_tmp828 * _tmp898 - _tmp850 * _tmp869 - _tmp851 * _tmp868;
    _res_D_y_T_b(1, 3) = -_tmp851 * _tmp879 - _tmp869 * _tmp876 - _tmp871 * _tmp898;
    _res_D_y_T_b(2, 3) = -_tmp851 * _tmp885 - _tmp869 * _tmp883 - _tmp882 * _tmp898;
    _res_D_y_T_b(3, 3) = -_tmp851 * _tmp888 - _tmp869 * _tmp887 - _tmp886 * _tmp898;
    _res_D_y_T_b(4, 3) = -_tmp851 * _tmp894 - _tmp869 * _tmp892 - _tmp889 * _tmp898;
    _res_D_y_T_b(5, 3) = -_tmp851 * _tmp897 - _tmp869 * _tmp896 - _tmp895 * _tmp898;
    _res_D_y_T_b(0, 4) =
        _tmp899 * sqrt_info(0, 4) + _tmp900 * sqrt_info(0, 3) + _tmp901 * sqrt_info(0, 5);
    _res_D_y_T_b(1, 4) =
        _tmp899 * sqrt_info(1, 4) + _tmp900 * sqrt_info(1, 3) + _tmp901 * sqrt_info(1, 5);
    _res_D_y_T_b(2, 4) =
        _tmp899 * sqrt_info(2, 4) + _tmp900 * sqrt_info(2, 3) + _tmp901 * sqrt_info(2, 5);
    _res_D_y_T_b(3, 4) =
        _tmp899 * sqrt_info(3, 4) + _tmp900 * sqrt_info(3, 3) + _tmp901 * sqrt_info(3, 5);
    _res_D_y_T_b(4, 4) =
        _tmp899 * sqrt_info(4, 4) + _tmp900 * sqrt_info(4, 3) + _tmp901 * sqrt_info(4, 5);
    _res_D_y_T_b(5, 4) =
        _tmp899 * sqrt_info(5, 4) + _tmp900 * sqrt_info(5, 3) + _tmp901 * sqrt_info(5, 5);
    _res_D_y_T_b(0, 5) =
        _tmp902 * sqrt_info(0, 5) + _tmp903 * sqrt_info(0, 4) + _tmp904 * sqrt_info(0, 3);
    _res_D_y_T_b(1, 5) =
        _tmp902 * sqrt_info(1, 5) + _tmp903 * sqrt_info(1, 4) + _tmp904 * sqrt_info(1, 3);
    _res_D_y_T_b(2, 5) =
        _tmp902 * sqrt_info(2, 5) + _tmp903 * sqrt_info(2, 4) + _tmp904 * sqrt_info(2, 3);
    _res_D_y_T_b(3, 5) =
        _tmp902 * sqrt_info(3, 5) + _tmp903 * sqrt_info(3, 4) + _tmp904 * sqrt_info(3, 3);
    _res_D_y_T_b(4, 5) =
        _tmp902 * sqrt_info(4, 5) + _tmp903 * sqrt_info(4, 4) + _tmp904 * sqrt_info(4, 3);
    _res_D_y_T_b(5, 5) =
        _tmp902 * sqrt_info(5, 5) + _tmp903 * sqrt_info(5, 4) + _tmp904 * sqrt_info(5, 3);
    _res_D_y_T_b(0, 6) =
        _tmp905 * sqrt_info(0, 3) + _tmp906 * sqrt_info(0, 4) + _tmp907 * sqrt_info(0, 5);
    _res_D_y_T_b(1, 6) =
        _tmp905 * sqrt_info(1, 3) + _tmp906 * sqrt_info(1, 4) + _tmp907 * sqrt_info(1, 5);
    _res_D_y_T_b(2, 6) =
        _tmp905 * sqrt_info(2, 3) + _tmp906 * sqrt_info(2, 4) + _tmp907 * sqrt_info(2, 5);
    _res_D_y_T_b(3, 6) =
        _tmp905 * sqrt_info(3, 3) + _tmp906 * sqrt_info(3, 4) + _tmp907 * sqrt_info(3, 5);
    _res_D_y_T_b(4, 6) =
        _tmp905 * sqrt_info(4, 3) + _tmp906 * sqrt_info(4, 4) + _tmp907 * sqrt_info(4, 5);
    _res_D_y_T_b(5, 6) =
        _tmp905 * sqrt_info(5, 3) + _tmp906 * sqrt_info(5, 4) + _tmp907 * sqrt_info(5, 5);
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_ceres
