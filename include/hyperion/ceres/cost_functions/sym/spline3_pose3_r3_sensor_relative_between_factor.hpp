// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>

namespace sym_ceres {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline3_pose3_r3_sensor_relative_between_factor
 *
 * Args:
 *     lambdas_x: Matrix31
 *     x0: Pose3
 *     x1: Pose3
 *     x2: Pose3
 *     x3: Pose3
 *     x_T_a: Pose3
 *     a_T_b: Matrix31
 *     lambdas_y: Matrix31
 *     y0: Pose3
 *     y1: Pose3
 *     y2: Pose3
 *     y3: Pose3
 *     y_T_b: Pose3
 *     sqrt_info: Matrix33
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix31
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 3, 1> Spline3Pose3R3SensorRelativeBetweenFactor(
    const Eigen::Matrix<Scalar, 3, 1>& lambdas_x, const sym::Pose3<Scalar>& x0,
    const sym::Pose3<Scalar>& x1, const sym::Pose3<Scalar>& x2, const sym::Pose3<Scalar>& x3,
    const sym::Pose3<Scalar>& x_T_a, const Eigen::Matrix<Scalar, 3, 1>& a_T_b,
    const Eigen::Matrix<Scalar, 3, 1>& lambdas_y, const sym::Pose3<Scalar>& y0,
    const sym::Pose3<Scalar>& y1, const sym::Pose3<Scalar>& y2, const sym::Pose3<Scalar>& y3,
    const sym::Pose3<Scalar>& y_T_b, const Eigen::Matrix<Scalar, 3, 3>& sqrt_info,
    const Scalar epsilon) {
  // Total ops: 849

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x3 = x3.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x_T_a = x_T_a.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y0 = y0.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y1 = y1.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y2 = y2.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y3 = y3.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y_T_b = y_T_b.Data();

  // Intermediate terms (196)
  const Scalar _tmp0 = _x1[0] * _x2[2] - _x1[1] * _x2[3] - _x1[2] * _x2[0] + _x1[3] * _x2[1];
  const Scalar _tmp1 = -_x1[0] * _x2[3] - _x1[1] * _x2[2] + _x1[2] * _x2[1] + _x1[3] * _x2[0];
  const Scalar _tmp2 = 1 - epsilon;
  const Scalar _tmp3 = -_x1[0] * _x2[0] - _x1[1] * _x2[1] - _x1[2] * _x2[2];
  const Scalar _tmp4 = _x1[3] * _x2[3];
  const Scalar _tmp5 = std::min<Scalar>(_tmp2, std::fabs(_tmp3 - _tmp4));
  const Scalar _tmp6 = 1 - std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 =
      2 * std::min<Scalar>(0, (((-_tmp3 + _tmp4) > 0) - ((-_tmp3 + _tmp4) < 0))) + 1;
  const Scalar _tmp8 = std::acos(_tmp5);
  const Scalar _tmp9 = 4 * std::pow(_tmp7, Scalar(2)) * std::pow(_tmp8, Scalar(2)) *
                       std::pow(lambdas_x(1, 0), Scalar(2)) / _tmp6;
  const Scalar _tmp10 = -_x1[0] * _x2[1] + _x1[1] * _x2[0] - _x1[2] * _x2[3] + _x1[3] * _x2[2];
  const Scalar _tmp11 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp12 =
      std::sqrt(Scalar(std::pow(_tmp0, Scalar(2)) * _tmp9 + std::pow(_tmp1, Scalar(2)) * _tmp9 +
                       std::pow(_tmp10, Scalar(2)) * _tmp9 + _tmp11));
  const Scalar _tmp13 = (Scalar(1) / Scalar(2)) * _tmp12;
  const Scalar _tmp14 =
      _tmp7 * _tmp8 * lambdas_x(1, 0) * std::sin(_tmp13) / (_tmp12 * std::sqrt(_tmp6));
  const Scalar _tmp15 = _x2[0] * _x3[2] - _x2[1] * _x3[3] - _x2[2] * _x3[0] + _x2[3] * _x3[1];
  const Scalar _tmp16 = -_x2[0] * _x3[0] - _x2[1] * _x3[1] - _x2[2] * _x3[2];
  const Scalar _tmp17 = _x2[3] * _x3[3];
  const Scalar _tmp18 = std::min<Scalar>(_tmp2, std::fabs(_tmp16 - _tmp17));
  const Scalar _tmp19 = 1 - std::pow(_tmp18, Scalar(2));
  const Scalar _tmp20 =
      2 * std::min<Scalar>(0, (((-_tmp16 + _tmp17) > 0) - ((-_tmp16 + _tmp17) < 0))) + 1;
  const Scalar _tmp21 = std::acos(_tmp18);
  const Scalar _tmp22 = 4 * std::pow(_tmp20, Scalar(2)) * std::pow(_tmp21, Scalar(2)) *
                        std::pow(lambdas_x(2, 0), Scalar(2)) / _tmp19;
  const Scalar _tmp23 = -_x2[0] * _x3[3] - _x2[1] * _x3[2] + _x2[2] * _x3[1] + _x2[3] * _x3[0];
  const Scalar _tmp24 = -_x2[0] * _x3[1] + _x2[1] * _x3[0] - _x2[2] * _x3[3] + _x2[3] * _x3[2];
  const Scalar _tmp25 = std::sqrt(Scalar(_tmp11 + std::pow(_tmp15, Scalar(2)) * _tmp22 +
                                         _tmp22 * std::pow(_tmp23, Scalar(2)) +
                                         _tmp22 * std::pow(_tmp24, Scalar(2))));
  const Scalar _tmp26 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp27 = std::cos(_tmp26);
  const Scalar _tmp28 = 2 * _tmp27;
  const Scalar _tmp29 = _tmp14 * _tmp28;
  const Scalar _tmp30 =
      _tmp20 * _tmp21 * lambdas_x(2, 0) * std::sin(_tmp26) / (std::sqrt(_tmp19) * _tmp25);
  const Scalar _tmp31 = std::cos(_tmp13);
  const Scalar _tmp32 = 2 * _tmp31;
  const Scalar _tmp33 = _tmp30 * _tmp32;
  const Scalar _tmp34 = _tmp1 * _tmp14;
  const Scalar _tmp35 = _tmp24 * _tmp30;
  const Scalar _tmp36 = 4 * _tmp35;
  const Scalar _tmp37 = _tmp10 * _tmp14;
  const Scalar _tmp38 = 4 * _tmp30;
  const Scalar _tmp39 = _tmp23 * _tmp38;
  const Scalar _tmp40 = _tmp0 * _tmp29 + _tmp15 * _tmp33 - _tmp34 * _tmp36 + _tmp37 * _tmp39;
  const Scalar _tmp41 = -_x0[0] * _x1[3] - _x0[1] * _x1[2] + _x0[2] * _x1[1] + _x0[3] * _x1[0];
  const Scalar _tmp42 = -_x0[0] * _x1[0] - _x0[1] * _x1[1] - _x0[2] * _x1[2];
  const Scalar _tmp43 = _x0[3] * _x1[3];
  const Scalar _tmp44 =
      2 * std::min<Scalar>(0, (((-_tmp42 + _tmp43) > 0) - ((-_tmp42 + _tmp43) < 0))) + 1;
  const Scalar _tmp45 = std::min<Scalar>(_tmp2, std::fabs(_tmp42 - _tmp43));
  const Scalar _tmp46 = std::acos(_tmp45);
  const Scalar _tmp47 = 1 - std::pow(_tmp45, Scalar(2));
  const Scalar _tmp48 = 4 * std::pow(_tmp44, Scalar(2)) * std::pow(_tmp46, Scalar(2)) *
                        std::pow(lambdas_x(0, 0), Scalar(2)) / _tmp47;
  const Scalar _tmp49 = _x0[0] * _x1[2] - _x0[1] * _x1[3] - _x0[2] * _x1[0] + _x0[3] * _x1[1];
  const Scalar _tmp50 = -_x0[0] * _x1[1] + _x0[1] * _x1[0] - _x0[2] * _x1[3] + _x0[3] * _x1[2];
  const Scalar _tmp51 = std::sqrt(Scalar(_tmp11 + std::pow(_tmp41, Scalar(2)) * _tmp48 +
                                         _tmp48 * std::pow(_tmp49, Scalar(2)) +
                                         _tmp48 * std::pow(_tmp50, Scalar(2))));
  const Scalar _tmp52 = (Scalar(1) / Scalar(2)) * _tmp51;
  const Scalar _tmp53 = std::cos(_tmp52);
  const Scalar _tmp54 = _tmp15 * _tmp38;
  const Scalar _tmp55 = _tmp0 * _tmp14;
  const Scalar _tmp56 = _tmp23 * _tmp33 + _tmp28 * _tmp34 + _tmp36 * _tmp55 - _tmp37 * _tmp54;
  const Scalar _tmp57 =
      2 * _tmp44 * _tmp46 * lambdas_x(0, 0) * std::sin(_tmp52) / (std::sqrt(_tmp47) * _tmp51);
  const Scalar _tmp58 = _tmp50 * _tmp57;
  const Scalar _tmp59 = _tmp10 * _tmp29 + _tmp32 * _tmp35 + _tmp34 * _tmp54 - _tmp39 * _tmp55;
  const Scalar _tmp60 = _tmp41 * _tmp57;
  const Scalar _tmp61 = _tmp27 * _tmp31 - _tmp34 * _tmp39 - _tmp36 * _tmp37 - _tmp54 * _tmp55;
  const Scalar _tmp62 = _tmp49 * _tmp57;
  const Scalar _tmp63 = _tmp40 * _tmp53 + _tmp56 * _tmp58 - _tmp59 * _tmp60 + _tmp61 * _tmp62;
  const Scalar _tmp64 = _tmp40 * _tmp57;
  const Scalar _tmp65 = -_tmp50 * _tmp64 + _tmp53 * _tmp56 + _tmp59 * _tmp62 + _tmp60 * _tmp61;
  const Scalar _tmp66 = _tmp56 * _tmp57;
  const Scalar _tmp67 = _tmp41 * _tmp64 - _tmp49 * _tmp66 + _tmp53 * _tmp59 + _tmp58 * _tmp61;
  const Scalar _tmp68 = -_tmp41 * _tmp66 - _tmp49 * _tmp64 + _tmp53 * _tmp61 - _tmp58 * _tmp59;
  const Scalar _tmp69 = _tmp63 * _x0[3] + _tmp65 * _x0[2] - _tmp67 * _x0[0] + _tmp68 * _x0[1];
  const Scalar _tmp70 = -_tmp63 * _x0[1] - _tmp65 * _x0[0] - _tmp67 * _x0[2] + _tmp68 * _x0[3];
  const Scalar _tmp71 = 2 * _tmp70;
  const Scalar _tmp72 = _tmp69 * _tmp71;
  const Scalar _tmp73 = -_tmp63 * _x0[2] + _tmp65 * _x0[3] + _tmp67 * _x0[1] + _tmp68 * _x0[0];
  const Scalar _tmp74 = _tmp63 * _x0[0] - _tmp65 * _x0[1] + _tmp67 * _x0[3] + _tmp68 * _x0[2];
  const Scalar _tmp75 = 2 * _tmp74;
  const Scalar _tmp76 = _tmp73 * _tmp75;
  const Scalar _tmp77 = _tmp71 * _tmp73;
  const Scalar _tmp78 = _tmp69 * _tmp75;
  const Scalar _tmp79 = -2 * std::pow(_tmp69, Scalar(2));
  const Scalar _tmp80 = -2 * std::pow(_tmp73, Scalar(2));
  const Scalar _tmp81 = _x0[6] + _x_T_a[4] * (-_tmp72 + _tmp76) + _x_T_a[5] * (_tmp77 + _tmp78) +
                        _x_T_a[6] * (_tmp79 + _tmp80 + 1) + lambdas_x(0, 0) * (-_x0[6] + _x1[6]) +
                        lambdas_x(1, 0) * (-_x1[6] + _x2[6]) + lambdas_x(2, 0) * (-_x2[6] + _x3[6]);
  const Scalar _tmp82 =
      _tmp69 * _x_T_a[3] + _tmp70 * _x_T_a[1] - _tmp73 * _x_T_a[2] + _tmp74 * _x_T_a[0];
  const Scalar _tmp83 = -2 * _tmp69 * _x_T_a[1] + 2 * _tmp70 * _x_T_a[3] - 2 * _tmp73 * _x_T_a[0] -
                        2 * _tmp74 * _x_T_a[2];
  const Scalar _tmp84 = _tmp82 * _tmp83;
  const Scalar _tmp85 =
      _tmp69 * _x_T_a[2] + _tmp70 * _x_T_a[0] + _tmp73 * _x_T_a[3] - _tmp74 * _x_T_a[1];
  const Scalar _tmp86 =
      -_tmp69 * _x_T_a[0] + _tmp70 * _x_T_a[2] + _tmp73 * _x_T_a[1] + _tmp74 * _x_T_a[3];
  const Scalar _tmp87 = 2 * _tmp85 * _tmp86;
  const Scalar _tmp88 = -_tmp84 + _tmp87;
  const Scalar _tmp89 = _tmp70 * _tmp75;
  const Scalar _tmp90 = 2 * _tmp69 * _tmp73;
  const Scalar _tmp91 = 1 - 2 * std::pow(_tmp74, Scalar(2));
  const Scalar _tmp92 = _x0[5] + _x_T_a[4] * (_tmp89 + _tmp90) + _x_T_a[5] * (_tmp80 + _tmp91) +
                        _x_T_a[6] * (-_tmp77 + _tmp78) + lambdas_x(0, 0) * (-_x0[5] + _x1[5]) +
                        lambdas_x(1, 0) * (-_x1[5] + _x2[5]) + lambdas_x(2, 0) * (-_x2[5] + _x3[5]);
  const Scalar _tmp93 = _tmp83 * _tmp86;
  const Scalar _tmp94 = 2 * _tmp82;
  const Scalar _tmp95 = _tmp85 * _tmp94;
  const Scalar _tmp96 = _tmp93 + _tmp95;
  const Scalar _tmp97 = -2 * std::pow(_tmp82, Scalar(2));
  const Scalar _tmp98 = 1 - 2 * std::pow(_tmp86, Scalar(2));
  const Scalar _tmp99 = _tmp97 + _tmp98;
  const Scalar _tmp100 = _x0[4] + _x_T_a[4] * (_tmp79 + _tmp91) + _x_T_a[5] * (-_tmp89 + _tmp90) +
                         _x_T_a[6] * (_tmp72 + _tmp76) + lambdas_x(0, 0) * (-_x0[4] + _x1[4]) +
                         lambdas_x(1, 0) * (-_x1[4] + _x2[4]) +
                         lambdas_x(2, 0) * (-_x2[4] + _x3[4]);
  const Scalar _tmp101 = -_y1[0] * _y2[1] + _y1[1] * _y2[0] - _y1[2] * _y2[3] + _y1[3] * _y2[2];
  const Scalar _tmp102 = -_y2[0] * _y3[1] + _y2[1] * _y3[0] - _y2[2] * _y3[3] + _y2[3] * _y3[2];
  const Scalar _tmp103 = -_y2[0] * _y3[0] - _y2[1] * _y3[1] - _y2[2] * _y3[2];
  const Scalar _tmp104 = _y2[3] * _y3[3];
  const Scalar _tmp105 =
      2 * std::min<Scalar>(0, (((-_tmp103 + _tmp104) > 0) - ((-_tmp103 + _tmp104) < 0))) + 1;
  const Scalar _tmp106 = std::min<Scalar>(_tmp2, std::fabs(_tmp103 - _tmp104));
  const Scalar _tmp107 = std::acos(_tmp106);
  const Scalar _tmp108 = -_y2[0] * _y3[3] - _y2[1] * _y3[2] + _y2[2] * _y3[1] + _y2[3] * _y3[0];
  const Scalar _tmp109 = 1 - std::pow(_tmp106, Scalar(2));
  const Scalar _tmp110 = 4 * std::pow(_tmp105, Scalar(2)) * std::pow(_tmp107, Scalar(2)) *
                         std::pow(lambdas_y(2, 0), Scalar(2)) / _tmp109;
  const Scalar _tmp111 = _y2[0] * _y3[2] - _y2[1] * _y3[3] - _y2[2] * _y3[0] + _y2[3] * _y3[1];
  const Scalar _tmp112 = std::sqrt(Scalar(std::pow(_tmp102, Scalar(2)) * _tmp110 +
                                          std::pow(_tmp108, Scalar(2)) * _tmp110 + _tmp11 +
                                          _tmp110 * std::pow(_tmp111, Scalar(2))));
  const Scalar _tmp113 = (Scalar(1) / Scalar(2)) * _tmp112;
  const Scalar _tmp114 =
      _tmp105 * _tmp107 * lambdas_y(2, 0) * std::sin(_tmp113) / (std::sqrt(_tmp109) * _tmp112);
  const Scalar _tmp115 = _tmp102 * _tmp114;
  const Scalar _tmp116 = -_y1[0] * _y2[0] - _y1[1] * _y2[1] - _y1[2] * _y2[2];
  const Scalar _tmp117 = _y1[3] * _y2[3];
  const Scalar _tmp118 =
      2 * std::min<Scalar>(0, (((-_tmp116 + _tmp117) > 0) - ((-_tmp116 + _tmp117) < 0))) + 1;
  const Scalar _tmp119 = std::min<Scalar>(_tmp2, std::fabs(_tmp116 - _tmp117));
  const Scalar _tmp120 = 1 - std::pow(_tmp119, Scalar(2));
  const Scalar _tmp121 = std::acos(_tmp119);
  const Scalar _tmp122 = 4 * std::pow(_tmp118, Scalar(2)) * std::pow(_tmp121, Scalar(2)) *
                         std::pow(lambdas_y(1, 0), Scalar(2)) / _tmp120;
  const Scalar _tmp123 = -_y1[0] * _y2[3] - _y1[1] * _y2[2] + _y1[2] * _y2[1] + _y1[3] * _y2[0];
  const Scalar _tmp124 = _y1[0] * _y2[2] - _y1[1] * _y2[3] - _y1[2] * _y2[0] + _y1[3] * _y2[1];
  const Scalar _tmp125 = std::sqrt(Scalar(std::pow(_tmp101, Scalar(2)) * _tmp122 + _tmp11 +
                                          _tmp122 * std::pow(_tmp123, Scalar(2)) +
                                          _tmp122 * std::pow(_tmp124, Scalar(2))));
  const Scalar _tmp126 = (Scalar(1) / Scalar(2)) * _tmp125;
  const Scalar _tmp127 =
      _tmp118 * _tmp121 * lambdas_y(1, 0) * std::sin(_tmp126) / (std::sqrt(_tmp120) * _tmp125);
  const Scalar _tmp128 = 4 * _tmp127;
  const Scalar _tmp129 = _tmp115 * _tmp128;
  const Scalar _tmp130 = _tmp108 * _tmp114;
  const Scalar _tmp131 = _tmp128 * _tmp130;
  const Scalar _tmp132 = _tmp111 * _tmp114;
  const Scalar _tmp133 = _tmp124 * _tmp127;
  const Scalar _tmp134 = 4 * _tmp133;
  const Scalar _tmp135 = std::cos(_tmp126);
  const Scalar _tmp136 = std::cos(_tmp113);
  const Scalar _tmp137 =
      -_tmp101 * _tmp129 - _tmp123 * _tmp131 - _tmp132 * _tmp134 + _tmp135 * _tmp136;
  const Scalar _tmp138 = -_y0[0] * _y1[3] - _y0[1] * _y1[2] + _y0[2] * _y1[1] + _y0[3] * _y1[0];
  const Scalar _tmp139 = -_y0[0] * _y1[1] + _y0[1] * _y1[0] - _y0[2] * _y1[3] + _y0[3] * _y1[2];
  const Scalar _tmp140 = _y0[0] * _y1[0] + _y0[1] * _y1[1] + _y0[2] * _y1[2] + _y0[3] * _y1[3];
  const Scalar _tmp141 = 2 * std::min<Scalar>(0, (((_tmp140) > 0) - ((_tmp140) < 0))) + 1;
  const Scalar _tmp142 = std::min<Scalar>(_tmp2, std::fabs(_tmp140));
  const Scalar _tmp143 = std::acos(_tmp142);
  const Scalar _tmp144 = 1 - std::pow(_tmp142, Scalar(2));
  const Scalar _tmp145 = 4 * std::pow(_tmp141, Scalar(2)) * std::pow(_tmp143, Scalar(2)) *
                         std::pow(lambdas_y(0, 0), Scalar(2)) / _tmp144;
  const Scalar _tmp146 = _y0[0] * _y1[2] - _y0[1] * _y1[3] - _y0[2] * _y1[0] + _y0[3] * _y1[1];
  const Scalar _tmp147 = std::sqrt(Scalar(_tmp11 + std::pow(_tmp138, Scalar(2)) * _tmp145 +
                                          std::pow(_tmp139, Scalar(2)) * _tmp145 +
                                          _tmp145 * std::pow(_tmp146, Scalar(2))));
  const Scalar _tmp148 = (Scalar(1) / Scalar(2)) * _tmp147;
  const Scalar _tmp149 =
      2 * _tmp141 * _tmp143 * lambdas_y(0, 0) * std::sin(_tmp148) / (std::sqrt(_tmp144) * _tmp147);
  const Scalar _tmp150 = _tmp138 * _tmp149;
  const Scalar _tmp151 = _tmp128 * _tmp132;
  const Scalar _tmp152 = 2 * _tmp136;
  const Scalar _tmp153 = _tmp127 * _tmp152;
  const Scalar _tmp154 = 2 * _tmp135;
  const Scalar _tmp155 = _tmp114 * _tmp154;
  const Scalar _tmp156 =
      -_tmp101 * _tmp151 + _tmp108 * _tmp155 + _tmp115 * _tmp134 + _tmp123 * _tmp153;
  const Scalar _tmp157 = std::cos(_tmp148);
  const Scalar _tmp158 =
      _tmp101 * _tmp153 + _tmp115 * _tmp154 + _tmp123 * _tmp151 - _tmp130 * _tmp134;
  const Scalar _tmp159 = _tmp146 * _tmp149;
  const Scalar _tmp160 =
      _tmp101 * _tmp131 + _tmp111 * _tmp155 - _tmp123 * _tmp129 + _tmp133 * _tmp152;
  const Scalar _tmp161 = _tmp139 * _tmp149;
  const Scalar _tmp162 =
      _tmp137 * _tmp150 + _tmp156 * _tmp157 + _tmp158 * _tmp159 - _tmp160 * _tmp161;
  const Scalar _tmp163 =
      _tmp137 * _tmp157 - _tmp150 * _tmp156 - _tmp158 * _tmp161 - _tmp159 * _tmp160;
  const Scalar _tmp164 =
      _tmp137 * _tmp159 - _tmp150 * _tmp158 + _tmp156 * _tmp161 + _tmp157 * _tmp160;
  const Scalar _tmp165 =
      _tmp137 * _tmp161 + _tmp150 * _tmp160 - _tmp156 * _tmp159 + _tmp157 * _tmp158;
  const Scalar _tmp166 = _tmp162 * _y0[2] + _tmp163 * _y0[1] + _tmp164 * _y0[3] - _tmp165 * _y0[0];
  const Scalar _tmp167 = -_tmp162 * _y0[1] + _tmp163 * _y0[2] + _tmp164 * _y0[0] + _tmp165 * _y0[3];
  const Scalar _tmp168 = 2 * _tmp167;
  const Scalar _tmp169 = _tmp166 * _tmp168;
  const Scalar _tmp170 = -_tmp162 * _y0[0] + _tmp163 * _y0[3] - _tmp164 * _y0[1] - _tmp165 * _y0[2];
  const Scalar _tmp171 = _tmp162 * _y0[3] + _tmp163 * _y0[0] - _tmp164 * _y0[2] + _tmp165 * _y0[1];
  const Scalar _tmp172 = 2 * _tmp170 * _tmp171;
  const Scalar _tmp173 = 2 * _tmp166;
  const Scalar _tmp174 = _tmp171 * _tmp173;
  const Scalar _tmp175 = _tmp168 * _tmp170;
  const Scalar _tmp176 = -2 * std::pow(_tmp167, Scalar(2));
  const Scalar _tmp177 = 1 - 2 * std::pow(_tmp171, Scalar(2));
  const Scalar _tmp178 =
      _y0[5] + _y_T_b[4] * (_tmp174 + _tmp175) + _y_T_b[5] * (_tmp176 + _tmp177) +
      _y_T_b[6] * (_tmp169 - _tmp172) + lambdas_y(0, 0) * (-_y0[5] + _y1[5]) +
      lambdas_y(1, 0) * (-_y1[5] + _y2[5]) + lambdas_y(2, 0) * (-_y2[5] + _y3[5]);
  const Scalar _tmp179 = _tmp168 * _tmp171;
  const Scalar _tmp180 = _tmp170 * _tmp173;
  const Scalar _tmp181 = -2 * std::pow(_tmp166, Scalar(2));
  const Scalar _tmp182 =
      _y0[6] + _y_T_b[4] * (_tmp179 - _tmp180) + _y_T_b[5] * (_tmp169 + _tmp172) +
      _y_T_b[6] * (_tmp177 + _tmp181) + lambdas_y(0, 0) * (-_y0[6] + _y1[6]) +
      lambdas_y(1, 0) * (-_y1[6] + _y2[6]) + lambdas_y(2, 0) * (-_y2[6] + _y3[6]);
  const Scalar _tmp183 =
      _y0[4] + _y_T_b[4] * (_tmp176 + _tmp181 + 1) + _y_T_b[5] * (_tmp174 - _tmp175) +
      _y_T_b[6] * (_tmp179 + _tmp180) + lambdas_y(0, 0) * (-_y0[4] + _y1[4]) +
      lambdas_y(1, 0) * (-_y1[4] + _y2[4]) + lambdas_y(2, 0) * (-_y2[4] + _y3[4]);
  const Scalar _tmp184 = -_tmp100 * _tmp99 + _tmp178 * _tmp96 + _tmp182 * _tmp88 +
                         _tmp183 * _tmp99 - _tmp81 * _tmp88 - _tmp92 * _tmp96 - a_T_b(0, 0);
  const Scalar _tmp185 = -2 * std::pow(_tmp85, Scalar(2));
  const Scalar _tmp186 = _tmp185 + _tmp98;
  const Scalar _tmp187 = _tmp83 * _tmp85;
  const Scalar _tmp188 = _tmp86 * _tmp94;
  const Scalar _tmp189 = _tmp187 + _tmp188;
  const Scalar _tmp190 = -_tmp93 + _tmp95;
  const Scalar _tmp191 = -_tmp100 * _tmp190 + _tmp178 * _tmp186 + _tmp182 * _tmp189 +
                         _tmp183 * _tmp190 - _tmp186 * _tmp92 - _tmp189 * _tmp81 - a_T_b(1, 0);
  const Scalar _tmp192 = -_tmp187 + _tmp188;
  const Scalar _tmp193 = _tmp84 + _tmp87;
  const Scalar _tmp194 = _tmp185 + _tmp97 + 1;
  const Scalar _tmp195 = -_tmp100 * _tmp193 + _tmp178 * _tmp192 + _tmp182 * _tmp194 +
                         _tmp183 * _tmp193 - _tmp192 * _tmp92 - _tmp194 * _tmp81 - a_T_b(2, 0);

  // Output terms (1)
  Eigen::Matrix<Scalar, 3, 1> _res;

  _res(0, 0) = _tmp184 * sqrt_info(0, 0) + _tmp191 * sqrt_info(0, 1) + _tmp195 * sqrt_info(0, 2);
  _res(1, 0) = _tmp184 * sqrt_info(1, 0) + _tmp191 * sqrt_info(1, 1) + _tmp195 * sqrt_info(1, 2);
  _res(2, 0) = _tmp184 * sqrt_info(2, 0) + _tmp191 * sqrt_info(2, 1) + _tmp195 * sqrt_info(2, 2);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_ceres
