// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>

namespace sym_ceres {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: pose3_r3_sensor_between_factor
 *
 * Args:
 *     x: Pose3
 *     x_T_s: Pose3
 *     s_T_y: Matrix31
 *     y: Pose3
 *     sqrt_info: Matrix33
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix31
 *     res_D_x: (3x7) jacobian (result_dim x storage_dim) of res (3) wrt arg x (7) (row-major)
 *     res_D_x_T_s: (3x7) jacobian (result_dim x storage_dim) of res (3) wrt arg x_T_s (7)
 * (row-major) res_D_y: (3x7) jacobian (result_dim x storage_dim) of res (3) wrt arg y (7)
 * (row-major)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 3, 1> Pose3R3SensorBetweenFactorWithJacobians013(
    const sym::Pose3<Scalar>& x, const sym::Pose3<Scalar>& x_T_s,
    const Eigen::Matrix<Scalar, 3, 1>& s_T_y, const sym::Pose3<Scalar>& y,
    const Eigen::Matrix<Scalar, 3, 3>& sqrt_info, const Scalar epsilon,
    Scalar* const res_D_x = nullptr, Scalar* const res_D_x_T_s = nullptr,
    Scalar* const res_D_y = nullptr) {
  // Total ops: 1179

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x = x.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x_T_s = x_T_s.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y = y.Data();

  // Intermediate terms (360)
  const Scalar _tmp0 = _x[3] * _x_T_s[2];
  const Scalar _tmp1 = _x[2] * _x_T_s[3];
  const Scalar _tmp2 = _x[1] * _x_T_s[0];
  const Scalar _tmp3 = _x[0] * _x_T_s[1];
  const Scalar _tmp4 = _tmp0 + _tmp1 - _tmp2 + _tmp3;
  const Scalar _tmp5 = 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _x[3] * _x_T_s[0];
  const Scalar _tmp8 = _x[2] * _x_T_s[1];
  const Scalar _tmp9 = _x[1] * _x_T_s[2];
  const Scalar _tmp10 = _x[0] * _x_T_s[3];
  const Scalar _tmp11 = _tmp10 + _tmp7 - _tmp8 + _tmp9;
  const Scalar _tmp12 = 2 * std::pow(_tmp11, Scalar(2));
  const Scalar _tmp13 = 1 - _tmp12;
  const Scalar _tmp14 = _tmp13 + _tmp6;
  const Scalar _tmp15 = _x[3] * _x_T_s[1];
  const Scalar _tmp16 = _x[2] * _x_T_s[0];
  const Scalar _tmp17 = _x[1] * _x_T_s[3];
  const Scalar _tmp18 = _x[0] * _x_T_s[2];
  const Scalar _tmp19 = _tmp15 + _tmp16 + _tmp17 - _tmp18;
  const Scalar _tmp20 = 2 * _tmp4;
  const Scalar _tmp21 = _tmp19 * _tmp20;
  const Scalar _tmp22 = _x[3] * _x_T_s[3];
  const Scalar _tmp23 = _x[2] * _x_T_s[2];
  const Scalar _tmp24 = _x[1] * _x_T_s[1];
  const Scalar _tmp25 = _x[0] * _x_T_s[0];
  const Scalar _tmp26 = _tmp22 - _tmp23 - _tmp24 - _tmp25;
  const Scalar _tmp27 = 2 * _tmp11;
  const Scalar _tmp28 = _tmp26 * _tmp27;
  const Scalar _tmp29 = _tmp21 + _tmp28;
  const Scalar _tmp30 = 2 * _x[0];
  const Scalar _tmp31 = _tmp30 * _x[2];
  const Scalar _tmp32 = 2 * _x[3];
  const Scalar _tmp33 = _tmp32 * _x[1];
  const Scalar _tmp34 = -_tmp33;
  const Scalar _tmp35 = _tmp31 + _tmp34;
  const Scalar _tmp36 = _tmp32 * _x[0];
  const Scalar _tmp37 = 2 * _x[2];
  const Scalar _tmp38 = _tmp37 * _x[1];
  const Scalar _tmp39 = _tmp36 + _tmp38;
  const Scalar _tmp40 = std::pow(_x[0], Scalar(2));
  const Scalar _tmp41 = -2 * _tmp40;
  const Scalar _tmp42 = std::pow(_x[1], Scalar(2));
  const Scalar _tmp43 = 1 - 2 * _tmp42;
  const Scalar _tmp44 = _tmp41 + _tmp43;
  const Scalar _tmp45 = _tmp35 * _x_T_s[4] + _tmp39 * _x_T_s[5] + _tmp44 * _x_T_s[6] + _x[6];
  const Scalar _tmp46 = _tmp30 * _x[1];
  const Scalar _tmp47 = _tmp32 * _x[2];
  const Scalar _tmp48 = _tmp46 + _tmp47;
  const Scalar _tmp49 = -_tmp36;
  const Scalar _tmp50 = _tmp38 + _tmp49;
  const Scalar _tmp51 = std::pow(_x[2], Scalar(2));
  const Scalar _tmp52 = -2 * _tmp51;
  const Scalar _tmp53 = _tmp41 + _tmp52 + 1;
  const Scalar _tmp54 = _tmp48 * _x_T_s[4] + _tmp50 * _x_T_s[6] + _tmp53 * _x_T_s[5] + _x[5];
  const Scalar _tmp55 = _tmp19 * _tmp27;
  const Scalar _tmp56 = _tmp20 * _tmp26;
  const Scalar _tmp57 = -_tmp56;
  const Scalar _tmp58 = _tmp55 + _tmp57;
  const Scalar _tmp59 = -_tmp47;
  const Scalar _tmp60 = _tmp46 + _tmp59;
  const Scalar _tmp61 = _tmp31 + _tmp33;
  const Scalar _tmp62 = _tmp43 + _tmp52;
  const Scalar _tmp63 = _tmp60 * _x_T_s[5] + _tmp61 * _x_T_s[6] + _tmp62 * _x_T_s[4] + _x[4];
  const Scalar _tmp64 = -_tmp14 * _tmp54 + _tmp14 * _y[5] - _tmp29 * _tmp45 + _tmp29 * _y[6] -
                        _tmp58 * _tmp63 + _tmp58 * _y[4] - s_T_y(1, 0);
  const Scalar _tmp65 = 2 * std::pow(_tmp19, Scalar(2));
  const Scalar _tmp66 = -_tmp65;
  const Scalar _tmp67 = _tmp6 + _tmp66 + 1;
  const Scalar _tmp68 = _tmp27 * _tmp4;
  const Scalar _tmp69 = 2 * _tmp19;
  const Scalar _tmp70 = _tmp26 * _tmp69;
  const Scalar _tmp71 = -_tmp70;
  const Scalar _tmp72 = _tmp68 + _tmp71;
  const Scalar _tmp73 = _tmp55 + _tmp56;
  const Scalar _tmp74 = -_tmp45 * _tmp72 - _tmp54 * _tmp73 - _tmp63 * _tmp67 + _tmp67 * _y[4] +
                        _tmp72 * _y[6] + _tmp73 * _y[5] - s_T_y(0, 0);
  const Scalar _tmp75 = _tmp13 + _tmp66;
  const Scalar _tmp76 = _tmp68 + _tmp70;
  const Scalar _tmp77 = -_tmp28;
  const Scalar _tmp78 = _tmp21 + _tmp77;
  const Scalar _tmp79 = -_tmp45 * _tmp75 - _tmp54 * _tmp78 - _tmp63 * _tmp76 + _tmp75 * _y[6] +
                        _tmp76 * _y[4] + _tmp78 * _y[5] - s_T_y(2, 0);
  const Scalar _tmp80 = -_tmp46;
  const Scalar _tmp81 = _tmp61 * _x_T_s[5] + _x_T_s[6] * (_tmp47 + _tmp80);
  const Scalar _tmp82 = (Scalar(1) / Scalar(2)) * _tmp8;
  const Scalar _tmp83 = -_tmp82;
  const Scalar _tmp84 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp85 = _tmp83 + _tmp84;
  const Scalar _tmp86 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp87 = -_tmp86;
  const Scalar _tmp88 = (Scalar(1) / Scalar(2)) * _tmp10;
  const Scalar _tmp89 = -_tmp88;
  const Scalar _tmp90 = _tmp87 + _tmp89;
  const Scalar _tmp91 = _tmp85 + _tmp90;
  const Scalar _tmp92 = _tmp20 * _tmp91;
  const Scalar _tmp93 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp94 = -_tmp93;
  const Scalar _tmp95 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp96 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp97 = -_tmp96;
  const Scalar _tmp98 = (Scalar(1) / Scalar(2)) * _tmp16;
  const Scalar _tmp99 = -_tmp98;
  const Scalar _tmp100 = _tmp97 + _tmp99;
  const Scalar _tmp101 = _tmp100 + _tmp94 + _tmp95;
  const Scalar _tmp102 = 2 * _tmp26;
  const Scalar _tmp103 = _tmp101 * _tmp102;
  const Scalar _tmp104 = (Scalar(1) / Scalar(2)) * _tmp23;
  const Scalar _tmp105 = (Scalar(1) / Scalar(2)) * _tmp24;
  const Scalar _tmp106 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp107 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp108 = _tmp106 - _tmp107;
  const Scalar _tmp109 = _tmp104 + _tmp105 + _tmp108;
  const Scalar _tmp110 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp111 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp112 = -_tmp111;
  const Scalar _tmp113 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp114 = -_tmp113;
  const Scalar _tmp115 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp116 = -_tmp115;
  const Scalar _tmp117 = _tmp114 + _tmp116;
  const Scalar _tmp118 = _tmp110 + _tmp112 + _tmp117;
  const Scalar _tmp119 = _tmp109 * _tmp69 + _tmp118 * _tmp27;
  const Scalar _tmp120 = _tmp103 + _tmp119 + _tmp92;
  const Scalar _tmp121 = 4 * _tmp19;
  const Scalar _tmp122 = -_tmp118 * _tmp121;
  const Scalar _tmp123 = 4 * _tmp4;
  const Scalar _tmp124 = -_tmp101 * _tmp123;
  const Scalar _tmp125 = _tmp122 + _tmp124;
  const Scalar _tmp126 = std::pow(_x[3], Scalar(2));
  const Scalar _tmp127 = -_tmp126;
  const Scalar _tmp128 = -_tmp42;
  const Scalar _tmp129 = _tmp50 * _x_T_s[5] + _x_T_s[6] * (_tmp127 + _tmp128 + _tmp40 + _tmp51);
  const Scalar _tmp130 = _tmp126 + _tmp128;
  const Scalar _tmp131 = -_tmp40;
  const Scalar _tmp132 = _tmp131 + _tmp51;
  const Scalar _tmp133 = -_tmp38;
  const Scalar _tmp134 = _x_T_s[5] * (_tmp130 + _tmp132) + _x_T_s[6] * (_tmp133 + _tmp49);
  const Scalar _tmp135 = _tmp69 * _tmp91;
  const Scalar _tmp136 = _tmp102 * _tmp118;
  const Scalar _tmp137 = _tmp101 * _tmp27 + _tmp109 * _tmp20;
  const Scalar _tmp138 = -_tmp135 - _tmp136 + _tmp137;
  const Scalar _tmp139 = -_tmp120 * _tmp54 + _tmp120 * _y[5] - _tmp125 * _tmp63 + _tmp125 * _y[4] -
                         _tmp129 * _tmp73 - _tmp134 * _tmp72 - _tmp138 * _tmp45 + _tmp138 * _y[6] -
                         _tmp67 * _tmp81;
  const Scalar _tmp140 = -_tmp103 + _tmp119 - _tmp92;
  const Scalar _tmp141 = _tmp27 * _tmp91;
  const Scalar _tmp142 = _tmp102 * _tmp109;
  const Scalar _tmp143 = _tmp101 * _tmp69 + _tmp118 * _tmp20;
  const Scalar _tmp144 = _tmp141 + _tmp142 + _tmp143;
  const Scalar _tmp145 = 4 * _tmp11;
  const Scalar _tmp146 = -_tmp109 * _tmp145;
  const Scalar _tmp147 = _tmp124 + _tmp146;
  const Scalar _tmp148 = -_tmp129 * _tmp14 - _tmp134 * _tmp29 - _tmp140 * _tmp63 + _tmp140 * _y[4] -
                         _tmp144 * _tmp45 + _tmp144 * _y[6] - _tmp147 * _tmp54 + _tmp147 * _y[5] -
                         _tmp58 * _tmp81;
  const Scalar _tmp149 = _tmp122 + _tmp146;
  const Scalar _tmp150 = -_tmp141 - _tmp142 + _tmp143;
  const Scalar _tmp151 = _tmp135 + _tmp136 + _tmp137;
  const Scalar _tmp152 = -_tmp129 * _tmp78 - _tmp134 * _tmp75 - _tmp149 * _tmp45 + _tmp149 * _y[6] -
                         _tmp150 * _tmp54 + _tmp150 * _y[5] - _tmp151 * _tmp63 + _tmp151 * _y[4] -
                         _tmp76 * _tmp81;
  const Scalar _tmp153 =
      _tmp139 * sqrt_info(0, 0) + _tmp148 * sqrt_info(0, 1) + _tmp152 * sqrt_info(0, 2);
  const Scalar _tmp154 = -_tmp110;
  const Scalar _tmp155 = _tmp111 + _tmp117 + _tmp154;
  const Scalar _tmp156 = _tmp155 * _tmp27;
  const Scalar _tmp157 = -_tmp95;
  const Scalar _tmp158 = _tmp100 + _tmp157 + _tmp93;
  const Scalar _tmp159 = _tmp102 * _tmp158;
  const Scalar _tmp160 = -_tmp104;
  const Scalar _tmp161 = _tmp106 + _tmp107;
  const Scalar _tmp162 = _tmp105 + _tmp160 + _tmp161;
  const Scalar _tmp163 = -_tmp84;
  const Scalar _tmp164 = _tmp163 + _tmp83;
  const Scalar _tmp165 = _tmp164 + _tmp86 + _tmp89;
  const Scalar _tmp166 = _tmp162 * _tmp69 + _tmp165 * _tmp20;
  const Scalar _tmp167 = -_tmp156 - _tmp159 + _tmp166;
  const Scalar _tmp168 = -_tmp121 * _tmp165;
  const Scalar _tmp169 = -_tmp145 * _tmp158;
  const Scalar _tmp170 = _tmp168 + _tmp169;
  const Scalar _tmp171 = -_tmp31;
  const Scalar _tmp172 = _tmp39 * _x_T_s[4] + _x_T_s[5] * (_tmp171 + _tmp33);
  const Scalar _tmp173 = _tmp155 * _tmp69;
  const Scalar _tmp174 = _tmp102 * _tmp165;
  const Scalar _tmp175 = _tmp158 * _tmp20 + _tmp162 * _tmp27;
  const Scalar _tmp176 = _tmp173 + _tmp174 + _tmp175;
  const Scalar _tmp177 = -_tmp51;
  const Scalar _tmp178 =
      _x_T_s[4] * (_tmp126 + _tmp131 + _tmp177 + _tmp42) + _x_T_s[5] * (_tmp59 + _tmp80);
  const Scalar _tmp179 = _tmp127 + _tmp42;
  const Scalar _tmp180 = _tmp60 * _x_T_s[4] + _x_T_s[5] * (_tmp132 + _tmp179);
  const Scalar _tmp181 = -_tmp167 * _tmp54 + _tmp167 * _y[5] - _tmp170 * _tmp45 + _tmp170 * _y[6] -
                         _tmp172 * _tmp75 - _tmp176 * _tmp63 + _tmp176 * _y[4] - _tmp178 * _tmp78 -
                         _tmp180 * _tmp76;
  const Scalar _tmp182 = _tmp156 + _tmp159 + _tmp166;
  const Scalar _tmp183 = _tmp155 * _tmp20;
  const Scalar _tmp184 = _tmp102 * _tmp162;
  const Scalar _tmp185 = _tmp158 * _tmp69 + _tmp165 * _tmp27;
  const Scalar _tmp186 = -_tmp183 - _tmp184 + _tmp185;
  const Scalar _tmp187 = -_tmp123 * _tmp162;
  const Scalar _tmp188 = _tmp169 + _tmp187;
  const Scalar _tmp189 = -_tmp14 * _tmp178 - _tmp172 * _tmp29 - _tmp180 * _tmp58 -
                         _tmp182 * _tmp45 + _tmp182 * _y[6] - _tmp186 * _tmp63 + _tmp186 * _y[4] -
                         _tmp188 * _tmp54 + _tmp188 * _y[5];
  const Scalar _tmp190 = _tmp168 + _tmp187;
  const Scalar _tmp191 = _tmp183 + _tmp184 + _tmp185;
  const Scalar _tmp192 = -_tmp173 - _tmp174 + _tmp175;
  const Scalar _tmp193 = -_tmp172 * _tmp72 - _tmp178 * _tmp73 - _tmp180 * _tmp67 -
                         _tmp190 * _tmp63 + _tmp190 * _y[4] - _tmp191 * _tmp54 + _tmp191 * _y[5] -
                         _tmp192 * _tmp45 + _tmp192 * _y[6];
  const Scalar _tmp194 =
      _tmp181 * sqrt_info(0, 2) + _tmp189 * sqrt_info(0, 1) + _tmp193 * sqrt_info(0, 0);
  const Scalar _tmp195 = 2 * _x[1];
  const Scalar _tmp196 = _tmp48 * _x_T_s[6] + _x_T_s[4] * (_tmp133 + _tmp36);
  const Scalar _tmp197 = _tmp97 + _tmp98;
  const Scalar _tmp198 = _tmp157 + _tmp94;
  const Scalar _tmp199 = _tmp197 + _tmp198;
  const Scalar _tmp200 = _tmp199 * _tmp27;
  const Scalar _tmp201 = _tmp114 + _tmp115;
  const Scalar _tmp202 = _tmp112 + _tmp154;
  const Scalar _tmp203 = _tmp201 + _tmp202;
  const Scalar _tmp204 = _tmp102 * _tmp203;
  const Scalar _tmp205 = _tmp164 + _tmp87 + _tmp88;
  const Scalar _tmp206 = -_tmp105;
  const Scalar _tmp207 = _tmp104 + _tmp161 + _tmp206;
  const Scalar _tmp208 = _tmp20 * _tmp207 + _tmp205 * _tmp69;
  const Scalar _tmp209 = _tmp200 + _tmp204 + _tmp208;
  const Scalar _tmp210 = _tmp199 * _tmp20;
  const Scalar _tmp211 = _tmp102 * _tmp205;
  const Scalar _tmp212 = _tmp203 * _tmp69 + _tmp207 * _tmp27;
  const Scalar _tmp213 = -_tmp210 - _tmp211 + _tmp212;
  const Scalar _tmp214 = _tmp177 + _tmp40;
  const Scalar _tmp215 = _x_T_s[4] * (_tmp171 + _tmp34) + _x_T_s[6] * (_tmp130 + _tmp214);
  const Scalar _tmp216 = _tmp35 * _x_T_s[6] + _x_T_s[4] * (_tmp179 + _tmp214);
  const Scalar _tmp217 = -_tmp123 * _tmp205;
  const Scalar _tmp218 = -_tmp145 * _tmp203;
  const Scalar _tmp219 = _tmp217 + _tmp218;
  const Scalar _tmp220 = -_tmp14 * _tmp196 - _tmp209 * _tmp45 + _tmp209 * _y[6] - _tmp213 * _tmp63 +
                         _tmp213 * _y[4] - _tmp215 * _tmp58 - _tmp216 * _tmp29 - _tmp219 * _tmp54 +
                         _tmp219 * _y[5];
  const Scalar _tmp221 = -_tmp121 * _tmp207;
  const Scalar _tmp222 = _tmp217 + _tmp221;
  const Scalar _tmp223 = _tmp199 * _tmp69;
  const Scalar _tmp224 = _tmp102 * _tmp207;
  const Scalar _tmp225 = _tmp20 * _tmp203 + _tmp205 * _tmp27;
  const Scalar _tmp226 = -_tmp223 - _tmp224 + _tmp225;
  const Scalar _tmp227 = _tmp210 + _tmp211 + _tmp212;
  const Scalar _tmp228 = -_tmp196 * _tmp73 - _tmp215 * _tmp67 - _tmp216 * _tmp72 -
                         _tmp222 * _tmp63 + _tmp222 * _y[4] - _tmp226 * _tmp45 + _tmp226 * _y[6] -
                         _tmp227 * _tmp54 + _tmp227 * _y[5];
  const Scalar _tmp229 = _tmp218 + _tmp221;
  const Scalar _tmp230 = -_tmp200 - _tmp204 + _tmp208;
  const Scalar _tmp231 = _tmp223 + _tmp224 + _tmp225;
  const Scalar _tmp232 = -_tmp196 * _tmp78 - _tmp215 * _tmp76 - _tmp216 * _tmp75 -
                         _tmp229 * _tmp45 + _tmp229 * _y[6] - _tmp230 * _tmp54 + _tmp230 * _y[5] -
                         _tmp231 * _tmp63 + _tmp231 * _y[4];
  const Scalar _tmp233 =
      _tmp220 * sqrt_info(0, 1) + _tmp228 * sqrt_info(0, 0) + _tmp232 * sqrt_info(0, 2);
  const Scalar _tmp234 =
      _tmp139 * sqrt_info(1, 0) + _tmp148 * sqrt_info(1, 1) + _tmp152 * sqrt_info(1, 2);
  const Scalar _tmp235 =
      _tmp181 * sqrt_info(1, 2) + _tmp189 * sqrt_info(1, 1) + _tmp193 * sqrt_info(1, 0);
  const Scalar _tmp236 =
      _tmp220 * sqrt_info(1, 1) + _tmp228 * sqrt_info(1, 0) + _tmp232 * sqrt_info(1, 2);
  const Scalar _tmp237 =
      _tmp139 * sqrt_info(2, 0) + _tmp148 * sqrt_info(2, 1) + _tmp152 * sqrt_info(2, 2);
  const Scalar _tmp238 =
      _tmp181 * sqrt_info(2, 2) + _tmp189 * sqrt_info(2, 1) + _tmp193 * sqrt_info(2, 0);
  const Scalar _tmp239 =
      _tmp220 * sqrt_info(2, 1) + _tmp228 * sqrt_info(2, 0) + _tmp232 * sqrt_info(2, 2);
  const Scalar _tmp240 = -_tmp55;
  const Scalar _tmp241 = _tmp240 + _tmp56;
  const Scalar _tmp242 = -_tmp68;
  const Scalar _tmp243 = _tmp242 + _tmp71;
  const Scalar _tmp244 = _tmp5 + _tmp65 - 1;
  const Scalar _tmp245 = _tmp240 + _tmp57;
  const Scalar _tmp246 = -_tmp21;
  const Scalar _tmp247 = _tmp246 + _tmp28;
  const Scalar _tmp248 = _tmp12 - 1;
  const Scalar _tmp249 = _tmp248 + _tmp5;
  const Scalar _tmp250 = _tmp246 + _tmp77;
  const Scalar _tmp251 = _tmp242 + _tmp70;
  const Scalar _tmp252 = _tmp248 + _tmp65;
  const Scalar _tmp253 = _tmp113 + _tmp116 + _tmp202;
  const Scalar _tmp254 = _tmp253 * _tmp27;
  const Scalar _tmp255 = _tmp197 + _tmp93 + _tmp95;
  const Scalar _tmp256 = _tmp102 * _tmp255;
  const Scalar _tmp257 = _tmp108 + _tmp160 + _tmp206;
  const Scalar _tmp258 = _tmp257 * _tmp69;
  const Scalar _tmp259 = _tmp163 + _tmp82 + _tmp90;
  const Scalar _tmp260 = _tmp20 * _tmp259;
  const Scalar _tmp261 = _tmp258 + _tmp260;
  const Scalar _tmp262 = _tmp254 + _tmp256 + _tmp261;
  const Scalar _tmp263 = -_tmp123 * _tmp257;
  const Scalar _tmp264 = -_tmp145 * _tmp255;
  const Scalar _tmp265 = _tmp263 + _tmp264;
  const Scalar _tmp266 = _tmp255 * _tmp69;
  const Scalar _tmp267 = _tmp20 * _tmp253;
  const Scalar _tmp268 = _tmp259 * _tmp27;
  const Scalar _tmp269 = _tmp102 * _tmp257;
  const Scalar _tmp270 = -_tmp269;
  const Scalar _tmp271 = _tmp266 - _tmp267 + _tmp268 + _tmp270;
  const Scalar _tmp272 = -_tmp262 * _tmp45 + _tmp262 * _y[6] - _tmp265 * _tmp54 + _tmp265 * _y[5] -
                         _tmp271 * _tmp63 + _tmp271 * _y[4];
  const Scalar _tmp273 = _tmp19 * _tmp259;
  const Scalar _tmp274 = -4 * _tmp273;
  const Scalar _tmp275 = _tmp263 + _tmp274;
  const Scalar _tmp276 = _tmp268 + _tmp269;
  const Scalar _tmp277 = _tmp266 + _tmp267 + _tmp276;
  const Scalar _tmp278 = _tmp253 * _tmp69;
  const Scalar _tmp279 = _tmp20 * _tmp255;
  const Scalar _tmp280 = _tmp257 * _tmp27;
  const Scalar _tmp281 = _tmp102 * _tmp259;
  const Scalar _tmp282 = -_tmp278 + _tmp279 + _tmp280 - _tmp281;
  const Scalar _tmp283 = -_tmp275 * _tmp63 + _tmp275 * _y[4] - _tmp277 * _tmp54 + _tmp277 * _y[5] -
                         _tmp282 * _tmp45 + _tmp282 * _y[6];
  const Scalar _tmp284 = -_tmp254 - _tmp256 + _tmp261;
  const Scalar _tmp285 = _tmp264 + _tmp274;
  const Scalar _tmp286 = _tmp278 + _tmp280;
  const Scalar _tmp287 = _tmp279 + _tmp281 + _tmp286;
  const Scalar _tmp288 = -_tmp284 * _tmp54 + _tmp284 * _y[5] - _tmp285 * _tmp45 + _tmp285 * _y[6] -
                         _tmp287 * _tmp63 + _tmp287 * _y[4];
  const Scalar _tmp289 =
      _tmp272 * sqrt_info(0, 1) + _tmp283 * sqrt_info(0, 0) + _tmp288 * sqrt_info(0, 2);
  const Scalar _tmp290 = 2 * _tmp289;
  const Scalar _tmp291 = _tmp198 + _tmp96 + _tmp99;
  const Scalar _tmp292 = _tmp102 * _tmp291;
  const Scalar _tmp293 = _tmp110 + _tmp111 + _tmp201;
  const Scalar _tmp294 = _tmp258 + _tmp27 * _tmp293;
  const Scalar _tmp295 = -_tmp260 - _tmp292 + _tmp294;
  const Scalar _tmp296 = _tmp291 * _tmp69;
  const Scalar _tmp297 = _tmp20 * _tmp293 + _tmp296;
  const Scalar _tmp298 = _tmp276 + _tmp297;
  const Scalar _tmp299 = -_tmp123 * _tmp291;
  const Scalar _tmp300 = -_tmp145 * _tmp257;
  const Scalar _tmp301 = _tmp299 + _tmp300;
  const Scalar _tmp302 = -_tmp295 * _tmp63 + _tmp295 * _y[4] - _tmp298 * _tmp45 + _tmp298 * _y[6] -
                         _tmp301 * _tmp54 + _tmp301 * _y[5];
  const Scalar _tmp303 = _tmp260 + _tmp292 + _tmp294;
  const Scalar _tmp304 = -_tmp121 * _tmp293;
  const Scalar _tmp305 = _tmp299 + _tmp304;
  const Scalar _tmp306 = 2 * _tmp273;
  const Scalar _tmp307 = _tmp102 * _tmp293;
  const Scalar _tmp308 = _tmp20 * _tmp257;
  const Scalar _tmp309 = _tmp27 * _tmp291;
  const Scalar _tmp310 = _tmp308 + _tmp309;
  const Scalar _tmp311 = -_tmp306 - _tmp307 + _tmp310;
  const Scalar _tmp312 = -_tmp303 * _tmp54 + _tmp303 * _y[5] - _tmp305 * _tmp63 + _tmp305 * _y[4] -
                         _tmp311 * _tmp45 + _tmp311 * _y[6];
  const Scalar _tmp313 = _tmp300 + _tmp304;
  const Scalar _tmp314 = -_tmp268 + _tmp270 + _tmp297;
  const Scalar _tmp315 = _tmp306 + _tmp307 + _tmp310;
  const Scalar _tmp316 = -_tmp313 * _tmp45 + _tmp313 * _y[6] - _tmp314 * _tmp54 + _tmp314 * _y[5] -
                         _tmp315 * _tmp63 + _tmp315 * _y[4];
  const Scalar _tmp317 =
      _tmp302 * sqrt_info(0, 1) + _tmp312 * sqrt_info(0, 0) + _tmp316 * sqrt_info(0, 2);
  const Scalar _tmp318 = 2 * _x_T_s[3];
  const Scalar _tmp319 = -_tmp121 * _tmp257;
  const Scalar _tmp320 = -_tmp145 * _tmp253;
  const Scalar _tmp321 = _tmp319 + _tmp320;
  const Scalar _tmp322 = _tmp85 + _tmp86 + _tmp88;
  const Scalar _tmp323 = _tmp267 + _tmp27 * _tmp322;
  const Scalar _tmp324 = _tmp269 + _tmp296 + _tmp323;
  const Scalar _tmp325 = _tmp102 * _tmp253;
  const Scalar _tmp326 = _tmp308 + _tmp322 * _tmp69;
  const Scalar _tmp327 = -_tmp309 - _tmp325 + _tmp326;
  const Scalar _tmp328 = -_tmp321 * _tmp45 + _tmp321 * _y[6] - _tmp324 * _tmp63 + _tmp324 * _y[4] -
                         _tmp327 * _tmp54 + _tmp327 * _y[5];
  const Scalar _tmp329 = -_tmp123 * _tmp322;
  const Scalar _tmp330 = _tmp320 + _tmp329;
  const Scalar _tmp331 = _tmp20 * _tmp291;
  const Scalar _tmp332 = _tmp102 * _tmp322;
  const Scalar _tmp333 = _tmp286 - _tmp331 - _tmp332;
  const Scalar _tmp334 = _tmp309 + _tmp325 + _tmp326;
  const Scalar _tmp335 = -_tmp330 * _tmp54 + _tmp330 * _y[5] - _tmp333 * _tmp63 + _tmp333 * _y[4] -
                         _tmp334 * _tmp45 + _tmp334 * _y[6];
  const Scalar _tmp336 = _tmp319 + _tmp329;
  const Scalar _tmp337 = _tmp270 - _tmp296 + _tmp323;
  const Scalar _tmp338 = _tmp286 + _tmp331 + _tmp332;
  const Scalar _tmp339 = -_tmp336 * _tmp63 + _tmp336 * _y[4] - _tmp337 * _tmp45 + _tmp337 * _y[6] -
                         _tmp338 * _tmp54 + _tmp338 * _y[5];
  const Scalar _tmp340 =
      _tmp328 * sqrt_info(0, 2) + _tmp335 * sqrt_info(0, 1) + _tmp339 * sqrt_info(0, 0);
  const Scalar _tmp341 = 2 * _x_T_s[2];
  const Scalar _tmp342 =
      _tmp272 * sqrt_info(1, 1) + _tmp283 * sqrt_info(1, 0) + _tmp288 * sqrt_info(1, 2);
  const Scalar _tmp343 = 2 * _tmp342;
  const Scalar _tmp344 =
      _tmp302 * sqrt_info(1, 1) + _tmp312 * sqrt_info(1, 0) + _tmp316 * sqrt_info(1, 2);
  const Scalar _tmp345 =
      _tmp328 * sqrt_info(1, 2) + _tmp335 * sqrt_info(1, 1) + _tmp339 * sqrt_info(1, 0);
  const Scalar _tmp346 =
      _tmp272 * sqrt_info(2, 1) + _tmp283 * sqrt_info(2, 0) + _tmp288 * sqrt_info(2, 2);
  const Scalar _tmp347 = 2 * _x_T_s[1];
  const Scalar _tmp348 =
      _tmp302 * sqrt_info(2, 1) + _tmp312 * sqrt_info(2, 0) + _tmp316 * sqrt_info(2, 2);
  const Scalar _tmp349 =
      _tmp328 * sqrt_info(2, 2) + _tmp335 * sqrt_info(2, 1) + _tmp339 * sqrt_info(2, 0);
  const Scalar _tmp350 = 2 * _x_T_s[0];
  const Scalar _tmp351 = -_tmp14 * _tmp48 - _tmp29 * _tmp35 - _tmp58 * _tmp62;
  const Scalar _tmp352 = -_tmp35 * _tmp72 - _tmp48 * _tmp73 - _tmp62 * _tmp67;
  const Scalar _tmp353 = -_tmp35 * _tmp75 - _tmp48 * _tmp78 - _tmp62 * _tmp76;
  const Scalar _tmp354 = -_tmp39 * _tmp75 - _tmp53 * _tmp78 - _tmp60 * _tmp76;
  const Scalar _tmp355 = -_tmp14 * _tmp53 - _tmp29 * _tmp39 - _tmp58 * _tmp60;
  const Scalar _tmp356 = -_tmp39 * _tmp72 - _tmp53 * _tmp73 - _tmp60 * _tmp67;
  const Scalar _tmp357 = -_tmp14 * _tmp50 - _tmp29 * _tmp44 - _tmp58 * _tmp61;
  const Scalar _tmp358 = -_tmp44 * _tmp72 - _tmp50 * _tmp73 - _tmp61 * _tmp67;
  const Scalar _tmp359 = -_tmp44 * _tmp75 - _tmp50 * _tmp78 - _tmp61 * _tmp76;

  // Output terms (4)
  Eigen::Matrix<Scalar, 3, 1> _res;

  _res(0, 0) = _tmp64 * sqrt_info(0, 1) + _tmp74 * sqrt_info(0, 0) + _tmp79 * sqrt_info(0, 2);
  _res(1, 0) = _tmp64 * sqrt_info(1, 1) + _tmp74 * sqrt_info(1, 0) + _tmp79 * sqrt_info(1, 2);
  _res(2, 0) = _tmp64 * sqrt_info(2, 1) + _tmp74 * sqrt_info(2, 0) + _tmp79 * sqrt_info(2, 2);

  if (res_D_x != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 7, Eigen::RowMajor>> _res_D_x{res_D_x};

    _res_D_x(0, 0) = _tmp153 * _tmp32 + _tmp194 * _tmp195 - _tmp233 * _tmp37;
    _res_D_x(1, 0) = _tmp195 * _tmp235 + _tmp234 * _tmp32 - _tmp236 * _tmp37;
    _res_D_x(2, 0) = _tmp195 * _tmp238 + _tmp237 * _tmp32 - _tmp239 * _tmp37;
    _res_D_x(0, 1) = _tmp153 * _tmp37 - _tmp194 * _tmp30 + _tmp233 * _tmp32;
    _res_D_x(1, 1) = _tmp234 * _tmp37 - _tmp235 * _tmp30 + _tmp236 * _tmp32;
    _res_D_x(2, 1) = _tmp237 * _tmp37 - _tmp238 * _tmp30 + _tmp239 * _tmp32;
    _res_D_x(0, 2) = -_tmp153 * _tmp195 + _tmp194 * _tmp32 + _tmp233 * _tmp30;
    _res_D_x(1, 2) = -_tmp195 * _tmp234 + _tmp235 * _tmp32 + _tmp236 * _tmp30;
    _res_D_x(2, 2) = -_tmp195 * _tmp237 + _tmp238 * _tmp32 + _tmp239 * _tmp30;
    _res_D_x(0, 3) = -_tmp153 * _tmp30 - _tmp194 * _tmp37 - _tmp195 * _tmp233;
    _res_D_x(1, 3) = -_tmp195 * _tmp236 - _tmp234 * _tmp30 - _tmp235 * _tmp37;
    _res_D_x(2, 3) = -_tmp195 * _tmp239 - _tmp237 * _tmp30 - _tmp238 * _tmp37;
    _res_D_x(0, 4) =
        _tmp241 * sqrt_info(0, 1) + _tmp243 * sqrt_info(0, 2) + _tmp244 * sqrt_info(0, 0);
    _res_D_x(1, 4) =
        _tmp241 * sqrt_info(1, 1) + _tmp243 * sqrt_info(1, 2) + _tmp244 * sqrt_info(1, 0);
    _res_D_x(2, 4) =
        _tmp241 * sqrt_info(2, 1) + _tmp243 * sqrt_info(2, 2) + _tmp244 * sqrt_info(2, 0);
    _res_D_x(0, 5) =
        _tmp245 * sqrt_info(0, 0) + _tmp247 * sqrt_info(0, 2) + _tmp249 * sqrt_info(0, 1);
    _res_D_x(1, 5) =
        _tmp245 * sqrt_info(1, 0) + _tmp247 * sqrt_info(1, 2) + _tmp249 * sqrt_info(1, 1);
    _res_D_x(2, 5) =
        _tmp245 * sqrt_info(2, 0) + _tmp247 * sqrt_info(2, 2) + _tmp249 * sqrt_info(2, 1);
    _res_D_x(0, 6) =
        _tmp250 * sqrt_info(0, 1) + _tmp251 * sqrt_info(0, 0) + _tmp252 * sqrt_info(0, 2);
    _res_D_x(1, 6) =
        _tmp250 * sqrt_info(1, 1) + _tmp251 * sqrt_info(1, 0) + _tmp252 * sqrt_info(1, 2);
    _res_D_x(2, 6) =
        _tmp250 * sqrt_info(2, 1) + _tmp251 * sqrt_info(2, 0) + _tmp252 * sqrt_info(2, 2);
  }

  if (res_D_x_T_s != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 7, Eigen::RowMajor>> _res_D_x_T_s{res_D_x_T_s};

    _res_D_x_T_s(0, 0) = _tmp290 * _x_T_s[1] + _tmp317 * _tmp318 - _tmp340 * _tmp341;
    _res_D_x_T_s(1, 0) = _tmp318 * _tmp344 - _tmp341 * _tmp345 + _tmp343 * _x_T_s[1];
    _res_D_x_T_s(2, 0) = _tmp318 * _tmp348 - _tmp341 * _tmp349 + _tmp346 * _tmp347;
    _res_D_x_T_s(0, 1) = -_tmp289 * _tmp350 + _tmp317 * _tmp341 + _tmp318 * _tmp340;
    _res_D_x_T_s(1, 1) = _tmp318 * _tmp345 + _tmp341 * _tmp344 - _tmp342 * _tmp350;
    _res_D_x_T_s(2, 1) = _tmp318 * _tmp349 + _tmp341 * _tmp348 - _tmp346 * _tmp350;
    _res_D_x_T_s(0, 2) = _tmp290 * _x_T_s[3] - _tmp317 * _tmp347 + _tmp340 * _tmp350;
    _res_D_x_T_s(1, 2) = _tmp343 * _x_T_s[3] - _tmp344 * _tmp347 + _tmp345 * _tmp350;
    _res_D_x_T_s(2, 2) = _tmp318 * _tmp346 - _tmp347 * _tmp348 + _tmp349 * _tmp350;
    _res_D_x_T_s(0, 3) = -_tmp289 * _tmp341 - _tmp317 * _tmp350 - _tmp340 * _tmp347;
    _res_D_x_T_s(1, 3) = -_tmp341 * _tmp342 - _tmp344 * _tmp350 - _tmp345 * _tmp347;
    _res_D_x_T_s(2, 3) = -_tmp341 * _tmp346 - _tmp347 * _tmp349 - _tmp348 * _tmp350;
    _res_D_x_T_s(0, 4) =
        _tmp351 * sqrt_info(0, 1) + _tmp352 * sqrt_info(0, 0) + _tmp353 * sqrt_info(0, 2);
    _res_D_x_T_s(1, 4) =
        _tmp351 * sqrt_info(1, 1) + _tmp352 * sqrt_info(1, 0) + _tmp353 * sqrt_info(1, 2);
    _res_D_x_T_s(2, 4) =
        _tmp351 * sqrt_info(2, 1) + _tmp352 * sqrt_info(2, 0) + _tmp353 * sqrt_info(2, 2);
    _res_D_x_T_s(0, 5) =
        _tmp354 * sqrt_info(0, 2) + _tmp355 * sqrt_info(0, 1) + _tmp356 * sqrt_info(0, 0);
    _res_D_x_T_s(1, 5) =
        _tmp354 * sqrt_info(1, 2) + _tmp355 * sqrt_info(1, 1) + _tmp356 * sqrt_info(1, 0);
    _res_D_x_T_s(2, 5) =
        _tmp354 * sqrt_info(2, 2) + _tmp355 * sqrt_info(2, 1) + _tmp356 * sqrt_info(2, 0);
    _res_D_x_T_s(0, 6) =
        _tmp357 * sqrt_info(0, 1) + _tmp358 * sqrt_info(0, 0) + _tmp359 * sqrt_info(0, 2);
    _res_D_x_T_s(1, 6) =
        _tmp357 * sqrt_info(1, 1) + _tmp358 * sqrt_info(1, 0) + _tmp359 * sqrt_info(1, 2);
    _res_D_x_T_s(2, 6) =
        _tmp357 * sqrt_info(2, 1) + _tmp358 * sqrt_info(2, 0) + _tmp359 * sqrt_info(2, 2);
  }

  if (res_D_y != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 7, Eigen::RowMajor>> _res_D_y{res_D_y};

    _res_D_y.setZero();

    _res_D_y(0, 4) = _tmp58 * sqrt_info(0, 1) + _tmp67 * sqrt_info(0, 0) + _tmp76 * sqrt_info(0, 2);
    _res_D_y(1, 4) = _tmp58 * sqrt_info(1, 1) + _tmp67 * sqrt_info(1, 0) + _tmp76 * sqrt_info(1, 2);
    _res_D_y(2, 4) = _tmp58 * sqrt_info(2, 1) + _tmp67 * sqrt_info(2, 0) + _tmp76 * sqrt_info(2, 2);
    _res_D_y(0, 5) = _tmp14 * sqrt_info(0, 1) + _tmp73 * sqrt_info(0, 0) + _tmp78 * sqrt_info(0, 2);
    _res_D_y(1, 5) = _tmp14 * sqrt_info(1, 1) + _tmp73 * sqrt_info(1, 0) + _tmp78 * sqrt_info(1, 2);
    _res_D_y(2, 5) = _tmp14 * sqrt_info(2, 1) + _tmp73 * sqrt_info(2, 0) + _tmp78 * sqrt_info(2, 2);
    _res_D_y(0, 6) = _tmp29 * sqrt_info(0, 1) + _tmp72 * sqrt_info(0, 0) + _tmp75 * sqrt_info(0, 2);
    _res_D_y(1, 6) = _tmp29 * sqrt_info(1, 1) + _tmp72 * sqrt_info(1, 0) + _tmp75 * sqrt_info(1, 2);
    _res_D_y(2, 6) = _tmp29 * sqrt_info(2, 1) + _tmp72 * sqrt_info(2, 0) + _tmp75 * sqrt_info(2, 2);
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_ceres
