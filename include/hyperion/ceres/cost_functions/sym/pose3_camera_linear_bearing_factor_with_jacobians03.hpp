// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/linear_camera_cal.h>
#include <sym/pose3.h>

namespace sym_ceres {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: pose3_camera_linear_bearing_factor
 *
 * Args:
 *     w_T_b: Pose3
 *     b_T_c: Pose3
 *     calibration: LinearCameraCal
 *     l_w: Matrix31
 *     pixel: Matrix21
 *     sqrt_info: Matrix11
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix11
 *     res_D_w_T_b: (1x7) jacobian (result_dim x storage_dim) of res (1) wrt arg w_T_b (7)
 * (row-major) res_D_l_w: (1x3) jacobian (result_dim x storage_dim) of res (1) wrt arg l_w (3)
 * (row-major)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 1, 1> Pose3CameraLinearBearingFactorWithJacobians03(
    const sym::Pose3<Scalar>& w_T_b, const sym::Pose3<Scalar>& b_T_c,
    const sym::LinearCameraCal<Scalar>& calibration, const Eigen::Matrix<Scalar, 3, 1>& l_w,
    const Eigen::Matrix<Scalar, 2, 1>& pixel, const Eigen::Matrix<Scalar, 1, 1>& sqrt_info,
    const Scalar epsilon, Scalar* const res_D_w_T_b = nullptr, Scalar* const res_D_l_w = nullptr) {
  // Total ops: 797

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _w_T_b = w_T_b.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _b_T_c = b_T_c.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _calibration = calibration.Data();

  // Intermediate terms (272)
  const Scalar _tmp0 = _b_T_c[1] * _w_T_b[2];
  const Scalar _tmp1 = _b_T_c[2] * _w_T_b[1];
  const Scalar _tmp2 = _b_T_c[3] * _w_T_b[0];
  const Scalar _tmp3 = _b_T_c[0] * _w_T_b[3];
  const Scalar _tmp4 = -_tmp0 + _tmp1 + _tmp2 + _tmp3;
  const Scalar _tmp5 = 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _b_T_c[1] * _w_T_b[3];
  const Scalar _tmp8 = _b_T_c[2] * _w_T_b[0];
  const Scalar _tmp9 = _b_T_c[3] * _w_T_b[1];
  const Scalar _tmp10 = _b_T_c[0] * _w_T_b[2];
  const Scalar _tmp11 = _tmp10 + _tmp7 - _tmp8 + _tmp9;
  const Scalar _tmp12 = 2 * std::pow(_tmp11, Scalar(2));
  const Scalar _tmp13 = 1 - _tmp12;
  const Scalar _tmp14 = _tmp13 + _tmp6;
  const Scalar _tmp15 = _b_T_c[1] * _w_T_b[0];
  const Scalar _tmp16 = _b_T_c[2] * _w_T_b[3];
  const Scalar _tmp17 = _b_T_c[3] * _w_T_b[2];
  const Scalar _tmp18 = _b_T_c[0] * _w_T_b[1];
  const Scalar _tmp19 = _tmp15 + _tmp16 + _tmp17 - _tmp18;
  const Scalar _tmp20 = 2 * _tmp4;
  const Scalar _tmp21 = _tmp19 * _tmp20;
  const Scalar _tmp22 = _b_T_c[1] * _w_T_b[1];
  const Scalar _tmp23 = _b_T_c[2] * _w_T_b[2];
  const Scalar _tmp24 = _b_T_c[0] * _w_T_b[0];
  const Scalar _tmp25 = _b_T_c[3] * _w_T_b[3];
  const Scalar _tmp26 = -_tmp22 - _tmp23 - _tmp24 + _tmp25;
  const Scalar _tmp27 = 2 * _tmp26;
  const Scalar _tmp28 = _tmp11 * _tmp27;
  const Scalar _tmp29 = _tmp21 + _tmp28;
  const Scalar _tmp30 = 2 * _tmp19;
  const Scalar _tmp31 = _tmp11 * _tmp30;
  const Scalar _tmp32 = _tmp20 * _tmp26;
  const Scalar _tmp33 = -_tmp32;
  const Scalar _tmp34 = _tmp31 + _tmp33;
  const Scalar _tmp35 = std::pow(_w_T_b[0], Scalar(2));
  const Scalar _tmp36 = -2 * _tmp35;
  const Scalar _tmp37 = std::pow(_w_T_b[2], Scalar(2));
  const Scalar _tmp38 = 1 - 2 * _tmp37;
  const Scalar _tmp39 = 2 * _w_T_b[0];
  const Scalar _tmp40 = _tmp39 * _w_T_b[1];
  const Scalar _tmp41 = 2 * _w_T_b[3];
  const Scalar _tmp42 = _tmp41 * _w_T_b[2];
  const Scalar _tmp43 = _tmp40 + _tmp42;
  const Scalar _tmp44 = _tmp39 * _w_T_b[3];
  const Scalar _tmp45 = -_tmp44;
  const Scalar _tmp46 = 2 * _w_T_b[2];
  const Scalar _tmp47 = _tmp46 * _w_T_b[1];
  const Scalar _tmp48 = _tmp45 + _tmp47;
  const Scalar _tmp49 =
      _b_T_c[4] * _tmp43 + _b_T_c[5] * (_tmp36 + _tmp38) + _b_T_c[6] * _tmp48 + _w_T_b[5];
  const Scalar _tmp50 = std::pow(_w_T_b[1], Scalar(2));
  const Scalar _tmp51 = -2 * _tmp50;
  const Scalar _tmp52 = -_tmp42;
  const Scalar _tmp53 = _tmp40 + _tmp52;
  const Scalar _tmp54 = _tmp39 * _w_T_b[2];
  const Scalar _tmp55 = _tmp41 * _w_T_b[1];
  const Scalar _tmp56 = _tmp54 + _tmp55;
  const Scalar _tmp57 =
      _b_T_c[4] * (_tmp38 + _tmp51) + _b_T_c[5] * _tmp53 + _b_T_c[6] * _tmp56 + _w_T_b[4];
  const Scalar _tmp58 = -_tmp55;
  const Scalar _tmp59 = _tmp54 + _tmp58;
  const Scalar _tmp60 = _tmp44 + _tmp47;
  const Scalar _tmp61 =
      _b_T_c[4] * _tmp59 + _b_T_c[5] * _tmp60 + _b_T_c[6] * (_tmp36 + _tmp51 + 1) + _w_T_b[6];
  const Scalar _tmp62 = -_tmp14 * _tmp61 + _tmp14 * l_w(2, 0) - _tmp29 * _tmp57 +
                        _tmp29 * l_w(0, 0) - _tmp34 * _tmp49 + _tmp34 * l_w(1, 0);
  const Scalar _tmp63 = (-_calibration[3] + pixel(1, 0)) / _calibration[1];
  const Scalar _tmp64 = 2 * std::pow(_tmp19, Scalar(2));
  const Scalar _tmp65 = -_tmp64;
  const Scalar _tmp66 = _tmp6 + _tmp65 + 1;
  const Scalar _tmp67 = _tmp11 * _tmp20;
  const Scalar _tmp68 = _tmp26 * _tmp30;
  const Scalar _tmp69 = -_tmp68;
  const Scalar _tmp70 = _tmp67 + _tmp69;
  const Scalar _tmp71 = _tmp31 + _tmp32;
  const Scalar _tmp72 = -_tmp49 * _tmp66 - _tmp57 * _tmp70 - _tmp61 * _tmp71 + _tmp66 * l_w(1, 0) +
                        _tmp70 * l_w(0, 0) + _tmp71 * l_w(2, 0);
  const Scalar _tmp73 = _tmp62 * _tmp63 - _tmp72;
  const Scalar _tmp74 = (-_calibration[2] + pixel(0, 0)) / _calibration[0];
  const Scalar _tmp75 = _tmp13 + _tmp65;
  const Scalar _tmp76 = -_tmp28;
  const Scalar _tmp77 = _tmp21 + _tmp76;
  const Scalar _tmp78 = _tmp67 + _tmp68;
  const Scalar _tmp79 = -_tmp49 * _tmp78 - _tmp57 * _tmp75 - _tmp61 * _tmp77 + _tmp75 * l_w(0, 0) +
                        _tmp77 * l_w(2, 0) + _tmp78 * l_w(1, 0);
  const Scalar _tmp80 = -_tmp62 * _tmp74 + _tmp79;
  const Scalar _tmp81 = -_tmp63 * _tmp79 + _tmp72 * _tmp74;
  const Scalar _tmp82 = std::pow(_tmp73, Scalar(2)) + std::pow(_tmp80, Scalar(2)) +
                        std::pow(_tmp81, Scalar(2)) + epsilon;
  const Scalar _tmp83 = std::sqrt(_tmp82);
  const Scalar _tmp84 = _tmp62 + _tmp63 * _tmp72 + _tmp74 * _tmp79;
  const Scalar _tmp85 = _tmp84 + epsilon * ((((_tmp84) > 0) - ((_tmp84) < 0)) + Scalar(0.5));
  const Scalar _tmp86 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp87 = -_tmp86;
  const Scalar _tmp88 = (Scalar(1) / Scalar(2)) * _tmp10;
  const Scalar _tmp89 = -Scalar(1) / Scalar(2) * _tmp8;
  const Scalar _tmp90 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp91 = _tmp89 - _tmp90;
  const Scalar _tmp92 = _tmp87 + _tmp88 + _tmp91;
  const Scalar _tmp93 = 2 * _tmp11;
  const Scalar _tmp94 = _tmp92 * _tmp93;
  const Scalar _tmp95 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp96 = (Scalar(1) / Scalar(2)) * _tmp24;
  const Scalar _tmp97 = (Scalar(1) / Scalar(2)) * _tmp23;
  const Scalar _tmp98 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp99 = _tmp97 + _tmp98;
  const Scalar _tmp100 = -_tmp95 + _tmp96 + _tmp99;
  const Scalar _tmp101 = _tmp100 * _tmp27;
  const Scalar _tmp102 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp103 = -_tmp102;
  const Scalar _tmp104 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp105 = -Scalar(1) / Scalar(2) * _tmp0;
  const Scalar _tmp106 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp107 = _tmp105 - _tmp106;
  const Scalar _tmp108 = _tmp103 + _tmp104 + _tmp107;
  const Scalar _tmp109 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp110 = -_tmp109;
  const Scalar _tmp111 = (Scalar(1) / Scalar(2)) * _tmp16;
  const Scalar _tmp112 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp113 = -_tmp112;
  const Scalar _tmp114 = -Scalar(1) / Scalar(2) * _tmp18;
  const Scalar _tmp115 = _tmp110 + _tmp111 + _tmp113 + _tmp114;
  const Scalar _tmp116 = _tmp108 * _tmp20 + _tmp115 * _tmp30;
  const Scalar _tmp117 = -_tmp101 + _tmp116 - _tmp94;
  const Scalar _tmp118 = 4 * _tmp11;
  const Scalar _tmp119 = -_tmp100 * _tmp118;
  const Scalar _tmp120 = 4 * _tmp19;
  const Scalar _tmp121 = -_tmp108 * _tmp120;
  const Scalar _tmp122 = _tmp119 + _tmp121;
  const Scalar _tmp123 = _tmp30 * _tmp92;
  const Scalar _tmp124 = _tmp108 * _tmp27;
  const Scalar _tmp125 = _tmp100 * _tmp20 + _tmp115 * _tmp93;
  const Scalar _tmp126 = _tmp123 + _tmp124 + _tmp125;
  const Scalar _tmp127 = -_tmp47;
  const Scalar _tmp128 = _b_T_c[4] * (_tmp127 + _tmp44) + _b_T_c[6] * _tmp43;
  const Scalar _tmp129 = -_tmp37;
  const Scalar _tmp130 = std::pow(_w_T_b[3], Scalar(2));
  const Scalar _tmp131 = -_tmp130;
  const Scalar _tmp132 = _b_T_c[4] * (_tmp129 + _tmp131 + _tmp35 + _tmp50) + _b_T_c[6] * _tmp59;
  const Scalar _tmp133 = _tmp129 + _tmp130;
  const Scalar _tmp134 = -_tmp50;
  const Scalar _tmp135 = _tmp134 + _tmp35;
  const Scalar _tmp136 = -_tmp54;
  const Scalar _tmp137 = _b_T_c[4] * (_tmp136 + _tmp58) + _b_T_c[6] * (_tmp133 + _tmp135);
  const Scalar _tmp138 = -_tmp117 * _tmp61 + _tmp117 * l_w(2, 0) - _tmp122 * _tmp57 +
                         _tmp122 * l_w(0, 0) - _tmp126 * _tmp49 + _tmp126 * l_w(1, 0) -
                         _tmp128 * _tmp78 - _tmp132 * _tmp77 - _tmp137 * _tmp75;
  const Scalar _tmp139 = 4 * _tmp4;
  const Scalar _tmp140 = -_tmp115 * _tmp139;
  const Scalar _tmp141 = _tmp121 + _tmp140;
  const Scalar _tmp142 = _tmp141 * _tmp49;
  const Scalar _tmp143 = _tmp20 * _tmp92;
  const Scalar _tmp144 = _tmp115 * _tmp27;
  const Scalar _tmp145 = _tmp100 * _tmp30 + _tmp108 * _tmp93;
  const Scalar _tmp146 = _tmp143 + _tmp144 + _tmp145;
  const Scalar _tmp147 = _tmp146 * _tmp61;
  const Scalar _tmp148 = _tmp146 * l_w(2, 0);
  const Scalar _tmp149 = -_tmp123 - _tmp124 + _tmp125;
  const Scalar _tmp150 = _tmp149 * l_w(0, 0);
  const Scalar _tmp151 = _tmp137 * _tmp70;
  const Scalar _tmp152 = _tmp141 * l_w(1, 0);
  const Scalar _tmp153 = _tmp132 * _tmp71;
  const Scalar _tmp154 = _tmp128 * _tmp66;
  const Scalar _tmp155 = _tmp149 * _tmp57;
  const Scalar _tmp156 =
      -_tmp142 - _tmp147 + _tmp148 + _tmp150 - _tmp151 + _tmp152 - _tmp153 - _tmp154 - _tmp155;
  const Scalar _tmp157 = 2 * _tmp81;
  const Scalar _tmp158 = _tmp119 + _tmp140;
  const Scalar _tmp159 = -_tmp143 - _tmp144 + _tmp145;
  const Scalar _tmp160 = _tmp101 + _tmp116 + _tmp94;
  const Scalar _tmp161 = -_tmp128 * _tmp34 - _tmp132 * _tmp14 - _tmp137 * _tmp29 -
                         _tmp158 * _tmp61 + _tmp158 * l_w(2, 0) - _tmp159 * _tmp49 +
                         _tmp159 * l_w(1, 0) - _tmp160 * _tmp57 + _tmp160 * l_w(0, 0);
  const Scalar _tmp162 = 2 * _tmp73;
  const Scalar _tmp163 = 2 * _tmp80;
  const Scalar _tmp164 = (Scalar(1) / Scalar(2)) / (_tmp83 * _tmp85);
  const Scalar _tmp165 = std::pow(_tmp85, Scalar(2));
  const Scalar _tmp166 = _tmp83 / _tmp165;
  const Scalar _tmp167 = _tmp165 * sqrt_info(0, 0) / (_tmp165 + _tmp82);
  const Scalar _tmp168 =
      _tmp167 * (_tmp164 * (_tmp157 * (-_tmp138 * _tmp63 + _tmp156 * _tmp74) +
                            _tmp162 * (_tmp142 + _tmp147 - _tmp148 - _tmp150 + _tmp151 - _tmp152 +
                                       _tmp153 + _tmp154 + _tmp155 + _tmp161 * _tmp63) +
                            _tmp163 * (_tmp138 - _tmp161 * _tmp74)) -
                 _tmp166 * (_tmp138 * _tmp74 + _tmp156 * _tmp63 + _tmp161));
  const Scalar _tmp169 = _b_T_c[4] * _tmp60 + _b_T_c[5] * (_tmp136 + _tmp55);
  const Scalar _tmp170 = -_tmp111 + _tmp114;
  const Scalar _tmp171 = _tmp109 + _tmp113 + _tmp170;
  const Scalar _tmp172 = _tmp171 * _tmp93;
  const Scalar _tmp173 = -_tmp104;
  const Scalar _tmp174 = _tmp103 + _tmp105 + _tmp106 + _tmp173;
  const Scalar _tmp175 = _tmp174 * _tmp27;
  const Scalar _tmp176 = _tmp95 + _tmp96 - _tmp97 + _tmp98;
  const Scalar _tmp177 = -_tmp88;
  const Scalar _tmp178 = _tmp177 + _tmp87 + _tmp89 + _tmp90;
  const Scalar _tmp179 = _tmp176 * _tmp20 + _tmp178 * _tmp30;
  const Scalar _tmp180 = _tmp172 + _tmp175 + _tmp179;
  const Scalar _tmp181 = -_tmp139 * _tmp178;
  const Scalar _tmp182 = -_tmp118 * _tmp174;
  const Scalar _tmp183 = _tmp181 + _tmp182;
  const Scalar _tmp184 = _tmp171 * _tmp20;
  const Scalar _tmp185 = _tmp178 * _tmp27;
  const Scalar _tmp186 = _tmp174 * _tmp30 + _tmp176 * _tmp93;
  const Scalar _tmp187 = -_tmp184 - _tmp185 + _tmp186;
  const Scalar _tmp188 = -_tmp35;
  const Scalar _tmp189 = _tmp188 + _tmp50;
  const Scalar _tmp190 = _tmp131 + _tmp37;
  const Scalar _tmp191 = _b_T_c[4] * _tmp53 + _b_T_c[5] * (_tmp189 + _tmp190);
  const Scalar _tmp192 = -_tmp40;
  const Scalar _tmp193 = _b_T_c[4] * (_tmp133 + _tmp189) + _b_T_c[5] * (_tmp192 + _tmp52);
  const Scalar _tmp194 = -_tmp14 * _tmp169 - _tmp180 * _tmp57 + _tmp180 * l_w(0, 0) -
                         _tmp183 * _tmp61 + _tmp183 * l_w(2, 0) - _tmp187 * _tmp49 +
                         _tmp187 * l_w(1, 0) - _tmp191 * _tmp29 - _tmp193 * _tmp34;
  const Scalar _tmp195 = -_tmp172 - _tmp175 + _tmp179;
  const Scalar _tmp196 = _tmp171 * _tmp30;
  const Scalar _tmp197 = _tmp176 * _tmp27;
  const Scalar _tmp198 = _tmp174 * _tmp20 + _tmp178 * _tmp93;
  const Scalar _tmp199 = _tmp196 + _tmp197 + _tmp198;
  const Scalar _tmp200 = -_tmp120 * _tmp176;
  const Scalar _tmp201 = _tmp182 + _tmp200;
  const Scalar _tmp202 = -_tmp169 * _tmp77 - _tmp191 * _tmp75 - _tmp193 * _tmp78 -
                         _tmp195 * _tmp61 + _tmp195 * l_w(2, 0) - _tmp199 * _tmp49 +
                         _tmp199 * l_w(1, 0) - _tmp201 * _tmp57 + _tmp201 * l_w(0, 0);
  const Scalar _tmp203 = _tmp181 + _tmp200;
  const Scalar _tmp204 = _tmp203 * _tmp49;
  const Scalar _tmp205 = _tmp184 + _tmp185 + _tmp186;
  const Scalar _tmp206 = _tmp205 * _tmp61;
  const Scalar _tmp207 = _tmp193 * _tmp66;
  const Scalar _tmp208 = -_tmp196 - _tmp197 + _tmp198;
  const Scalar _tmp209 = _tmp208 * l_w(0, 0);
  const Scalar _tmp210 = _tmp205 * l_w(2, 0);
  const Scalar _tmp211 = _tmp169 * _tmp71;
  const Scalar _tmp212 = _tmp191 * _tmp70;
  const Scalar _tmp213 = _tmp203 * l_w(1, 0);
  const Scalar _tmp214 = _tmp208 * _tmp57;
  const Scalar _tmp215 =
      -_tmp204 - _tmp206 - _tmp207 + _tmp209 + _tmp210 - _tmp211 - _tmp212 + _tmp213 - _tmp214;
  const Scalar _tmp216 =
      _tmp167 * (_tmp164 * (_tmp157 * (-_tmp202 * _tmp63 + _tmp215 * _tmp74) +
                            _tmp162 * (_tmp194 * _tmp63 + _tmp204 + _tmp206 + _tmp207 - _tmp209 -
                                       _tmp210 + _tmp211 + _tmp212 - _tmp213 + _tmp214) +
                            _tmp163 * (-_tmp194 * _tmp74 + _tmp202)) -
                 _tmp166 * (_tmp194 + _tmp202 * _tmp74 + _tmp215 * _tmp63));
  const Scalar _tmp217 = 2 * _w_T_b[1];
  const Scalar _tmp218 = _tmp95 - _tmp96 + _tmp99;
  const Scalar _tmp219 = -_tmp139 * _tmp218;
  const Scalar _tmp220 = _tmp110 + _tmp112 + _tmp170;
  const Scalar _tmp221 = -_tmp118 * _tmp220;
  const Scalar _tmp222 = _tmp219 + _tmp221;
  const Scalar _tmp223 = _tmp102 + _tmp107 + _tmp173;
  const Scalar _tmp224 = _tmp223 * _tmp93;
  const Scalar _tmp225 = _tmp220 * _tmp27;
  const Scalar _tmp226 = _tmp177 + _tmp86 + _tmp91;
  const Scalar _tmp227 = _tmp20 * _tmp226 + _tmp218 * _tmp30;
  const Scalar _tmp228 = _tmp224 + _tmp225 + _tmp227;
  const Scalar _tmp229 = _tmp20 * _tmp223;
  const Scalar _tmp230 = _tmp218 * _tmp27;
  const Scalar _tmp231 = _tmp220 * _tmp30 + _tmp226 * _tmp93;
  const Scalar _tmp232 = -_tmp229 - _tmp230 + _tmp231;
  const Scalar _tmp233 = _b_T_c[5] * _tmp56 + _b_T_c[6] * (_tmp192 + _tmp42);
  const Scalar _tmp234 =
      _b_T_c[5] * (_tmp130 + _tmp134 + _tmp188 + _tmp37) + _b_T_c[6] * (_tmp127 + _tmp45);
  const Scalar _tmp235 = _b_T_c[5] * _tmp48 + _b_T_c[6] * (_tmp135 + _tmp190);
  const Scalar _tmp236 = -_tmp14 * _tmp234 - _tmp222 * _tmp61 + _tmp222 * l_w(2, 0) -
                         _tmp228 * _tmp57 + _tmp228 * l_w(0, 0) - _tmp232 * _tmp49 +
                         _tmp232 * l_w(1, 0) - _tmp233 * _tmp29 - _tmp235 * _tmp34;
  const Scalar _tmp237 = -_tmp224 - _tmp225 + _tmp227;
  const Scalar _tmp238 = -_tmp120 * _tmp226;
  const Scalar _tmp239 = _tmp221 + _tmp238;
  const Scalar _tmp240 = _tmp223 * _tmp30;
  const Scalar _tmp241 = _tmp226 * _tmp27;
  const Scalar _tmp242 = _tmp20 * _tmp220 + _tmp218 * _tmp93;
  const Scalar _tmp243 = _tmp240 + _tmp241 + _tmp242;
  const Scalar _tmp244 = -_tmp233 * _tmp75 - _tmp234 * _tmp77 - _tmp235 * _tmp78 -
                         _tmp237 * _tmp61 + _tmp237 * l_w(2, 0) - _tmp239 * _tmp57 +
                         _tmp239 * l_w(0, 0) - _tmp243 * _tmp49 + _tmp243 * l_w(1, 0);
  const Scalar _tmp245 = _tmp229 + _tmp230 + _tmp231;
  const Scalar _tmp246 = _tmp245 * _tmp61;
  const Scalar _tmp247 = _tmp219 + _tmp238;
  const Scalar _tmp248 = _tmp247 * _tmp49;
  const Scalar _tmp249 = _tmp245 * l_w(2, 0);
  const Scalar _tmp250 = -_tmp240 - _tmp241 + _tmp242;
  const Scalar _tmp251 = _tmp250 * l_w(0, 0);
  const Scalar _tmp252 = _tmp233 * _tmp70;
  const Scalar _tmp253 = _tmp250 * _tmp57;
  const Scalar _tmp254 = _tmp247 * l_w(1, 0);
  const Scalar _tmp255 = _tmp235 * _tmp66;
  const Scalar _tmp256 = _tmp234 * _tmp71;
  const Scalar _tmp257 =
      -_tmp246 - _tmp248 + _tmp249 + _tmp251 - _tmp252 - _tmp253 + _tmp254 - _tmp255 - _tmp256;
  const Scalar _tmp258 =
      _tmp167 * (_tmp164 * (_tmp157 * (-_tmp244 * _tmp63 + _tmp257 * _tmp74) +
                            _tmp162 * (_tmp236 * _tmp63 + _tmp246 + _tmp248 - _tmp249 - _tmp251 +
                                       _tmp252 + _tmp253 - _tmp254 + _tmp255 + _tmp256) +
                            _tmp163 * (-_tmp236 * _tmp74 + _tmp244)) -
                 _tmp166 * (_tmp236 + _tmp244 * _tmp74 + _tmp257 * _tmp63));
  const Scalar _tmp259 = -_tmp21;
  const Scalar _tmp260 = _tmp259 + _tmp76;
  const Scalar _tmp261 = _tmp12 - 1;
  const Scalar _tmp262 = _tmp261 + _tmp64;
  const Scalar _tmp263 = -_tmp67;
  const Scalar _tmp264 = _tmp263 + _tmp68;
  const Scalar _tmp265 = -_tmp31;
  const Scalar _tmp266 = _tmp265 + _tmp32;
  const Scalar _tmp267 = _tmp263 + _tmp69;
  const Scalar _tmp268 = _tmp5 + _tmp64 - 1;
  const Scalar _tmp269 = _tmp259 + _tmp28;
  const Scalar _tmp270 = _tmp265 + _tmp33;
  const Scalar _tmp271 = _tmp261 + _tmp5;

  // Output terms (3)
  Eigen::Matrix<Scalar, 1, 1> _res;

  _res(0, 0) = sqrt_info(0, 0) * std::atan2(_tmp83, _tmp85);

  if (res_D_w_T_b != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 1, 7>> _res_D_w_T_b{res_D_w_T_b};

    _res_D_w_T_b(0, 0) = -_tmp168 * _tmp46 + _tmp216 * _tmp217 + _tmp258 * _tmp41;
    _res_D_w_T_b(0, 1) = _tmp168 * _tmp41 - _tmp216 * _tmp39 + _tmp258 * _tmp46;
    _res_D_w_T_b(0, 2) = _tmp168 * _tmp39 + _tmp216 * _tmp41 - _tmp217 * _tmp258;
    _res_D_w_T_b(0, 3) = -_tmp168 * _tmp217 - _tmp216 * _tmp46 - _tmp258 * _tmp39;
    _res_D_w_T_b(0, 4) = _tmp167 * (_tmp164 * (_tmp157 * (-_tmp262 * _tmp63 + _tmp264 * _tmp74) +
                                               _tmp162 * (_tmp260 * _tmp63 + _tmp70) +
                                               _tmp163 * (-_tmp260 * _tmp74 + _tmp262)) -
                                    _tmp166 * (_tmp260 + _tmp262 * _tmp74 + _tmp264 * _tmp63));
    _res_D_w_T_b(0, 5) = _tmp167 * (_tmp164 * (_tmp157 * (-_tmp267 * _tmp63 + _tmp268 * _tmp74) +
                                               _tmp162 * (_tmp266 * _tmp63 + _tmp66) +
                                               _tmp163 * (-_tmp266 * _tmp74 + _tmp267)) -
                                    _tmp166 * (_tmp266 + _tmp267 * _tmp74 + _tmp268 * _tmp63));
    _res_D_w_T_b(0, 6) = _tmp167 * (_tmp164 * (_tmp157 * (-_tmp269 * _tmp63 + _tmp270 * _tmp74) +
                                               _tmp162 * (_tmp271 * _tmp63 + _tmp71) +
                                               _tmp163 * (_tmp269 - _tmp271 * _tmp74)) -
                                    _tmp166 * (_tmp269 * _tmp74 + _tmp270 * _tmp63 + _tmp271));
  }

  if (res_D_l_w != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 1, 3>> _res_D_l_w{res_D_l_w};

    _res_D_l_w(0, 0) = _tmp167 * (_tmp164 * (_tmp157 * (-_tmp63 * _tmp75 + _tmp70 * _tmp74) +
                                             _tmp162 * (_tmp264 + _tmp29 * _tmp63) +
                                             _tmp163 * (-_tmp29 * _tmp74 + _tmp75)) -
                                  _tmp166 * (_tmp29 + _tmp63 * _tmp70 + _tmp74 * _tmp75));
    _res_D_l_w(0, 1) = _tmp167 * (_tmp164 * (_tmp157 * (-_tmp63 * _tmp78 + _tmp66 * _tmp74) +
                                             _tmp162 * (_tmp268 + _tmp34 * _tmp63) +
                                             _tmp163 * (-_tmp34 * _tmp74 + _tmp78)) -
                                  _tmp166 * (_tmp34 + _tmp63 * _tmp66 + _tmp74 * _tmp78));
    _res_D_l_w(0, 2) = _tmp167 * (_tmp164 * (_tmp157 * (-_tmp63 * _tmp77 + _tmp71 * _tmp74) +
                                             _tmp162 * (_tmp14 * _tmp63 + _tmp270) +
                                             _tmp163 * (-_tmp14 * _tmp74 + _tmp77)) -
                                  _tmp166 * (_tmp14 + _tmp63 * _tmp71 + _tmp74 * _tmp77));
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_ceres
