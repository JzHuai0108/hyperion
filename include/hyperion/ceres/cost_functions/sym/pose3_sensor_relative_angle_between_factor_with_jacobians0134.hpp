// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>

namespace sym_ceres {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: pose3_sensor_relative_angle_between_factor
 *
 * Args:
 *     x: Pose3
 *     x_T_a: Pose3
 *     a_d_b: Matrix11
 *     y: Pose3
 *     y_T_b: Pose3
 *     sqrt_info: Matrix11
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix11
 *     res_D_x: (1x7) jacobian (result_dim x storage_dim) of res (1) wrt arg x (7) (row-major)
 *     res_D_x_T_a: (1x7) jacobian (result_dim x storage_dim) of res (1) wrt arg x_T_a (7)
 * (row-major) res_D_y: (1x7) jacobian (result_dim x storage_dim) of res (1) wrt arg y (7)
 * (row-major) res_D_y_T_b: (1x7) jacobian (result_dim x storage_dim) of res (1) wrt arg y_T_b (7)
 * (row-major)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 1, 1> Pose3SensorRelativeAngleBetweenFactorWithJacobians0134(
    const sym::Pose3<Scalar>& x, const sym::Pose3<Scalar>& x_T_a,
    const Eigen::Matrix<Scalar, 1, 1>& a_d_b, const sym::Pose3<Scalar>& y,
    const sym::Pose3<Scalar>& y_T_b, const Eigen::Matrix<Scalar, 1, 1>& sqrt_info,
    const Scalar epsilon, Scalar* const res_D_x = nullptr, Scalar* const res_D_x_T_a = nullptr,
    Scalar* const res_D_y = nullptr, Scalar* const res_D_y_T_b = nullptr) {
  // Total ops: 901

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x = x.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x_T_a = x_T_a.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y = y.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y_T_b = y_T_b.Data();

  // Intermediate terms (257)
  const Scalar _tmp0 = _y[2] * _y_T_b[0];
  const Scalar _tmp1 = _y[0] * _y_T_b[2];
  const Scalar _tmp2 = _y[3] * _y_T_b[1];
  const Scalar _tmp3 = _y[1] * _y_T_b[3];
  const Scalar _tmp4 = _tmp0 - _tmp1 + _tmp2 + _tmp3;
  const Scalar _tmp5 = _x[3] * _x_T_a[0];
  const Scalar _tmp6 = _x[2] * _x_T_a[1];
  const Scalar _tmp7 = _x[0] * _x_T_a[3];
  const Scalar _tmp8 = _x[1] * _x_T_a[2];
  const Scalar _tmp9 = _tmp5 - _tmp6 + _tmp7 + _tmp8;
  const Scalar _tmp10 = _y[0] * _y_T_b[3];
  const Scalar _tmp11 = _y[2] * _y_T_b[1];
  const Scalar _tmp12 = _y[3] * _y_T_b[0];
  const Scalar _tmp13 = _y[1] * _y_T_b[2];
  const Scalar _tmp14 = _tmp10 - _tmp11 + _tmp12 + _tmp13;
  const Scalar _tmp15 = _x[3] * _x_T_a[1];
  const Scalar _tmp16 = _x[2] * _x_T_a[0];
  const Scalar _tmp17 = _x[0] * _x_T_a[2];
  const Scalar _tmp18 = _x[1] * _x_T_a[3];
  const Scalar _tmp19 = _tmp15 + _tmp16 - _tmp17 + _tmp18;
  const Scalar _tmp20 = _y[2] * _y_T_b[3];
  const Scalar _tmp21 = _y[0] * _y_T_b[1];
  const Scalar _tmp22 = _y[3] * _y_T_b[2];
  const Scalar _tmp23 = _y[1] * _y_T_b[0];
  const Scalar _tmp24 = _tmp20 + _tmp21 + _tmp22 - _tmp23;
  const Scalar _tmp25 = _x[3] * _x_T_a[3];
  const Scalar _tmp26 = _x[2] * _x_T_a[2];
  const Scalar _tmp27 = _x[0] * _x_T_a[0];
  const Scalar _tmp28 = _x[1] * _x_T_a[1];
  const Scalar _tmp29 = _tmp25 - _tmp26 - _tmp27 - _tmp28;
  const Scalar _tmp30 = _x[3] * _x_T_a[2];
  const Scalar _tmp31 = _x[2] * _x_T_a[3];
  const Scalar _tmp32 = _x[0] * _x_T_a[1];
  const Scalar _tmp33 = _x[1] * _x_T_a[0];
  const Scalar _tmp34 = _tmp30 + _tmp31 + _tmp32 - _tmp33;
  const Scalar _tmp35 = _y[3] * _y_T_b[3];
  const Scalar _tmp36 = _y[2] * _y_T_b[2];
  const Scalar _tmp37 = _y[0] * _y_T_b[0];
  const Scalar _tmp38 = _y[1] * _y_T_b[1];
  const Scalar _tmp39 = _tmp35 - _tmp36 - _tmp37 - _tmp38;
  const Scalar _tmp40 = _tmp14 * _tmp19 + _tmp24 * _tmp29 - _tmp34 * _tmp39 - _tmp4 * _tmp9;
  const Scalar _tmp41 = _tmp19 * _tmp4;
  const Scalar _tmp42 = _tmp24 * _tmp34;
  const Scalar _tmp43 = _tmp14 * _tmp9;
  const Scalar _tmp44 = -_tmp41 - _tmp42 - _tmp43;
  const Scalar _tmp45 = _tmp29 * _tmp39;
  const Scalar _tmp46 = std::pow(
      Scalar(2 * std::min<Scalar>(0, (((-_tmp44 + _tmp45) > 0) - ((-_tmp44 + _tmp45) < 0))) + 1),
      Scalar(2));
  const Scalar _tmp47 = 4 * _tmp46;
  const Scalar _tmp48 = std::pow(_tmp40, Scalar(2)) * _tmp47;
  const Scalar _tmp49 = 1 - epsilon;
  const Scalar _tmp50 = std::min<Scalar>(_tmp49, std::fabs(_tmp44 - _tmp45));
  const Scalar _tmp51 =
      std::pow(Scalar(std::acos(_tmp50)), Scalar(2)) / (1 - std::pow(_tmp50, Scalar(2)));
  const Scalar _tmp52 = -_tmp14 * _tmp34 - _tmp19 * _tmp39 + _tmp24 * _tmp9 + _tmp29 * _tmp4;
  const Scalar _tmp53 = _tmp47 * std::pow(_tmp52, Scalar(2));
  const Scalar _tmp54 = _tmp14 * _tmp29 - _tmp19 * _tmp24 + _tmp34 * _tmp4 - _tmp39 * _tmp9;
  const Scalar _tmp55 = _tmp47 * std::pow(_tmp54, Scalar(2));
  const Scalar _tmp56 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp57 = -_tmp56;
  const Scalar _tmp58 = (Scalar(1) / Scalar(2)) * _tmp5;
  const Scalar _tmp59 = (Scalar(1) / Scalar(2)) * _tmp8;
  const Scalar _tmp60 = -_tmp59;
  const Scalar _tmp61 = (Scalar(1) / Scalar(2)) * _tmp6;
  const Scalar _tmp62 = -_tmp61;
  const Scalar _tmp63 = _tmp60 + _tmp62;
  const Scalar _tmp64 = _tmp57 + _tmp58 + _tmp63;
  const Scalar _tmp65 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp66 = -_tmp65;
  const Scalar _tmp67 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp68 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp69 = -_tmp68;
  const Scalar _tmp70 = (Scalar(1) / Scalar(2)) * _tmp16;
  const Scalar _tmp71 = -_tmp70;
  const Scalar _tmp72 = _tmp69 + _tmp71;
  const Scalar _tmp73 = _tmp66 + _tmp67 + _tmp72;
  const Scalar _tmp74 = (Scalar(1) / Scalar(2)) * _tmp27;
  const Scalar _tmp75 = (Scalar(1) / Scalar(2)) * _tmp28;
  const Scalar _tmp76 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp77 = (Scalar(1) / Scalar(2)) * _tmp26;
  const Scalar _tmp78 = _tmp76 - _tmp77;
  const Scalar _tmp79 = _tmp74 + _tmp75 + _tmp78;
  const Scalar _tmp80 = (Scalar(1) / Scalar(2)) * _tmp30;
  const Scalar _tmp81 = -_tmp80;
  const Scalar _tmp82 = (Scalar(1) / Scalar(2)) * _tmp32;
  const Scalar _tmp83 = (Scalar(1) / Scalar(2)) * _tmp31;
  const Scalar _tmp84 = -_tmp83;
  const Scalar _tmp85 = (Scalar(1) / Scalar(2)) * _tmp33;
  const Scalar _tmp86 = -_tmp85;
  const Scalar _tmp87 = _tmp84 + _tmp86;
  const Scalar _tmp88 = _tmp81 + _tmp82 + _tmp87;
  const Scalar _tmp89 = _tmp14 * _tmp73 + _tmp24 * _tmp79 + _tmp39 * _tmp88 + _tmp4 * _tmp64;
  const Scalar _tmp90 = _tmp41 + _tmp42 + _tmp43 + _tmp45;
  const Scalar _tmp91 = std::fabs(_tmp90);
  const Scalar _tmp92 =
      ((((_tmp49 - _tmp91) > 0) - ((_tmp49 - _tmp91) < 0)) + 1) * (((_tmp90) > 0) - ((_tmp90) < 0));
  const Scalar _tmp93 = std::min<Scalar>(_tmp49, _tmp91);
  const Scalar _tmp94 = 1 - std::pow(_tmp93, Scalar(2));
  const Scalar _tmp95 = std::acos(_tmp93);
  const Scalar _tmp96 = _tmp95 / (_tmp94 * std::sqrt(_tmp94));
  const Scalar _tmp97 = _tmp92 * _tmp96;
  const Scalar _tmp98 = _tmp55 * _tmp97;
  const Scalar _tmp99 = std::pow(_tmp95, Scalar(2));
  const Scalar _tmp100 = _tmp99 / _tmp94;
  const Scalar _tmp101 = 8 * _tmp100 * _tmp46;
  const Scalar _tmp102 = _tmp101 * _tmp54;
  const Scalar _tmp103 = _tmp53 * _tmp92;
  const Scalar _tmp104 = _tmp103 * _tmp96;
  const Scalar _tmp105 = _tmp93 * _tmp99 / std::pow(_tmp94, Scalar(2));
  const Scalar _tmp106 = _tmp105 * _tmp92;
  const Scalar _tmp107 = _tmp106 * _tmp48;
  const Scalar _tmp108 = _tmp101 * _tmp52;
  const Scalar _tmp109 = _tmp103 * _tmp105;
  const Scalar _tmp110 = _tmp48 * _tmp97;
  const Scalar _tmp111 = _tmp101 * _tmp40;
  const Scalar _tmp112 = _tmp106 * _tmp55;
  const Scalar _tmp113 =
      sqrt_info(0, 0) /
      std::sqrt(Scalar(_tmp100 * _tmp48 + _tmp100 * _tmp53 + _tmp100 * _tmp55 + epsilon));
  const Scalar _tmp114 =
      _tmp113 * (_tmp102 * (_tmp14 * _tmp88 - _tmp24 * _tmp64 - _tmp39 * _tmp73 + _tmp4 * _tmp79) -
                 _tmp104 * _tmp89 + _tmp107 * _tmp89 +
                 _tmp108 * (-_tmp14 * _tmp79 + _tmp24 * _tmp73 - _tmp39 * _tmp64 + _tmp4 * _tmp88) +
                 _tmp109 * _tmp89 - _tmp110 * _tmp89 +
                 _tmp111 * (_tmp14 * _tmp64 + _tmp24 * _tmp88 - _tmp39 * _tmp79 - _tmp4 * _tmp73) +
                 _tmp112 * _tmp89 - _tmp89 * _tmp98);
  const Scalar _tmp115 = -_tmp75;
  const Scalar _tmp116 = _tmp76 + _tmp77;
  const Scalar _tmp117 = _tmp115 + _tmp116 + _tmp74;
  const Scalar _tmp118 = -_tmp82;
  const Scalar _tmp119 = _tmp118 + _tmp80 + _tmp87;
  const Scalar _tmp120 = -_tmp58;
  const Scalar _tmp121 = _tmp120 + _tmp56 + _tmp63;
  const Scalar _tmp122 = -_tmp67;
  const Scalar _tmp123 = _tmp122 + _tmp66;
  const Scalar _tmp124 = _tmp69 + _tmp70;
  const Scalar _tmp125 = _tmp123 + _tmp124;
  const Scalar _tmp126 = _tmp117 * _tmp4 + _tmp119 * _tmp14 + _tmp121 * _tmp24 + _tmp125 * _tmp39;
  const Scalar _tmp127 =
      _tmp113 *
      (_tmp102 * (-_tmp117 * _tmp24 - _tmp119 * _tmp39 + _tmp121 * _tmp4 + _tmp125 * _tmp14) -
       _tmp104 * _tmp126 + _tmp107 * _tmp126 +
       _tmp108 * (-_tmp117 * _tmp39 + _tmp119 * _tmp24 - _tmp121 * _tmp14 + _tmp125 * _tmp4) +
       _tmp109 * _tmp126 - _tmp110 * _tmp126 +
       _tmp111 * (_tmp117 * _tmp14 - _tmp119 * _tmp4 - _tmp121 * _tmp39 + _tmp125 * _tmp24) +
       _tmp112 * _tmp126 - _tmp126 * _tmp98);
  const Scalar _tmp128 = _tmp83 + _tmp86;
  const Scalar _tmp129 = _tmp118 + _tmp81;
  const Scalar _tmp130 = _tmp128 + _tmp129;
  const Scalar _tmp131 = -_tmp74;
  const Scalar _tmp132 = _tmp116 + _tmp131 + _tmp75;
  const Scalar _tmp133 = _tmp122 + _tmp65 + _tmp72;
  const Scalar _tmp134 = _tmp120 + _tmp57;
  const Scalar _tmp135 = _tmp59 + _tmp62;
  const Scalar _tmp136 = _tmp134 + _tmp135;
  const Scalar _tmp137 = _tmp130 * _tmp4 + _tmp132 * _tmp14 + _tmp133 * _tmp24 + _tmp136 * _tmp39;
  const Scalar _tmp138 =
      _tmp113 *
      (_tmp102 * (-_tmp130 * _tmp24 - _tmp132 * _tmp39 + _tmp133 * _tmp4 + _tmp136 * _tmp14) -
       _tmp104 * _tmp137 + _tmp107 * _tmp137 +
       _tmp108 * (-_tmp130 * _tmp39 + _tmp132 * _tmp24 - _tmp133 * _tmp14 + _tmp136 * _tmp4) +
       _tmp109 * _tmp137 - _tmp110 * _tmp137 +
       _tmp111 * (_tmp130 * _tmp14 - _tmp132 * _tmp4 - _tmp133 * _tmp39 + _tmp136 * _tmp24) +
       _tmp112 * _tmp137 - _tmp137 * _tmp98);
  const Scalar _tmp139 = _tmp135 + _tmp56 + _tmp58;
  const Scalar _tmp140 = _tmp123 + _tmp68 + _tmp71;
  const Scalar _tmp141 = _tmp140 * _tmp39;
  const Scalar _tmp142 = _tmp115 + _tmp131 + _tmp78;
  const Scalar _tmp143 = _tmp142 * _tmp4;
  const Scalar _tmp144 = _tmp129 + _tmp84 + _tmp85;
  const Scalar _tmp145 = _tmp14 * _tmp144 + _tmp143;
  const Scalar _tmp146 = _tmp139 * _tmp24 + _tmp141 + _tmp145;
  const Scalar _tmp147 = _tmp14 * _tmp140;
  const Scalar _tmp148 = _tmp142 * _tmp24;
  const Scalar _tmp149 = _tmp144 * _tmp39;
  const Scalar _tmp150 = _tmp140 * _tmp4;
  const Scalar _tmp151 = _tmp144 * _tmp24;
  const Scalar _tmp152 = -_tmp142 * _tmp39;
  const Scalar _tmp153 = _tmp144 * _tmp4;
  const Scalar _tmp154 = _tmp14 * _tmp142;
  const Scalar _tmp155 = _tmp140 * _tmp24 + _tmp154;
  const Scalar _tmp156 =
      _tmp113 *
      (_tmp102 * (_tmp139 * _tmp4 + _tmp147 - _tmp148 - _tmp149) - _tmp104 * _tmp146 +
       _tmp107 * _tmp146 + _tmp108 * (-_tmp139 * _tmp14 + _tmp150 + _tmp151 + _tmp152) +
       _tmp109 * _tmp146 - _tmp110 * _tmp146 + _tmp111 * (-_tmp139 * _tmp39 - _tmp153 + _tmp155) +
       _tmp112 * _tmp146 - _tmp146 * _tmp98);
  const Scalar _tmp157 = _tmp128 + _tmp80 + _tmp82;
  const Scalar _tmp158 = _tmp134 + _tmp60 + _tmp61;
  const Scalar _tmp159 = _tmp158 * _tmp39;
  const Scalar _tmp160 = _tmp155 + _tmp157 * _tmp4 + _tmp159;
  const Scalar _tmp161 = _tmp14 * _tmp158 + _tmp152;
  const Scalar _tmp162 = _tmp158 * _tmp24;
  const Scalar _tmp163 = _tmp148 + _tmp158 * _tmp4;
  const Scalar _tmp164 =
      _tmp113 *
      (_tmp102 * (_tmp150 - _tmp157 * _tmp24 + _tmp161) - _tmp104 * _tmp160 + _tmp107 * _tmp160 +
       _tmp108 * (-_tmp147 - _tmp157 * _tmp39 + _tmp163) + _tmp109 * _tmp160 - _tmp110 * _tmp160 +
       _tmp111 * (_tmp14 * _tmp157 - _tmp141 - _tmp143 + _tmp162) + _tmp112 * _tmp160 -
       _tmp160 * _tmp98);
  const Scalar _tmp165 = _tmp124 + _tmp65 + _tmp67;
  const Scalar _tmp166 = _tmp14 * _tmp165 + _tmp149 + _tmp163;
  const Scalar _tmp167 =
      _tmp113 *
      (_tmp102 * (_tmp145 - _tmp162 - _tmp165 * _tmp39) - _tmp104 * _tmp166 + _tmp107 * _tmp166 +
       _tmp108 * (_tmp153 - _tmp154 - _tmp159 + _tmp165 * _tmp24) + _tmp109 * _tmp166 -
       _tmp110 * _tmp166 + _tmp111 * (_tmp151 + _tmp161 - _tmp165 * _tmp4) + _tmp112 * _tmp166 -
       _tmp166 * _tmp98);
  const Scalar _tmp168 = (Scalar(1) / Scalar(2)) * _tmp20;
  const Scalar _tmp169 = (Scalar(1) / Scalar(2)) * _tmp21;
  const Scalar _tmp170 = -_tmp169;
  const Scalar _tmp171 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp172 = -_tmp171;
  const Scalar _tmp173 = (Scalar(1) / Scalar(2)) * _tmp23;
  const Scalar _tmp174 = -_tmp173;
  const Scalar _tmp175 = _tmp172 + _tmp174;
  const Scalar _tmp176 = _tmp168 + _tmp170 + _tmp175;
  const Scalar _tmp177 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp178 = -_tmp177;
  const Scalar _tmp179 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp180 = -_tmp179;
  const Scalar _tmp181 = _tmp178 + _tmp180;
  const Scalar _tmp182 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp183 = -_tmp182;
  const Scalar _tmp184 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp185 = _tmp183 + _tmp184;
  const Scalar _tmp186 = _tmp181 + _tmp185;
  const Scalar _tmp187 = (Scalar(1) / Scalar(2)) * _tmp38;
  const Scalar _tmp188 = (Scalar(1) / Scalar(2)) * _tmp36;
  const Scalar _tmp189 = (Scalar(1) / Scalar(2)) * _tmp35;
  const Scalar _tmp190 = (Scalar(1) / Scalar(2)) * _tmp37;
  const Scalar _tmp191 = _tmp189 - _tmp190;
  const Scalar _tmp192 = _tmp187 + _tmp188 + _tmp191;
  const Scalar _tmp193 = (Scalar(1) / Scalar(2)) * _tmp10;
  const Scalar _tmp194 = -_tmp193;
  const Scalar _tmp195 = (Scalar(1) / Scalar(2)) * _tmp12;
  const Scalar _tmp196 = -_tmp195;
  const Scalar _tmp197 = _tmp194 + _tmp196;
  const Scalar _tmp198 = (Scalar(1) / Scalar(2)) * _tmp11;
  const Scalar _tmp199 = -_tmp198;
  const Scalar _tmp200 = (Scalar(1) / Scalar(2)) * _tmp13;
  const Scalar _tmp201 = _tmp199 + _tmp200;
  const Scalar _tmp202 = _tmp197 + _tmp201;
  const Scalar _tmp203 = _tmp176 * _tmp19 + _tmp186 * _tmp34 + _tmp192 * _tmp9 + _tmp202 * _tmp29;
  const Scalar _tmp204 =
      _tmp113 *
      (_tmp102 * (_tmp176 * _tmp34 - _tmp186 * _tmp19 + _tmp192 * _tmp29 - _tmp202 * _tmp9) -
       _tmp104 * _tmp203 + _tmp107 * _tmp203 +
       _tmp108 * (_tmp176 * _tmp29 + _tmp186 * _tmp9 - _tmp19 * _tmp202 - _tmp192 * _tmp34) +
       _tmp109 * _tmp203 - _tmp110 * _tmp203 +
       _tmp111 * (-_tmp176 * _tmp9 + _tmp186 * _tmp29 + _tmp19 * _tmp192 - _tmp202 * _tmp34) +
       _tmp112 * _tmp203 - _tmp203 * _tmp98);
  const Scalar _tmp205 = -_tmp184;
  const Scalar _tmp206 = _tmp183 + _tmp205;
  const Scalar _tmp207 = _tmp178 + _tmp179 + _tmp206;
  const Scalar _tmp208 = -_tmp188;
  const Scalar _tmp209 = _tmp189 + _tmp190;
  const Scalar _tmp210 = _tmp187 + _tmp208 + _tmp209;
  const Scalar _tmp211 = -_tmp200;
  const Scalar _tmp212 = _tmp199 + _tmp211;
  const Scalar _tmp213 = _tmp194 + _tmp195 + _tmp212;
  const Scalar _tmp214 = -_tmp168;
  const Scalar _tmp215 = _tmp169 + _tmp175 + _tmp214;
  const Scalar _tmp216 = _tmp19 * _tmp213 + _tmp207 * _tmp9 + _tmp210 * _tmp34 + _tmp215 * _tmp29;
  const Scalar _tmp217 =
      _tmp113 *
      (_tmp102 * (-_tmp19 * _tmp210 + _tmp207 * _tmp29 + _tmp213 * _tmp34 - _tmp215 * _tmp9) -
       _tmp104 * _tmp216 + _tmp107 * _tmp216 +
       _tmp108 * (-_tmp19 * _tmp215 - _tmp207 * _tmp34 + _tmp210 * _tmp9 + _tmp213 * _tmp29) +
       _tmp109 * _tmp216 - _tmp110 * _tmp216 +
       _tmp111 * (_tmp19 * _tmp207 + _tmp210 * _tmp29 - _tmp213 * _tmp9 - _tmp215 * _tmp34) +
       _tmp112 * _tmp216 - _tmp216 * _tmp98);
  const Scalar _tmp218 = _tmp170 + _tmp214;
  const Scalar _tmp219 = _tmp171 + _tmp174;
  const Scalar _tmp220 = _tmp218 + _tmp219;
  const Scalar _tmp221 = -_tmp187;
  const Scalar _tmp222 = _tmp188 + _tmp209 + _tmp221;
  const Scalar _tmp223 = _tmp193 + _tmp196 + _tmp212;
  const Scalar _tmp224 = _tmp177 + _tmp180 + _tmp206;
  const Scalar _tmp225 = _tmp19 * _tmp222 + _tmp220 * _tmp9 + _tmp223 * _tmp34 + _tmp224 * _tmp29;
  const Scalar _tmp226 =
      _tmp113 *
      (_tmp102 * (-_tmp19 * _tmp223 + _tmp220 * _tmp29 + _tmp222 * _tmp34 - _tmp224 * _tmp9) -
       _tmp104 * _tmp225 + _tmp107 * _tmp225 +
       _tmp108 * (-_tmp19 * _tmp224 - _tmp220 * _tmp34 + _tmp222 * _tmp29 + _tmp223 * _tmp9) +
       _tmp109 * _tmp225 - _tmp110 * _tmp225 +
       _tmp111 * (_tmp19 * _tmp220 - _tmp222 * _tmp9 + _tmp223 * _tmp29 - _tmp224 * _tmp34) +
       _tmp112 * _tmp225 - _tmp225 * _tmp98);
  const Scalar _tmp227 = _tmp168 + _tmp169 + _tmp219;
  const Scalar _tmp228 = _tmp181 + _tmp182 + _tmp205;
  const Scalar _tmp229 = _tmp228 * _tmp34;
  const Scalar _tmp230 = _tmp191 + _tmp208 + _tmp221;
  const Scalar _tmp231 = _tmp230 * _tmp9;
  const Scalar _tmp232 = _tmp197 + _tmp198 + _tmp211;
  const Scalar _tmp233 = _tmp231 + _tmp232 * _tmp29;
  const Scalar _tmp234 = _tmp19 * _tmp227 + _tmp229 + _tmp233;
  const Scalar _tmp235 = -_tmp232 * _tmp9;
  const Scalar _tmp236 = _tmp230 * _tmp29;
  const Scalar _tmp237 = -_tmp19 * _tmp228 + _tmp236;
  const Scalar _tmp238 = _tmp232 * _tmp34;
  const Scalar _tmp239 = _tmp19 * _tmp230;
  const Scalar _tmp240 = _tmp228 * _tmp29 + _tmp239;
  const Scalar _tmp241 = _tmp228 * _tmp9;
  const Scalar _tmp242 = _tmp230 * _tmp34;
  const Scalar _tmp243 = _tmp19 * _tmp232;
  const Scalar _tmp244 =
      _tmp113 *
      (_tmp102 * (_tmp227 * _tmp34 + _tmp235 + _tmp237) - _tmp104 * _tmp234 + _tmp107 * _tmp234 +
       _tmp108 * (_tmp227 * _tmp29 + _tmp241 - _tmp242 - _tmp243) + _tmp109 * _tmp234 -
       _tmp110 * _tmp234 + _tmp111 * (-_tmp227 * _tmp9 - _tmp238 + _tmp240) + _tmp112 * _tmp234 -
       _tmp234 * _tmp98);
  const Scalar _tmp245 = _tmp172 + _tmp173 + _tmp218;
  const Scalar _tmp246 = _tmp245 * _tmp9;
  const Scalar _tmp247 = _tmp193 + _tmp195 + _tmp201;
  const Scalar _tmp248 = _tmp240 + _tmp246 + _tmp247 * _tmp34;
  const Scalar _tmp249 = _tmp242 + _tmp245 * _tmp29;
  const Scalar _tmp250 = _tmp19 * _tmp245;
  const Scalar _tmp251 = -_tmp245 * _tmp34;
  const Scalar _tmp252 =
      _tmp113 *
      (_tmp102 * (-_tmp19 * _tmp247 - _tmp241 + _tmp249) - _tmp104 * _tmp248 + _tmp107 * _tmp248 +
       _tmp108 * (_tmp237 + _tmp247 * _tmp9 + _tmp251) + _tmp109 * _tmp248 - _tmp110 * _tmp248 +
       _tmp111 * (-_tmp229 - _tmp231 + _tmp247 * _tmp29 + _tmp250) + _tmp112 * _tmp248 -
       _tmp248 * _tmp98);
  const Scalar _tmp253 = _tmp177 + _tmp179 + _tmp185;
  const Scalar _tmp254 = _tmp243 + _tmp249 + _tmp253 * _tmp9;
  const Scalar _tmp255 = _tmp103 * _tmp254;
  const Scalar _tmp256 =
      _tmp113 * (_tmp102 * (_tmp238 - _tmp239 - _tmp246 + _tmp253 * _tmp29) + _tmp105 * _tmp255 +
                 _tmp107 * _tmp254 + _tmp108 * (_tmp233 - _tmp250 - _tmp253 * _tmp34) -
                 _tmp110 * _tmp254 + _tmp111 * (_tmp19 * _tmp253 + _tmp235 + _tmp236 + _tmp251) +
                 _tmp112 * _tmp254 - _tmp254 * _tmp98 - _tmp255 * _tmp96);

  // Output terms (5)
  Eigen::Matrix<Scalar, 1, 1> _res;

  _res(0, 0) = sqrt_info(0, 0) *
               (-a_d_b(0, 0) +
                std::sqrt(Scalar(_tmp48 * _tmp51 + _tmp51 * _tmp53 + _tmp51 * _tmp55 + epsilon)));

  if (res_D_x != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 1, 7>> _res_D_x{res_D_x};

    _res_D_x(0, 0) = _tmp114 * _x[1] - _tmp127 * _x[2] + _tmp138 * _x[3];
    _res_D_x(0, 1) = -_tmp114 * _x[0] + _tmp127 * _x[3] + _tmp138 * _x[2];
    _res_D_x(0, 2) = _tmp114 * _x[3] + _tmp127 * _x[0] - _tmp138 * _x[1];
    _res_D_x(0, 3) = -_tmp114 * _x[2] - _tmp127 * _x[1] - _tmp138 * _x[0];
    _res_D_x(0, 4) = 0;
    _res_D_x(0, 5) = 0;
    _res_D_x(0, 6) = 0;
  }

  if (res_D_x_T_a != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 1, 7>> _res_D_x_T_a{res_D_x_T_a};

    _res_D_x_T_a(0, 0) = -_tmp156 * _x_T_a[2] + _tmp164 * _x_T_a[3] + _tmp167 * _x_T_a[1];
    _res_D_x_T_a(0, 1) = _tmp156 * _x_T_a[3] + _tmp164 * _x_T_a[2] - _tmp167 * _x_T_a[0];
    _res_D_x_T_a(0, 2) = _tmp156 * _x_T_a[0] - _tmp164 * _x_T_a[1] + _tmp167 * _x_T_a[3];
    _res_D_x_T_a(0, 3) = -_tmp156 * _x_T_a[1] - _tmp164 * _x_T_a[0] - _tmp167 * _x_T_a[2];
    _res_D_x_T_a(0, 4) = 0;
    _res_D_x_T_a(0, 5) = 0;
    _res_D_x_T_a(0, 6) = 0;
  }

  if (res_D_y != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 1, 7>> _res_D_y{res_D_y};

    _res_D_y(0, 0) = _tmp204 * _y[3] + _tmp217 * _y[1] - _tmp226 * _y[2];
    _res_D_y(0, 1) = _tmp204 * _y[2] - _tmp217 * _y[0] + _tmp226 * _y[3];
    _res_D_y(0, 2) = -_tmp204 * _y[1] + _tmp217 * _y[3] + _tmp226 * _y[0];
    _res_D_y(0, 3) = -_tmp204 * _y[0] - _tmp217 * _y[2] - _tmp226 * _y[1];
    _res_D_y(0, 4) = 0;
    _res_D_y(0, 5) = 0;
    _res_D_y(0, 6) = 0;
  }

  if (res_D_y_T_b != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 1, 7>> _res_D_y_T_b{res_D_y_T_b};

    _res_D_y_T_b(0, 0) = _tmp244 * _y_T_b[3] - _tmp252 * _y_T_b[2] + _tmp256 * _y_T_b[1];
    _res_D_y_T_b(0, 1) = _tmp244 * _y_T_b[2] + _tmp252 * _y_T_b[3] - _tmp256 * _y_T_b[0];
    _res_D_y_T_b(0, 2) = -_tmp244 * _y_T_b[1] + _tmp252 * _y_T_b[0] + _tmp256 * _y_T_b[3];
    _res_D_y_T_b(0, 3) = -_tmp244 * _y_T_b[0] - _tmp252 * _y_T_b[1] - _tmp256 * _y_T_b[2];
    _res_D_y_T_b(0, 4) = 0;
    _res_D_y_T_b(0, 5) = 0;
    _res_D_y_T_b(0, 6) = 0;
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_ceres
