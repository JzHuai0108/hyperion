// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>

namespace sym_ceres {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: pose3_delta_factor
 *
 * Args:
 *     x: Pose3
 *     y: Pose3
 *     sqrt_info: Matrix66
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix61
 *     res_D_x: (6x7) jacobian (result_dim x storage_dim) of res (6) wrt arg x (7) (row-major)
 *     res_D_y: (6x7) jacobian (result_dim x storage_dim) of res (6) wrt arg y (7) (row-major)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 6, 1> Pose3DeltaFactorWithJacobians01(
    const sym::Pose3<Scalar>& x, const sym::Pose3<Scalar>& y,
    const Eigen::Matrix<Scalar, 6, 6>& sqrt_info, const Scalar epsilon,
    Scalar* const res_D_x = nullptr, Scalar* const res_D_y = nullptr) {
  // Total ops: 1147

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x = x.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y = y.Data();

  // Intermediate terms (211)
  const Scalar _tmp0 = _x[3] * _y[1];
  const Scalar _tmp1 = _x[2] * _y[0];
  const Scalar _tmp2 = _x[1] * _y[3];
  const Scalar _tmp3 = _x[0] * _y[2];
  const Scalar _tmp4 = _tmp0 - _tmp1 - _tmp2 + _tmp3;
  const Scalar _tmp5 = _x[2] * _y[2];
  const Scalar _tmp6 = _x[1] * _y[1];
  const Scalar _tmp7 = _x[0] * _y[0];
  const Scalar _tmp8 = -_tmp5 - _tmp6 - _tmp7;
  const Scalar _tmp9 = _x[3] * _y[3];
  const Scalar _tmp10 =
      2 * std::min<Scalar>(0, (((-_tmp8 + _tmp9) > 0) - ((-_tmp8 + _tmp9) < 0))) + 1;
  const Scalar _tmp11 = 2 * _tmp10;
  const Scalar _tmp12 = 1 - epsilon;
  const Scalar _tmp13 = std::min<Scalar>(_tmp12, std::fabs(_tmp8 - _tmp9));
  const Scalar _tmp14 = std::acos(_tmp13) / std::sqrt(Scalar(1 - std::pow(_tmp13, Scalar(2))));
  const Scalar _tmp15 = _tmp11 * _tmp14;
  const Scalar _tmp16 = _tmp15 * _tmp4;
  const Scalar _tmp17 = _x[3] * _y[0];
  const Scalar _tmp18 = _x[2] * _y[1];
  const Scalar _tmp19 = _x[1] * _y[2];
  const Scalar _tmp20 = _x[0] * _y[3];
  const Scalar _tmp21 = _tmp17 + _tmp18 - _tmp19 - _tmp20;
  const Scalar _tmp22 = _tmp14 * _tmp21;
  const Scalar _tmp23 = _tmp11 * _tmp22;
  const Scalar _tmp24 = _x[3] * _y[2];
  const Scalar _tmp25 = _x[2] * _y[3];
  const Scalar _tmp26 = _x[1] * _y[0];
  const Scalar _tmp27 = _x[0] * _y[1];
  const Scalar _tmp28 = _tmp24 - _tmp25 + _tmp26 - _tmp27;
  const Scalar _tmp29 = _tmp15 * _tmp28;
  const Scalar _tmp30 = -_x[4] + _y[4];
  const Scalar _tmp31 = -_x[6] + _y[6];
  const Scalar _tmp32 = -_x[5] + _y[5];
  const Scalar _tmp33 = _tmp11 * sqrt_info(2, 2);
  const Scalar _tmp34 = _tmp14 * _tmp28;
  const Scalar _tmp35 = _tmp11 * sqrt_info(3, 0);
  const Scalar _tmp36 = _tmp11 * sqrt_info(3, 2);
  const Scalar _tmp37 = _tmp4 * sqrt_info(4, 1);
  const Scalar _tmp38 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp39 = (Scalar(1) / Scalar(2)) * _tmp5;
  const Scalar _tmp40 = (Scalar(1) / Scalar(2)) * _tmp6;
  const Scalar _tmp41 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp42 = -_tmp38 - _tmp39 - _tmp40 - _tmp41;
  const Scalar _tmp43 = _tmp5 + _tmp6 + _tmp7 + _tmp9;
  const Scalar _tmp44 = std::fabs(_tmp43);
  const Scalar _tmp45 = std::min<Scalar>(_tmp12, _tmp44);
  const Scalar _tmp46 = 1 - std::pow(_tmp45, Scalar(2));
  const Scalar _tmp47 = std::pow(_tmp46, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp48 = std::acos(_tmp45);
  const Scalar _tmp49 = _tmp47 * _tmp48;
  const Scalar _tmp50 = _tmp11 * _tmp49;
  const Scalar _tmp51 = _tmp42 * _tmp50;
  const Scalar _tmp52 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp53 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp54 = (Scalar(1) / Scalar(2)) * _tmp19;
  const Scalar _tmp55 = (Scalar(1) / Scalar(2)) * _tmp20;
  const Scalar _tmp56 = _tmp52 + _tmp53 - _tmp54 - _tmp55;
  const Scalar _tmp57 = _tmp10 * ((((_tmp12 - _tmp44) > 0) - ((_tmp12 - _tmp44) < 0)) + 1) *
                        (((_tmp43) > 0) - ((_tmp43) < 0));
  const Scalar _tmp58 = _tmp57 / _tmp46;
  const Scalar _tmp59 = _tmp28 * _tmp58;
  const Scalar _tmp60 = _tmp56 * _tmp59;
  const Scalar _tmp61 = _tmp4 * sqrt_info(0, 1);
  const Scalar _tmp62 = _tmp56 * _tmp58;
  const Scalar _tmp63 = _tmp21 * sqrt_info(0, 0);
  const Scalar _tmp64 = _tmp48 * _tmp56;
  const Scalar _tmp65 = _tmp45 * _tmp57 / (_tmp46 * std::sqrt(_tmp46));
  const Scalar _tmp66 = _tmp64 * _tmp65;
  const Scalar _tmp67 = _tmp58 * _tmp63;
  const Scalar _tmp68 = _tmp28 * _tmp66;
  const Scalar _tmp69 = (Scalar(1) / Scalar(2)) * _tmp24;
  const Scalar _tmp70 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp71 = (Scalar(1) / Scalar(2)) * _tmp26;
  const Scalar _tmp72 = (Scalar(1) / Scalar(2)) * _tmp27;
  const Scalar _tmp73 = _tmp69 - _tmp70 + _tmp71 - _tmp72;
  const Scalar _tmp74 = _tmp50 * _tmp73;
  const Scalar _tmp75 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp76 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp77 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp78 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp79 = -_tmp75 + _tmp76 + _tmp77 - _tmp78;
  const Scalar _tmp80 = _tmp50 * _tmp79;
  const Scalar _tmp81 = _tmp74 * sqrt_info(0, 1) + _tmp80 * sqrt_info(0, 2);
  const Scalar _tmp82 = _tmp51 * sqrt_info(0, 0) - _tmp56 * _tmp67 - _tmp60 * sqrt_info(0, 2) -
                        _tmp61 * _tmp62 + _tmp61 * _tmp66 + _tmp63 * _tmp66 +
                        _tmp68 * sqrt_info(0, 2) + _tmp81;
  const Scalar _tmp83 = 2 * _x[3];
  const Scalar _tmp84 = _tmp75 - _tmp76 - _tmp77 + _tmp78;
  const Scalar _tmp85 = _tmp48 * _tmp65;
  const Scalar _tmp86 = _tmp28 * _tmp85;
  const Scalar _tmp87 = _tmp84 * _tmp86;
  const Scalar _tmp88 = _tmp58 * _tmp84;
  const Scalar _tmp89 = _tmp63 * _tmp85;
  const Scalar _tmp90 = _tmp84 * _tmp85;
  const Scalar _tmp91 = _tmp59 * _tmp84;
  const Scalar _tmp92 = _tmp47 * _tmp64;
  const Scalar _tmp93 = _tmp11 * _tmp92;
  const Scalar _tmp94 = -_tmp69 + _tmp70 - _tmp71 + _tmp72;
  const Scalar _tmp95 = _tmp49 * _tmp94;
  const Scalar _tmp96 = _tmp11 * _tmp95;
  const Scalar _tmp97 = _tmp93 * sqrt_info(0, 2) + _tmp96 * sqrt_info(0, 0);
  const Scalar _tmp98 = _tmp51 * sqrt_info(0, 1) - _tmp61 * _tmp88 + _tmp61 * _tmp90 -
                        _tmp67 * _tmp84 + _tmp84 * _tmp89 + _tmp87 * sqrt_info(0, 2) -
                        _tmp91 * sqrt_info(0, 2) + _tmp97;
  const Scalar _tmp99 = 2 * _x[2];
  const Scalar _tmp100 = _tmp58 * _tmp73;
  const Scalar _tmp101 = _tmp73 * _tmp86;
  const Scalar _tmp102 = _tmp73 * _tmp85;
  const Scalar _tmp103 = _tmp59 * _tmp73;
  const Scalar _tmp104 = _tmp100 * _tmp4;
  const Scalar _tmp105 = _tmp50 * _tmp84;
  const Scalar _tmp106 = -_tmp52 - _tmp53 + _tmp54 + _tmp55;
  const Scalar _tmp107 = _tmp106 * _tmp50;
  const Scalar _tmp108 = _tmp105 * sqrt_info(0, 0) + _tmp107 * sqrt_info(0, 1);
  const Scalar _tmp109 = -_tmp100 * _tmp63 + _tmp101 * sqrt_info(0, 2) + _tmp102 * _tmp61 -
                         _tmp103 * sqrt_info(0, 2) - _tmp104 * sqrt_info(0, 1) + _tmp108 +
                         _tmp51 * sqrt_info(0, 2) + _tmp73 * _tmp89;
  const Scalar _tmp110 = 2 * _x[1];
  const Scalar _tmp111 = _tmp4 * sqrt_info(1, 1);
  const Scalar _tmp112 = _tmp21 * _tmp66;
  const Scalar _tmp113 = _tmp21 * _tmp58;
  const Scalar _tmp114 = _tmp113 * _tmp56;
  const Scalar _tmp115 = _tmp74 * sqrt_info(1, 1) + _tmp80 * sqrt_info(1, 2);
  const Scalar _tmp116 = -_tmp111 * _tmp62 + _tmp111 * _tmp66 + _tmp112 * sqrt_info(1, 0) -
                         _tmp114 * sqrt_info(1, 0) + _tmp115 + _tmp51 * sqrt_info(1, 0) -
                         _tmp60 * sqrt_info(1, 2) + _tmp68 * sqrt_info(1, 2);
  const Scalar _tmp117 = _tmp21 * _tmp85;
  const Scalar _tmp118 = _tmp117 * _tmp84;
  const Scalar _tmp119 = _tmp113 * _tmp84;
  const Scalar _tmp120 = _tmp93 * sqrt_info(1, 2) + _tmp96 * sqrt_info(1, 0);
  const Scalar _tmp121 = -_tmp111 * _tmp88 + _tmp111 * _tmp90 + _tmp118 * sqrt_info(1, 0) -
                         _tmp119 * sqrt_info(1, 0) + _tmp120 + _tmp51 * sqrt_info(1, 1) +
                         _tmp87 * sqrt_info(1, 2) - _tmp91 * sqrt_info(1, 2);
  const Scalar _tmp122 = _tmp117 * _tmp73;
  const Scalar _tmp123 = _tmp100 * _tmp21;
  const Scalar _tmp124 = _tmp105 * sqrt_info(1, 0) + _tmp107 * sqrt_info(1, 1);
  const Scalar _tmp125 = _tmp101 * sqrt_info(1, 2) + _tmp102 * _tmp111 - _tmp103 * sqrt_info(1, 2) -
                         _tmp104 * sqrt_info(1, 1) + _tmp122 * sqrt_info(1, 0) -
                         _tmp123 * sqrt_info(1, 0) + _tmp124 + _tmp51 * sqrt_info(1, 2);
  const Scalar _tmp126 = _tmp4 * _tmp58;
  const Scalar _tmp127 = _tmp126 * sqrt_info(2, 1);
  const Scalar _tmp128 = _tmp113 * sqrt_info(2, 0);
  const Scalar _tmp129 = _tmp4 * sqrt_info(2, 1);
  const Scalar _tmp130 = _tmp49 * _tmp79;
  const Scalar _tmp131 = _tmp130 * _tmp33 + _tmp74 * sqrt_info(2, 1);
  const Scalar _tmp132 = _tmp112 * sqrt_info(2, 0) - _tmp127 * _tmp56 - _tmp128 * _tmp56 +
                         _tmp129 * _tmp66 + _tmp131 + _tmp51 * sqrt_info(2, 0) -
                         _tmp60 * sqrt_info(2, 2) + _tmp68 * sqrt_info(2, 2);
  const Scalar _tmp133 = _tmp33 * _tmp92 + _tmp96 * sqrt_info(2, 0);
  const Scalar _tmp134 = _tmp118 * sqrt_info(2, 0) - _tmp127 * _tmp84 - _tmp128 * _tmp84 +
                         _tmp129 * _tmp90 + _tmp133 + _tmp51 * sqrt_info(2, 1) +
                         _tmp87 * sqrt_info(2, 2) - _tmp91 * sqrt_info(2, 2);
  const Scalar _tmp135 = _tmp42 * _tmp49;
  const Scalar _tmp136 = _tmp106 * sqrt_info(2, 1);
  const Scalar _tmp137 = _tmp105 * sqrt_info(2, 0) + _tmp136 * _tmp50;
  const Scalar _tmp138 = _tmp101 * sqrt_info(2, 2) + _tmp102 * _tmp129 - _tmp103 * sqrt_info(2, 2) -
                         _tmp104 * sqrt_info(2, 1) + _tmp122 * sqrt_info(2, 0) -
                         _tmp123 * sqrt_info(2, 0) + _tmp135 * _tmp33 + _tmp137;
  const Scalar _tmp139 = _tmp4 * sqrt_info(3, 1);
  const Scalar _tmp140 = _tmp130 * _tmp36 + _tmp74 * sqrt_info(3, 1);
  const Scalar _tmp141 = _tmp112 * sqrt_info(3, 0) - _tmp114 * sqrt_info(3, 0) + _tmp135 * _tmp35 -
                         _tmp139 * _tmp62 + _tmp139 * _tmp66 + _tmp140 - _tmp60 * sqrt_info(3, 2) +
                         _tmp68 * sqrt_info(3, 2);
  const Scalar _tmp142 = _tmp113 * sqrt_info(3, 0);
  const Scalar _tmp143 = _tmp35 * _tmp95 + _tmp36 * _tmp92;
  const Scalar _tmp144 = _tmp118 * sqrt_info(3, 0) - _tmp139 * _tmp88 + _tmp139 * _tmp90 -
                         _tmp142 * _tmp84 + _tmp143 + _tmp51 * sqrt_info(3, 1) +
                         _tmp87 * sqrt_info(3, 2) - _tmp91 * sqrt_info(3, 2);
  const Scalar _tmp145 = _tmp107 * sqrt_info(3, 1) + _tmp35 * _tmp49 * _tmp84;
  const Scalar _tmp146 = _tmp101 * sqrt_info(3, 2) + _tmp102 * _tmp139 - _tmp103 * sqrt_info(3, 2) -
                         _tmp104 * sqrt_info(3, 1) + _tmp122 * sqrt_info(3, 0) -
                         _tmp123 * sqrt_info(3, 0) + _tmp135 * _tmp36 + _tmp145;
  const Scalar _tmp147 = _tmp74 * sqrt_info(4, 1) + _tmp80 * sqrt_info(4, 2);
  const Scalar _tmp148 = _tmp112 * sqrt_info(4, 0) - _tmp114 * sqrt_info(4, 0) + _tmp147 -
                         _tmp37 * _tmp62 + _tmp37 * _tmp66 + _tmp51 * sqrt_info(4, 0) -
                         _tmp60 * sqrt_info(4, 2) + _tmp68 * sqrt_info(4, 2);
  const Scalar _tmp149 = _tmp117 * sqrt_info(4, 0);
  const Scalar _tmp150 = _tmp93 * sqrt_info(4, 2) + _tmp96 * sqrt_info(4, 0);
  const Scalar _tmp151 = -_tmp119 * sqrt_info(4, 0) + _tmp149 * _tmp84 + _tmp150 - _tmp37 * _tmp88 +
                         _tmp37 * _tmp90 + _tmp51 * sqrt_info(4, 1) + _tmp87 * sqrt_info(4, 2) -
                         _tmp91 * sqrt_info(4, 2);
  const Scalar _tmp152 = _tmp105 * sqrt_info(4, 0) + _tmp107 * sqrt_info(4, 1);
  const Scalar _tmp153 = -2 * _tmp100 * _tmp37 + 2 * _tmp101 * sqrt_info(4, 2) +
                         2 * _tmp102 * _tmp37 - 2 * _tmp103 * sqrt_info(4, 2) -
                         2 * _tmp123 * sqrt_info(4, 0) + 2 * _tmp149 * _tmp73 + 2 * _tmp152 +
                         2 * _tmp51 * sqrt_info(4, 2);
  const Scalar _tmp154 = _tmp4 * sqrt_info(5, 1);
  const Scalar _tmp155 = _tmp74 * sqrt_info(5, 1) + _tmp80 * sqrt_info(5, 2);
  const Scalar _tmp156 = _tmp112 * sqrt_info(5, 0) - _tmp114 * sqrt_info(5, 0) - _tmp154 * _tmp62 +
                         _tmp154 * _tmp66 + _tmp155 + _tmp51 * sqrt_info(5, 0) -
                         _tmp60 * sqrt_info(5, 2) + _tmp68 * sqrt_info(5, 2);
  const Scalar _tmp157 = _tmp154 * _tmp85;
  const Scalar _tmp158 = _tmp113 * sqrt_info(5, 0);
  const Scalar _tmp159 = _tmp93 * sqrt_info(5, 2) + _tmp96 * sqrt_info(5, 0);
  const Scalar _tmp160 = _tmp118 * sqrt_info(5, 0) - _tmp154 * _tmp88 + _tmp157 * _tmp84 -
                         _tmp158 * _tmp84 + _tmp159 + _tmp51 * sqrt_info(5, 1) +
                         _tmp87 * sqrt_info(5, 2) - _tmp91 * sqrt_info(5, 2);
  const Scalar _tmp161 = _tmp105 * sqrt_info(5, 0) + _tmp107 * sqrt_info(5, 1);
  const Scalar _tmp162 = _tmp101 * sqrt_info(5, 2) - _tmp103 * sqrt_info(5, 2) -
                         _tmp104 * sqrt_info(5, 1) + _tmp122 * sqrt_info(5, 0) -
                         _tmp123 * sqrt_info(5, 0) + _tmp157 * _tmp73 + _tmp161 +
                         _tmp51 * sqrt_info(5, 2);
  const Scalar _tmp163 = 2 * _x[0];
  const Scalar _tmp164 = 2 * _tmp134;
  const Scalar _tmp165 = 2 * _tmp144;
  const Scalar _tmp166 = 2 * _tmp151;
  const Scalar _tmp167 = 2 * _tmp160;
  const Scalar _tmp168 = _tmp79 * _tmp85;
  const Scalar _tmp169 = _tmp49 * (_tmp38 + _tmp39 + _tmp40 + _tmp41);
  const Scalar _tmp170 = _tmp11 * _tmp169;
  const Scalar _tmp171 = _tmp59 * _tmp79;
  const Scalar _tmp172 = _tmp58 * _tmp79;
  const Scalar _tmp173 = _tmp168 * _tmp28;
  const Scalar _tmp174 = _tmp168 * _tmp61 + _tmp168 * _tmp63 + _tmp170 * sqrt_info(0, 1) -
                         _tmp171 * sqrt_info(0, 2) - _tmp172 * _tmp61 - _tmp172 * _tmp63 +
                         _tmp173 * sqrt_info(0, 2) + _tmp97;
  const Scalar _tmp175 = 2 * _y[2];
  const Scalar _tmp176 = _tmp106 * _tmp58;
  const Scalar _tmp177 = _tmp106 * _tmp85;
  const Scalar _tmp178 = _tmp106 * _tmp86;
  const Scalar _tmp179 = _tmp106 * _tmp59;
  const Scalar _tmp180 = -2 * _tmp106 * _tmp67 + 2 * _tmp106 * _tmp89 +
                         2 * _tmp170 * sqrt_info(0, 0) - 2 * _tmp176 * _tmp61 +
                         2 * _tmp177 * _tmp61 + 2 * _tmp178 * sqrt_info(0, 2) -
                         2 * _tmp179 * sqrt_info(0, 2) + 2 * _tmp81;
  const Scalar _tmp181 = _tmp86 * _tmp94;
  const Scalar _tmp182 = _tmp58 * _tmp94;
  const Scalar _tmp183 = _tmp59 * _tmp94;
  const Scalar _tmp184 = _tmp85 * _tmp94;
  const Scalar _tmp185 = _tmp108 + _tmp170 * sqrt_info(0, 2) + _tmp181 * sqrt_info(0, 2) -
                         _tmp182 * _tmp61 - _tmp183 * sqrt_info(0, 2) + _tmp184 * _tmp61 -
                         _tmp67 * _tmp94 + _tmp89 * _tmp94;
  const Scalar _tmp186 = 2 * _y[1];
  const Scalar _tmp187 = _tmp117 * _tmp79;
  const Scalar _tmp188 = _tmp113 * _tmp79;
  const Scalar _tmp189 = _tmp111 * _tmp168 - _tmp111 * _tmp172 + _tmp120 +
                         _tmp170 * sqrt_info(1, 1) - _tmp171 * sqrt_info(1, 2) +
                         _tmp173 * sqrt_info(1, 2) + _tmp187 * sqrt_info(1, 0) -
                         _tmp188 * sqrt_info(1, 0);
  const Scalar _tmp190 = _tmp106 * _tmp117;
  const Scalar _tmp191 = _tmp106 * _tmp113;
  const Scalar _tmp192 = -2 * _tmp111 * _tmp176 + 2 * _tmp111 * _tmp177 + 2 * _tmp115 +
                         2 * _tmp170 * sqrt_info(1, 0) + 2 * _tmp178 * sqrt_info(1, 2) -
                         2 * _tmp179 * sqrt_info(1, 2) + 2 * _tmp190 * sqrt_info(1, 0) -
                         2 * _tmp191 * sqrt_info(1, 0);
  const Scalar _tmp193 = _tmp113 * _tmp94;
  const Scalar _tmp194 = _tmp117 * _tmp94;
  const Scalar _tmp195 = -_tmp111 * _tmp182 + _tmp111 * _tmp184 + _tmp124 +
                         _tmp170 * sqrt_info(1, 2) + _tmp181 * sqrt_info(1, 2) -
                         _tmp183 * sqrt_info(1, 2) - _tmp193 * sqrt_info(1, 0) +
                         _tmp194 * sqrt_info(1, 0);
  const Scalar _tmp196 = -_tmp128 * _tmp79 + _tmp129 * _tmp168 - _tmp129 * _tmp172 + _tmp133 +
                         _tmp170 * sqrt_info(2, 1) - _tmp171 * sqrt_info(2, 2) +
                         _tmp173 * sqrt_info(2, 2) + _tmp187 * sqrt_info(2, 0);
  const Scalar _tmp197 = -2 * _tmp106 * _tmp128 - 2 * _tmp126 * _tmp136 + 2 * _tmp131 +
                         2 * _tmp136 * _tmp4 * _tmp85 + 2 * _tmp170 * sqrt_info(2, 0) +
                         2 * _tmp178 * sqrt_info(2, 2) - 2 * _tmp179 * sqrt_info(2, 2) +
                         2 * _tmp190 * sqrt_info(2, 0);
  const Scalar _tmp198 = -_tmp127 * _tmp94 - _tmp128 * _tmp94 + _tmp129 * _tmp184 + _tmp137 +
                         _tmp169 * _tmp33 + _tmp181 * sqrt_info(2, 2) - _tmp183 * sqrt_info(2, 2) +
                         _tmp194 * sqrt_info(2, 0);
  const Scalar _tmp199 = _tmp139 * _tmp168 - _tmp139 * _tmp172 - _tmp142 * _tmp79 + _tmp143 +
                         _tmp170 * sqrt_info(3, 1) - _tmp171 * sqrt_info(3, 2) +
                         _tmp173 * sqrt_info(3, 2) + _tmp187 * sqrt_info(3, 0);
  const Scalar _tmp200 = -_tmp139 * _tmp176 + _tmp139 * _tmp177 + _tmp140 + _tmp169 * _tmp35 +
                         _tmp178 * sqrt_info(3, 2) - _tmp179 * sqrt_info(3, 2) +
                         _tmp190 * sqrt_info(3, 0) - _tmp191 * sqrt_info(3, 0);
  const Scalar _tmp201 = 2 * _tmp200;
  const Scalar _tmp202 = -_tmp139 * _tmp182 + _tmp139 * _tmp184 - _tmp142 * _tmp94 + _tmp145 +
                         _tmp169 * _tmp36 + _tmp181 * sqrt_info(3, 2) - _tmp183 * sqrt_info(3, 2) +
                         _tmp194 * sqrt_info(3, 0);
  const Scalar _tmp203 = _tmp149 * _tmp79 + _tmp150 + _tmp168 * _tmp37 + _tmp170 * sqrt_info(4, 1) -
                         _tmp171 * sqrt_info(4, 2) - _tmp172 * _tmp37 + _tmp173 * sqrt_info(4, 2) -
                         _tmp188 * sqrt_info(4, 0);
  const Scalar _tmp204 = 2 * _tmp106 * _tmp149 + 2 * _tmp147 + 2 * _tmp170 * sqrt_info(4, 0) -
                         2 * _tmp176 * _tmp37 + 2 * _tmp177 * _tmp37 +
                         2 * _tmp178 * sqrt_info(4, 2) - 2 * _tmp179 * sqrt_info(4, 2) -
                         2 * _tmp191 * sqrt_info(4, 0);
  const Scalar _tmp205 = _tmp149 * _tmp94 + _tmp152 + _tmp170 * sqrt_info(4, 2) +
                         _tmp181 * sqrt_info(4, 2) - _tmp182 * _tmp37 - _tmp183 * sqrt_info(4, 2) +
                         _tmp184 * _tmp37 - _tmp193 * sqrt_info(4, 0);
  const Scalar _tmp206 = _tmp154 * _tmp168 - _tmp154 * _tmp172 - _tmp158 * _tmp79 + _tmp159 +
                         _tmp170 * sqrt_info(5, 1) - _tmp171 * sqrt_info(5, 2) +
                         _tmp173 * sqrt_info(5, 2) + _tmp187 * sqrt_info(5, 0);
  const Scalar _tmp207 = 2 * _tmp106 * _tmp157 - 2 * _tmp154 * _tmp176 + 2 * _tmp155 +
                         2 * _tmp170 * sqrt_info(5, 0) + 2 * _tmp178 * sqrt_info(5, 2) -
                         2 * _tmp179 * sqrt_info(5, 2) + 2 * _tmp190 * sqrt_info(5, 0) -
                         2 * _tmp191 * sqrt_info(5, 0);
  const Scalar _tmp208 = -_tmp154 * _tmp182 + _tmp157 * _tmp94 - _tmp158 * _tmp94 + _tmp161 +
                         _tmp170 * sqrt_info(5, 2) + _tmp181 * sqrt_info(5, 2) -
                         _tmp183 * sqrt_info(5, 2) + _tmp194 * sqrt_info(5, 0);
  const Scalar _tmp209 = 2 * _y[3];
  const Scalar _tmp210 = 2 * _y[0];

  // Output terms (3)
  Eigen::Matrix<Scalar, 6, 1> _res;

  _res(0, 0) = _tmp16 * sqrt_info(0, 1) + _tmp23 * sqrt_info(0, 0) + _tmp29 * sqrt_info(0, 2) +
               _tmp30 * sqrt_info(0, 3) + _tmp31 * sqrt_info(0, 5) + _tmp32 * sqrt_info(0, 4);
  _res(1, 0) = _tmp16 * sqrt_info(1, 1) + _tmp23 * sqrt_info(1, 0) + _tmp29 * sqrt_info(1, 2) +
               _tmp30 * sqrt_info(1, 3) + _tmp31 * sqrt_info(1, 5) + _tmp32 * sqrt_info(1, 4);
  _res(2, 0) = _tmp16 * sqrt_info(2, 1) + _tmp23 * sqrt_info(2, 0) + _tmp30 * sqrt_info(2, 3) +
               _tmp31 * sqrt_info(2, 5) + _tmp32 * sqrt_info(2, 4) + _tmp33 * _tmp34;
  _res(3, 0) = _tmp16 * sqrt_info(3, 1) + _tmp22 * _tmp35 + _tmp30 * sqrt_info(3, 3) +
               _tmp31 * sqrt_info(3, 5) + _tmp32 * sqrt_info(3, 4) + _tmp34 * _tmp36;
  _res(4, 0) = _tmp15 * _tmp37 + _tmp23 * sqrt_info(4, 0) + _tmp29 * sqrt_info(4, 2) +
               _tmp30 * sqrt_info(4, 3) + _tmp31 * sqrt_info(4, 5) + _tmp32 * sqrt_info(4, 4);
  _res(5, 0) = _tmp16 * sqrt_info(5, 1) + _tmp23 * sqrt_info(5, 0) + _tmp29 * sqrt_info(5, 2) +
               _tmp30 * sqrt_info(5, 3) + _tmp31 * sqrt_info(5, 5) + _tmp32 * sqrt_info(5, 4);

  if (res_D_x != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 7, Eigen::RowMajor>> _res_D_x{res_D_x};

    _res_D_x(0, 0) = _tmp109 * _tmp110 + _tmp82 * _tmp83 - _tmp98 * _tmp99;
    _res_D_x(1, 0) = _tmp110 * _tmp125 + _tmp116 * _tmp83 - _tmp121 * _tmp99;
    _res_D_x(2, 0) = _tmp110 * _tmp138 + _tmp132 * _tmp83 - _tmp134 * _tmp99;
    _res_D_x(3, 0) = _tmp110 * _tmp146 + _tmp141 * _tmp83 - _tmp144 * _tmp99;
    _res_D_x(4, 0) = _tmp148 * _tmp83 - _tmp151 * _tmp99 + _tmp153 * _x[1];
    _res_D_x(5, 0) = _tmp110 * _tmp162 + _tmp156 * _tmp83 - _tmp160 * _tmp99;
    _res_D_x(0, 1) = -_tmp109 * _tmp163 + _tmp82 * _tmp99 + _tmp83 * _tmp98;
    _res_D_x(1, 1) = _tmp116 * _tmp99 + _tmp121 * _tmp83 - _tmp125 * _tmp163;
    _res_D_x(2, 1) = _tmp132 * _tmp99 - _tmp138 * _tmp163 + _tmp164 * _x[3];
    _res_D_x(3, 1) = _tmp141 * _tmp99 - _tmp146 * _tmp163 + _tmp165 * _x[3];
    _res_D_x(4, 1) = _tmp148 * _tmp99 - _tmp153 * _x[0] + _tmp166 * _x[3];
    _res_D_x(5, 1) = _tmp156 * _tmp99 - _tmp162 * _tmp163 + _tmp167 * _x[3];
    _res_D_x(0, 2) = _tmp109 * _tmp83 - _tmp110 * _tmp82 + _tmp163 * _tmp98;
    _res_D_x(1, 2) = -_tmp110 * _tmp116 + _tmp121 * _tmp163 + _tmp125 * _tmp83;
    _res_D_x(2, 2) = -_tmp110 * _tmp132 + _tmp138 * _tmp83 + _tmp164 * _x[0];
    _res_D_x(3, 2) = -_tmp110 * _tmp141 + _tmp146 * _tmp83 + _tmp165 * _x[0];
    _res_D_x(4, 2) = -_tmp110 * _tmp148 + _tmp153 * _x[3] + _tmp166 * _x[0];
    _res_D_x(5, 2) = -_tmp110 * _tmp156 + _tmp162 * _tmp83 + _tmp167 * _x[0];
    _res_D_x(0, 3) = -_tmp109 * _tmp99 - _tmp110 * _tmp98 - _tmp163 * _tmp82;
    _res_D_x(1, 3) = -_tmp110 * _tmp121 - _tmp116 * _tmp163 - _tmp125 * _tmp99;
    _res_D_x(2, 3) = -_tmp110 * _tmp134 - _tmp132 * _tmp163 - _tmp138 * _tmp99;
    _res_D_x(3, 3) = -_tmp110 * _tmp144 - _tmp141 * _tmp163 - _tmp146 * _tmp99;
    _res_D_x(4, 3) = -_tmp110 * _tmp151 - _tmp148 * _tmp163 - _tmp153 * _x[2];
    _res_D_x(5, 3) = -_tmp110 * _tmp160 - _tmp156 * _tmp163 - _tmp162 * _tmp99;
    _res_D_x(0, 4) = -sqrt_info(0, 3);
    _res_D_x(1, 4) = -sqrt_info(1, 3);
    _res_D_x(2, 4) = -sqrt_info(2, 3);
    _res_D_x(3, 4) = -sqrt_info(3, 3);
    _res_D_x(4, 4) = -sqrt_info(4, 3);
    _res_D_x(5, 4) = -sqrt_info(5, 3);
    _res_D_x(0, 5) = -sqrt_info(0, 4);
    _res_D_x(1, 5) = -sqrt_info(1, 4);
    _res_D_x(2, 5) = -sqrt_info(2, 4);
    _res_D_x(3, 5) = -sqrt_info(3, 4);
    _res_D_x(4, 5) = -sqrt_info(4, 4);
    _res_D_x(5, 5) = -sqrt_info(5, 4);
    _res_D_x(0, 6) = -sqrt_info(0, 5);
    _res_D_x(1, 6) = -sqrt_info(1, 5);
    _res_D_x(2, 6) = -sqrt_info(2, 5);
    _res_D_x(3, 6) = -sqrt_info(3, 5);
    _res_D_x(4, 6) = -sqrt_info(4, 5);
    _res_D_x(5, 6) = -sqrt_info(5, 5);
  }

  if (res_D_y != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 7, Eigen::RowMajor>> _res_D_y{res_D_y};

    _res_D_y(0, 0) = -_tmp174 * _tmp175 + _tmp180 * _y[3] + _tmp185 * _tmp186;
    _res_D_y(1, 0) = -_tmp175 * _tmp189 + _tmp186 * _tmp195 + _tmp192 * _y[3];
    _res_D_y(2, 0) = -_tmp175 * _tmp196 + _tmp186 * _tmp198 + _tmp197 * _y[3];
    _res_D_y(3, 0) = -_tmp175 * _tmp199 + _tmp186 * _tmp202 + _tmp201 * _y[3];
    _res_D_y(4, 0) = -_tmp175 * _tmp203 + _tmp186 * _tmp205 + _tmp204 * _y[3];
    _res_D_y(5, 0) = -_tmp175 * _tmp206 + _tmp186 * _tmp208 + _tmp207 * _y[3];
    _res_D_y(0, 1) = _tmp174 * _tmp209 + _tmp180 * _y[2] - _tmp185 * _tmp210;
    _res_D_y(1, 1) = _tmp189 * _tmp209 + _tmp192 * _y[2] - _tmp195 * _tmp210;
    _res_D_y(2, 1) = _tmp196 * _tmp209 + _tmp197 * _y[2] - _tmp198 * _tmp210;
    _res_D_y(3, 1) = _tmp199 * _tmp209 + _tmp201 * _y[2] - _tmp202 * _tmp210;
    _res_D_y(4, 1) = _tmp203 * _tmp209 + _tmp204 * _y[2] - _tmp205 * _tmp210;
    _res_D_y(5, 1) = _tmp206 * _tmp209 + _tmp207 * _y[2] - _tmp208 * _tmp210;
    _res_D_y(0, 2) = _tmp174 * _tmp210 - _tmp180 * _y[1] + _tmp185 * _tmp209;
    _res_D_y(1, 2) = _tmp189 * _tmp210 - _tmp192 * _y[1] + _tmp195 * _tmp209;
    _res_D_y(2, 2) = _tmp196 * _tmp210 - _tmp197 * _y[1] + _tmp198 * _tmp209;
    _res_D_y(3, 2) = _tmp199 * _tmp210 - _tmp201 * _y[1] + _tmp202 * _tmp209;
    _res_D_y(4, 2) = _tmp203 * _tmp210 - _tmp204 * _y[1] + _tmp205 * _tmp209;
    _res_D_y(5, 2) = _tmp206 * _tmp210 - _tmp207 * _y[1] + _tmp208 * _tmp209;
    _res_D_y(0, 3) = -_tmp174 * _tmp186 - _tmp175 * _tmp185 - _tmp180 * _y[0];
    _res_D_y(1, 3) = -_tmp175 * _tmp195 - _tmp186 * _tmp189 - _tmp192 * _y[0];
    _res_D_y(2, 3) = -_tmp175 * _tmp198 - _tmp186 * _tmp196 - _tmp197 * _y[0];
    _res_D_y(3, 3) = -_tmp175 * _tmp202 - _tmp186 * _tmp199 - _tmp200 * _tmp210;
    _res_D_y(4, 3) = -_tmp175 * _tmp205 - _tmp186 * _tmp203 - _tmp204 * _y[0];
    _res_D_y(5, 3) = -_tmp175 * _tmp208 - _tmp186 * _tmp206 - _tmp207 * _y[0];
    _res_D_y(0, 4) = sqrt_info(0, 3);
    _res_D_y(1, 4) = sqrt_info(1, 3);
    _res_D_y(2, 4) = sqrt_info(2, 3);
    _res_D_y(3, 4) = sqrt_info(3, 3);
    _res_D_y(4, 4) = sqrt_info(4, 3);
    _res_D_y(5, 4) = sqrt_info(5, 3);
    _res_D_y(0, 5) = sqrt_info(0, 4);
    _res_D_y(1, 5) = sqrt_info(1, 4);
    _res_D_y(2, 5) = sqrt_info(2, 4);
    _res_D_y(3, 5) = sqrt_info(3, 4);
    _res_D_y(4, 5) = sqrt_info(4, 4);
    _res_D_y(5, 5) = sqrt_info(5, 4);
    _res_D_y(0, 6) = sqrt_info(0, 5);
    _res_D_y(1, 6) = sqrt_info(1, 5);
    _res_D_y(2, 6) = sqrt_info(2, 5);
    _res_D_y(3, 6) = sqrt_info(3, 5);
    _res_D_y(4, 6) = sqrt_info(4, 5);
    _res_D_y(5, 6) = sqrt_info(5, 5);
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_ceres
