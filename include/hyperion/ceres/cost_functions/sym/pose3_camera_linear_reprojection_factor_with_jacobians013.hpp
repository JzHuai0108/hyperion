// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/linear_camera_cal.h>
#include <sym/pose3.h>

namespace sym_ceres {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: pose3_camera_linear_reprojection_factor
 *
 * Args:
 *     w_T_b: Pose3
 *     b_T_c: Pose3
 *     calibration: LinearCameraCal
 *     l_w: Matrix31
 *     pixel: Matrix21
 *     sqrt_info: Matrix22
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix21
 *     res_D_w_T_b: (2x7) jacobian (result_dim x storage_dim) of res (2) wrt arg w_T_b (7)
 * (row-major) res_D_b_T_c: (2x7) jacobian (result_dim x storage_dim) of res (2) wrt arg b_T_c (7)
 * (row-major) res_D_l_w: (2x3) jacobian (result_dim x storage_dim) of res (2) wrt arg l_w (3)
 * (row-major)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 2, 1> Pose3CameraLinearReprojectionFactorWithJacobians013(
    const sym::Pose3<Scalar>& w_T_b, const sym::Pose3<Scalar>& b_T_c,
    const sym::LinearCameraCal<Scalar>& calibration, const Eigen::Matrix<Scalar, 3, 1>& l_w,
    const Eigen::Matrix<Scalar, 2, 1>& pixel, const Eigen::Matrix<Scalar, 2, 2>& sqrt_info,
    const Scalar epsilon, Scalar* const res_D_w_T_b = nullptr, Scalar* const res_D_b_T_c = nullptr,
    Scalar* const res_D_l_w = nullptr) {
  // Total ops: 1128

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _w_T_b = w_T_b.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _b_T_c = b_T_c.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _calibration = calibration.Data();

  // Intermediate terms (375)
  const Scalar _tmp0 = _b_T_c[1] * _w_T_b[0];
  const Scalar _tmp1 = _b_T_c[2] * _w_T_b[3];
  const Scalar _tmp2 = _b_T_c[3] * _w_T_b[2];
  const Scalar _tmp3 = _b_T_c[0] * _w_T_b[1];
  const Scalar _tmp4 = _tmp0 + _tmp1 + _tmp2 - _tmp3;
  const Scalar _tmp5 = 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _b_T_c[1] * _w_T_b[2];
  const Scalar _tmp8 = _b_T_c[2] * _w_T_b[1];
  const Scalar _tmp9 = _b_T_c[3] * _w_T_b[0];
  const Scalar _tmp10 = _b_T_c[0] * _w_T_b[3];
  const Scalar _tmp11 = _tmp10 - _tmp7 + _tmp8 + _tmp9;
  const Scalar _tmp12 = 2 * std::pow(_tmp11, Scalar(2));
  const Scalar _tmp13 = 1 - _tmp12;
  const Scalar _tmp14 = _tmp13 + _tmp6;
  const Scalar _tmp15 = _b_T_c[1] * _w_T_b[3];
  const Scalar _tmp16 = _b_T_c[2] * _w_T_b[0];
  const Scalar _tmp17 = _b_T_c[3] * _w_T_b[1];
  const Scalar _tmp18 = _b_T_c[0] * _w_T_b[2];
  const Scalar _tmp19 = _tmp15 - _tmp16 + _tmp17 + _tmp18;
  const Scalar _tmp20 = 2 * _tmp19;
  const Scalar _tmp21 = _tmp11 * _tmp20;
  const Scalar _tmp22 = _b_T_c[1] * _w_T_b[1];
  const Scalar _tmp23 = _b_T_c[2] * _w_T_b[2];
  const Scalar _tmp24 = _b_T_c[0] * _w_T_b[0];
  const Scalar _tmp25 = _b_T_c[3] * _w_T_b[3];
  const Scalar _tmp26 = -_tmp22 - _tmp23 - _tmp24 + _tmp25;
  const Scalar _tmp27 = 2 * _tmp4;
  const Scalar _tmp28 = _tmp26 * _tmp27;
  const Scalar _tmp29 = -_tmp28;
  const Scalar _tmp30 = _tmp21 + _tmp29;
  const Scalar _tmp31 = _tmp19 * _tmp27;
  const Scalar _tmp32 = 2 * _tmp11;
  const Scalar _tmp33 = _tmp26 * _tmp32;
  const Scalar _tmp34 = _tmp31 + _tmp33;
  const Scalar _tmp35 = std::pow(_w_T_b[1], Scalar(2));
  const Scalar _tmp36 = -2 * _tmp35;
  const Scalar _tmp37 = std::pow(_w_T_b[0], Scalar(2));
  const Scalar _tmp38 = 1 - 2 * _tmp37;
  const Scalar _tmp39 = _tmp36 + _tmp38;
  const Scalar _tmp40 = 2 * _w_T_b[0];
  const Scalar _tmp41 = _tmp40 * _w_T_b[2];
  const Scalar _tmp42 = 2 * _w_T_b[3];
  const Scalar _tmp43 = _tmp42 * _w_T_b[1];
  const Scalar _tmp44 = -_tmp43;
  const Scalar _tmp45 = _tmp41 + _tmp44;
  const Scalar _tmp46 = _tmp42 * _w_T_b[0];
  const Scalar _tmp47 = 2 * _w_T_b[2];
  const Scalar _tmp48 = _tmp47 * _w_T_b[1];
  const Scalar _tmp49 = _tmp46 + _tmp48;
  const Scalar _tmp50 = _b_T_c[4] * _tmp45 + _b_T_c[5] * _tmp49 + _b_T_c[6] * _tmp39 + _w_T_b[6];
  const Scalar _tmp51 = std::pow(_w_T_b[2], Scalar(2));
  const Scalar _tmp52 = -2 * _tmp51;
  const Scalar _tmp53 = _tmp36 + _tmp52 + 1;
  const Scalar _tmp54 = _tmp40 * _w_T_b[1];
  const Scalar _tmp55 = _tmp42 * _w_T_b[2];
  const Scalar _tmp56 = -_tmp55;
  const Scalar _tmp57 = _tmp54 + _tmp56;
  const Scalar _tmp58 = _tmp41 + _tmp43;
  const Scalar _tmp59 = _b_T_c[4] * _tmp53 + _b_T_c[5] * _tmp57 + _b_T_c[6] * _tmp58 + _w_T_b[4];
  const Scalar _tmp60 = _tmp38 + _tmp52;
  const Scalar _tmp61 = _tmp54 + _tmp55;
  const Scalar _tmp62 = -_tmp46;
  const Scalar _tmp63 = _tmp48 + _tmp62;
  const Scalar _tmp64 = _b_T_c[4] * _tmp61 + _b_T_c[5] * _tmp60 + _b_T_c[6] * _tmp63 + _w_T_b[5];
  const Scalar _tmp65 = -_tmp14 * _tmp64 + _tmp14 * l_w(1, 0) - _tmp30 * _tmp59 +
                        _tmp30 * l_w(0, 0) - _tmp34 * _tmp50 + _tmp34 * l_w(2, 0);
  const Scalar _tmp66 = 2 * std::pow(_tmp19, Scalar(2));
  const Scalar _tmp67 = -_tmp66;
  const Scalar _tmp68 = _tmp13 + _tmp67;
  const Scalar _tmp69 = _tmp11 * _tmp27;
  const Scalar _tmp70 = _tmp20 * _tmp26;
  const Scalar _tmp71 = _tmp69 + _tmp70;
  const Scalar _tmp72 = -_tmp33;
  const Scalar _tmp73 = _tmp31 + _tmp72;
  const Scalar _tmp74 = -_tmp50 * _tmp68 - _tmp59 * _tmp71 - _tmp64 * _tmp73 + _tmp68 * l_w(2, 0) +
                        _tmp71 * l_w(0, 0) + _tmp73 * l_w(1, 0);
  const Scalar _tmp75 = std::max<Scalar>(_tmp74, epsilon);
  const Scalar _tmp76 = Scalar(1.0) / (_tmp75);
  const Scalar _tmp77 = _calibration[1] * _tmp76;
  const Scalar _tmp78 = _calibration[3] + _tmp65 * _tmp77 - pixel(1, 0);
  const Scalar _tmp79 = _tmp6 + _tmp67 + 1;
  const Scalar _tmp80 = -_tmp70;
  const Scalar _tmp81 = _tmp69 + _tmp80;
  const Scalar _tmp82 = _tmp21 + _tmp28;
  const Scalar _tmp83 = -_tmp50 * _tmp81 - _tmp59 * _tmp79 - _tmp64 * _tmp82 + _tmp79 * l_w(0, 0) +
                        _tmp81 * l_w(2, 0) + _tmp82 * l_w(1, 0);
  const Scalar _tmp84 = _calibration[0] * _tmp76;
  const Scalar _tmp85 = _calibration[2] + _tmp83 * _tmp84 - pixel(0, 0);
  const Scalar _tmp86 = std::max<Scalar>(0, (((_tmp74) > 0) - ((_tmp74) < 0)));
  const Scalar _tmp87 = (Scalar(1) / Scalar(2)) * _tmp8;
  const Scalar _tmp88 = (Scalar(1) / Scalar(2)) * _tmp10;
  const Scalar _tmp89 = -_tmp88;
  const Scalar _tmp90 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp91 = -_tmp90;
  const Scalar _tmp92 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp93 = -_tmp92;
  const Scalar _tmp94 = _tmp91 + _tmp93;
  const Scalar _tmp95 = _tmp87 + _tmp89 + _tmp94;
  const Scalar _tmp96 = _tmp32 * _tmp95;
  const Scalar _tmp97 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp98 = (Scalar(1) / Scalar(2)) * _tmp23;
  const Scalar _tmp99 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp100 = (Scalar(1) / Scalar(2)) * _tmp24;
  const Scalar _tmp101 = -_tmp100 + _tmp99;
  const Scalar _tmp102 = _tmp101 + _tmp97 + _tmp98;
  const Scalar _tmp103 = 2 * _tmp26;
  const Scalar _tmp104 = _tmp102 * _tmp103;
  const Scalar _tmp105 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp106 = (Scalar(1) / Scalar(2)) * _tmp16;
  const Scalar _tmp107 = -_tmp106;
  const Scalar _tmp108 = _tmp105 + _tmp107;
  const Scalar _tmp109 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp110 = -_tmp109;
  const Scalar _tmp111 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp112 = -_tmp111;
  const Scalar _tmp113 = _tmp110 + _tmp112;
  const Scalar _tmp114 = _tmp108 + _tmp113;
  const Scalar _tmp115 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp116 = -_tmp115;
  const Scalar _tmp117 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp118 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp119 = -_tmp118;
  const Scalar _tmp120 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp121 = -_tmp120;
  const Scalar _tmp122 = _tmp119 + _tmp121;
  const Scalar _tmp123 = _tmp116 + _tmp117 + _tmp122;
  const Scalar _tmp124 = _tmp114 * _tmp20 + _tmp123 * _tmp27;
  const Scalar _tmp125 = _tmp104 + _tmp124 + _tmp96;
  const Scalar _tmp126 = 4 * _tmp11;
  const Scalar _tmp127 = -_tmp102 * _tmp126;
  const Scalar _tmp128 = 4 * _tmp4;
  const Scalar _tmp129 = -_tmp114 * _tmp128;
  const Scalar _tmp130 = _tmp127 + _tmp129;
  const Scalar _tmp131 = _tmp27 * _tmp95;
  const Scalar _tmp132 = _tmp103 * _tmp114;
  const Scalar _tmp133 = _tmp102 * _tmp20 + _tmp123 * _tmp32;
  const Scalar _tmp134 = -_tmp131 - _tmp132 + _tmp133;
  const Scalar _tmp135 = -_tmp54;
  const Scalar _tmp136 = _b_T_c[5] * _tmp58 + _b_T_c[6] * (_tmp135 + _tmp55);
  const Scalar _tmp137 = -_tmp35;
  const Scalar _tmp138 = _tmp137 + _tmp37;
  const Scalar _tmp139 = std::pow(_w_T_b[3], Scalar(2));
  const Scalar _tmp140 = -_tmp139;
  const Scalar _tmp141 = _tmp140 + _tmp51;
  const Scalar _tmp142 = _b_T_c[5] * _tmp63 + _b_T_c[6] * (_tmp138 + _tmp141);
  const Scalar _tmp143 = -_tmp37;
  const Scalar _tmp144 = -_tmp48;
  const Scalar _tmp145 =
      _b_T_c[5] * (_tmp137 + _tmp139 + _tmp143 + _tmp51) + _b_T_c[6] * (_tmp144 + _tmp62);
  const Scalar _tmp146 = 4 * _tmp19;
  const Scalar _tmp147 = -_tmp123 * _tmp146;
  const Scalar _tmp148 = _tmp127 + _tmp147;
  const Scalar _tmp149 = _tmp20 * _tmp95;
  const Scalar _tmp150 = _tmp103 * _tmp123;
  const Scalar _tmp151 = _tmp102 * _tmp27 + _tmp114 * _tmp32;
  const Scalar _tmp152 = _tmp149 + _tmp150 + _tmp151;
  const Scalar _tmp153 = -_tmp104 + _tmp124 - _tmp96;
  const Scalar _tmp154 = -_tmp136 * _tmp71 - _tmp142 * _tmp73 - _tmp145 * _tmp68 -
                         _tmp148 * _tmp50 + _tmp148 * l_w(2, 0) - _tmp152 * _tmp59 +
                         _tmp152 * l_w(0, 0) - _tmp153 * _tmp64 + _tmp153 * l_w(1, 0);
  const Scalar _tmp155 = (Scalar(1) / Scalar(2)) *
                         ((((_tmp74 - epsilon) > 0) - ((_tmp74 - epsilon) < 0)) + 1) /
                         std::pow(_tmp75, Scalar(2));
  const Scalar _tmp156 = _calibration[1] * _tmp65;
  const Scalar _tmp157 = _tmp155 * _tmp156;
  const Scalar _tmp158 =
      -_tmp154 * _tmp157 + _tmp77 * (-_tmp125 * _tmp50 + _tmp125 * l_w(2, 0) - _tmp130 * _tmp64 +
                                     _tmp130 * l_w(1, 0) - _tmp134 * _tmp59 + _tmp134 * l_w(0, 0) -
                                     _tmp136 * _tmp30 - _tmp14 * _tmp142 - _tmp145 * _tmp34);
  const Scalar _tmp159 = _calibration[0] * _tmp83;
  const Scalar _tmp160 = _tmp155 * _tmp159;
  const Scalar _tmp161 = -_tmp149 - _tmp150 + _tmp151;
  const Scalar _tmp162 = _tmp129 + _tmp147;
  const Scalar _tmp163 = _tmp131 + _tmp132 + _tmp133;
  const Scalar _tmp164 =
      -_tmp154 * _tmp160 + _tmp84 * (-_tmp136 * _tmp79 - _tmp142 * _tmp82 - _tmp145 * _tmp81 -
                                     _tmp161 * _tmp50 + _tmp161 * l_w(2, 0) - _tmp162 * _tmp59 +
                                     _tmp162 * l_w(0, 0) - _tmp163 * _tmp64 + _tmp163 * l_w(1, 0));
  const Scalar _tmp165 = _tmp158 * sqrt_info(0, 1) + _tmp164 * sqrt_info(0, 0);
  const Scalar _tmp166 = _tmp42 * _tmp86;
  const Scalar _tmp167 = -_tmp117;
  const Scalar _tmp168 = _tmp115 + _tmp122 + _tmp167;
  const Scalar _tmp169 = -_tmp126 * _tmp168;
  const Scalar _tmp170 = -_tmp97;
  const Scalar _tmp171 = _tmp100 + _tmp99;
  const Scalar _tmp172 = _tmp170 + _tmp171 + _tmp98;
  const Scalar _tmp173 = -_tmp146 * _tmp172;
  const Scalar _tmp174 = _tmp169 + _tmp173;
  const Scalar _tmp175 = -_tmp105;
  const Scalar _tmp176 = _tmp107 + _tmp175;
  const Scalar _tmp177 = _tmp110 + _tmp111 + _tmp176;
  const Scalar _tmp178 = _tmp177 * _tmp32;
  const Scalar _tmp179 = _tmp103 * _tmp168;
  const Scalar _tmp180 = _tmp91 + _tmp92;
  const Scalar _tmp181 = -_tmp87;
  const Scalar _tmp182 = _tmp181 + _tmp89;
  const Scalar _tmp183 = _tmp180 + _tmp182;
  const Scalar _tmp184 = _tmp172 * _tmp27 + _tmp183 * _tmp20;
  const Scalar _tmp185 = -_tmp178 - _tmp179 + _tmp184;
  const Scalar _tmp186 = _tmp177 * _tmp20;
  const Scalar _tmp187 = _tmp103 * _tmp172;
  const Scalar _tmp188 = _tmp168 * _tmp27 + _tmp183 * _tmp32;
  const Scalar _tmp189 = _tmp186 + _tmp187 + _tmp188;
  const Scalar _tmp190 = -_tmp51;
  const Scalar _tmp191 = _tmp139 + _tmp190;
  const Scalar _tmp192 = -_tmp41;
  const Scalar _tmp193 = _b_T_c[4] * (_tmp192 + _tmp44) + _b_T_c[6] * (_tmp138 + _tmp191);
  const Scalar _tmp194 = _b_T_c[4] * (_tmp144 + _tmp46) + _b_T_c[6] * _tmp61;
  const Scalar _tmp195 = _b_T_c[4] * (_tmp140 + _tmp190 + _tmp35 + _tmp37) + _b_T_c[6] * _tmp45;
  const Scalar _tmp196 = -_tmp174 * _tmp50 + _tmp174 * l_w(2, 0) - _tmp185 * _tmp64 +
                         _tmp185 * l_w(1, 0) - _tmp189 * _tmp59 + _tmp189 * l_w(0, 0) -
                         _tmp193 * _tmp71 - _tmp194 * _tmp73 - _tmp195 * _tmp68;
  const Scalar _tmp197 = -_tmp128 * _tmp183;
  const Scalar _tmp198 = _tmp169 + _tmp197;
  const Scalar _tmp199 = _tmp178 + _tmp179 + _tmp184;
  const Scalar _tmp200 = _tmp177 * _tmp27;
  const Scalar _tmp201 = _tmp103 * _tmp183;
  const Scalar _tmp202 = _tmp168 * _tmp20 + _tmp172 * _tmp32;
  const Scalar _tmp203 = -_tmp200 - _tmp201 + _tmp202;
  const Scalar _tmp204 =
      -_tmp157 * _tmp196 + _tmp77 * (-_tmp14 * _tmp194 - _tmp193 * _tmp30 - _tmp195 * _tmp34 -
                                     _tmp198 * _tmp64 + _tmp198 * l_w(1, 0) - _tmp199 * _tmp50 +
                                     _tmp199 * l_w(2, 0) - _tmp203 * _tmp59 + _tmp203 * l_w(0, 0));
  const Scalar _tmp205 = -_tmp186 - _tmp187 + _tmp188;
  const Scalar _tmp206 = _tmp173 + _tmp197;
  const Scalar _tmp207 = _tmp200 + _tmp201 + _tmp202;
  const Scalar _tmp208 =
      -_tmp160 * _tmp196 + _tmp84 * (-_tmp193 * _tmp79 - _tmp194 * _tmp82 - _tmp195 * _tmp81 -
                                     _tmp205 * _tmp50 + _tmp205 * l_w(2, 0) - _tmp206 * _tmp59 +
                                     _tmp206 * l_w(0, 0) - _tmp207 * _tmp64 + _tmp207 * l_w(1, 0));
  const Scalar _tmp209 = _tmp204 * sqrt_info(0, 1) + _tmp208 * sqrt_info(0, 0);
  const Scalar _tmp210 = _tmp47 * _tmp86;
  const Scalar _tmp211 = _b_T_c[4] * _tmp49 + _b_T_c[5] * (_tmp192 + _tmp43);
  const Scalar _tmp212 = _tmp119 + _tmp120;
  const Scalar _tmp213 = _tmp116 + _tmp167;
  const Scalar _tmp214 = _tmp212 + _tmp213;
  const Scalar _tmp215 = _tmp20 * _tmp214;
  const Scalar _tmp216 = _tmp181 + _tmp88 + _tmp94;
  const Scalar _tmp217 = _tmp103 * _tmp216;
  const Scalar _tmp218 = -_tmp98;
  const Scalar _tmp219 = _tmp171 + _tmp218 + _tmp97;
  const Scalar _tmp220 = _tmp109 + _tmp112 + _tmp176;
  const Scalar _tmp221 = _tmp219 * _tmp32 + _tmp220 * _tmp27;
  const Scalar _tmp222 = _tmp215 + _tmp217 + _tmp221;
  const Scalar _tmp223 = -_tmp126 * _tmp220;
  const Scalar _tmp224 = -_tmp146 * _tmp216;
  const Scalar _tmp225 = _tmp223 + _tmp224;
  const Scalar _tmp226 = _tmp214 * _tmp32;
  const Scalar _tmp227 = _tmp103 * _tmp220;
  const Scalar _tmp228 = _tmp20 * _tmp219 + _tmp216 * _tmp27;
  const Scalar _tmp229 = -_tmp226 - _tmp227 + _tmp228;
  const Scalar _tmp230 = _tmp143 + _tmp35;
  const Scalar _tmp231 = _b_T_c[4] * _tmp57 + _b_T_c[5] * (_tmp141 + _tmp230);
  const Scalar _tmp232 = _b_T_c[4] * (_tmp191 + _tmp230) + _b_T_c[5] * (_tmp135 + _tmp56);
  const Scalar _tmp233 = -_tmp211 * _tmp68 - _tmp222 * _tmp59 + _tmp222 * l_w(0, 0) -
                         _tmp225 * _tmp50 + _tmp225 * l_w(2, 0) - _tmp229 * _tmp64 +
                         _tmp229 * l_w(1, 0) - _tmp231 * _tmp71 - _tmp232 * _tmp73;
  const Scalar _tmp234 = -_tmp215 - _tmp217 + _tmp221;
  const Scalar _tmp235 = _tmp214 * _tmp27;
  const Scalar _tmp236 = _tmp103 * _tmp219;
  const Scalar _tmp237 = _tmp20 * _tmp220 + _tmp216 * _tmp32;
  const Scalar _tmp238 = _tmp235 + _tmp236 + _tmp237;
  const Scalar _tmp239 = -_tmp128 * _tmp219;
  const Scalar _tmp240 = _tmp224 + _tmp239;
  const Scalar _tmp241 =
      -_tmp160 * _tmp233 + _tmp84 * (-_tmp211 * _tmp81 - _tmp231 * _tmp79 - _tmp232 * _tmp82 -
                                     _tmp234 * _tmp50 + _tmp234 * l_w(2, 0) - _tmp238 * _tmp64 +
                                     _tmp238 * l_w(1, 0) - _tmp240 * _tmp59 + _tmp240 * l_w(0, 0));
  const Scalar _tmp242 = _tmp223 + _tmp239;
  const Scalar _tmp243 = _tmp226 + _tmp227 + _tmp228;
  const Scalar _tmp244 = -_tmp235 - _tmp236 + _tmp237;
  const Scalar _tmp245 =
      -_tmp157 * _tmp233 + _tmp77 * (-_tmp14 * _tmp232 - _tmp211 * _tmp34 - _tmp231 * _tmp30 -
                                     _tmp242 * _tmp64 + _tmp242 * l_w(1, 0) - _tmp243 * _tmp50 +
                                     _tmp243 * l_w(2, 0) - _tmp244 * _tmp59 + _tmp244 * l_w(0, 0));
  const Scalar _tmp246 = _tmp241 * sqrt_info(0, 0) + _tmp245 * sqrt_info(0, 1);
  const Scalar _tmp247 = 2 * _tmp86;
  const Scalar _tmp248 = _tmp247 * _w_T_b[1];
  const Scalar _tmp249 = _tmp158 * sqrt_info(1, 1) + _tmp164 * sqrt_info(1, 0);
  const Scalar _tmp250 = _tmp204 * sqrt_info(1, 1) + _tmp208 * sqrt_info(1, 0);
  const Scalar _tmp251 = _tmp241 * sqrt_info(1, 0) + _tmp245 * sqrt_info(1, 1);
  const Scalar _tmp252 = _tmp40 * _tmp86;
  const Scalar _tmp253 = -_tmp69;
  const Scalar _tmp254 = _tmp253 + _tmp80;
  const Scalar _tmp255 = -_tmp21;
  const Scalar _tmp256 = -_tmp157 * _tmp254 + _tmp77 * (_tmp255 + _tmp28);
  const Scalar _tmp257 = -_tmp160 * _tmp254 + _tmp84 * (_tmp5 + _tmp66 - 1);
  const Scalar _tmp258 = -_tmp31;
  const Scalar _tmp259 = _tmp258 + _tmp33;
  const Scalar _tmp260 = -_tmp160 * _tmp259 + _tmp84 * (_tmp255 + _tmp29);
  const Scalar _tmp261 = _tmp12 - 1;
  const Scalar _tmp262 = -_tmp157 * _tmp259 + _tmp77 * (_tmp261 + _tmp5);
  const Scalar _tmp263 = _tmp261 + _tmp66;
  const Scalar _tmp264 = -_tmp160 * _tmp263 + _tmp84 * (_tmp253 + _tmp70);
  const Scalar _tmp265 = -_tmp157 * _tmp263 + _tmp77 * (_tmp258 + _tmp72);
  const Scalar _tmp266 = _tmp118 + _tmp121 + _tmp213;
  const Scalar _tmp267 = 2 * _tmp266;
  const Scalar _tmp268 = _tmp19 * _tmp267;
  const Scalar _tmp269 = _tmp182 + _tmp90 + _tmp93;
  const Scalar _tmp270 = _tmp103 * _tmp269;
  const Scalar _tmp271 = _tmp101 + _tmp170 + _tmp218;
  const Scalar _tmp272 = _tmp271 * _tmp32;
  const Scalar _tmp273 = _tmp108 + _tmp109 + _tmp111;
  const Scalar _tmp274 = _tmp27 * _tmp273 + _tmp272;
  const Scalar _tmp275 = _tmp268 + _tmp270 + _tmp274;
  const Scalar _tmp276 = -_tmp126 * _tmp273;
  const Scalar _tmp277 = -_tmp146 * _tmp269;
  const Scalar _tmp278 = _tmp276 + _tmp277;
  const Scalar _tmp279 = _tmp11 * _tmp267;
  const Scalar _tmp280 = _tmp103 * _tmp273;
  const Scalar _tmp281 = _tmp20 * _tmp271;
  const Scalar _tmp282 = _tmp269 * _tmp27;
  const Scalar _tmp283 = _tmp281 + _tmp282;
  const Scalar _tmp284 = -_tmp279 - _tmp280 + _tmp283;
  const Scalar _tmp285 = _tmp155 * (-_tmp275 * _tmp59 + _tmp275 * l_w(0, 0) - _tmp278 * _tmp50 +
                                    _tmp278 * l_w(2, 0) - _tmp284 * _tmp64 + _tmp284 * l_w(1, 0));
  const Scalar _tmp286 = -_tmp268 - _tmp270 + _tmp274;
  const Scalar _tmp287 = _tmp266 * _tmp27;
  const Scalar _tmp288 = _tmp103 * _tmp271;
  const Scalar _tmp289 = _tmp287 + _tmp288;
  const Scalar _tmp290 = _tmp269 * _tmp32;
  const Scalar _tmp291 = _tmp20 * _tmp273 + _tmp290;
  const Scalar _tmp292 = _tmp289 + _tmp291;
  const Scalar _tmp293 = -_tmp128 * _tmp271;
  const Scalar _tmp294 = _tmp277 + _tmp293;
  const Scalar _tmp295 =
      -_tmp159 * _tmp285 + _tmp84 * (-_tmp286 * _tmp50 + _tmp286 * l_w(2, 0) - _tmp292 * _tmp64 +
                                     _tmp292 * l_w(1, 0) - _tmp294 * _tmp59 + _tmp294 * l_w(0, 0));
  const Scalar _tmp296 = _tmp276 + _tmp293;
  const Scalar _tmp297 = _tmp279 + _tmp280 + _tmp283;
  const Scalar _tmp298 = -_tmp288;
  const Scalar _tmp299 = -_tmp287 + _tmp291 + _tmp298;
  const Scalar _tmp300 =
      -_tmp156 * _tmp285 + _tmp77 * (-_tmp296 * _tmp64 + _tmp296 * l_w(1, 0) - _tmp297 * _tmp50 +
                                     _tmp297 * l_w(2, 0) - _tmp299 * _tmp59 + _tmp299 * l_w(0, 0));
  const Scalar _tmp301 = _tmp295 * sqrt_info(0, 0) + _tmp300 * sqrt_info(0, 1);
  const Scalar _tmp302 = _tmp247 * _tmp301;
  const Scalar _tmp303 = -_tmp126 * _tmp266;
  const Scalar _tmp304 = _tmp180 + _tmp87 + _tmp88;
  const Scalar _tmp305 = -_tmp128 * _tmp304;
  const Scalar _tmp306 = _tmp303 + _tmp305;
  const Scalar _tmp307 = _tmp106 + _tmp113 + _tmp175;
  const Scalar _tmp308 = _tmp307 * _tmp32;
  const Scalar _tmp309 = _tmp26 * _tmp267;
  const Scalar _tmp310 = _tmp27 * _tmp271;
  const Scalar _tmp311 = _tmp20 * _tmp304 + _tmp310;
  const Scalar _tmp312 = _tmp308 + _tmp309 + _tmp311;
  const Scalar _tmp313 = _tmp27 * _tmp307;
  const Scalar _tmp314 = _tmp103 * _tmp304;
  const Scalar _tmp315 = _tmp268 + _tmp272;
  const Scalar _tmp316 = -_tmp313 - _tmp314 + _tmp315;
  const Scalar _tmp317 = -_tmp146 * _tmp271;
  const Scalar _tmp318 = _tmp303 + _tmp317;
  const Scalar _tmp319 = -_tmp308 - _tmp309 + _tmp311;
  const Scalar _tmp320 = _tmp304 * _tmp32;
  const Scalar _tmp321 = _tmp20 * _tmp307;
  const Scalar _tmp322 = _tmp289 + _tmp320 + _tmp321;
  const Scalar _tmp323 = -_tmp318 * _tmp50 + _tmp318 * l_w(2, 0) - _tmp319 * _tmp64 +
                         _tmp319 * l_w(1, 0) - _tmp322 * _tmp59 + _tmp322 * l_w(0, 0);
  const Scalar _tmp324 =
      -_tmp157 * _tmp323 + _tmp77 * (-_tmp306 * _tmp64 + _tmp306 * l_w(1, 0) - _tmp312 * _tmp50 +
                                     _tmp312 * l_w(2, 0) - _tmp316 * _tmp59 + _tmp316 * l_w(0, 0));
  const Scalar _tmp325 = _tmp287 + _tmp298 + _tmp320 - _tmp321;
  const Scalar _tmp326 = _tmp305 + _tmp317;
  const Scalar _tmp327 = _tmp313 + _tmp314 + _tmp315;
  const Scalar _tmp328 =
      -_tmp160 * _tmp323 + _tmp84 * (-_tmp325 * _tmp50 + _tmp325 * l_w(2, 0) - _tmp326 * _tmp59 +
                                     _tmp326 * l_w(0, 0) - _tmp327 * _tmp64 + _tmp327 * l_w(1, 0));
  const Scalar _tmp329 = _tmp324 * sqrt_info(0, 1) + _tmp328 * sqrt_info(0, 0);
  const Scalar _tmp330 = _b_T_c[2] * _tmp247;
  const Scalar _tmp331 = _tmp20 * _tmp269;
  const Scalar _tmp332 = _tmp115 + _tmp117 + _tmp212;
  const Scalar _tmp333 = _tmp103 * _tmp332;
  const Scalar _tmp334 = _tmp308 + _tmp310;
  const Scalar _tmp335 = -_tmp331 - _tmp333 + _tmp334;
  const Scalar _tmp336 = -_tmp146 * _tmp332;
  const Scalar _tmp337 = -_tmp128 * _tmp307;
  const Scalar _tmp338 = _tmp336 + _tmp337;
  const Scalar _tmp339 = _tmp103 * _tmp307;
  const Scalar _tmp340 = _tmp281 + _tmp32 * _tmp332;
  const Scalar _tmp341 = _tmp282 + _tmp339 + _tmp340;
  const Scalar _tmp342 = -_tmp126 * _tmp271;
  const Scalar _tmp343 = _tmp336 + _tmp342;
  const Scalar _tmp344 = _tmp331 + _tmp333 + _tmp334;
  const Scalar _tmp345 = _tmp27 * _tmp332 + _tmp321;
  const Scalar _tmp346 = -_tmp290 + _tmp298 + _tmp345;
  const Scalar _tmp347 = -_tmp343 * _tmp50 + _tmp343 * l_w(2, 0) - _tmp344 * _tmp59 +
                         _tmp344 * l_w(0, 0) - _tmp346 * _tmp64 + _tmp346 * l_w(1, 0);
  const Scalar _tmp348 =
      -_tmp160 * _tmp347 + _tmp84 * (-_tmp335 * _tmp50 + _tmp335 * l_w(2, 0) - _tmp338 * _tmp59 +
                                     _tmp338 * l_w(0, 0) - _tmp341 * _tmp64 + _tmp341 * l_w(1, 0));
  const Scalar _tmp349 = _tmp288 + _tmp290 + _tmp345;
  const Scalar _tmp350 = _tmp337 + _tmp342;
  const Scalar _tmp351 = -_tmp282 - _tmp339 + _tmp340;
  const Scalar _tmp352 =
      -_tmp157 * _tmp347 + _tmp77 * (-_tmp349 * _tmp50 + _tmp349 * l_w(2, 0) - _tmp350 * _tmp64 +
                                     _tmp350 * l_w(1, 0) - _tmp351 * _tmp59 + _tmp351 * l_w(0, 0));
  const Scalar _tmp353 = _tmp247 * (_tmp348 * sqrt_info(0, 0) + _tmp352 * sqrt_info(0, 1));
  const Scalar _tmp354 = _tmp247 * (_tmp348 * sqrt_info(1, 0) + _tmp352 * sqrt_info(1, 1));
  const Scalar _tmp355 = _tmp295 * sqrt_info(1, 0) + _tmp300 * sqrt_info(1, 1);
  const Scalar _tmp356 = _tmp247 * _tmp355;
  const Scalar _tmp357 = _tmp324 * sqrt_info(1, 1) + _tmp328 * sqrt_info(1, 0);
  const Scalar _tmp358 = _tmp247 * _tmp329;
  const Scalar _tmp359 = _tmp247 * _tmp357;
  const Scalar _tmp360 = -_tmp45 * _tmp68 - _tmp53 * _tmp71 - _tmp61 * _tmp73;
  const Scalar _tmp361 =
      -_tmp157 * _tmp360 + _tmp77 * (-_tmp14 * _tmp61 - _tmp30 * _tmp53 - _tmp34 * _tmp45);
  const Scalar _tmp362 =
      -_tmp160 * _tmp360 + _tmp84 * (-_tmp45 * _tmp81 - _tmp53 * _tmp79 - _tmp61 * _tmp82);
  const Scalar _tmp363 = -_tmp49 * _tmp68 - _tmp57 * _tmp71 - _tmp60 * _tmp73;
  const Scalar _tmp364 =
      -_tmp157 * _tmp363 + _tmp77 * (-_tmp14 * _tmp60 - _tmp30 * _tmp57 - _tmp34 * _tmp49);
  const Scalar _tmp365 =
      -_tmp160 * _tmp363 + _tmp84 * (-_tmp49 * _tmp81 - _tmp57 * _tmp79 - _tmp60 * _tmp82);
  const Scalar _tmp366 = -_tmp39 * _tmp68 - _tmp58 * _tmp71 - _tmp63 * _tmp73;
  const Scalar _tmp367 =
      -_tmp157 * _tmp366 + _tmp77 * (-_tmp14 * _tmp63 - _tmp30 * _tmp58 - _tmp34 * _tmp39);
  const Scalar _tmp368 =
      -_tmp160 * _tmp366 + _tmp84 * (-_tmp39 * _tmp81 - _tmp58 * _tmp79 - _tmp63 * _tmp82);
  const Scalar _tmp369 = -_tmp157 * _tmp71 + _tmp30 * _tmp77;
  const Scalar _tmp370 = -_tmp160 * _tmp71 + _tmp79 * _tmp84;
  const Scalar _tmp371 = -_tmp160 * _tmp73 + _tmp82 * _tmp84;
  const Scalar _tmp372 = _tmp14 * _tmp77 - _tmp157 * _tmp73;
  const Scalar _tmp373 = -_tmp160 * _tmp68 + _tmp81 * _tmp84;
  const Scalar _tmp374 = -_tmp157 * _tmp68 + _tmp34 * _tmp77;

  // Output terms (4)
  Eigen::Matrix<Scalar, 2, 1> _res;

  _res(0, 0) = _tmp86 * (_tmp78 * sqrt_info(0, 1) + _tmp85 * sqrt_info(0, 0));
  _res(1, 0) = _tmp86 * (_tmp78 * sqrt_info(1, 1) + _tmp85 * sqrt_info(1, 0));

  if (res_D_w_T_b != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 2, 7, Eigen::RowMajor>> _res_D_w_T_b{res_D_w_T_b};

    _res_D_w_T_b(0, 0) = _tmp165 * _tmp166 - _tmp209 * _tmp210 + _tmp246 * _tmp248;
    _res_D_w_T_b(1, 0) = _tmp166 * _tmp249 - _tmp210 * _tmp250 + _tmp248 * _tmp251;
    _res_D_w_T_b(0, 1) = _tmp165 * _tmp210 + _tmp166 * _tmp209 - _tmp246 * _tmp252;
    _res_D_w_T_b(1, 1) = _tmp166 * _tmp250 + _tmp210 * _tmp249 - _tmp251 * _tmp252;
    _res_D_w_T_b(0, 2) = -_tmp165 * _tmp248 + _tmp166 * _tmp246 + _tmp209 * _tmp252;
    _res_D_w_T_b(1, 2) = _tmp166 * _tmp251 - _tmp248 * _tmp249 + _tmp250 * _tmp252;
    _res_D_w_T_b(0, 3) = -_tmp165 * _tmp252 - _tmp209 * _tmp248 - _tmp210 * _tmp246;
    _res_D_w_T_b(1, 3) = -_tmp210 * _tmp251 - _tmp248 * _tmp250 - _tmp249 * _tmp252;
    _res_D_w_T_b(0, 4) = _tmp86 * (_tmp256 * sqrt_info(0, 1) + _tmp257 * sqrt_info(0, 0));
    _res_D_w_T_b(1, 4) = _tmp86 * (_tmp256 * sqrt_info(1, 1) + _tmp257 * sqrt_info(1, 0));
    _res_D_w_T_b(0, 5) = _tmp86 * (_tmp260 * sqrt_info(0, 0) + _tmp262 * sqrt_info(0, 1));
    _res_D_w_T_b(1, 5) = _tmp86 * (_tmp260 * sqrt_info(1, 0) + _tmp262 * sqrt_info(1, 1));
    _res_D_w_T_b(0, 6) = _tmp86 * (_tmp264 * sqrt_info(0, 0) + _tmp265 * sqrt_info(0, 1));
    _res_D_w_T_b(1, 6) = _tmp86 * (_tmp264 * sqrt_info(1, 0) + _tmp265 * sqrt_info(1, 1));
  }

  if (res_D_b_T_c != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 2, 7, Eigen::RowMajor>> _res_D_b_T_c{res_D_b_T_c};

    _res_D_b_T_c(0, 0) = _b_T_c[1] * _tmp302 + _b_T_c[3] * _tmp353 - _tmp329 * _tmp330;
    _res_D_b_T_c(1, 0) = _b_T_c[1] * _tmp356 + _b_T_c[3] * _tmp354 - _tmp330 * _tmp357;
    _res_D_b_T_c(0, 1) = -_b_T_c[0] * _tmp302 + _b_T_c[2] * _tmp353 + _b_T_c[3] * _tmp358;
    _res_D_b_T_c(1, 1) = -_b_T_c[0] * _tmp356 + _b_T_c[2] * _tmp354 + _b_T_c[3] * _tmp359;
    _res_D_b_T_c(0, 2) = _b_T_c[0] * _tmp358 - _b_T_c[1] * _tmp353 + _b_T_c[3] * _tmp302;
    _res_D_b_T_c(1, 2) = _b_T_c[0] * _tmp359 - _b_T_c[1] * _tmp354 + _b_T_c[3] * _tmp356;
    _res_D_b_T_c(0, 3) = -_b_T_c[0] * _tmp353 - _b_T_c[1] * _tmp358 - _tmp301 * _tmp330;
    _res_D_b_T_c(1, 3) = -_b_T_c[0] * _tmp354 - _b_T_c[1] * _tmp359 - _tmp330 * _tmp355;
    _res_D_b_T_c(0, 4) = _tmp86 * (_tmp361 * sqrt_info(0, 1) + _tmp362 * sqrt_info(0, 0));
    _res_D_b_T_c(1, 4) = _tmp86 * (_tmp361 * sqrt_info(1, 1) + _tmp362 * sqrt_info(1, 0));
    _res_D_b_T_c(0, 5) = _tmp86 * (_tmp364 * sqrt_info(0, 1) + _tmp365 * sqrt_info(0, 0));
    _res_D_b_T_c(1, 5) = _tmp86 * (_tmp364 * sqrt_info(1, 1) + _tmp365 * sqrt_info(1, 0));
    _res_D_b_T_c(0, 6) = _tmp86 * (_tmp367 * sqrt_info(0, 1) + _tmp368 * sqrt_info(0, 0));
    _res_D_b_T_c(1, 6) = _tmp86 * (_tmp367 * sqrt_info(1, 1) + _tmp368 * sqrt_info(1, 0));
  }

  if (res_D_l_w != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 2, 3, Eigen::RowMajor>> _res_D_l_w{res_D_l_w};

    _res_D_l_w(0, 0) = _tmp86 * (_tmp369 * sqrt_info(0, 1) + _tmp370 * sqrt_info(0, 0));
    _res_D_l_w(1, 0) = _tmp86 * (_tmp369 * sqrt_info(1, 1) + _tmp370 * sqrt_info(1, 0));
    _res_D_l_w(0, 1) = _tmp86 * (_tmp371 * sqrt_info(0, 0) + _tmp372 * sqrt_info(0, 1));
    _res_D_l_w(1, 1) = _tmp86 * (_tmp371 * sqrt_info(1, 0) + _tmp372 * sqrt_info(1, 1));
    _res_D_l_w(0, 2) = _tmp86 * (_tmp373 * sqrt_info(0, 0) + _tmp374 * sqrt_info(0, 1));
    _res_D_l_w(1, 2) = _tmp86 * (_tmp373 * sqrt_info(1, 0) + _tmp374 * sqrt_info(1, 1));
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_ceres
