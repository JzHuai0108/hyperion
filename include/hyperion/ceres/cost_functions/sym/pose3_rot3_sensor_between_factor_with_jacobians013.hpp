// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>
#include <sym/rot3.h>

namespace sym_ceres {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: pose3_rot3_sensor_between_factor
 *
 * Args:
 *     x: Pose3
 *     x_T_s: Pose3
 *     s_T_y: Rot3
 *     y: Pose3
 *     sqrt_info: Matrix33
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix31
 *     res_D_x: (3x7) jacobian (result_dim x storage_dim) of res (3) wrt arg x (7) (row-major)
 *     res_D_x_T_s: (3x7) jacobian (result_dim x storage_dim) of res (3) wrt arg x_T_s (7)
 * (row-major) res_D_y: (3x7) jacobian (result_dim x storage_dim) of res (3) wrt arg y (7)
 * (row-major)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 3, 1> Pose3Rot3SensorBetweenFactorWithJacobians013(
    const sym::Pose3<Scalar>& x, const sym::Pose3<Scalar>& x_T_s, const sym::Rot3<Scalar>& s_T_y,
    const sym::Pose3<Scalar>& y, const Eigen::Matrix<Scalar, 3, 3>& sqrt_info, const Scalar epsilon,
    Scalar* const res_D_x = nullptr, Scalar* const res_D_x_T_s = nullptr,
    Scalar* const res_D_y = nullptr) {
  // Total ops: 1416

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x = x.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x_T_s = x_T_s.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _s_T_y = s_T_y.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y = y.Data();

  // Intermediate terms (349)
  const Scalar _tmp0 = _x[3] * _x_T_s[2];
  const Scalar _tmp1 = _x[2] * _x_T_s[3];
  const Scalar _tmp2 = _x[1] * _x_T_s[0];
  const Scalar _tmp3 = _x[0] * _x_T_s[1];
  const Scalar _tmp4 = _tmp0 + _tmp1 - _tmp2 + _tmp3;
  const Scalar _tmp5 = _tmp4 * _y[3];
  const Scalar _tmp6 = _x[3] * _x_T_s[1];
  const Scalar _tmp7 = _x[2] * _x_T_s[0];
  const Scalar _tmp8 = _x[1] * _x_T_s[3];
  const Scalar _tmp9 = _x[0] * _x_T_s[2];
  const Scalar _tmp10 = _tmp6 + _tmp7 + _tmp8 - _tmp9;
  const Scalar _tmp11 = _tmp10 * _y[0];
  const Scalar _tmp12 = _x[3] * _x_T_s[0];
  const Scalar _tmp13 = _x[2] * _x_T_s[1];
  const Scalar _tmp14 = _x[1] * _x_T_s[2];
  const Scalar _tmp15 = _x[0] * _x_T_s[3];
  const Scalar _tmp16 = _tmp12 - _tmp13 + _tmp14 + _tmp15;
  const Scalar _tmp17 = _tmp16 * _y[1];
  const Scalar _tmp18 = _x[3] * _x_T_s[3];
  const Scalar _tmp19 = _x[2] * _x_T_s[2];
  const Scalar _tmp20 = _x[1] * _x_T_s[1];
  const Scalar _tmp21 = _x[0] * _x_T_s[0];
  const Scalar _tmp22 = _tmp18 - _tmp19 - _tmp20 - _tmp21;
  const Scalar _tmp23 = _tmp22 * _y[2];
  const Scalar _tmp24 = _tmp11 - _tmp17 + _tmp23 - _tmp5;
  const Scalar _tmp25 = _tmp4 * _y[1];
  const Scalar _tmp26 = _tmp10 * _y[2];
  const Scalar _tmp27 = _tmp16 * _y[3];
  const Scalar _tmp28 = _tmp22 * _y[0];
  const Scalar _tmp29 = _tmp25 - _tmp26 - _tmp27 + _tmp28;
  const Scalar _tmp30 = _tmp4 * _y[0];
  const Scalar _tmp31 = _tmp10 * _y[3];
  const Scalar _tmp32 = _tmp16 * _y[2];
  const Scalar _tmp33 = _tmp22 * _y[1];
  const Scalar _tmp34 = -_tmp30 - _tmp31 + _tmp32 + _tmp33;
  const Scalar _tmp35 = _tmp4 * _y[2];
  const Scalar _tmp36 = _tmp10 * _y[1];
  const Scalar _tmp37 = _tmp16 * _y[0];
  const Scalar _tmp38 = _tmp22 * _y[3];
  const Scalar _tmp39 = _tmp35 + _tmp36 + _tmp37 + _tmp38;
  const Scalar _tmp40 =
      -_s_T_y[0] * _tmp39 - _s_T_y[1] * _tmp24 + _s_T_y[2] * _tmp34 + _s_T_y[3] * _tmp29;
  const Scalar _tmp41 = _s_T_y[2] * _tmp24;
  const Scalar _tmp42 = _s_T_y[0] * _tmp29;
  const Scalar _tmp43 = _s_T_y[1] * _tmp34;
  const Scalar _tmp44 = -_tmp41 - _tmp42 - _tmp43;
  const Scalar _tmp45 = _s_T_y[3] * _tmp39;
  const Scalar _tmp46 =
      2 * std::min<Scalar>(0, (((-_tmp44 + _tmp45) > 0) - ((-_tmp44 + _tmp45) < 0))) + 1;
  const Scalar _tmp47 = 2 * _tmp46;
  const Scalar _tmp48 = 1 - epsilon;
  const Scalar _tmp49 = std::min<Scalar>(_tmp48, std::fabs(_tmp44 - _tmp45));
  const Scalar _tmp50 = std::acos(_tmp49) / std::sqrt(Scalar(1 - std::pow(_tmp49, Scalar(2))));
  const Scalar _tmp51 = _tmp47 * _tmp50;
  const Scalar _tmp52 = _tmp40 * _tmp51;
  const Scalar _tmp53 =
      -_s_T_y[0] * _tmp34 + _s_T_y[1] * _tmp29 - _s_T_y[2] * _tmp39 + _s_T_y[3] * _tmp24;
  const Scalar _tmp54 = _tmp53 * sqrt_info(0, 2);
  const Scalar _tmp55 =
      _s_T_y[0] * _tmp24 - _s_T_y[1] * _tmp39 - _s_T_y[2] * _tmp29 + _s_T_y[3] * _tmp34;
  const Scalar _tmp56 = _tmp51 * _tmp55;
  const Scalar _tmp57 = _tmp47 * sqrt_info(1, 2);
  const Scalar _tmp58 = _tmp53 * sqrt_info(2, 2);
  const Scalar _tmp59 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp60 = -_tmp59;
  const Scalar _tmp61 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp62 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp63 = -_tmp62;
  const Scalar _tmp64 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp65 = -_tmp64;
  const Scalar _tmp66 = _tmp63 + _tmp65;
  const Scalar _tmp67 = _tmp60 + _tmp61 + _tmp66;
  const Scalar _tmp68 = (Scalar(1) / Scalar(2)) * _tmp21;
  const Scalar _tmp69 = -_tmp68;
  const Scalar _tmp70 = (Scalar(1) / Scalar(2)) * _tmp19;
  const Scalar _tmp71 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp72 = (Scalar(1) / Scalar(2)) * _tmp20;
  const Scalar _tmp73 = _tmp71 + _tmp72;
  const Scalar _tmp74 = _tmp69 + _tmp70 + _tmp73;
  const Scalar _tmp75 = (Scalar(1) / Scalar(2)) * _tmp8;
  const Scalar _tmp76 = -_tmp75;
  const Scalar _tmp77 = (Scalar(1) / Scalar(2)) * _tmp6;
  const Scalar _tmp78 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp79 = -_tmp78;
  const Scalar _tmp80 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp81 = -_tmp80;
  const Scalar _tmp82 = _tmp79 + _tmp81;
  const Scalar _tmp83 = _tmp76 + _tmp77 + _tmp82;
  const Scalar _tmp84 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp85 = -_tmp84;
  const Scalar _tmp86 = (Scalar(1) / Scalar(2)) * _tmp14;
  const Scalar _tmp87 = (Scalar(1) / Scalar(2)) * _tmp13;
  const Scalar _tmp88 = -_tmp87;
  const Scalar _tmp89 = (Scalar(1) / Scalar(2)) * _tmp12;
  const Scalar _tmp90 = -_tmp89;
  const Scalar _tmp91 = _tmp88 + _tmp90;
  const Scalar _tmp92 = _tmp85 + _tmp86 + _tmp91;
  const Scalar _tmp93 = -_tmp67 * _y[2] - _tmp74 * _y[3] + _tmp83 * _y[1] + _tmp92 * _y[0];
  const Scalar _tmp94 = -_tmp67 * _y[3] + _tmp74 * _y[2] - _tmp83 * _y[0] + _tmp92 * _y[1];
  const Scalar _tmp95 = _tmp67 * _y[0] - _tmp74 * _y[1] - _tmp83 * _y[3] + _tmp92 * _y[2];
  const Scalar _tmp96 = _tmp67 * _y[1] + _tmp74 * _y[0] + _tmp83 * _y[2] + _tmp92 * _y[3];
  const Scalar _tmp97 =
      -_s_T_y[0] * _tmp94 + _s_T_y[1] * _tmp93 - _s_T_y[2] * _tmp96 + _s_T_y[3] * _tmp95;
  const Scalar _tmp98 = _tmp41 + _tmp42 + _tmp43 + _tmp45;
  const Scalar _tmp99 = std::fabs(_tmp98);
  const Scalar _tmp100 = std::min<Scalar>(_tmp48, _tmp99);
  const Scalar _tmp101 = 1 - std::pow(_tmp100, Scalar(2));
  const Scalar _tmp102 = std::acos(_tmp100);
  const Scalar _tmp103 = _tmp102 / std::sqrt(_tmp101);
  const Scalar _tmp104 = _tmp103 * _tmp47;
  const Scalar _tmp105 = _tmp104 * _tmp97;
  const Scalar _tmp106 =
      _tmp104 * (_s_T_y[0] * _tmp95 - _s_T_y[1] * _tmp96 - _s_T_y[2] * _tmp93 + _s_T_y[3] * _tmp94);
  const Scalar _tmp107 =
      _s_T_y[0] * _tmp93 + _s_T_y[1] * _tmp94 + _s_T_y[2] * _tmp95 + _s_T_y[3] * _tmp96;
  const Scalar _tmp108 = _tmp46 * ((((_tmp48 - _tmp99) > 0) - ((_tmp48 - _tmp99) < 0)) + 1) *
                         (((_tmp98) > 0) - ((_tmp98) < 0));
  const Scalar _tmp109 = _tmp108 / _tmp101;
  const Scalar _tmp110 = _tmp109 * _tmp40;
  const Scalar _tmp111 = _tmp110 * sqrt_info(0, 0);
  const Scalar _tmp112 = _tmp107 * _tmp109;
  const Scalar _tmp113 = _tmp55 * sqrt_info(0, 1);
  const Scalar _tmp114 =
      -_s_T_y[0] * _tmp96 - _s_T_y[1] * _tmp95 + _s_T_y[2] * _tmp94 + _s_T_y[3] * _tmp93;
  const Scalar _tmp115 = _tmp104 * sqrt_info(0, 0);
  const Scalar _tmp116 = _tmp40 * sqrt_info(0, 0);
  const Scalar _tmp117 = _tmp100 * _tmp102 * _tmp108 / (_tmp101 * std::sqrt(_tmp101));
  const Scalar _tmp118 = _tmp107 * _tmp117;
  const Scalar _tmp119 = _tmp113 * _tmp117;
  const Scalar _tmp120 = _tmp105 * sqrt_info(0, 2) + _tmp106 * sqrt_info(0, 1) - _tmp107 * _tmp111 +
                         _tmp107 * _tmp119 - _tmp112 * _tmp113 - _tmp112 * _tmp54 +
                         _tmp114 * _tmp115 + _tmp116 * _tmp118 + _tmp118 * _tmp54;
  const Scalar _tmp121 = 2 * _tmp120;
  const Scalar _tmp122 = -_tmp61;
  const Scalar _tmp123 = _tmp122 + _tmp60;
  const Scalar _tmp124 = _tmp63 + _tmp64;
  const Scalar _tmp125 = _tmp123 + _tmp124;
  const Scalar _tmp126 = -_tmp70;
  const Scalar _tmp127 = _tmp126 + _tmp68 + _tmp73;
  const Scalar _tmp128 = -_tmp77;
  const Scalar _tmp129 = _tmp128 + _tmp75 + _tmp82;
  const Scalar _tmp130 = -_tmp86;
  const Scalar _tmp131 = _tmp130 + _tmp85;
  const Scalar _tmp132 = _tmp88 + _tmp89;
  const Scalar _tmp133 = _tmp131 + _tmp132;
  const Scalar _tmp134 = _tmp125 * _y[0] + _tmp127 * _y[1] - _tmp129 * _y[3] - _tmp133 * _y[2];
  const Scalar _tmp135 = _tmp125 * _y[1] - _tmp127 * _y[0] + _tmp129 * _y[2] - _tmp133 * _y[3];
  const Scalar _tmp136 = _tmp125 * _y[3] + _tmp127 * _y[2] + _tmp129 * _y[0] + _tmp133 * _y[1];
  const Scalar _tmp137 = _tmp125 * _y[2] - _tmp127 * _y[3] - _tmp129 * _y[1] + _tmp133 * _y[0];
  const Scalar _tmp138 =
      -_s_T_y[0] * _tmp135 + _s_T_y[1] * _tmp134 - _s_T_y[2] * _tmp136 + _s_T_y[3] * _tmp137;
  const Scalar _tmp139 = _tmp104 * _tmp138;
  const Scalar _tmp140 = _tmp104 * (_s_T_y[0] * _tmp137 - _s_T_y[1] * _tmp136 -
                                    _s_T_y[2] * _tmp134 + _s_T_y[3] * _tmp135);
  const Scalar _tmp141 =
      -_s_T_y[0] * _tmp136 - _s_T_y[1] * _tmp137 + _s_T_y[2] * _tmp135 + _s_T_y[3] * _tmp134;
  const Scalar _tmp142 =
      _s_T_y[0] * _tmp134 + _s_T_y[1] * _tmp135 + _s_T_y[2] * _tmp137 + _s_T_y[3] * _tmp136;
  const Scalar _tmp143 = _tmp117 * _tmp142;
  const Scalar _tmp144 = _tmp109 * _tmp142;
  const Scalar _tmp145 = -_tmp111 * _tmp142 + _tmp113 * _tmp143 - _tmp113 * _tmp144 +
                         _tmp115 * _tmp141 + _tmp116 * _tmp143 + _tmp139 * sqrt_info(0, 2) +
                         _tmp140 * sqrt_info(0, 1) + _tmp143 * _tmp54 - _tmp144 * _tmp54;
  const Scalar _tmp146 = 2 * _x[1];
  const Scalar _tmp147 = _tmp71 - _tmp72;
  const Scalar _tmp148 = _tmp147 + _tmp68 + _tmp70;
  const Scalar _tmp149 = _tmp79 + _tmp80;
  const Scalar _tmp150 = _tmp128 + _tmp76;
  const Scalar _tmp151 = _tmp149 + _tmp150;
  const Scalar _tmp152 = _tmp130 + _tmp84 + _tmp91;
  const Scalar _tmp153 = _tmp122 + _tmp59 + _tmp66;
  const Scalar _tmp154 = -_tmp148 * _y[3] + _tmp151 * _y[1] - _tmp152 * _y[0] + _tmp153 * _y[2];
  const Scalar _tmp155 = _tmp148 * _y[1] + _tmp151 * _y[3] + _tmp152 * _y[2] + _tmp153 * _y[0];
  const Scalar _tmp156 = -_tmp148 * _y[2] + _tmp151 * _y[0] + _tmp152 * _y[1] - _tmp153 * _y[3];
  const Scalar _tmp157 = _tmp148 * _y[0] + _tmp151 * _y[2] - _tmp152 * _y[3] - _tmp153 * _y[1];
  const Scalar _tmp158 =
      -_s_T_y[0] * _tmp154 + _s_T_y[1] * _tmp156 - _s_T_y[2] * _tmp155 + _s_T_y[3] * _tmp157;
  const Scalar _tmp159 = _tmp104 * _tmp158;
  const Scalar _tmp160 =
      -_s_T_y[0] * _tmp155 - _s_T_y[1] * _tmp157 + _s_T_y[2] * _tmp154 + _s_T_y[3] * _tmp156;
  const Scalar _tmp161 =
      _s_T_y[0] * _tmp156 + _s_T_y[1] * _tmp154 + _s_T_y[2] * _tmp157 + _s_T_y[3] * _tmp155;
  const Scalar _tmp162 = _tmp109 * _tmp161;
  const Scalar _tmp163 = _tmp104 * (_s_T_y[0] * _tmp157 - _s_T_y[1] * _tmp155 -
                                    _s_T_y[2] * _tmp156 + _s_T_y[3] * _tmp154);
  const Scalar _tmp164 = _tmp117 * _tmp161;
  const Scalar _tmp165 = -_tmp111 * _tmp161 - _tmp113 * _tmp162 + _tmp113 * _tmp164 +
                         _tmp115 * _tmp160 + _tmp116 * _tmp164 + _tmp159 * sqrt_info(0, 2) -
                         _tmp162 * _tmp54 + _tmp163 * sqrt_info(0, 1) + _tmp164 * _tmp54;
  const Scalar _tmp166 = 2 * _tmp165;
  const Scalar _tmp167 = _tmp103 * _tmp57;
  const Scalar _tmp168 = _tmp110 * sqrt_info(1, 0);
  const Scalar _tmp169 = _tmp53 * sqrt_info(1, 2);
  const Scalar _tmp170 = _tmp55 * sqrt_info(1, 1);
  const Scalar _tmp171 = _tmp104 * _tmp114;
  const Scalar _tmp172 = _tmp40 * sqrt_info(1, 0);
  const Scalar _tmp173 = _tmp106 * sqrt_info(1, 1) - _tmp107 * _tmp168 - _tmp112 * _tmp169 -
                         _tmp112 * _tmp170 + _tmp118 * _tmp169 + _tmp118 * _tmp170 +
                         _tmp118 * _tmp172 + _tmp167 * _tmp97 + _tmp171 * sqrt_info(1, 0);
  const Scalar _tmp174 = 2 * _tmp173;
  const Scalar _tmp175 = _tmp104 * _tmp141;
  const Scalar _tmp176 = 2 * _tmp138 * _tmp167 + 2 * _tmp140 * sqrt_info(1, 1) -
                         2 * _tmp142 * _tmp168 + 2 * _tmp143 * _tmp169 + 2 * _tmp143 * _tmp170 +
                         2 * _tmp143 * _tmp172 - 2 * _tmp144 * _tmp169 - 2 * _tmp144 * _tmp170 +
                         2 * _tmp175 * sqrt_info(1, 0);
  const Scalar _tmp177 = _tmp104 * _tmp160;
  const Scalar _tmp178 = _tmp158 * _tmp167 - _tmp161 * _tmp168 - _tmp162 * _tmp169 -
                         _tmp162 * _tmp170 + _tmp163 * sqrt_info(1, 1) + _tmp164 * _tmp169 +
                         _tmp164 * _tmp170 + _tmp164 * _tmp172 + _tmp177 * sqrt_info(1, 0);
  const Scalar _tmp179 = 2 * _tmp178;
  const Scalar _tmp180 = _tmp40 * sqrt_info(2, 0);
  const Scalar _tmp181 = _tmp109 * _tmp180;
  const Scalar _tmp182 = _tmp109 * _tmp58;
  const Scalar _tmp183 = _tmp55 * sqrt_info(2, 1);
  const Scalar _tmp184 = _tmp105 * sqrt_info(2, 2) + _tmp106 * sqrt_info(2, 1) - _tmp107 * _tmp181 -
                         _tmp107 * _tmp182 - _tmp112 * _tmp183 + _tmp118 * _tmp180 +
                         _tmp118 * _tmp183 + _tmp118 * _tmp58 + _tmp171 * sqrt_info(2, 0);
  const Scalar _tmp185 = 2 * _tmp184;
  const Scalar _tmp186 = _tmp139 * sqrt_info(2, 2) + _tmp140 * sqrt_info(2, 1) - _tmp142 * _tmp181 -
                         _tmp142 * _tmp182 + _tmp143 * _tmp180 + _tmp143 * _tmp183 +
                         _tmp143 * _tmp58 - _tmp144 * _tmp183 + _tmp175 * sqrt_info(2, 0);
  const Scalar _tmp187 = _tmp159 * sqrt_info(2, 2) - _tmp161 * _tmp181 - _tmp161 * _tmp182 -
                         _tmp162 * _tmp183 + _tmp163 * sqrt_info(2, 1) + _tmp164 * _tmp180 +
                         _tmp164 * _tmp183 + _tmp164 * _tmp58 + _tmp177 * sqrt_info(2, 0);
  const Scalar _tmp188 = 2 * _tmp187;
  const Scalar _tmp189 = 2 * _tmp145;
  const Scalar _tmp190 = 2 * _tmp186;
  const Scalar _tmp191 = 2 * _x[0];
  const Scalar _tmp192 = _tmp131 + _tmp87 + _tmp90;
  const Scalar _tmp193 = _tmp192 * _y[0];
  const Scalar _tmp194 = _tmp149 + _tmp75 + _tmp77;
  const Scalar _tmp195 = _tmp123 + _tmp62 + _tmp65;
  const Scalar _tmp196 = _tmp126 + _tmp147 + _tmp69;
  const Scalar _tmp197 = -_tmp196 * _y[3];
  const Scalar _tmp198 = _tmp195 * _y[2] + _tmp197;
  const Scalar _tmp199 = _tmp193 - _tmp194 * _y[1] + _tmp198;
  const Scalar _tmp200 = _tmp192 * _y[2];
  const Scalar _tmp201 = _tmp196 * _y[1];
  const Scalar _tmp202 = _tmp195 * _y[0] + _tmp201;
  const Scalar _tmp203 = -_tmp194 * _y[3] - _tmp200 + _tmp202;
  const Scalar _tmp204 = _tmp195 * _y[3];
  const Scalar _tmp205 = _tmp196 * _y[2];
  const Scalar _tmp206 = _tmp192 * _y[1] + _tmp205;
  const Scalar _tmp207 = _tmp194 * _y[0] + _tmp204 + _tmp206;
  const Scalar _tmp208 = _tmp192 * _y[3];
  const Scalar _tmp209 = _tmp195 * _y[1];
  const Scalar _tmp210 = _tmp196 * _y[0];
  const Scalar _tmp211 = _tmp194 * _y[2] - _tmp208 + _tmp209 - _tmp210;
  const Scalar _tmp212 =
      _s_T_y[0] * _tmp203 + _s_T_y[1] * _tmp211 + _s_T_y[2] * _tmp199 + _s_T_y[3] * _tmp207;
  const Scalar _tmp213 = _tmp109 * _tmp212;
  const Scalar _tmp214 = _tmp213 * _tmp55;
  const Scalar _tmp215 = _tmp213 * _tmp40;
  const Scalar _tmp216 = _tmp117 * _tmp212;
  const Scalar _tmp217 = _tmp104 * (_s_T_y[0] * _tmp199 - _s_T_y[1] * _tmp207 -
                                    _s_T_y[2] * _tmp203 + _s_T_y[3] * _tmp211);
  const Scalar _tmp218 =
      -_s_T_y[0] * _tmp207 - _s_T_y[1] * _tmp199 + _s_T_y[2] * _tmp211 + _s_T_y[3] * _tmp203;
  const Scalar _tmp219 =
      -_s_T_y[0] * _tmp211 + _s_T_y[1] * _tmp203 - _s_T_y[2] * _tmp207 + _s_T_y[3] * _tmp199;
  const Scalar _tmp220 = _tmp104 * _tmp219;
  const Scalar _tmp221 = _tmp115 * _tmp218 + _tmp116 * _tmp216 + _tmp119 * _tmp212 -
                         _tmp213 * _tmp54 - _tmp214 * sqrt_info(0, 1) - _tmp215 * sqrt_info(0, 0) +
                         _tmp216 * _tmp54 + _tmp217 * sqrt_info(0, 1) + _tmp220 * sqrt_info(0, 2);
  const Scalar _tmp222 = 2 * _tmp221;
  const Scalar _tmp223 = _tmp150 + _tmp78 + _tmp81;
  const Scalar _tmp224 = _tmp223 * _y[1];
  const Scalar _tmp225 = _tmp124 + _tmp59 + _tmp61;
  const Scalar _tmp226 = _tmp193 + _tmp197 + _tmp224 - _tmp225 * _y[2];
  const Scalar _tmp227 = _tmp223 * _y[3];
  const Scalar _tmp228 = _tmp200 - _tmp201 + _tmp225 * _y[0] - _tmp227;
  const Scalar _tmp229 = _tmp210 + _tmp223 * _y[2];
  const Scalar _tmp230 = _tmp208 + _tmp225 * _y[1] + _tmp229;
  const Scalar _tmp231 = _tmp223 * _y[0];
  const Scalar _tmp232 = _tmp206 - _tmp225 * _y[3] - _tmp231;
  const Scalar _tmp233 =
      -_s_T_y[0] * _tmp232 + _s_T_y[1] * _tmp226 - _s_T_y[2] * _tmp230 + _s_T_y[3] * _tmp228;
  const Scalar _tmp234 = _tmp104 * _tmp233;
  const Scalar _tmp235 =
      _s_T_y[0] * _tmp226 + _s_T_y[1] * _tmp232 + _s_T_y[2] * _tmp228 + _s_T_y[3] * _tmp230;
  const Scalar _tmp236 = _tmp117 * _tmp235;
  const Scalar _tmp237 = _tmp109 * _tmp235;
  const Scalar _tmp238 = _tmp104 * (_s_T_y[0] * _tmp228 - _s_T_y[1] * _tmp230 -
                                    _s_T_y[2] * _tmp226 + _s_T_y[3] * _tmp232);
  const Scalar _tmp239 = _tmp104 * (-_s_T_y[0] * _tmp230 - _s_T_y[1] * _tmp228 +
                                    _s_T_y[2] * _tmp232 + _s_T_y[3] * _tmp226);
  const Scalar _tmp240 = -_tmp111 * _tmp235 + _tmp113 * _tmp236 - _tmp113 * _tmp237 +
                         _tmp116 * _tmp236 + _tmp234 * sqrt_info(0, 2) + _tmp236 * _tmp54 -
                         _tmp237 * _tmp54 + _tmp238 * sqrt_info(0, 1) + _tmp239 * sqrt_info(0, 0);
  const Scalar _tmp241 = 2 * _tmp240;
  const Scalar _tmp242 = _tmp132 + _tmp84 + _tmp86;
  const Scalar _tmp243 = -_tmp204 - _tmp205 + _tmp231 + _tmp242 * _y[1];
  const Scalar _tmp244 = -_tmp209 + _tmp229 - _tmp242 * _y[3];
  const Scalar _tmp245 = _tmp202 + _tmp227 + _tmp242 * _y[2];
  const Scalar _tmp246 = _tmp198 + _tmp224 - _tmp242 * _y[0];
  const Scalar _tmp247 =
      _s_T_y[0] * _tmp243 + _s_T_y[1] * _tmp246 + _s_T_y[2] * _tmp244 + _s_T_y[3] * _tmp245;
  const Scalar _tmp248 = _tmp109 * _tmp247;
  const Scalar _tmp249 = _tmp248 * _tmp55;
  const Scalar _tmp250 = _tmp110 * _tmp247;
  const Scalar _tmp251 = _tmp117 * _tmp247;
  const Scalar _tmp252 = _tmp104 * (_s_T_y[0] * _tmp244 - _s_T_y[1] * _tmp245 -
                                    _s_T_y[2] * _tmp243 + _s_T_y[3] * _tmp246);
  const Scalar _tmp253 =
      -_s_T_y[0] * _tmp245 - _s_T_y[1] * _tmp244 + _s_T_y[2] * _tmp246 + _s_T_y[3] * _tmp243;
  const Scalar _tmp254 =
      -_s_T_y[0] * _tmp246 + _s_T_y[1] * _tmp243 - _s_T_y[2] * _tmp245 + _s_T_y[3] * _tmp244;
  const Scalar _tmp255 = _tmp104 * _tmp254;
  const Scalar _tmp256 = _tmp115 * _tmp253 + _tmp116 * _tmp251 + _tmp119 * _tmp247 -
                         _tmp248 * _tmp54 - _tmp249 * sqrt_info(0, 1) - _tmp250 * sqrt_info(0, 0) +
                         _tmp251 * _tmp54 + _tmp252 * sqrt_info(0, 1) + _tmp255 * sqrt_info(0, 2);
  const Scalar _tmp257 = 2 * _x_T_s[2];
  const Scalar _tmp258 = _tmp104 * _tmp218;
  const Scalar _tmp259 = _tmp167 * _tmp219 - _tmp169 * _tmp213 + _tmp169 * _tmp216 +
                         _tmp170 * _tmp216 + _tmp172 * _tmp216 - _tmp214 * sqrt_info(1, 1) -
                         _tmp215 * sqrt_info(1, 0) + _tmp217 * sqrt_info(1, 1) +
                         _tmp258 * sqrt_info(1, 0);
  const Scalar _tmp260 = 2 * _tmp259;
  const Scalar _tmp261 = _tmp167 * _tmp233 - _tmp168 * _tmp235 + _tmp169 * _tmp236 -
                         _tmp169 * _tmp237 + _tmp170 * _tmp236 - _tmp170 * _tmp237 +
                         _tmp172 * _tmp236 + _tmp238 * sqrt_info(1, 1) + _tmp239 * sqrt_info(1, 0);
  const Scalar _tmp262 = 2 * _tmp261;
  const Scalar _tmp263 = _tmp104 * sqrt_info(1, 0);
  const Scalar _tmp264 = 2 * _tmp167 * _tmp254 - 2 * _tmp169 * _tmp248 + 2 * _tmp169 * _tmp251 +
                         2 * _tmp170 * _tmp251 + 2 * _tmp172 * _tmp251 -
                         2 * _tmp249 * sqrt_info(1, 1) - 2 * _tmp250 * sqrt_info(1, 0) +
                         2 * _tmp252 * sqrt_info(1, 1) + 2 * _tmp253 * _tmp263;
  const Scalar _tmp265 = -_tmp180 * _tmp213 + _tmp180 * _tmp216 + _tmp183 * _tmp216 -
                         _tmp213 * _tmp58 - _tmp214 * sqrt_info(2, 1) + _tmp216 * _tmp58 +
                         _tmp217 * sqrt_info(2, 1) + _tmp220 * sqrt_info(2, 2) +
                         _tmp258 * sqrt_info(2, 0);
  const Scalar _tmp266 = 2 * _tmp265;
  const Scalar _tmp267 = _tmp180 * _tmp236 - _tmp181 * _tmp235 - _tmp182 * _tmp235 +
                         _tmp183 * _tmp236 - _tmp183 * _tmp237 + _tmp234 * sqrt_info(2, 2) +
                         _tmp236 * _tmp58 + _tmp238 * sqrt_info(2, 1) + _tmp239 * sqrt_info(2, 0);
  const Scalar _tmp268 = 2 * _tmp267;
  const Scalar _tmp269 = _tmp104 * sqrt_info(2, 0);
  const Scalar _tmp270 = _tmp180 * _tmp251 - _tmp181 * _tmp247 - _tmp183 * _tmp248 +
                         _tmp183 * _tmp251 - _tmp248 * _tmp58 + _tmp251 * _tmp58 +
                         _tmp252 * sqrt_info(2, 1) + _tmp253 * _tmp269 + _tmp255 * sqrt_info(2, 2);
  const Scalar _tmp271 = 2 * _tmp256;
  const Scalar _tmp272 = 2 * _tmp270;
  const Scalar _tmp273 = (Scalar(1) / Scalar(2)) * _tmp30;
  const Scalar _tmp274 = (Scalar(1) / Scalar(2)) * _tmp31;
  const Scalar _tmp275 = (Scalar(1) / Scalar(2)) * _tmp32;
  const Scalar _tmp276 = (Scalar(1) / Scalar(2)) * _tmp33;
  const Scalar _tmp277 = _tmp273 + _tmp274 - _tmp275 - _tmp276;
  const Scalar _tmp278 = _s_T_y[2] * _tmp277;
  const Scalar _tmp279 = (Scalar(1) / Scalar(2)) * _tmp5;
  const Scalar _tmp280 = (Scalar(1) / Scalar(2)) * _tmp11;
  const Scalar _tmp281 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp282 = (Scalar(1) / Scalar(2)) * _tmp23;
  const Scalar _tmp283 = -_tmp279 + _tmp280 - _tmp281 + _tmp282;
  const Scalar _tmp284 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp285 = (Scalar(1) / Scalar(2)) * _tmp26;
  const Scalar _tmp286 = (Scalar(1) / Scalar(2)) * _tmp27;
  const Scalar _tmp287 = (Scalar(1) / Scalar(2)) * _tmp28;
  const Scalar _tmp288 = -_tmp284 + _tmp285 + _tmp286 - _tmp287;
  const Scalar _tmp289 = (Scalar(1) / Scalar(2)) * _tmp35 + (Scalar(1) / Scalar(2)) * _tmp36 +
                         (Scalar(1) / Scalar(2)) * _tmp37 + (Scalar(1) / Scalar(2)) * _tmp38;
  const Scalar _tmp290 = _s_T_y[0] * _tmp289;
  const Scalar _tmp291 = _s_T_y[3] * _tmp288 + _tmp290;
  const Scalar _tmp292 = _s_T_y[1] * _tmp283 + _tmp278 + _tmp291;
  const Scalar _tmp293 = _tmp109 * _tmp292;
  const Scalar _tmp294 = -_s_T_y[0] * _tmp288;
  const Scalar _tmp295 = _s_T_y[3] * _tmp289;
  const Scalar _tmp296 = -_s_T_y[1] * _tmp277 + _tmp295;
  const Scalar _tmp297 = _s_T_y[2] * _tmp283 + _tmp294 + _tmp296;
  const Scalar _tmp298 = _s_T_y[2] * _tmp288;
  const Scalar _tmp299 = _s_T_y[1] * _tmp289;
  const Scalar _tmp300 = _s_T_y[3] * _tmp277 + _tmp299;
  const Scalar _tmp301 = -_s_T_y[0] * _tmp283 - _tmp298 + _tmp300;
  const Scalar _tmp302 = _tmp104 * _tmp301;
  const Scalar _tmp303 = _s_T_y[0] * _tmp277;
  const Scalar _tmp304 = _s_T_y[1] * _tmp288;
  const Scalar _tmp305 = _s_T_y[2] * _tmp289;
  const Scalar _tmp306 = _tmp104 * (_s_T_y[3] * _tmp283 + _tmp303 - _tmp304 - _tmp305);
  const Scalar _tmp307 = _tmp117 * _tmp292;
  const Scalar _tmp308 = -_tmp111 * _tmp292 - _tmp113 * _tmp293 + _tmp113 * _tmp307 +
                         _tmp115 * _tmp297 + _tmp116 * _tmp307 - _tmp293 * _tmp54 +
                         _tmp302 * sqrt_info(0, 2) + _tmp306 * sqrt_info(0, 1) + _tmp307 * _tmp54;
  const Scalar _tmp309 = 2 * _tmp308;
  const Scalar _tmp310 = _tmp279 - _tmp280 + _tmp281 - _tmp282;
  const Scalar _tmp311 = _s_T_y[0] * _tmp310;
  const Scalar _tmp312 = _tmp284 - _tmp285 - _tmp286 + _tmp287;
  const Scalar _tmp313 = _s_T_y[2] * _tmp312 + _tmp300 + _tmp311;
  const Scalar _tmp314 = _tmp109 * _tmp313;
  const Scalar _tmp315 = _tmp314 * _tmp55;
  const Scalar _tmp316 = _tmp110 * _tmp313;
  const Scalar _tmp317 = _s_T_y[1] * _tmp310;
  const Scalar _tmp318 = _s_T_y[3] * _tmp312 - _tmp278 - _tmp290 + _tmp317;
  const Scalar _tmp319 = _tmp104 * _tmp318;
  const Scalar _tmp320 = -_s_T_y[2] * _tmp310;
  const Scalar _tmp321 = _tmp104 * (_s_T_y[0] * _tmp312 + _tmp296 + _tmp320);
  const Scalar _tmp322 = _s_T_y[3] * _tmp310 + _tmp305;
  const Scalar _tmp323 = -_s_T_y[1] * _tmp312 - _tmp303 + _tmp322;
  const Scalar _tmp324 = _tmp117 * _tmp313;
  const Scalar _tmp325 = _tmp115 * _tmp323 + _tmp116 * _tmp324 + _tmp119 * _tmp313 -
                         _tmp314 * _tmp54 - _tmp315 * sqrt_info(0, 1) - _tmp316 * sqrt_info(0, 0) +
                         _tmp319 * sqrt_info(0, 2) + _tmp321 * sqrt_info(0, 1) + _tmp324 * _tmp54;
  const Scalar _tmp326 = 2 * _y[2];
  const Scalar _tmp327 = -_tmp273 - _tmp274 + _tmp275 + _tmp276;
  const Scalar _tmp328 = _tmp104 * (-_s_T_y[2] * _tmp327 + _tmp291 - _tmp317);
  const Scalar _tmp329 = _s_T_y[0] * _tmp327 + _tmp304 + _tmp322;
  const Scalar _tmp330 = _tmp109 * _tmp329;
  const Scalar _tmp331 = _s_T_y[1] * _tmp327 + _tmp294 + _tmp295 + _tmp320;
  const Scalar _tmp332 = _tmp104 * _tmp331;
  const Scalar _tmp333 = _s_T_y[3] * _tmp327 + _tmp298 - _tmp299 - _tmp311;
  const Scalar _tmp334 = _tmp117 * _tmp329;
  const Scalar _tmp335 = -2 * _tmp111 * _tmp329 - 2 * _tmp113 * _tmp330 + 2 * _tmp115 * _tmp333 +
                         2 * _tmp116 * _tmp334 + 2 * _tmp119 * _tmp329 +
                         2 * _tmp328 * sqrt_info(0, 1) - 2 * _tmp330 * _tmp54 +
                         2 * _tmp332 * sqrt_info(0, 2) + 2 * _tmp334 * _tmp54;
  const Scalar _tmp336 = _tmp104 * _tmp297;
  const Scalar _tmp337 = _tmp167 * _tmp301 - _tmp168 * _tmp292 - _tmp169 * _tmp293 +
                         _tmp169 * _tmp307 - _tmp170 * _tmp293 + _tmp170 * _tmp307 +
                         _tmp172 * _tmp307 + _tmp306 * sqrt_info(1, 1) + _tmp336 * sqrt_info(1, 0);
  const Scalar _tmp338 = 2 * _tmp337;
  const Scalar _tmp339 = _tmp167 * _tmp318 - _tmp169 * _tmp314 + _tmp169 * _tmp324 +
                         _tmp170 * _tmp324 + _tmp172 * _tmp324 + _tmp263 * _tmp323 -
                         _tmp315 * sqrt_info(1, 1) - _tmp316 * sqrt_info(1, 0) +
                         _tmp321 * sqrt_info(1, 1);
  const Scalar _tmp340 = 2 * _tmp167 * _tmp331 - 2 * _tmp168 * _tmp329 - 2 * _tmp169 * _tmp330 +
                         2 * _tmp169 * _tmp334 - 2 * _tmp170 * _tmp330 + 2 * _tmp170 * _tmp334 +
                         2 * _tmp172 * _tmp334 + 2 * _tmp263 * _tmp333 +
                         2 * _tmp328 * sqrt_info(1, 1);
  const Scalar _tmp341 = _tmp180 * _tmp307 - _tmp181 * _tmp292 - _tmp182 * _tmp292 -
                         _tmp183 * _tmp293 + _tmp183 * _tmp307 + _tmp302 * sqrt_info(2, 2) +
                         _tmp306 * sqrt_info(2, 1) + _tmp307 * _tmp58 + _tmp336 * sqrt_info(2, 0);
  const Scalar _tmp342 = 2 * _tmp341;
  const Scalar _tmp343 = _tmp180 * _tmp324 - _tmp181 * _tmp313 - _tmp183 * _tmp314 +
                         _tmp183 * _tmp324 + _tmp269 * _tmp323 - _tmp314 * _tmp58 +
                         _tmp319 * sqrt_info(2, 2) + _tmp321 * sqrt_info(2, 1) + _tmp324 * _tmp58;
  const Scalar _tmp344 = 2 * _tmp180 * _tmp334 - 2 * _tmp181 * _tmp329 - 2 * _tmp182 * _tmp329 -
                         2 * _tmp183 * _tmp330 + 2 * _tmp183 * _tmp334 + 2 * _tmp269 * _tmp333 +
                         2 * _tmp328 * sqrt_info(2, 1) + 2 * _tmp332 * sqrt_info(2, 2) +
                         2 * _tmp334 * _tmp58;
  const Scalar _tmp345 = 2 * _tmp325;
  const Scalar _tmp346 = 2 * _tmp339;
  const Scalar _tmp347 = 2 * _tmp343;
  const Scalar _tmp348 = 2 * _y[0];

  // Output terms (4)
  Eigen::Matrix<Scalar, 3, 1> _res;

  _res(0, 0) = _tmp51 * _tmp54 + _tmp52 * sqrt_info(0, 0) + _tmp56 * sqrt_info(0, 1);
  _res(1, 0) = _tmp50 * _tmp53 * _tmp57 + _tmp52 * sqrt_info(1, 0) + _tmp56 * sqrt_info(1, 1);
  _res(2, 0) = _tmp51 * _tmp58 + _tmp52 * sqrt_info(2, 0) + _tmp56 * sqrt_info(2, 1);

  if (res_D_x != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 7, Eigen::RowMajor>> _res_D_x{res_D_x};

    _res_D_x(0, 0) = _tmp121 * _x[3] + _tmp145 * _tmp146 - _tmp166 * _x[2];
    _res_D_x(1, 0) = _tmp174 * _x[3] + _tmp176 * _x[1] - _tmp179 * _x[2];
    _res_D_x(2, 0) = _tmp146 * _tmp186 + _tmp185 * _x[3] - _tmp188 * _x[2];
    _res_D_x(0, 1) = _tmp121 * _x[2] + _tmp166 * _x[3] - _tmp189 * _x[0];
    _res_D_x(1, 1) = _tmp174 * _x[2] - _tmp176 * _x[0] + _tmp179 * _x[3];
    _res_D_x(2, 1) = _tmp185 * _x[2] + _tmp188 * _x[3] - _tmp190 * _x[0];
    _res_D_x(0, 2) = -_tmp120 * _tmp146 + _tmp166 * _x[0] + _tmp189 * _x[3];
    _res_D_x(1, 2) = -_tmp146 * _tmp173 + _tmp176 * _x[3] + _tmp179 * _x[0];
    _res_D_x(2, 2) = -_tmp146 * _tmp184 + _tmp188 * _x[0] + _tmp190 * _x[3];
    _res_D_x(0, 3) = -_tmp120 * _tmp191 - _tmp146 * _tmp165 - _tmp189 * _x[2];
    _res_D_x(1, 3) = -_tmp146 * _tmp178 - _tmp173 * _tmp191 - _tmp176 * _x[2];
    _res_D_x(2, 3) = -_tmp146 * _tmp187 - _tmp184 * _tmp191 - _tmp190 * _x[2];
    _res_D_x(0, 4) = 0;
    _res_D_x(1, 4) = 0;
    _res_D_x(2, 4) = 0;
    _res_D_x(0, 5) = 0;
    _res_D_x(1, 5) = 0;
    _res_D_x(2, 5) = 0;
    _res_D_x(0, 6) = 0;
    _res_D_x(1, 6) = 0;
    _res_D_x(2, 6) = 0;
  }

  if (res_D_x_T_s != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 7, Eigen::RowMajor>> _res_D_x_T_s{res_D_x_T_s};

    _res_D_x_T_s(0, 0) = _tmp222 * _x_T_s[1] + _tmp241 * _x_T_s[3] - _tmp256 * _tmp257;
    _res_D_x_T_s(1, 0) = _tmp260 * _x_T_s[1] + _tmp262 * _x_T_s[3] - _tmp264 * _x_T_s[2];
    _res_D_x_T_s(2, 0) = -_tmp257 * _tmp270 + _tmp266 * _x_T_s[1] + _tmp268 * _x_T_s[3];
    _res_D_x_T_s(0, 1) = -_tmp222 * _x_T_s[0] + _tmp240 * _tmp257 + _tmp271 * _x_T_s[3];
    _res_D_x_T_s(1, 1) = _tmp257 * _tmp261 - _tmp260 * _x_T_s[0] + _tmp264 * _x_T_s[3];
    _res_D_x_T_s(2, 1) = _tmp257 * _tmp267 - _tmp266 * _x_T_s[0] + _tmp272 * _x_T_s[3];
    _res_D_x_T_s(0, 2) = _tmp222 * _x_T_s[3] - _tmp241 * _x_T_s[1] + _tmp271 * _x_T_s[0];
    _res_D_x_T_s(1, 2) = _tmp260 * _x_T_s[3] - _tmp262 * _x_T_s[1] + _tmp264 * _x_T_s[0];
    _res_D_x_T_s(2, 2) = _tmp266 * _x_T_s[3] - _tmp268 * _x_T_s[1] + _tmp272 * _x_T_s[0];
    _res_D_x_T_s(0, 3) = -_tmp221 * _tmp257 - _tmp241 * _x_T_s[0] - _tmp271 * _x_T_s[1];
    _res_D_x_T_s(1, 3) = -_tmp257 * _tmp259 - _tmp262 * _x_T_s[0] - _tmp264 * _x_T_s[1];
    _res_D_x_T_s(2, 3) = -_tmp257 * _tmp265 - _tmp268 * _x_T_s[0] - _tmp272 * _x_T_s[1];
    _res_D_x_T_s(0, 4) = 0;
    _res_D_x_T_s(1, 4) = 0;
    _res_D_x_T_s(2, 4) = 0;
    _res_D_x_T_s(0, 5) = 0;
    _res_D_x_T_s(1, 5) = 0;
    _res_D_x_T_s(2, 5) = 0;
    _res_D_x_T_s(0, 6) = 0;
    _res_D_x_T_s(1, 6) = 0;
    _res_D_x_T_s(2, 6) = 0;
  }

  if (res_D_y != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 7, Eigen::RowMajor>> _res_D_y{res_D_y};

    _res_D_y(0, 0) = _tmp309 * _y[3] - _tmp325 * _tmp326 + _tmp335 * _y[1];
    _res_D_y(1, 0) = -_tmp326 * _tmp339 + _tmp338 * _y[3] + _tmp340 * _y[1];
    _res_D_y(2, 0) = -_tmp326 * _tmp343 + _tmp342 * _y[3] + _tmp344 * _y[1];
    _res_D_y(0, 1) = _tmp308 * _tmp326 - _tmp335 * _y[0] + _tmp345 * _y[3];
    _res_D_y(1, 1) = _tmp326 * _tmp337 - _tmp340 * _y[0] + _tmp346 * _y[3];
    _res_D_y(2, 1) = _tmp326 * _tmp341 - _tmp344 * _y[0] + _tmp347 * _y[3];
    _res_D_y(0, 2) = -_tmp309 * _y[1] + _tmp335 * _y[3] + _tmp345 * _y[0];
    _res_D_y(1, 2) = -_tmp338 * _y[1] + _tmp340 * _y[3] + _tmp346 * _y[0];
    _res_D_y(2, 2) = -_tmp342 * _y[1] + _tmp344 * _y[3] + _tmp347 * _y[0];
    _res_D_y(0, 3) = -_tmp308 * _tmp348 - _tmp335 * _y[2] - _tmp345 * _y[1];
    _res_D_y(1, 3) = -_tmp337 * _tmp348 - _tmp340 * _y[2] - _tmp346 * _y[1];
    _res_D_y(2, 3) = -_tmp342 * _y[0] - _tmp344 * _y[2] - _tmp347 * _y[1];
    _res_D_y(0, 4) = 0;
    _res_D_y(1, 4) = 0;
    _res_D_y(2, 4) = 0;
    _res_D_y(0, 5) = 0;
    _res_D_y(1, 5) = 0;
    _res_D_y(2, 5) = 0;
    _res_D_y(0, 6) = 0;
    _res_D_y(1, 6) = 0;
    _res_D_y(2, 6) = 0;
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_ceres
