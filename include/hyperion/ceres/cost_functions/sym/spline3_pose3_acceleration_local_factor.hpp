// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>

namespace sym_ceres {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline3_pose3_acceleration_factor
 *
 * Args:
 *     dt: Scalar
 *     lambdas: Matrix33
 *     x0: Pose3
 *     x1: Pose3
 *     x2: Pose3
 *     x3: Pose3
 *     acceleration: Matrix61
 *     sqrt_info: Matrix66
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix61
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 6, 1> Spline3Pose3AccelerationLocalFactor(
    const Scalar dt, const Eigen::Matrix<Scalar, 3, 3>& lambdas, const sym::Pose3<Scalar>& x0,
    const sym::Pose3<Scalar>& x1, const sym::Pose3<Scalar>& x2, const sym::Pose3<Scalar>& x3,
    const Eigen::Matrix<Scalar, 6, 1>& acceleration, const Eigen::Matrix<Scalar, 6, 6>& sqrt_info,
    const Scalar epsilon) {
  // Total ops: 668

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x3 = x3.Data();

  // Intermediate terms (202)
  const Scalar _tmp0 = std::pow(dt, Scalar(-2));
  const Scalar _tmp1 = _x0[0] * _x1[2] - _x0[1] * _x1[3] - _x0[2] * _x1[0] + _x0[3] * _x1[1];
  const Scalar _tmp2 = -_x0[0] * _x1[3] - _x0[1] * _x1[2] + _x0[2] * _x1[1] + _x0[3] * _x1[0];
  const Scalar _tmp3 = -_x0[0] * _x1[0] - _x0[1] * _x1[1] - _x0[2] * _x1[2];
  const Scalar _tmp4 = _x0[3] * _x1[3];
  const Scalar _tmp5 =
      2 * std::min<Scalar>(0, (((-_tmp3 + _tmp4) > 0) - ((-_tmp3 + _tmp4) < 0))) + 1;
  const Scalar _tmp6 = 1 - epsilon;
  const Scalar _tmp7 = std::min<Scalar>(_tmp6, std::fabs(_tmp3 - _tmp4));
  const Scalar _tmp8 = std::acos(_tmp7);
  const Scalar _tmp9 = 1 - std::pow(_tmp7, Scalar(2));
  const Scalar _tmp10 = 4 * std::pow(_tmp5, Scalar(2)) * std::pow(_tmp8, Scalar(2)) *
                        std::pow(lambdas(0, 0), Scalar(2)) / _tmp9;
  const Scalar _tmp11 = -_x0[0] * _x1[1] + _x0[1] * _x1[0] - _x0[2] * _x1[3] + _x0[3] * _x1[2];
  const Scalar _tmp12 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp13 =
      std::sqrt(Scalar(std::pow(_tmp1, Scalar(2)) * _tmp10 + _tmp10 * std::pow(_tmp11, Scalar(2)) +
                       _tmp10 * std::pow(_tmp2, Scalar(2)) + _tmp12));
  const Scalar _tmp14 = (Scalar(1) / Scalar(2)) * _tmp13;
  const Scalar _tmp15 = 2 * _tmp5 * _tmp8 / std::sqrt(_tmp9);
  const Scalar _tmp16 = _tmp15 * lambdas(0, 0) * std::sin(_tmp14) / _tmp13;
  const Scalar _tmp17 = _tmp1 * _tmp16;
  const Scalar _tmp18 = std::cos(_tmp14);
  const Scalar _tmp19 = _tmp16 * _tmp2;
  const Scalar _tmp20 = _tmp11 * _tmp16;
  const Scalar _tmp21 = _tmp17 * _x0[0] + _tmp18 * _x0[2] - _tmp19 * _x0[1] + _tmp20 * _x0[3];
  const Scalar _tmp22 = -_x1[0] * _x2[3] - _x1[1] * _x2[2] + _x1[2] * _x2[1] + _x1[3] * _x2[0];
  const Scalar _tmp23 = -_x1[0] * _x2[0] - _x1[1] * _x2[1] - _x1[2] * _x2[2];
  const Scalar _tmp24 = _x1[3] * _x2[3];
  const Scalar _tmp25 = std::min<Scalar>(_tmp6, std::fabs(_tmp23 - _tmp24));
  const Scalar _tmp26 = 1 - std::pow(_tmp25, Scalar(2));
  const Scalar _tmp27 =
      2 * std::min<Scalar>(0, (((-_tmp23 + _tmp24) > 0) - ((-_tmp23 + _tmp24) < 0))) + 1;
  const Scalar _tmp28 = std::acos(_tmp25);
  const Scalar _tmp29 = _tmp27 * _tmp28 / std::sqrt(_tmp26);
  const Scalar _tmp30 = 2 * _tmp29;
  const Scalar _tmp31 = _tmp22 * _tmp30;
  const Scalar _tmp32 = std::pow(_tmp22, Scalar(2));
  const Scalar _tmp33 = std::pow(_tmp27, Scalar(2)) * std::pow(_tmp28, Scalar(2)) *
                        std::pow(lambdas(1, 0), Scalar(2)) / _tmp26;
  const Scalar _tmp34 = 4 * _tmp33;
  const Scalar _tmp35 = -_x1[0] * _x2[1] + _x1[1] * _x2[0] - _x1[2] * _x2[3] + _x1[3] * _x2[2];
  const Scalar _tmp36 = std::pow(_tmp35, Scalar(2));
  const Scalar _tmp37 = _x1[0] * _x2[2] - _x1[1] * _x2[3] - _x1[2] * _x2[0] + _x1[3] * _x2[1];
  const Scalar _tmp38 = std::pow(_tmp37, Scalar(2));
  const Scalar _tmp39 = _tmp12 + _tmp32 * _tmp34 + _tmp34 * _tmp36 + _tmp34 * _tmp38;
  const Scalar _tmp40 = std::sqrt(_tmp39);
  const Scalar _tmp41 = (Scalar(1) / Scalar(2)) * _tmp40;
  const Scalar _tmp42 = std::sin(_tmp41);
  const Scalar _tmp43 = _tmp42 * lambdas(1, 0) / _tmp40;
  const Scalar _tmp44 = _tmp31 * _tmp43;
  const Scalar _tmp45 = -_tmp17 * _x0[2] + _tmp18 * _x0[0] + _tmp19 * _x0[3] + _tmp20 * _x0[1];
  const Scalar _tmp46 = _tmp30 * _tmp35;
  const Scalar _tmp47 = _tmp43 * _tmp46;
  const Scalar _tmp48 = std::cos(_tmp41);
  const Scalar _tmp49 = _tmp17 * _x0[3] + _tmp18 * _x0[1] + _tmp19 * _x0[2] - _tmp20 * _x0[0];
  const Scalar _tmp50 = -_tmp17 * _x0[1] + _tmp18 * _x0[3] - _tmp19 * _x0[0] - _tmp20 * _x0[2];
  const Scalar _tmp51 = _tmp30 * _tmp37;
  const Scalar _tmp52 = _tmp43 * _tmp51;
  const Scalar _tmp53 = _tmp21 * _tmp44 - _tmp45 * _tmp47 + _tmp48 * _tmp49 + _tmp50 * _tmp52;
  const Scalar _tmp54 = -_x2[0] * _x3[1] + _x2[1] * _x3[0] - _x2[2] * _x3[3] + _x2[3] * _x3[2];
  const Scalar _tmp55 = -_x2[0] * _x3[0] - _x2[1] * _x3[1] - _x2[2] * _x3[2];
  const Scalar _tmp56 = _x2[3] * _x3[3];
  const Scalar _tmp57 = std::min<Scalar>(_tmp6, std::fabs(_tmp55 - _tmp56));
  const Scalar _tmp58 = 1 - std::pow(_tmp57, Scalar(2));
  const Scalar _tmp59 =
      2 * std::min<Scalar>(0, (((-_tmp55 + _tmp56) > 0) - ((-_tmp55 + _tmp56) < 0))) + 1;
  const Scalar _tmp60 = std::acos(_tmp57);
  const Scalar _tmp61 = _tmp59 * _tmp60 / std::sqrt(_tmp58);
  const Scalar _tmp62 = 2 * _tmp61;
  const Scalar _tmp63 = _tmp54 * _tmp62;
  const Scalar _tmp64 = _x2[0] * _x3[2] - _x2[1] * _x3[3] - _x2[2] * _x3[0] + _x2[3] * _x3[1];
  const Scalar _tmp65 = std::pow(_tmp64, Scalar(2));
  const Scalar _tmp66 = std::pow(_tmp59, Scalar(2)) * std::pow(_tmp60, Scalar(2)) *
                        std::pow(lambdas(2, 0), Scalar(2)) / _tmp58;
  const Scalar _tmp67 = 4 * _tmp66;
  const Scalar _tmp68 = -_x2[0] * _x3[3] - _x2[1] * _x3[2] + _x2[2] * _x3[1] + _x2[3] * _x3[0];
  const Scalar _tmp69 = std::pow(_tmp68, Scalar(2));
  const Scalar _tmp70 = std::pow(_tmp54, Scalar(2));
  const Scalar _tmp71 = _tmp12 + _tmp65 * _tmp67 + _tmp67 * _tmp69 + _tmp67 * _tmp70;
  const Scalar _tmp72 = std::sqrt(_tmp71);
  const Scalar _tmp73 = (Scalar(1) / Scalar(2)) * _tmp72;
  const Scalar _tmp74 = std::sin(_tmp73);
  const Scalar _tmp75 = _tmp74 * lambdas(2, 0) / _tmp72;
  const Scalar _tmp76 = _tmp63 * _tmp75;
  const Scalar _tmp77 = std::cos(_tmp73);
  const Scalar _tmp78 = -_tmp21 * _tmp52 + _tmp44 * _tmp50 + _tmp45 * _tmp48 + _tmp47 * _tmp49;
  const Scalar _tmp79 = _tmp62 * _tmp68;
  const Scalar _tmp80 = -_tmp21 * _tmp47 - _tmp44 * _tmp45 + _tmp48 * _tmp50 - _tmp49 * _tmp52;
  const Scalar _tmp81 = _tmp75 * _tmp80;
  const Scalar _tmp82 = _tmp62 * _tmp64;
  const Scalar _tmp83 = _tmp21 * _tmp48 - _tmp44 * _tmp49 + _tmp45 * _tmp52 + _tmp47 * _tmp50;
  const Scalar _tmp84 = _tmp75 * _tmp83;
  const Scalar _tmp85 = _tmp53 * _tmp76 + _tmp77 * _tmp78 + _tmp79 * _tmp81 - _tmp82 * _tmp84;
  const Scalar _tmp86 = _tmp75 * _tmp79;
  const Scalar _tmp87 = _tmp75 * _tmp82;
  const Scalar _tmp88 = -_tmp53 * _tmp86 + _tmp63 * _tmp81 + _tmp77 * _tmp83 + _tmp78 * _tmp87;
  const Scalar _tmp89 = 2 * _tmp88;
  const Scalar _tmp90 = _tmp85 * _tmp89;
  const Scalar _tmp91 = -_tmp53 * _tmp87 - _tmp76 * _tmp83 + _tmp77 * _tmp80 - _tmp78 * _tmp86;
  const Scalar _tmp92 = _tmp53 * _tmp77 - _tmp76 * _tmp78 + _tmp79 * _tmp84 + _tmp81 * _tmp82;
  const Scalar _tmp93 = 2 * _tmp92;
  const Scalar _tmp94 = _tmp91 * _tmp93;
  const Scalar _tmp95 = _tmp90 + _tmp94;
  const Scalar _tmp96 = -_x1[4] + _x2[4];
  const Scalar _tmp97 = -_x2[4] + _x3[4];
  const Scalar _tmp98 = -_x0[4] + _x1[4];
  const Scalar _tmp99 = _tmp96 * lambdas(1, 2) + _tmp97 * lambdas(2, 2) + _tmp98 * lambdas(0, 2);
  const Scalar _tmp100 = -2 * std::pow(_tmp85, Scalar(2));
  const Scalar _tmp101 = -2 * std::pow(_tmp92, Scalar(2));
  const Scalar _tmp102 = _tmp100 + _tmp101 + 1;
  const Scalar _tmp103 = -_x1[6] + _x2[6];
  const Scalar _tmp104 = -_x2[6] + _x3[6];
  const Scalar _tmp105 = -_x0[6] + _x1[6];
  const Scalar _tmp106 =
      _tmp103 * lambdas(1, 2) + _tmp104 * lambdas(2, 2) + _tmp105 * lambdas(0, 2);
  const Scalar _tmp107 = 1 - 2 * std::pow(_tmp88, Scalar(2));
  const Scalar _tmp108 = _tmp100 + _tmp107;
  const Scalar _tmp109 = -_x1[5] + _x2[5];
  const Scalar _tmp110 = -_x2[5] + _x3[5];
  const Scalar _tmp111 = -_x0[5] + _x1[5];
  const Scalar _tmp112 =
      _tmp109 * lambdas(1, 1) + _tmp110 * lambdas(2, 1) + _tmp111 * lambdas(0, 1);
  const Scalar _tmp113 = _tmp89 * _tmp91;
  const Scalar _tmp114 = _tmp85 * _tmp93;
  const Scalar _tmp115 = -_tmp113 + _tmp114;
  const Scalar _tmp116 = _tmp96 * lambdas(1, 1) + _tmp97 * lambdas(2, 1) + _tmp98 * lambdas(0, 1);
  const Scalar _tmp117 = _tmp88 * _tmp93;
  const Scalar _tmp118 = 2 * _tmp85 * _tmp91;
  const Scalar _tmp119 = _tmp117 + _tmp118;
  const Scalar _tmp120 =
      _tmp103 * lambdas(1, 1) + _tmp104 * lambdas(2, 1) + _tmp105 * lambdas(0, 1);
  const Scalar _tmp121 = _tmp108 * _tmp112 + _tmp115 * _tmp116 + _tmp119 * _tmp120;
  const Scalar _tmp122 = _tmp79 * lambdas(2, 1);
  const Scalar _tmp123 = 8 * _tmp66 * std::pow(_tmp74, Scalar(2)) / _tmp71;
  const Scalar _tmp124 = _tmp123 * _tmp68;
  const Scalar _tmp125 = _tmp124 * _tmp64;
  const Scalar _tmp126 = 4 * _tmp61 * _tmp75 * _tmp77;
  const Scalar _tmp127 = _tmp126 * _tmp54;
  const Scalar _tmp128 = _tmp125 + _tmp127;
  const Scalar _tmp129 = _tmp51 * lambdas(1, 1);
  const Scalar _tmp130 = _tmp15 * lambdas(0, 1);
  const Scalar _tmp131 = 8 * _tmp33 * std::pow(_tmp42, Scalar(2)) / _tmp39;
  const Scalar _tmp132 = _tmp131 * _tmp22 * _tmp37;
  const Scalar _tmp133 = 4 * _tmp29 * _tmp43 * _tmp48;
  const Scalar _tmp134 = _tmp133 * _tmp35;
  const Scalar _tmp135 = _tmp2 * (_tmp132 - _tmp134);
  const Scalar _tmp136 = _tmp131 * _tmp35;
  const Scalar _tmp137 = _tmp136 * _tmp37;
  const Scalar _tmp138 = _tmp133 * _tmp22;
  const Scalar _tmp139 = _tmp11 * (_tmp137 + _tmp138);
  const Scalar _tmp140 = -_tmp131 * _tmp36;
  const Scalar _tmp141 = -_tmp131 * _tmp32 + 1;
  const Scalar _tmp142 = _tmp1 * (_tmp140 + _tmp141);
  const Scalar _tmp143 = _tmp130 * _tmp135 + _tmp130 * _tmp139 + _tmp130 * _tmp142;
  const Scalar _tmp144 = _tmp129 + _tmp143;
  const Scalar _tmp145 = _tmp31 * lambdas(1, 1);
  const Scalar _tmp146 = _tmp133 * _tmp37;
  const Scalar _tmp147 = _tmp136 * _tmp22;
  const Scalar _tmp148 = -_tmp146 + _tmp147;
  const Scalar _tmp149 = _tmp11 * _tmp130;
  const Scalar _tmp150 = -_tmp131 * _tmp38;
  const Scalar _tmp151 = _tmp2 * (_tmp140 + _tmp150 + 1);
  const Scalar _tmp152 = _tmp1 * (_tmp132 + _tmp134);
  const Scalar _tmp153 = _tmp130 * _tmp151 + _tmp130 * _tmp152 + _tmp148 * _tmp149;
  const Scalar _tmp154 = _tmp145 + _tmp153;
  const Scalar _tmp155 = -_tmp123 * _tmp70;
  const Scalar _tmp156 = -_tmp123 * _tmp65 + 1;
  const Scalar _tmp157 = _tmp155 + _tmp156;
  const Scalar _tmp158 = _tmp126 * _tmp64;
  const Scalar _tmp159 = _tmp124 * _tmp54;
  const Scalar _tmp160 = -_tmp158 + _tmp159;
  const Scalar _tmp161 = _tmp46 * lambdas(1, 1);
  const Scalar _tmp162 = _tmp141 + _tmp150;
  const Scalar _tmp163 = _tmp2 * (_tmp146 + _tmp147);
  const Scalar _tmp164 = _tmp1 * (_tmp137 - _tmp138);
  const Scalar _tmp165 = _tmp130 * _tmp163 + _tmp130 * _tmp164 + _tmp149 * _tmp162;
  const Scalar _tmp166 = _tmp161 + _tmp165;
  const Scalar _tmp167 = _tmp128 * _tmp144 + _tmp154 * _tmp157 + _tmp160 * _tmp166;
  const Scalar _tmp168 = _tmp122 + _tmp167;
  const Scalar _tmp169 = _tmp82 * lambdas(2, 1);
  const Scalar _tmp170 = _tmp126 * _tmp68;
  const Scalar _tmp171 = _tmp123 * _tmp54 * _tmp64;
  const Scalar _tmp172 = _tmp170 + _tmp171;
  const Scalar _tmp173 = _tmp125 - _tmp127;
  const Scalar _tmp174 = -_tmp123 * _tmp69;
  const Scalar _tmp175 = _tmp155 + _tmp174 + 1;
  const Scalar _tmp176 = _tmp144 * _tmp175 + _tmp154 * _tmp173 + _tmp166 * _tmp172;
  const Scalar _tmp177 = _tmp169 + _tmp176;
  const Scalar _tmp178 = _tmp90 - _tmp94;
  const Scalar _tmp179 = _tmp113 + _tmp114;
  const Scalar _tmp180 = _tmp101 + _tmp107;
  const Scalar _tmp181 = _tmp112 * _tmp179 + _tmp116 * _tmp180 + _tmp120 * _tmp178;
  const Scalar _tmp182 = _tmp117 - _tmp118;
  const Scalar _tmp183 =
      _tmp109 * lambdas(1, 2) + _tmp110 * lambdas(2, 2) + _tmp111 * lambdas(0, 2);
  const Scalar _tmp184 = _tmp0 * (_tmp102 * _tmp106 - _tmp121 * _tmp168 + _tmp177 * _tmp181 +
                                  _tmp182 * _tmp183 + _tmp95 * _tmp99) -
                         acceleration(5, 0);
  const Scalar _tmp185 = _tmp102 * _tmp120 + _tmp112 * _tmp182 + _tmp116 * _tmp95;
  const Scalar _tmp186 = _tmp63 * lambdas(2, 1);
  const Scalar _tmp187 = -_tmp170 + _tmp171;
  const Scalar _tmp188 = _tmp158 + _tmp159;
  const Scalar _tmp189 = _tmp156 + _tmp174;
  const Scalar _tmp190 = _tmp144 * _tmp187 + _tmp154 * _tmp188 + _tmp166 * _tmp189;
  const Scalar _tmp191 = _tmp186 + _tmp190;
  const Scalar _tmp192 = _tmp0 * (_tmp106 * _tmp178 + _tmp121 * _tmp191 - _tmp177 * _tmp185 +
                                  _tmp179 * _tmp183 + _tmp180 * _tmp99) -
                         acceleration(3, 0);
  const Scalar _tmp193 = _tmp15 * lambdas(0, 2);
  const Scalar _tmp194 = _tmp135 * _tmp193 + _tmp139 * _tmp193 + _tmp142 * _tmp193 +
                         _tmp145 * _tmp165 - _tmp153 * _tmp161 + _tmp51 * lambdas(1, 2);
  const Scalar _tmp195 = _tmp11 * _tmp193;
  const Scalar _tmp196 = -_tmp129 * _tmp165 + _tmp143 * _tmp161 + _tmp148 * _tmp195 +
                         _tmp151 * _tmp193 + _tmp152 * _tmp193 + _tmp31 * lambdas(1, 2);
  const Scalar _tmp197 = _tmp129 * _tmp153 - _tmp143 * _tmp145 + _tmp162 * _tmp195 +
                         _tmp163 * _tmp193 + _tmp164 * _tmp193 + _tmp46 * lambdas(1, 2);
  const Scalar _tmp198 = _tmp0 * (-_tmp122 * _tmp176 + _tmp167 * _tmp169 + _tmp187 * _tmp194 +
                                  _tmp188 * _tmp196 + _tmp189 * _tmp197 + _tmp63 * lambdas(2, 2)) -
                         acceleration(2, 0);
  const Scalar _tmp199 = _tmp0 * (_tmp106 * _tmp119 + _tmp108 * _tmp183 + _tmp115 * _tmp99 +
                                  _tmp168 * _tmp185 - _tmp181 * _tmp191) -
                         acceleration(4, 0);
  const Scalar _tmp200 = _tmp0 * (_tmp122 * _tmp190 - _tmp167 * _tmp186 + _tmp172 * _tmp197 +
                                  _tmp173 * _tmp196 + _tmp175 * _tmp194 + _tmp82 * lambdas(2, 2)) -
                         acceleration(1, 0);
  const Scalar _tmp201 = _tmp0 * (_tmp128 * _tmp194 + _tmp157 * _tmp196 + _tmp160 * _tmp197 -
                                  _tmp169 * _tmp190 + _tmp176 * _tmp186 + _tmp79 * lambdas(2, 2)) -
                         acceleration(0, 0);

  // Output terms (1)
  Eigen::Matrix<Scalar, 6, 1> _res;

  _res(0, 0) = _tmp184 * sqrt_info(0, 5) + _tmp192 * sqrt_info(0, 3) + _tmp198 * sqrt_info(0, 2) +
               _tmp199 * sqrt_info(0, 4) + _tmp200 * sqrt_info(0, 1) + _tmp201 * sqrt_info(0, 0);
  _res(1, 0) = _tmp184 * sqrt_info(1, 5) + _tmp192 * sqrt_info(1, 3) + _tmp198 * sqrt_info(1, 2) +
               _tmp199 * sqrt_info(1, 4) + _tmp200 * sqrt_info(1, 1) + _tmp201 * sqrt_info(1, 0);
  _res(2, 0) = _tmp184 * sqrt_info(2, 5) + _tmp192 * sqrt_info(2, 3) + _tmp198 * sqrt_info(2, 2) +
               _tmp199 * sqrt_info(2, 4) + _tmp200 * sqrt_info(2, 1) + _tmp201 * sqrt_info(2, 0);
  _res(3, 0) = _tmp184 * sqrt_info(3, 5) + _tmp192 * sqrt_info(3, 3) + _tmp198 * sqrt_info(3, 2) +
               _tmp199 * sqrt_info(3, 4) + _tmp200 * sqrt_info(3, 1) + _tmp201 * sqrt_info(3, 0);
  _res(4, 0) = _tmp184 * sqrt_info(4, 5) + _tmp192 * sqrt_info(4, 3) + _tmp198 * sqrt_info(4, 2) +
               _tmp199 * sqrt_info(4, 4) + _tmp200 * sqrt_info(4, 1) + _tmp201 * sqrt_info(4, 0);
  _res(5, 0) = _tmp184 * sqrt_info(5, 5) + _tmp192 * sqrt_info(5, 3) + _tmp198 * sqrt_info(5, 2) +
               _tmp199 * sqrt_info(5, 4) + _tmp200 * sqrt_info(5, 1) + _tmp201 * sqrt_info(5, 0);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_ceres
