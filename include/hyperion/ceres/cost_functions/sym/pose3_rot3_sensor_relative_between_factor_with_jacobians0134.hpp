// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>
#include <sym/rot3.h>

namespace sym_ceres {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: pose3_rot3_sensor_relative_between_factor
 *
 * Args:
 *     x: Pose3
 *     x_T_a: Pose3
 *     a_T_b: Rot3
 *     y: Pose3
 *     y_T_b: Pose3
 *     sqrt_info: Matrix33
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix31
 *     res_D_x: (3x7) jacobian (result_dim x storage_dim) of res (3) wrt arg x (7) (row-major)
 *     res_D_x_T_a: (3x7) jacobian (result_dim x storage_dim) of res (3) wrt arg x_T_a (7)
 * (row-major) res_D_y: (3x7) jacobian (result_dim x storage_dim) of res (3) wrt arg y (7)
 * (row-major) res_D_y_T_b: (3x7) jacobian (result_dim x storage_dim) of res (3) wrt arg y_T_b (7)
 * (row-major)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 3, 1> Pose3Rot3SensorRelativeBetweenFactorWithJacobians0134(
    const sym::Pose3<Scalar>& x, const sym::Pose3<Scalar>& x_T_a, const sym::Rot3<Scalar>& a_T_b,
    const sym::Pose3<Scalar>& y, const sym::Pose3<Scalar>& y_T_b,
    const Eigen::Matrix<Scalar, 3, 3>& sqrt_info, const Scalar epsilon,
    Scalar* const res_D_x = nullptr, Scalar* const res_D_x_T_a = nullptr,
    Scalar* const res_D_y = nullptr, Scalar* const res_D_y_T_b = nullptr) {
  // Total ops: 1961

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x = x.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x_T_a = x_T_a.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _a_T_b = a_T_b.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y = y.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y_T_b = y_T_b.Data();

  // Intermediate terms (464)
  const Scalar _tmp0 = _y[2] * _y_T_b[0];
  const Scalar _tmp1 = _y[0] * _y_T_b[2];
  const Scalar _tmp2 = _y[3] * _y_T_b[1];
  const Scalar _tmp3 = _y[1] * _y_T_b[3];
  const Scalar _tmp4 = _tmp0 - _tmp1 + _tmp2 + _tmp3;
  const Scalar _tmp5 = _x[3] * _x_T_a[1];
  const Scalar _tmp6 = _x[2] * _x_T_a[0];
  const Scalar _tmp7 = _x[0] * _x_T_a[2];
  const Scalar _tmp8 = _x[1] * _x_T_a[3];
  const Scalar _tmp9 = _tmp5 + _tmp6 - _tmp7 + _tmp8;
  const Scalar _tmp10 = _y[2] * _y_T_b[3];
  const Scalar _tmp11 = _y[0] * _y_T_b[1];
  const Scalar _tmp12 = _y[3] * _y_T_b[2];
  const Scalar _tmp13 = _y[1] * _y_T_b[0];
  const Scalar _tmp14 = _tmp10 + _tmp11 + _tmp12 - _tmp13;
  const Scalar _tmp15 = _x[3] * _x_T_a[2];
  const Scalar _tmp16 = _x[2] * _x_T_a[3];
  const Scalar _tmp17 = _x[0] * _x_T_a[1];
  const Scalar _tmp18 = _x[1] * _x_T_a[0];
  const Scalar _tmp19 = _tmp15 + _tmp16 + _tmp17 - _tmp18;
  const Scalar _tmp20 = _y[0] * _y_T_b[3];
  const Scalar _tmp21 = _y[2] * _y_T_b[1];
  const Scalar _tmp22 = _y[3] * _y_T_b[0];
  const Scalar _tmp23 = _y[1] * _y_T_b[2];
  const Scalar _tmp24 = _tmp20 - _tmp21 + _tmp22 + _tmp23;
  const Scalar _tmp25 = _x[3] * _x_T_a[0];
  const Scalar _tmp26 = _x[2] * _x_T_a[1];
  const Scalar _tmp27 = _x[0] * _x_T_a[3];
  const Scalar _tmp28 = _x[1] * _x_T_a[2];
  const Scalar _tmp29 = _tmp25 - _tmp26 + _tmp27 + _tmp28;
  const Scalar _tmp30 = _x[3] * _x_T_a[3];
  const Scalar _tmp31 = _x[2] * _x_T_a[2];
  const Scalar _tmp32 = _x[0] * _x_T_a[0];
  const Scalar _tmp33 = _x[1] * _x_T_a[1];
  const Scalar _tmp34 = _tmp30 - _tmp31 - _tmp32 - _tmp33;
  const Scalar _tmp35 = _y[3] * _y_T_b[3];
  const Scalar _tmp36 = _y[2] * _y_T_b[2];
  const Scalar _tmp37 = _y[0] * _y_T_b[0];
  const Scalar _tmp38 = _y[1] * _y_T_b[1];
  const Scalar _tmp39 = _tmp35 - _tmp36 - _tmp37 - _tmp38;
  const Scalar _tmp40 = _tmp14 * _tmp19 + _tmp24 * _tmp29 + _tmp34 * _tmp39 + _tmp4 * _tmp9;
  const Scalar _tmp41 = _tmp14 * _tmp29 - _tmp19 * _tmp24 + _tmp34 * _tmp4 - _tmp39 * _tmp9;
  const Scalar _tmp42 = _tmp14 * _tmp34 - _tmp19 * _tmp39 + _tmp24 * _tmp9 - _tmp29 * _tmp4;
  const Scalar _tmp43 = -_tmp14 * _tmp9 + _tmp19 * _tmp4 + _tmp24 * _tmp34 - _tmp29 * _tmp39;
  const Scalar _tmp44 =
      -_a_T_b[0] * _tmp40 - _a_T_b[1] * _tmp42 + _a_T_b[2] * _tmp41 + _a_T_b[3] * _tmp43;
  const Scalar _tmp45 = _tmp44 * sqrt_info(0, 0);
  const Scalar _tmp46 = _a_T_b[3] * _tmp40;
  const Scalar _tmp47 = _a_T_b[1] * _tmp41;
  const Scalar _tmp48 = _a_T_b[2] * _tmp42;
  const Scalar _tmp49 = _a_T_b[0] * _tmp43;
  const Scalar _tmp50 = _tmp46 + _tmp47 + _tmp48 + _tmp49;
  const Scalar _tmp51 = (((_tmp50) > 0) - ((_tmp50) < 0));
  const Scalar _tmp52 = 2 * std::min<Scalar>(0, _tmp51) + 1;
  const Scalar _tmp53 = 2 * _tmp52;
  const Scalar _tmp54 = std::fabs(_tmp50);
  const Scalar _tmp55 = 1 - epsilon;
  const Scalar _tmp56 = std::min<Scalar>(_tmp54, _tmp55);
  const Scalar _tmp57 = 1 - std::pow(_tmp56, Scalar(2));
  const Scalar _tmp58 = std::acos(_tmp56);
  const Scalar _tmp59 = _tmp58 / std::sqrt(_tmp57);
  const Scalar _tmp60 = _tmp53 * _tmp59;
  const Scalar _tmp61 =
      -_a_T_b[0] * _tmp41 + _a_T_b[1] * _tmp43 - _a_T_b[2] * _tmp40 + _a_T_b[3] * _tmp42;
  const Scalar _tmp62 = _tmp53 * sqrt_info(0, 2);
  const Scalar _tmp63 = _tmp59 * _tmp62;
  const Scalar _tmp64 =
      _a_T_b[0] * _tmp42 - _a_T_b[1] * _tmp40 - _a_T_b[2] * _tmp43 + _a_T_b[3] * _tmp41;
  const Scalar _tmp65 = _tmp60 * _tmp64;
  const Scalar _tmp66 = _tmp44 * _tmp60;
  const Scalar _tmp67 = _tmp60 * _tmp61;
  const Scalar _tmp68 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp69 = -_tmp68;
  const Scalar _tmp70 = (Scalar(1) / Scalar(2)) * _tmp16;
  const Scalar _tmp71 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp72 = -_tmp71;
  const Scalar _tmp73 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp74 = -_tmp73;
  const Scalar _tmp75 = _tmp72 + _tmp74;
  const Scalar _tmp76 = _tmp69 + _tmp70 + _tmp75;
  const Scalar _tmp77 = (Scalar(1) / Scalar(2)) * _tmp32;
  const Scalar _tmp78 = -_tmp77;
  const Scalar _tmp79 = (Scalar(1) / Scalar(2)) * _tmp33;
  const Scalar _tmp80 = (Scalar(1) / Scalar(2)) * _tmp30;
  const Scalar _tmp81 = (Scalar(1) / Scalar(2)) * _tmp31;
  const Scalar _tmp82 = _tmp80 + _tmp81;
  const Scalar _tmp83 = _tmp78 + _tmp79 + _tmp82;
  const Scalar _tmp84 = (Scalar(1) / Scalar(2)) * _tmp8;
  const Scalar _tmp85 = -_tmp84;
  const Scalar _tmp86 = (Scalar(1) / Scalar(2)) * _tmp5;
  const Scalar _tmp87 = (Scalar(1) / Scalar(2)) * _tmp6;
  const Scalar _tmp88 = -_tmp87;
  const Scalar _tmp89 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp90 = -_tmp89;
  const Scalar _tmp91 = _tmp88 + _tmp90;
  const Scalar _tmp92 = _tmp85 + _tmp86 + _tmp91;
  const Scalar _tmp93 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp94 = -_tmp93;
  const Scalar _tmp95 = (Scalar(1) / Scalar(2)) * _tmp28;
  const Scalar _tmp96 = (Scalar(1) / Scalar(2)) * _tmp26;
  const Scalar _tmp97 = -_tmp96;
  const Scalar _tmp98 = (Scalar(1) / Scalar(2)) * _tmp27;
  const Scalar _tmp99 = -_tmp98;
  const Scalar _tmp100 = _tmp97 + _tmp99;
  const Scalar _tmp101 = _tmp100 + _tmp94 + _tmp95;
  const Scalar _tmp102 = _tmp101 * _tmp39 + _tmp14 * _tmp92 + _tmp24 * _tmp83 + _tmp4 * _tmp76;
  const Scalar _tmp103 = _tmp101 * _tmp4 + _tmp14 * _tmp83 - _tmp24 * _tmp92 - _tmp39 * _tmp76;
  const Scalar _tmp104 = _tmp101 * _tmp14 + _tmp24 * _tmp76 - _tmp39 * _tmp92 - _tmp4 * _tmp83;
  const Scalar _tmp105 = _tmp101 * _tmp24 - _tmp14 * _tmp76 - _tmp39 * _tmp83 + _tmp4 * _tmp92;
  const Scalar _tmp106 = _tmp60 * (_a_T_b[0] * _tmp104 - _a_T_b[1] * _tmp102 - _a_T_b[2] * _tmp105 +
                                   _a_T_b[3] * _tmp103);
  const Scalar _tmp107 =
      -_a_T_b[0] * _tmp103 + _a_T_b[1] * _tmp105 - _a_T_b[2] * _tmp102 + _a_T_b[3] * _tmp104;
  const Scalar _tmp108 = _tmp52 * _tmp64;
  const Scalar _tmp109 = _tmp108 * sqrt_info(0, 1);
  const Scalar _tmp110 =
      _a_T_b[0] * _tmp105 + _a_T_b[1] * _tmp103 + _a_T_b[2] * _tmp104 + _a_T_b[3] * _tmp102;
  const Scalar _tmp111 = _tmp51 * ((((-_tmp54 + _tmp55) > 0) - ((-_tmp54 + _tmp55) < 0)) + 1);
  const Scalar _tmp112 = _tmp111 * _tmp56 * _tmp58 / (_tmp57 * std::sqrt(_tmp57));
  const Scalar _tmp113 = _tmp110 * _tmp112;
  const Scalar _tmp114 = _tmp52 * _tmp61;
  const Scalar _tmp115 = _tmp114 * sqrt_info(0, 2);
  const Scalar _tmp116 = _tmp45 * _tmp52;
  const Scalar _tmp117 = _tmp111 / _tmp57;
  const Scalar _tmp118 = _tmp110 * _tmp117;
  const Scalar _tmp119 =
      -_a_T_b[0] * _tmp102 - _a_T_b[1] * _tmp104 + _a_T_b[2] * _tmp103 + _a_T_b[3] * _tmp105;
  const Scalar _tmp120 = _tmp60 * sqrt_info(0, 0);
  const Scalar _tmp121 = _tmp106 * sqrt_info(0, 1) + _tmp107 * _tmp63 + _tmp109 * _tmp113 -
                         _tmp109 * _tmp118 + _tmp113 * _tmp115 + _tmp113 * _tmp116 -
                         _tmp115 * _tmp118 - _tmp116 * _tmp118 + _tmp119 * _tmp120;
  const Scalar _tmp122 = 2 * _tmp121;
  const Scalar _tmp123 = -_tmp79;
  const Scalar _tmp124 = _tmp123 + _tmp77 + _tmp82;
  const Scalar _tmp125 = -_tmp70;
  const Scalar _tmp126 = _tmp125 + _tmp68 + _tmp75;
  const Scalar _tmp127 = -_tmp95;
  const Scalar _tmp128 = _tmp127 + _tmp94;
  const Scalar _tmp129 = _tmp97 + _tmp98;
  const Scalar _tmp130 = _tmp128 + _tmp129;
  const Scalar _tmp131 = -_tmp86;
  const Scalar _tmp132 = _tmp131 + _tmp85;
  const Scalar _tmp133 = _tmp87 + _tmp90;
  const Scalar _tmp134 = _tmp132 + _tmp133;
  const Scalar _tmp135 = _tmp124 * _tmp4 + _tmp126 * _tmp24 + _tmp130 * _tmp14 + _tmp134 * _tmp39;
  const Scalar _tmp136 = _tmp124 * _tmp24 - _tmp126 * _tmp4 - _tmp130 * _tmp39 + _tmp134 * _tmp14;
  const Scalar _tmp137 = -_tmp124 * _tmp14 - _tmp126 * _tmp39 + _tmp130 * _tmp4 + _tmp134 * _tmp24;
  const Scalar _tmp138 = -_tmp124 * _tmp39 + _tmp126 * _tmp14 - _tmp130 * _tmp24 + _tmp134 * _tmp4;
  const Scalar _tmp139 =
      -_a_T_b[0] * _tmp138 + _a_T_b[1] * _tmp137 - _a_T_b[2] * _tmp135 + _a_T_b[3] * _tmp136;
  const Scalar _tmp140 =
      -_a_T_b[0] * _tmp135 - _a_T_b[1] * _tmp136 + _a_T_b[2] * _tmp138 + _a_T_b[3] * _tmp137;
  const Scalar _tmp141 = _tmp60 * (_a_T_b[0] * _tmp136 - _a_T_b[1] * _tmp135 - _a_T_b[2] * _tmp137 +
                                   _a_T_b[3] * _tmp138);
  const Scalar _tmp142 =
      _a_T_b[0] * _tmp137 + _a_T_b[1] * _tmp138 + _a_T_b[2] * _tmp136 + _a_T_b[3] * _tmp135;
  const Scalar _tmp143 = _tmp117 * _tmp142;
  const Scalar _tmp144 = _tmp112 * _tmp142;
  const Scalar _tmp145 = -_tmp109 * _tmp143 + _tmp109 * _tmp144 - _tmp115 * _tmp143 +
                         _tmp115 * _tmp144 - _tmp116 * _tmp143 + _tmp116 * _tmp144 +
                         _tmp120 * _tmp140 + _tmp139 * _tmp63 + _tmp141 * sqrt_info(0, 1);
  const Scalar _tmp146 = 2 * _x[2];
  const Scalar _tmp147 = _tmp125 + _tmp69;
  const Scalar _tmp148 = _tmp72 + _tmp73;
  const Scalar _tmp149 = _tmp147 + _tmp148;
  const Scalar _tmp150 = _tmp80 - _tmp81;
  const Scalar _tmp151 = _tmp150 + _tmp77 + _tmp79;
  const Scalar _tmp152 = _tmp131 + _tmp84 + _tmp91;
  const Scalar _tmp153 = _tmp100 + _tmp127 + _tmp93;
  const Scalar _tmp154 = _tmp14 * _tmp152 + _tmp149 * _tmp4 - _tmp151 * _tmp24 - _tmp153 * _tmp39;
  const Scalar _tmp155 = _tmp14 * _tmp151 + _tmp149 * _tmp39 + _tmp152 * _tmp24 + _tmp153 * _tmp4;
  const Scalar _tmp156 = -_tmp14 * _tmp153 + _tmp149 * _tmp24 + _tmp151 * _tmp4 - _tmp152 * _tmp39;
  const Scalar _tmp157 = _tmp14 * _tmp149 - _tmp151 * _tmp39 - _tmp152 * _tmp4 + _tmp153 * _tmp24;
  const Scalar _tmp158 =
      _a_T_b[0] * _tmp156 + _a_T_b[1] * _tmp154 + _a_T_b[2] * _tmp157 + _a_T_b[3] * _tmp155;
  const Scalar _tmp159 = _tmp117 * _tmp158;
  const Scalar _tmp160 = _tmp60 * (_a_T_b[0] * _tmp157 - _a_T_b[1] * _tmp155 - _a_T_b[2] * _tmp156 +
                                   _a_T_b[3] * _tmp154);
  const Scalar _tmp161 =
      -_a_T_b[0] * _tmp155 - _a_T_b[1] * _tmp157 + _a_T_b[2] * _tmp154 + _a_T_b[3] * _tmp156;
  const Scalar _tmp162 =
      -_a_T_b[0] * _tmp154 + _a_T_b[1] * _tmp156 - _a_T_b[2] * _tmp155 + _a_T_b[3] * _tmp157;
  const Scalar _tmp163 = _tmp112 * _tmp116;
  const Scalar _tmp164 = _tmp112 * _tmp158;
  const Scalar _tmp165 = -_tmp109 * _tmp159 + _tmp109 * _tmp164 - _tmp115 * _tmp159 +
                         _tmp115 * _tmp164 - _tmp116 * _tmp159 + _tmp120 * _tmp161 +
                         _tmp158 * _tmp163 + _tmp160 * sqrt_info(0, 1) + _tmp162 * _tmp63;
  const Scalar _tmp166 = 2 * _tmp165;
  const Scalar _tmp167 = _tmp107 * _tmp60;
  const Scalar _tmp168 = _tmp108 * sqrt_info(1, 1);
  const Scalar _tmp169 = _tmp114 * sqrt_info(1, 2);
  const Scalar _tmp170 = _tmp44 * _tmp52;
  const Scalar _tmp171 = _tmp170 * sqrt_info(1, 0);
  const Scalar _tmp172 = _tmp60 * sqrt_info(1, 0);
  const Scalar _tmp173 = _tmp106 * sqrt_info(1, 1) + _tmp113 * _tmp168 + _tmp113 * _tmp169 +
                         _tmp113 * _tmp171 - _tmp118 * _tmp168 - _tmp118 * _tmp169 -
                         _tmp118 * _tmp171 + _tmp119 * _tmp172 + _tmp167 * sqrt_info(1, 2);
  const Scalar _tmp174 = 2 * _tmp173;
  const Scalar _tmp175 = _tmp139 * _tmp60;
  const Scalar _tmp176 = _tmp140 * _tmp172 + _tmp141 * sqrt_info(1, 1) - _tmp143 * _tmp168 -
                         _tmp143 * _tmp169 - _tmp143 * _tmp171 + _tmp144 * _tmp168 +
                         _tmp144 * _tmp169 + _tmp144 * _tmp171 + _tmp175 * sqrt_info(1, 2);
  const Scalar _tmp177 = _tmp162 * _tmp60;
  const Scalar _tmp178 = _tmp112 * _tmp171;
  const Scalar _tmp179 = _tmp158 * _tmp178 - _tmp159 * _tmp168 - _tmp159 * _tmp169 -
                         _tmp159 * _tmp171 + _tmp160 * sqrt_info(1, 1) + _tmp161 * _tmp172 +
                         _tmp164 * _tmp168 + _tmp164 * _tmp169 + _tmp177 * sqrt_info(1, 2);
  const Scalar _tmp180 = 2 * _tmp179;
  const Scalar _tmp181 = _tmp108 * sqrt_info(2, 1);
  const Scalar _tmp182 = _tmp114 * sqrt_info(2, 2);
  const Scalar _tmp183 = _tmp170 * sqrt_info(2, 0);
  const Scalar _tmp184 = _tmp60 * sqrt_info(2, 0);
  const Scalar _tmp185 = _tmp106 * sqrt_info(2, 1) + _tmp113 * _tmp181 + _tmp113 * _tmp182 +
                         _tmp113 * _tmp183 - _tmp118 * _tmp181 - _tmp118 * _tmp182 -
                         _tmp118 * _tmp183 + _tmp119 * _tmp184 + _tmp167 * sqrt_info(2, 2);
  const Scalar _tmp186 = 2 * _tmp185;
  const Scalar _tmp187 = _tmp140 * _tmp184 + _tmp141 * sqrt_info(2, 1) - _tmp143 * _tmp181 -
                         _tmp143 * _tmp182 - _tmp143 * _tmp183 + _tmp144 * _tmp181 +
                         _tmp144 * _tmp182 + _tmp144 * _tmp183 + _tmp175 * sqrt_info(2, 2);
  const Scalar _tmp188 = _tmp112 * _tmp183;
  const Scalar _tmp189 = _tmp158 * _tmp188 - _tmp159 * _tmp181 - _tmp159 * _tmp182 -
                         _tmp159 * _tmp183 + _tmp160 * sqrt_info(2, 1) + _tmp161 * _tmp184 +
                         _tmp164 * _tmp181 + _tmp164 * _tmp182 + _tmp177 * sqrt_info(2, 2);
  const Scalar _tmp190 = 2 * _tmp189;
  const Scalar _tmp191 = 2 * _x[3];
  const Scalar _tmp192 = 2 * _x[0];
  const Scalar _tmp193 = 2 * _x[1];
  const Scalar _tmp194 = _tmp129 + _tmp93 + _tmp95;
  const Scalar _tmp195 = _tmp132 + _tmp88 + _tmp89;
  const Scalar _tmp196 = _tmp195 * _tmp39;
  const Scalar _tmp197 = _tmp123 + _tmp150 + _tmp78;
  const Scalar _tmp198 = _tmp197 * _tmp4;
  const Scalar _tmp199 = _tmp147 + _tmp71 + _tmp74;
  const Scalar _tmp200 = _tmp198 + _tmp199 * _tmp24;
  const Scalar _tmp201 = _tmp14 * _tmp194 + _tmp196 + _tmp200;
  const Scalar _tmp202 = _tmp199 * _tmp4;
  const Scalar _tmp203 = _tmp197 * _tmp24;
  const Scalar _tmp204 = _tmp14 * _tmp195 + _tmp203;
  const Scalar _tmp205 = -_tmp194 * _tmp39 - _tmp202 + _tmp204;
  const Scalar _tmp206 = _tmp195 * _tmp24;
  const Scalar _tmp207 = _tmp14 * _tmp197;
  const Scalar _tmp208 = _tmp199 * _tmp39;
  const Scalar _tmp209 = _tmp194 * _tmp4 + _tmp206 - _tmp207 - _tmp208;
  const Scalar _tmp210 = _tmp14 * _tmp199;
  const Scalar _tmp211 = -_tmp197 * _tmp39;
  const Scalar _tmp212 = _tmp195 * _tmp4 + _tmp211;
  const Scalar _tmp213 = -_tmp194 * _tmp24 + _tmp210 + _tmp212;
  const Scalar _tmp214 =
      _a_T_b[0] * _tmp209 + _a_T_b[1] * _tmp213 + _a_T_b[2] * _tmp205 + _a_T_b[3] * _tmp201;
  const Scalar _tmp215 = _tmp46 + _tmp47 + _tmp48 + _tmp49;
  const Scalar _tmp216 = std::fabs(_tmp215);
  const Scalar _tmp217 = std::min<Scalar>(_tmp216, _tmp55);
  const Scalar _tmp218 = 1 - std::pow(_tmp217, Scalar(2));
  const Scalar _tmp219 = ((((-_tmp216 + _tmp55) > 0) - ((-_tmp216 + _tmp55) < 0)) + 1) *
                         (((_tmp215) > 0) - ((_tmp215) < 0));
  const Scalar _tmp220 = _tmp219 / _tmp218;
  const Scalar _tmp221 = _tmp214 * _tmp220;
  const Scalar _tmp222 = std::acos(_tmp217);
  const Scalar _tmp223 = _tmp217 * _tmp219 * _tmp222 / (_tmp218 * std::sqrt(_tmp218));
  const Scalar _tmp224 = _tmp214 * _tmp223;
  const Scalar _tmp225 =
      -_a_T_b[0] * _tmp201 - _a_T_b[1] * _tmp205 + _a_T_b[2] * _tmp213 + _a_T_b[3] * _tmp209;
  const Scalar _tmp226 = _tmp222 / std::sqrt(_tmp218);
  const Scalar _tmp227 = _tmp226 * _tmp53;
  const Scalar _tmp228 = _tmp227 * sqrt_info(0, 0);
  const Scalar _tmp229 =
      _a_T_b[0] * _tmp205 - _a_T_b[1] * _tmp201 - _a_T_b[2] * _tmp209 + _a_T_b[3] * _tmp213;
  const Scalar _tmp230 = _tmp227 * _tmp229;
  const Scalar _tmp231 =
      -_a_T_b[0] * _tmp213 + _a_T_b[1] * _tmp209 - _a_T_b[2] * _tmp201 + _a_T_b[3] * _tmp205;
  const Scalar _tmp232 = _tmp226 * _tmp62;
  const Scalar _tmp233 = _tmp116 * _tmp223;
  const Scalar _tmp234 = -_tmp109 * _tmp221 + _tmp109 * _tmp224 - _tmp115 * _tmp221 +
                         _tmp115 * _tmp224 - _tmp116 * _tmp221 + _tmp214 * _tmp233 +
                         _tmp225 * _tmp228 + _tmp230 * sqrt_info(0, 1) + _tmp231 * _tmp232;
  const Scalar _tmp235 = 2 * _tmp234;
  const Scalar _tmp236 = _tmp148 + _tmp68 + _tmp70;
  const Scalar _tmp237 = _tmp128 + _tmp96 + _tmp99;
  const Scalar _tmp238 = _tmp14 * _tmp237;
  const Scalar _tmp239 = -_tmp196 - _tmp198 + _tmp236 * _tmp24 + _tmp238;
  const Scalar _tmp240 = _tmp237 * _tmp39;
  const Scalar _tmp241 = _tmp204 + _tmp236 * _tmp4 + _tmp240;
  const Scalar _tmp242 = _tmp207 + _tmp237 * _tmp4;
  const Scalar _tmp243 = -_tmp206 - _tmp236 * _tmp39 + _tmp242;
  const Scalar _tmp244 = _tmp237 * _tmp24;
  const Scalar _tmp245 = -_tmp14 * _tmp236 + _tmp212 + _tmp244;
  const Scalar _tmp246 =
      -_a_T_b[0] * _tmp241 - _a_T_b[1] * _tmp239 + _a_T_b[2] * _tmp243 + _a_T_b[3] * _tmp245;
  const Scalar _tmp247 =
      _a_T_b[0] * _tmp245 + _a_T_b[1] * _tmp243 + _a_T_b[2] * _tmp239 + _a_T_b[3] * _tmp241;
  const Scalar _tmp248 = _tmp223 * _tmp247;
  const Scalar _tmp249 =
      _a_T_b[0] * _tmp239 - _a_T_b[1] * _tmp241 - _a_T_b[2] * _tmp245 + _a_T_b[3] * _tmp243;
  const Scalar _tmp250 = _tmp227 * _tmp249;
  const Scalar _tmp251 = _tmp220 * _tmp247;
  const Scalar _tmp252 =
      -_a_T_b[0] * _tmp243 + _a_T_b[1] * _tmp245 - _a_T_b[2] * _tmp241 + _a_T_b[3] * _tmp239;
  const Scalar _tmp253 = _tmp109 * _tmp248 - _tmp109 * _tmp251 + _tmp115 * _tmp248 -
                         _tmp115 * _tmp251 - _tmp116 * _tmp251 + _tmp228 * _tmp246 +
                         _tmp232 * _tmp252 + _tmp233 * _tmp247 + _tmp250 * sqrt_info(0, 1);
  const Scalar _tmp254 = 2 * _x_T_a[3];
  const Scalar _tmp255 = _tmp133 + _tmp84 + _tmp86;
  const Scalar _tmp256 = _tmp200 - _tmp238 - _tmp255 * _tmp39;
  const Scalar _tmp257 = _tmp14 * _tmp255 + _tmp202 - _tmp203 - _tmp240;
  const Scalar _tmp258 = _tmp208 + _tmp24 * _tmp255 + _tmp242;
  const Scalar _tmp259 = _tmp210 + _tmp211 + _tmp244 - _tmp255 * _tmp4;
  const Scalar _tmp260 =
      _a_T_b[0] * _tmp256 + _a_T_b[1] * _tmp257 + _a_T_b[2] * _tmp259 + _a_T_b[3] * _tmp258;
  const Scalar _tmp261 = _tmp220 * _tmp260;
  const Scalar _tmp262 = _tmp223 * _tmp260;
  const Scalar _tmp263 =
      -_a_T_b[0] * _tmp257 + _a_T_b[1] * _tmp256 - _a_T_b[2] * _tmp258 + _a_T_b[3] * _tmp259;
  const Scalar _tmp264 =
      -_a_T_b[0] * _tmp258 - _a_T_b[1] * _tmp259 + _a_T_b[2] * _tmp257 + _a_T_b[3] * _tmp256;
  const Scalar _tmp265 =
      _a_T_b[0] * _tmp259 - _a_T_b[1] * _tmp258 - _a_T_b[2] * _tmp256 + _a_T_b[3] * _tmp257;
  const Scalar _tmp266 = _tmp227 * _tmp265;
  const Scalar _tmp267 = -2 * _tmp109 * _tmp261 + 2 * _tmp109 * _tmp262 - 2 * _tmp115 * _tmp261 +
                         2 * _tmp115 * _tmp262 - 2 * _tmp116 * _tmp261 + 2 * _tmp228 * _tmp264 +
                         2 * _tmp232 * _tmp263 + 2 * _tmp233 * _tmp260 +
                         2 * _tmp266 * sqrt_info(0, 1);
  const Scalar _tmp268 = _tmp227 * sqrt_info(1, 0);
  const Scalar _tmp269 = _tmp227 * sqrt_info(1, 1);
  const Scalar _tmp270 = _tmp227 * sqrt_info(1, 2);
  const Scalar _tmp271 = -_tmp168 * _tmp221 + _tmp168 * _tmp224 - _tmp169 * _tmp221 +
                         _tmp169 * _tmp224 - _tmp171 * _tmp221 + _tmp171 * _tmp224 +
                         _tmp225 * _tmp268 + _tmp229 * _tmp269 + _tmp231 * _tmp270;
  const Scalar _tmp272 = 2 * _tmp271;
  const Scalar _tmp273 = _tmp168 * _tmp248 - _tmp168 * _tmp251 + _tmp169 * _tmp248 -
                         _tmp169 * _tmp251 + _tmp171 * _tmp248 - _tmp171 * _tmp251 +
                         _tmp246 * _tmp268 + _tmp249 * _tmp269 + _tmp252 * _tmp270;
  const Scalar _tmp274 = _tmp227 * _tmp264;
  const Scalar _tmp275 = -2 * _tmp168 * _tmp261 + 2 * _tmp168 * _tmp262 - 2 * _tmp169 * _tmp261 +
                         2 * _tmp169 * _tmp262 - 2 * _tmp171 * _tmp261 + 2 * _tmp171 * _tmp262 +
                         2 * _tmp263 * _tmp270 + 2 * _tmp265 * _tmp269 +
                         2 * _tmp274 * sqrt_info(1, 0);
  const Scalar _tmp276 = _tmp227 * sqrt_info(2, 0);
  const Scalar _tmp277 = _tmp227 * sqrt_info(2, 2);
  const Scalar _tmp278 = -_tmp181 * _tmp221 + _tmp181 * _tmp224 - _tmp182 * _tmp221 +
                         _tmp182 * _tmp224 - _tmp183 * _tmp221 + _tmp183 * _tmp224 +
                         _tmp225 * _tmp276 + _tmp230 * sqrt_info(2, 1) + _tmp231 * _tmp277;
  const Scalar _tmp279 = 2 * _tmp278;
  const Scalar _tmp280 = _tmp181 * _tmp248 - _tmp181 * _tmp251 + _tmp182 * _tmp248 -
                         _tmp182 * _tmp251 + _tmp183 * _tmp248 - _tmp183 * _tmp251 +
                         _tmp246 * _tmp276 + _tmp250 * sqrt_info(2, 1) + _tmp252 * _tmp277;
  const Scalar _tmp281 = -2 * _tmp181 * _tmp261 + 2 * _tmp181 * _tmp262 - 2 * _tmp182 * _tmp261 +
                         2 * _tmp182 * _tmp262 - 2 * _tmp183 * _tmp261 + 2 * _tmp183 * _tmp262 +
                         2 * _tmp263 * _tmp277 + 2 * _tmp266 * sqrt_info(2, 1) +
                         2 * _tmp274 * sqrt_info(2, 0);
  const Scalar _tmp282 = 2 * _tmp253;
  const Scalar _tmp283 = 2 * _tmp273;
  const Scalar _tmp284 = 2 * _tmp280;
  const Scalar _tmp285 = 2 * _x_T_a[0];
  const Scalar _tmp286 = (Scalar(1) / Scalar(2)) * _tmp10;
  const Scalar _tmp287 = (Scalar(1) / Scalar(2)) * _tmp12;
  const Scalar _tmp288 = -_tmp287;
  const Scalar _tmp289 = (Scalar(1) / Scalar(2)) * _tmp11;
  const Scalar _tmp290 = -_tmp289;
  const Scalar _tmp291 = (Scalar(1) / Scalar(2)) * _tmp13;
  const Scalar _tmp292 = -_tmp291;
  const Scalar _tmp293 = _tmp290 + _tmp292;
  const Scalar _tmp294 = _tmp286 + _tmp288 + _tmp293;
  const Scalar _tmp295 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp296 = -_tmp295;
  const Scalar _tmp297 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp298 = _tmp296 + _tmp297;
  const Scalar _tmp299 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp300 = -_tmp299;
  const Scalar _tmp301 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp302 = -_tmp301;
  const Scalar _tmp303 = _tmp300 + _tmp302;
  const Scalar _tmp304 = _tmp298 + _tmp303;
  const Scalar _tmp305 = (Scalar(1) / Scalar(2)) * _tmp20;
  const Scalar _tmp306 = -_tmp305;
  const Scalar _tmp307 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp308 = -_tmp307;
  const Scalar _tmp309 = _tmp306 + _tmp308;
  const Scalar _tmp310 = (Scalar(1) / Scalar(2)) * _tmp21;
  const Scalar _tmp311 = -_tmp310;
  const Scalar _tmp312 = (Scalar(1) / Scalar(2)) * _tmp23;
  const Scalar _tmp313 = _tmp311 + _tmp312;
  const Scalar _tmp314 = _tmp309 + _tmp313;
  const Scalar _tmp315 = (Scalar(1) / Scalar(2)) * _tmp36;
  const Scalar _tmp316 = (Scalar(1) / Scalar(2)) * _tmp38;
  const Scalar _tmp317 = (Scalar(1) / Scalar(2)) * _tmp37;
  const Scalar _tmp318 = (Scalar(1) / Scalar(2)) * _tmp35;
  const Scalar _tmp319 = -_tmp317 + _tmp318;
  const Scalar _tmp320 = _tmp315 + _tmp316 + _tmp319;
  const Scalar _tmp321 = _tmp19 * _tmp294 - _tmp29 * _tmp314 - _tmp304 * _tmp9 + _tmp320 * _tmp34;
  const Scalar _tmp322 = -_tmp19 * _tmp320 + _tmp29 * _tmp304 + _tmp294 * _tmp34 - _tmp314 * _tmp9;
  const Scalar _tmp323 = _tmp19 * _tmp304 + _tmp29 * _tmp320 + _tmp294 * _tmp9 + _tmp314 * _tmp34;
  const Scalar _tmp324 = -_tmp19 * _tmp314 - _tmp29 * _tmp294 + _tmp304 * _tmp34 + _tmp320 * _tmp9;
  const Scalar _tmp325 =
      _a_T_b[0] * _tmp321 + _a_T_b[1] * _tmp322 + _a_T_b[2] * _tmp324 + _a_T_b[3] * _tmp323;
  const Scalar _tmp326 = _tmp223 * _tmp325;
  const Scalar _tmp327 = _tmp220 * _tmp325;
  const Scalar _tmp328 =
      _a_T_b[0] * _tmp324 - _a_T_b[1] * _tmp323 - _a_T_b[2] * _tmp321 + _a_T_b[3] * _tmp322;
  const Scalar _tmp329 = _tmp227 * _tmp328;
  const Scalar _tmp330 =
      -_a_T_b[0] * _tmp322 + _a_T_b[1] * _tmp321 - _a_T_b[2] * _tmp323 + _a_T_b[3] * _tmp324;
  const Scalar _tmp331 =
      -_a_T_b[0] * _tmp323 - _a_T_b[1] * _tmp324 + _a_T_b[2] * _tmp322 + _a_T_b[3] * _tmp321;
  const Scalar _tmp332 = _tmp109 * _tmp326 - _tmp109 * _tmp327 + _tmp115 * _tmp326 -
                         _tmp115 * _tmp327 - _tmp116 * _tmp327 + _tmp228 * _tmp331 +
                         _tmp232 * _tmp330 + _tmp233 * _tmp325 + _tmp329 * sqrt_info(0, 1);
  const Scalar _tmp333 = 2 * _y[3];
  const Scalar _tmp334 = -_tmp297;
  const Scalar _tmp335 = _tmp296 + _tmp334;
  const Scalar _tmp336 = _tmp300 + _tmp301 + _tmp335;
  const Scalar _tmp337 = -_tmp315;
  const Scalar _tmp338 = _tmp317 + _tmp318;
  const Scalar _tmp339 = _tmp316 + _tmp337 + _tmp338;
  const Scalar _tmp340 = -_tmp312;
  const Scalar _tmp341 = _tmp311 + _tmp340;
  const Scalar _tmp342 = _tmp306 + _tmp307 + _tmp341;
  const Scalar _tmp343 = _tmp289 + _tmp292;
  const Scalar _tmp344 = -_tmp286;
  const Scalar _tmp345 = _tmp288 + _tmp344;
  const Scalar _tmp346 = _tmp343 + _tmp345;
  const Scalar _tmp347 = _tmp19 * _tmp339 + _tmp29 * _tmp336 + _tmp34 * _tmp346 + _tmp342 * _tmp9;
  const Scalar _tmp348 = _tmp19 * _tmp342 - _tmp29 * _tmp346 + _tmp336 * _tmp34 - _tmp339 * _tmp9;
  const Scalar _tmp349 = -_tmp19 * _tmp346 - _tmp29 * _tmp342 + _tmp336 * _tmp9 + _tmp339 * _tmp34;
  const Scalar _tmp350 = -_tmp19 * _tmp336 + _tmp29 * _tmp339 + _tmp34 * _tmp342 - _tmp346 * _tmp9;
  const Scalar _tmp351 =
      _a_T_b[0] * _tmp348 + _a_T_b[1] * _tmp350 + _a_T_b[2] * _tmp349 + _a_T_b[3] * _tmp347;
  const Scalar _tmp352 = _tmp223 * _tmp351;
  const Scalar _tmp353 = _tmp220 * _tmp351;
  const Scalar _tmp354 =
      -_a_T_b[0] * _tmp350 + _a_T_b[1] * _tmp348 - _a_T_b[2] * _tmp347 + _a_T_b[3] * _tmp349;
  const Scalar _tmp355 =
      _a_T_b[0] * _tmp349 - _a_T_b[1] * _tmp347 - _a_T_b[2] * _tmp348 + _a_T_b[3] * _tmp350;
  const Scalar _tmp356 = _tmp227 * _tmp355;
  const Scalar _tmp357 =
      -_a_T_b[0] * _tmp347 - _a_T_b[1] * _tmp349 + _a_T_b[2] * _tmp350 + _a_T_b[3] * _tmp348;
  const Scalar _tmp358 = _tmp109 * _tmp352 - _tmp109 * _tmp353 + _tmp115 * _tmp352 -
                         _tmp115 * _tmp353 - _tmp116 * _tmp353 + _tmp228 * _tmp357 +
                         _tmp232 * _tmp354 + _tmp233 * _tmp351 + _tmp356 * sqrt_info(0, 1);
  const Scalar _tmp359 = 2 * _y[1];
  const Scalar _tmp360 = -_tmp316;
  const Scalar _tmp361 = _tmp315 + _tmp338 + _tmp360;
  const Scalar _tmp362 = _tmp299 + _tmp302 + _tmp335;
  const Scalar _tmp363 = _tmp305 + _tmp308 + _tmp341;
  const Scalar _tmp364 = _tmp287 + _tmp293 + _tmp344;
  const Scalar _tmp365 = _tmp19 * _tmp361 - _tmp29 * _tmp362 + _tmp34 * _tmp364 - _tmp363 * _tmp9;
  const Scalar _tmp366 = -_tmp19 * _tmp364 + _tmp29 * _tmp363 + _tmp34 * _tmp361 - _tmp362 * _tmp9;
  const Scalar _tmp367 = _tmp19 * _tmp363 + _tmp29 * _tmp364 + _tmp34 * _tmp362 + _tmp361 * _tmp9;
  const Scalar _tmp368 = -_tmp19 * _tmp362 - _tmp29 * _tmp361 + _tmp34 * _tmp363 + _tmp364 * _tmp9;
  const Scalar _tmp369 =
      _a_T_b[0] * _tmp365 + _a_T_b[1] * _tmp366 + _a_T_b[2] * _tmp368 + _a_T_b[3] * _tmp367;
  const Scalar _tmp370 = _tmp223 * _tmp369;
  const Scalar _tmp371 = _tmp220 * _tmp369;
  const Scalar _tmp372 =
      -_a_T_b[0] * _tmp366 + _a_T_b[1] * _tmp365 - _a_T_b[2] * _tmp367 + _a_T_b[3] * _tmp368;
  const Scalar _tmp373 =
      _a_T_b[0] * _tmp368 - _a_T_b[1] * _tmp367 - _a_T_b[2] * _tmp365 + _a_T_b[3] * _tmp366;
  const Scalar _tmp374 = _tmp227 * _tmp373;
  const Scalar _tmp375 =
      -_a_T_b[0] * _tmp367 - _a_T_b[1] * _tmp368 + _a_T_b[2] * _tmp366 + _a_T_b[3] * _tmp365;
  const Scalar _tmp376 = _tmp109 * _tmp370 - _tmp109 * _tmp371 + _tmp115 * _tmp370 -
                         _tmp115 * _tmp371 - _tmp116 * _tmp371 + _tmp228 * _tmp375 +
                         _tmp232 * _tmp372 + _tmp233 * _tmp369 + _tmp374 * sqrt_info(0, 1);
  const Scalar _tmp377 = 2 * _tmp376;
  const Scalar _tmp378 = _tmp168 * _tmp326 - _tmp168 * _tmp327 + _tmp169 * _tmp326 -
                         _tmp169 * _tmp327 + _tmp171 * _tmp326 - _tmp171 * _tmp327 +
                         _tmp268 * _tmp331 + _tmp269 * _tmp328 + _tmp270 * _tmp330;
  const Scalar _tmp379 = _tmp168 * _tmp352 - _tmp168 * _tmp353 + _tmp169 * _tmp352 -
                         _tmp169 * _tmp353 + _tmp171 * _tmp352 - _tmp171 * _tmp353 +
                         _tmp268 * _tmp357 + _tmp269 * _tmp355 + _tmp270 * _tmp354;
  const Scalar _tmp380 = 2 * _tmp379;
  const Scalar _tmp381 = _tmp227 * _tmp375;
  const Scalar _tmp382 = _tmp168 * _tmp370 - _tmp168 * _tmp371 + _tmp169 * _tmp370 -
                         _tmp169 * _tmp371 + _tmp171 * _tmp370 - _tmp171 * _tmp371 +
                         _tmp269 * _tmp373 + _tmp270 * _tmp372 + _tmp381 * sqrt_info(1, 0);
  const Scalar _tmp383 = 2 * _tmp382;
  const Scalar _tmp384 = _tmp181 * _tmp326 - _tmp181 * _tmp327 + _tmp182 * _tmp326 -
                         _tmp182 * _tmp327 + _tmp183 * _tmp326 - _tmp183 * _tmp327 +
                         _tmp276 * _tmp331 + _tmp277 * _tmp330 + _tmp329 * sqrt_info(2, 1);
  const Scalar _tmp385 = _tmp181 * _tmp352 - _tmp181 * _tmp353 + _tmp182 * _tmp352 -
                         _tmp182 * _tmp353 + _tmp183 * _tmp352 - _tmp183 * _tmp353 +
                         _tmp276 * _tmp357 + _tmp277 * _tmp354 + _tmp356 * sqrt_info(2, 1);
  const Scalar _tmp386 = 2 * _tmp385;
  const Scalar _tmp387 = _tmp181 * _tmp370 - _tmp181 * _tmp371 + _tmp182 * _tmp370 -
                         _tmp182 * _tmp371 + _tmp183 * _tmp370 - _tmp183 * _tmp371 +
                         _tmp277 * _tmp372 + _tmp374 * sqrt_info(2, 1) + _tmp381 * sqrt_info(2, 0);
  const Scalar _tmp388 = 2 * _tmp387;
  const Scalar _tmp389 = 2 * _tmp332;
  const Scalar _tmp390 = 2 * _y[0];
  const Scalar _tmp391 = 2 * _y[2];
  const Scalar _tmp392 = _tmp295 + _tmp303 + _tmp334;
  const Scalar _tmp393 = -_tmp392 * _tmp9;
  const Scalar _tmp394 = _tmp305 + _tmp307 + _tmp313;
  const Scalar _tmp395 = _tmp290 + _tmp291 + _tmp345;
  const Scalar _tmp396 = _tmp319 + _tmp337 + _tmp360;
  const Scalar _tmp397 = _tmp34 * _tmp396;
  const Scalar _tmp398 = -_tmp19 * _tmp395 + _tmp397;
  const Scalar _tmp399 = _tmp29 * _tmp394 + _tmp393 + _tmp398;
  const Scalar _tmp400 = _tmp29 * _tmp392;
  const Scalar _tmp401 = _tmp19 * _tmp396;
  const Scalar _tmp402 = _tmp34 * _tmp395 + _tmp401;
  const Scalar _tmp403 = -_tmp394 * _tmp9 - _tmp400 + _tmp402;
  const Scalar _tmp404 = _tmp395 * _tmp9;
  const Scalar _tmp405 = _tmp19 * _tmp392;
  const Scalar _tmp406 = _tmp29 * _tmp396;
  const Scalar _tmp407 = _tmp34 * _tmp394 + _tmp404 - _tmp405 - _tmp406;
  const Scalar _tmp408 = _tmp29 * _tmp395;
  const Scalar _tmp409 = _tmp396 * _tmp9;
  const Scalar _tmp410 = _tmp34 * _tmp392 + _tmp409;
  const Scalar _tmp411 = _tmp19 * _tmp394 + _tmp408 + _tmp410;
  const Scalar _tmp412 =
      _a_T_b[0] * _tmp403 + _a_T_b[1] * _tmp399 + _a_T_b[2] * _tmp407 + _a_T_b[3] * _tmp411;
  const Scalar _tmp413 = _tmp112 * _tmp412;
  const Scalar _tmp414 =
      -_a_T_b[0] * _tmp411 - _a_T_b[1] * _tmp407 + _a_T_b[2] * _tmp399 + _a_T_b[3] * _tmp403;
  const Scalar _tmp415 = _tmp60 * (_a_T_b[0] * _tmp407 - _a_T_b[1] * _tmp411 - _a_T_b[2] * _tmp403 +
                                   _a_T_b[3] * _tmp399);
  const Scalar _tmp416 =
      -_a_T_b[0] * _tmp399 + _a_T_b[1] * _tmp403 - _a_T_b[2] * _tmp411 + _a_T_b[3] * _tmp407;
  const Scalar _tmp417 = _tmp117 * _tmp412;
  const Scalar _tmp418 = _tmp109 * _tmp413 - _tmp109 * _tmp417 + _tmp115 * _tmp413 -
                         _tmp115 * _tmp417 + _tmp116 * _tmp413 - _tmp116 * _tmp417 +
                         _tmp120 * _tmp414 + _tmp415 * sqrt_info(0, 1) + _tmp416 * _tmp63;
  const Scalar _tmp419 = 2 * _y_T_b[2];
  const Scalar _tmp420 = _tmp298 + _tmp299 + _tmp301;
  const Scalar _tmp421 = _tmp309 + _tmp310 + _tmp340;
  const Scalar _tmp422 = _tmp421 * _tmp9;
  const Scalar _tmp423 = _tmp29 * _tmp420 + _tmp402 + _tmp422;
  const Scalar _tmp424 = -_tmp29 * _tmp421;
  const Scalar _tmp425 = _tmp398 + _tmp420 * _tmp9 + _tmp424;
  const Scalar _tmp426 = _tmp34 * _tmp421 + _tmp406;
  const Scalar _tmp427 = -_tmp19 * _tmp420 - _tmp404 + _tmp426;
  const Scalar _tmp428 = _tmp19 * _tmp421;
  const Scalar _tmp429 = _tmp34 * _tmp420 - _tmp408 - _tmp409 + _tmp428;
  const Scalar _tmp430 = _tmp60 * (_a_T_b[0] * _tmp425 - _a_T_b[1] * _tmp423 - _a_T_b[2] * _tmp429 +
                                   _a_T_b[3] * _tmp427);
  const Scalar _tmp431 =
      -_a_T_b[0] * _tmp423 - _a_T_b[1] * _tmp425 + _a_T_b[2] * _tmp427 + _a_T_b[3] * _tmp429;
  const Scalar _tmp432 =
      _a_T_b[0] * _tmp429 + _a_T_b[1] * _tmp427 + _a_T_b[2] * _tmp425 + _a_T_b[3] * _tmp423;
  const Scalar _tmp433 = _tmp117 * _tmp432;
  const Scalar _tmp434 = _tmp112 * _tmp432;
  const Scalar _tmp435 =
      -_a_T_b[0] * _tmp427 + _a_T_b[1] * _tmp429 - _a_T_b[2] * _tmp423 + _a_T_b[3] * _tmp425;
  const Scalar _tmp436 = _tmp114 * _tmp433;
  const Scalar _tmp437 = -_tmp109 * _tmp433 + _tmp109 * _tmp434 + _tmp115 * _tmp434 -
                         _tmp116 * _tmp433 + _tmp120 * _tmp431 + _tmp163 * _tmp432 +
                         _tmp430 * sqrt_info(0, 1) + _tmp435 * _tmp63 - _tmp436 * sqrt_info(0, 2);
  const Scalar _tmp438 = 2 * _y_T_b[1];
  const Scalar _tmp439 = _tmp286 + _tmp287 + _tmp343;
  const Scalar _tmp440 = _tmp19 * _tmp439 + _tmp393 + _tmp397 + _tmp424;
  const Scalar _tmp441 = _tmp34 * _tmp439 + _tmp400 - _tmp401 - _tmp422;
  const Scalar _tmp442 = _tmp405 + _tmp426 + _tmp439 * _tmp9;
  const Scalar _tmp443 = -_tmp29 * _tmp439 + _tmp410 - _tmp428;
  const Scalar _tmp444 = _tmp60 * (_a_T_b[0] * _tmp443 - _a_T_b[1] * _tmp442 - _a_T_b[2] * _tmp440 +
                                   _a_T_b[3] * _tmp441);
  const Scalar _tmp445 =
      _a_T_b[0] * _tmp440 + _a_T_b[1] * _tmp441 + _a_T_b[2] * _tmp443 + _a_T_b[3] * _tmp442;
  const Scalar _tmp446 = _tmp112 * _tmp445;
  const Scalar _tmp447 =
      -_a_T_b[0] * _tmp441 + _a_T_b[1] * _tmp440 - _a_T_b[2] * _tmp442 + _a_T_b[3] * _tmp443;
  const Scalar _tmp448 = _tmp117 * _tmp445;
  const Scalar _tmp449 =
      -_a_T_b[0] * _tmp442 - _a_T_b[1] * _tmp443 + _a_T_b[2] * _tmp441 + _a_T_b[3] * _tmp440;
  const Scalar _tmp450 = _tmp109 * _tmp446 - _tmp109 * _tmp448 + _tmp115 * _tmp446 -
                         _tmp115 * _tmp448 + _tmp116 * _tmp446 - _tmp116 * _tmp448 +
                         _tmp120 * _tmp449 + _tmp444 * sqrt_info(0, 1) + _tmp447 * _tmp63;
  const Scalar _tmp451 = 2 * _tmp450;
  const Scalar _tmp452 = _tmp416 * _tmp60;
  const Scalar _tmp453 = _tmp168 * _tmp413 - _tmp168 * _tmp417 + _tmp169 * _tmp413 -
                         _tmp169 * _tmp417 + _tmp171 * _tmp413 - _tmp171 * _tmp417 +
                         _tmp172 * _tmp414 + _tmp415 * sqrt_info(1, 1) + _tmp452 * sqrt_info(1, 2);
  const Scalar _tmp454 = _tmp435 * _tmp60;
  const Scalar _tmp455 = -_tmp168 * _tmp433 + _tmp168 * _tmp434 + _tmp169 * _tmp434 -
                         _tmp171 * _tmp433 + _tmp172 * _tmp431 + _tmp178 * _tmp432 +
                         _tmp430 * sqrt_info(1, 1) - _tmp436 * sqrt_info(1, 2) +
                         _tmp454 * sqrt_info(1, 2);
  const Scalar _tmp456 = _tmp447 * _tmp60;
  const Scalar _tmp457 = 2 * _tmp168 * _tmp446 - 2 * _tmp168 * _tmp448 + 2 * _tmp169 * _tmp446 -
                         2 * _tmp169 * _tmp448 - 2 * _tmp171 * _tmp448 + 2 * _tmp172 * _tmp449 +
                         2 * _tmp178 * _tmp445 + 2 * _tmp444 * sqrt_info(1, 1) +
                         2 * _tmp456 * sqrt_info(1, 2);
  const Scalar _tmp458 = _tmp181 * _tmp413 - _tmp181 * _tmp417 + _tmp182 * _tmp413 -
                         _tmp182 * _tmp417 + _tmp183 * _tmp413 - _tmp183 * _tmp417 +
                         _tmp184 * _tmp414 + _tmp415 * sqrt_info(2, 1) + _tmp452 * sqrt_info(2, 2);
  const Scalar _tmp459 = -_tmp181 * _tmp433 + _tmp181 * _tmp434 - _tmp182 * _tmp433 +
                         _tmp182 * _tmp434 - _tmp183 * _tmp433 + _tmp184 * _tmp431 +
                         _tmp188 * _tmp432 + _tmp430 * sqrt_info(2, 1) + _tmp454 * sqrt_info(2, 2);
  const Scalar _tmp460 = _tmp181 * _tmp446 - _tmp181 * _tmp448 + _tmp182 * _tmp446 -
                         _tmp182 * _tmp448 - _tmp183 * _tmp448 + _tmp184 * _tmp449 +
                         _tmp188 * _tmp445 + _tmp444 * sqrt_info(2, 1) + _tmp456 * sqrt_info(2, 2);
  const Scalar _tmp461 = 2 * _tmp460;
  const Scalar _tmp462 = 2 * _y_T_b[3];
  const Scalar _tmp463 = 2 * _y_T_b[0];

  // Output terms (5)
  Eigen::Matrix<Scalar, 3, 1> _res;

  _res(0, 0) = _tmp45 * _tmp60 + _tmp61 * _tmp63 + _tmp65 * sqrt_info(0, 1);
  _res(1, 0) = _tmp65 * sqrt_info(1, 1) + _tmp66 * sqrt_info(1, 0) + _tmp67 * sqrt_info(1, 2);
  _res(2, 0) = _tmp65 * sqrt_info(2, 1) + _tmp66 * sqrt_info(2, 0) + _tmp67 * sqrt_info(2, 2);

  if (res_D_x != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 7, Eigen::RowMajor>> _res_D_x{res_D_x};

    _res_D_x(0, 0) = _tmp122 * _x[3] - _tmp145 * _tmp146 + _tmp166 * _x[1];
    _res_D_x(1, 0) = -_tmp146 * _tmp176 + _tmp174 * _x[3] + _tmp180 * _x[1];
    _res_D_x(2, 0) = -_tmp146 * _tmp187 + _tmp186 * _x[3] + _tmp190 * _x[1];
    _res_D_x(0, 1) = _tmp121 * _tmp146 + _tmp145 * _tmp191 - _tmp165 * _tmp192;
    _res_D_x(1, 1) = _tmp146 * _tmp173 + _tmp176 * _tmp191 - _tmp179 * _tmp192;
    _res_D_x(2, 1) = _tmp146 * _tmp185 + _tmp187 * _tmp191 - _tmp189 * _tmp192;
    _res_D_x(0, 2) = -_tmp122 * _x[1] + _tmp145 * _tmp192 + _tmp166 * _x[3];
    _res_D_x(1, 2) = -_tmp174 * _x[1] + _tmp176 * _tmp192 + _tmp180 * _x[3];
    _res_D_x(2, 2) = -_tmp186 * _x[1] + _tmp187 * _tmp192 + _tmp190 * _x[3];
    _res_D_x(0, 3) = -_tmp121 * _tmp192 - _tmp145 * _tmp193 - _tmp166 * _x[2];
    _res_D_x(1, 3) = -_tmp173 * _tmp192 - _tmp176 * _tmp193 - _tmp180 * _x[2];
    _res_D_x(2, 3) = -_tmp185 * _tmp192 - _tmp187 * _tmp193 - _tmp190 * _x[2];
    _res_D_x(0, 4) = 0;
    _res_D_x(1, 4) = 0;
    _res_D_x(2, 4) = 0;
    _res_D_x(0, 5) = 0;
    _res_D_x(1, 5) = 0;
    _res_D_x(2, 5) = 0;
    _res_D_x(0, 6) = 0;
    _res_D_x(1, 6) = 0;
    _res_D_x(2, 6) = 0;
  }

  if (res_D_x_T_a != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 7, Eigen::RowMajor>> _res_D_x_T_a{res_D_x_T_a};

    _res_D_x_T_a(0, 0) = -_tmp235 * _x_T_a[2] + _tmp253 * _tmp254 + _tmp267 * _x_T_a[1];
    _res_D_x_T_a(1, 0) = _tmp254 * _tmp273 - _tmp272 * _x_T_a[2] + _tmp275 * _x_T_a[1];
    _res_D_x_T_a(2, 0) = _tmp254 * _tmp280 - _tmp279 * _x_T_a[2] + _tmp281 * _x_T_a[1];
    _res_D_x_T_a(0, 1) = _tmp234 * _tmp254 - _tmp267 * _x_T_a[0] + _tmp282 * _x_T_a[2];
    _res_D_x_T_a(1, 1) = _tmp254 * _tmp271 - _tmp275 * _x_T_a[0] + _tmp283 * _x_T_a[2];
    _res_D_x_T_a(2, 1) = _tmp254 * _tmp278 - _tmp281 * _x_T_a[0] + _tmp284 * _x_T_a[2];
    _res_D_x_T_a(0, 2) = _tmp234 * _tmp285 + _tmp267 * _x_T_a[3] - _tmp282 * _x_T_a[1];
    _res_D_x_T_a(1, 2) = _tmp271 * _tmp285 + _tmp275 * _x_T_a[3] - _tmp283 * _x_T_a[1];
    _res_D_x_T_a(2, 2) = _tmp278 * _tmp285 + _tmp281 * _x_T_a[3] - _tmp284 * _x_T_a[1];
    _res_D_x_T_a(0, 3) = -_tmp235 * _x_T_a[1] - _tmp253 * _tmp285 - _tmp267 * _x_T_a[2];
    _res_D_x_T_a(1, 3) = -_tmp272 * _x_T_a[1] - _tmp273 * _tmp285 - _tmp275 * _x_T_a[2];
    _res_D_x_T_a(2, 3) = -_tmp279 * _x_T_a[1] - _tmp280 * _tmp285 - _tmp281 * _x_T_a[2];
    _res_D_x_T_a(0, 4) = 0;
    _res_D_x_T_a(1, 4) = 0;
    _res_D_x_T_a(2, 4) = 0;
    _res_D_x_T_a(0, 5) = 0;
    _res_D_x_T_a(1, 5) = 0;
    _res_D_x_T_a(2, 5) = 0;
    _res_D_x_T_a(0, 6) = 0;
    _res_D_x_T_a(1, 6) = 0;
    _res_D_x_T_a(2, 6) = 0;
  }

  if (res_D_y != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 7, Eigen::RowMajor>> _res_D_y{res_D_y};

    _res_D_y(0, 0) = _tmp332 * _tmp333 + _tmp358 * _tmp359 - _tmp377 * _y[2];
    _res_D_y(1, 0) = _tmp333 * _tmp378 + _tmp380 * _y[1] - _tmp383 * _y[2];
    _res_D_y(2, 0) = _tmp333 * _tmp384 + _tmp386 * _y[1] - _tmp388 * _y[2];
    _res_D_y(0, 1) = _tmp333 * _tmp376 - _tmp358 * _tmp390 + _tmp389 * _y[2];
    _res_D_y(1, 1) = _tmp333 * _tmp382 + _tmp378 * _tmp391 - _tmp379 * _tmp390;
    _res_D_y(2, 1) = _tmp333 * _tmp387 + _tmp384 * _tmp391 - _tmp385 * _tmp390;
    _res_D_y(0, 2) = _tmp333 * _tmp358 + _tmp376 * _tmp390 - _tmp389 * _y[1];
    _res_D_y(1, 2) = _tmp333 * _tmp379 - _tmp359 * _tmp378 + _tmp382 * _tmp390;
    _res_D_y(2, 2) = _tmp333 * _tmp385 - _tmp359 * _tmp384 + _tmp387 * _tmp390;
    _res_D_y(0, 3) = -_tmp332 * _tmp390 - _tmp358 * _tmp391 - _tmp377 * _y[1];
    _res_D_y(1, 3) = -_tmp378 * _tmp390 - _tmp380 * _y[2] - _tmp383 * _y[1];
    _res_D_y(2, 3) = -_tmp384 * _tmp390 - _tmp386 * _y[2] - _tmp388 * _y[1];
    _res_D_y(0, 4) = 0;
    _res_D_y(1, 4) = 0;
    _res_D_y(2, 4) = 0;
    _res_D_y(0, 5) = 0;
    _res_D_y(1, 5) = 0;
    _res_D_y(2, 5) = 0;
    _res_D_y(0, 6) = 0;
    _res_D_y(1, 6) = 0;
    _res_D_y(2, 6) = 0;
  }

  if (res_D_y_T_b != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 7, Eigen::RowMajor>> _res_D_y_T_b{res_D_y_T_b};

    _res_D_y_T_b(0, 0) = -_tmp418 * _tmp419 + _tmp437 * _tmp438 + _tmp451 * _y_T_b[3];
    _res_D_y_T_b(1, 0) = -_tmp419 * _tmp453 + _tmp438 * _tmp455 + _tmp457 * _y_T_b[3];
    _res_D_y_T_b(2, 0) = -_tmp419 * _tmp458 + _tmp438 * _tmp459 + _tmp461 * _y_T_b[3];
    _res_D_y_T_b(0, 1) = _tmp418 * _tmp462 - _tmp437 * _tmp463 + _tmp451 * _y_T_b[2];
    _res_D_y_T_b(1, 1) = _tmp453 * _tmp462 - _tmp455 * _tmp463 + _tmp457 * _y_T_b[2];
    _res_D_y_T_b(2, 1) = _tmp458 * _tmp462 - _tmp459 * _tmp463 + _tmp461 * _y_T_b[2];
    _res_D_y_T_b(0, 2) = _tmp418 * _tmp463 + _tmp437 * _tmp462 - _tmp438 * _tmp450;
    _res_D_y_T_b(1, 2) = _tmp453 * _tmp463 + _tmp455 * _tmp462 - _tmp457 * _y_T_b[1];
    _res_D_y_T_b(2, 2) = -_tmp438 * _tmp460 + _tmp458 * _tmp463 + _tmp459 * _tmp462;
    _res_D_y_T_b(0, 3) = -_tmp418 * _tmp438 - _tmp419 * _tmp437 - _tmp451 * _y_T_b[0];
    _res_D_y_T_b(1, 3) = -_tmp419 * _tmp455 - _tmp438 * _tmp453 - _tmp457 * _y_T_b[0];
    _res_D_y_T_b(2, 3) = -_tmp419 * _tmp459 - _tmp438 * _tmp458 - _tmp461 * _y_T_b[0];
    _res_D_y_T_b(0, 4) = 0;
    _res_D_y_T_b(1, 4) = 0;
    _res_D_y_T_b(2, 4) = 0;
    _res_D_y_T_b(0, 5) = 0;
    _res_D_y_T_b(1, 5) = 0;
    _res_D_y_T_b(2, 5) = 0;
    _res_D_y_T_b(0, 6) = 0;
    _res_D_y_T_b(1, 6) = 0;
    _res_D_y_T_b(2, 6) = 0;
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_ceres
