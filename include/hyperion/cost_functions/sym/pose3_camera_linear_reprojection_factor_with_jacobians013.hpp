// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/linear_camera_cal.h>
#include <sym/pose3.h>

namespace sym_hyperion {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: pose3_camera_linear_reprojection_factor
 *
 * Args:
 *     w_T_b: Pose3
 *     b_T_c: Pose3
 *     calibration: LinearCameraCal
 *     l_w: Matrix31
 *     pixel: Matrix21
 *     sqrt_info: Matrix22
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix21
 *     res_D_w_T_b: (2x6) jacobian of res (2) wrt arg w_T_b (6)
 *     res_D_b_T_c: (2x6) jacobian of res (2) wrt arg b_T_c (6)
 *     res_D_l_w: (2x3) jacobian of res (2) wrt arg l_w (3)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 2, 1> Pose3CameraLinearReprojectionFactorWithJacobians013(
    const sym::Pose3<Scalar>& w_T_b, const sym::Pose3<Scalar>& b_T_c,
    const sym::LinearCameraCal<Scalar>& calibration, const Eigen::Matrix<Scalar, 3, 1>& l_w,
    const Eigen::Matrix<Scalar, 2, 1>& pixel, const Eigen::Matrix<Scalar, 2, 2>& sqrt_info,
    const Scalar epsilon, Scalar* const res_D_w_T_b = nullptr, Scalar* const res_D_b_T_c = nullptr,
    Scalar* const res_D_l_w = nullptr) {
  // Total ops: 1044

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _w_T_b = w_T_b.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _b_T_c = b_T_c.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _calibration = calibration.Data();

  // Intermediate terms (352)
  const Scalar _tmp0 = _b_T_c[1] * _w_T_b[0];
  const Scalar _tmp1 = _b_T_c[2] * _w_T_b[3];
  const Scalar _tmp2 = _b_T_c[3] * _w_T_b[2];
  const Scalar _tmp3 = _b_T_c[0] * _w_T_b[1];
  const Scalar _tmp4 = _tmp0 + _tmp1 + _tmp2 - _tmp3;
  const Scalar _tmp5 = 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _b_T_c[1] * _w_T_b[2];
  const Scalar _tmp8 = _b_T_c[2] * _w_T_b[1];
  const Scalar _tmp9 = _b_T_c[3] * _w_T_b[0];
  const Scalar _tmp10 = _b_T_c[0] * _w_T_b[3];
  const Scalar _tmp11 = _tmp10 - _tmp7 + _tmp8 + _tmp9;
  const Scalar _tmp12 = 2 * std::pow(_tmp11, Scalar(2));
  const Scalar _tmp13 = 1 - _tmp12;
  const Scalar _tmp14 = _tmp13 + _tmp6;
  const Scalar _tmp15 = _b_T_c[1] * _w_T_b[3];
  const Scalar _tmp16 = _b_T_c[2] * _w_T_b[0];
  const Scalar _tmp17 = _b_T_c[3] * _w_T_b[1];
  const Scalar _tmp18 = _b_T_c[0] * _w_T_b[2];
  const Scalar _tmp19 = _tmp15 - _tmp16 + _tmp17 + _tmp18;
  const Scalar _tmp20 = 2 * _tmp11;
  const Scalar _tmp21 = _tmp19 * _tmp20;
  const Scalar _tmp22 = _b_T_c[1] * _w_T_b[1];
  const Scalar _tmp23 = _b_T_c[2] * _w_T_b[2];
  const Scalar _tmp24 = _b_T_c[0] * _w_T_b[0];
  const Scalar _tmp25 = _b_T_c[3] * _w_T_b[3];
  const Scalar _tmp26 = -_tmp22 - _tmp23 - _tmp24 + _tmp25;
  const Scalar _tmp27 = 2 * _tmp4;
  const Scalar _tmp28 = _tmp26 * _tmp27;
  const Scalar _tmp29 = -_tmp28;
  const Scalar _tmp30 = _tmp21 + _tmp29;
  const Scalar _tmp31 = _tmp19 * _tmp27;
  const Scalar _tmp32 = _tmp20 * _tmp26;
  const Scalar _tmp33 = _tmp31 + _tmp32;
  const Scalar _tmp34 = std::pow(_w_T_b[1], Scalar(2));
  const Scalar _tmp35 = -2 * _tmp34;
  const Scalar _tmp36 = std::pow(_w_T_b[0], Scalar(2));
  const Scalar _tmp37 = 1 - 2 * _tmp36;
  const Scalar _tmp38 = _tmp35 + _tmp37;
  const Scalar _tmp39 = 2 * _w_T_b[2];
  const Scalar _tmp40 = _tmp39 * _w_T_b[0];
  const Scalar _tmp41 = 2 * _w_T_b[1] * _w_T_b[3];
  const Scalar _tmp42 = -_tmp41;
  const Scalar _tmp43 = _tmp40 + _tmp42;
  const Scalar _tmp44 = 2 * _w_T_b[0];
  const Scalar _tmp45 = _tmp44 * _w_T_b[3];
  const Scalar _tmp46 = _tmp39 * _w_T_b[1];
  const Scalar _tmp47 = _tmp45 + _tmp46;
  const Scalar _tmp48 = _b_T_c[4] * _tmp43 + _b_T_c[5] * _tmp47 + _b_T_c[6] * _tmp38 + _w_T_b[6];
  const Scalar _tmp49 = std::pow(_w_T_b[2], Scalar(2));
  const Scalar _tmp50 = -2 * _tmp49;
  const Scalar _tmp51 = _tmp35 + _tmp50 + 1;
  const Scalar _tmp52 = _tmp44 * _w_T_b[1];
  const Scalar _tmp53 = _tmp39 * _w_T_b[3];
  const Scalar _tmp54 = -_tmp53;
  const Scalar _tmp55 = _tmp52 + _tmp54;
  const Scalar _tmp56 = _tmp40 + _tmp41;
  const Scalar _tmp57 = _b_T_c[4] * _tmp51 + _b_T_c[5] * _tmp55 + _b_T_c[6] * _tmp56 + _w_T_b[4];
  const Scalar _tmp58 = _tmp37 + _tmp50;
  const Scalar _tmp59 = _tmp52 + _tmp53;
  const Scalar _tmp60 = -_tmp45;
  const Scalar _tmp61 = _tmp46 + _tmp60;
  const Scalar _tmp62 = _b_T_c[4] * _tmp59 + _b_T_c[5] * _tmp58 + _b_T_c[6] * _tmp61 + _w_T_b[5];
  const Scalar _tmp63 = -_tmp14 * _tmp62 + _tmp14 * l_w(1, 0) - _tmp30 * _tmp57 +
                        _tmp30 * l_w(0, 0) - _tmp33 * _tmp48 + _tmp33 * l_w(2, 0);
  const Scalar _tmp64 = 2 * std::pow(_tmp19, Scalar(2));
  const Scalar _tmp65 = -_tmp64;
  const Scalar _tmp66 = _tmp13 + _tmp65;
  const Scalar _tmp67 = _tmp11 * _tmp27;
  const Scalar _tmp68 = 2 * _tmp19;
  const Scalar _tmp69 = _tmp26 * _tmp68;
  const Scalar _tmp70 = _tmp67 + _tmp69;
  const Scalar _tmp71 = -_tmp32;
  const Scalar _tmp72 = _tmp31 + _tmp71;
  const Scalar _tmp73 = -_tmp48 * _tmp66 - _tmp57 * _tmp70 - _tmp62 * _tmp72 + _tmp66 * l_w(2, 0) +
                        _tmp70 * l_w(0, 0) + _tmp72 * l_w(1, 0);
  const Scalar _tmp74 = std::max<Scalar>(_tmp73, epsilon);
  const Scalar _tmp75 = Scalar(1.0) / (_tmp74);
  const Scalar _tmp76 = _calibration[1] * _tmp75;
  const Scalar _tmp77 = _calibration[3] + _tmp63 * _tmp76 - pixel(1, 0);
  const Scalar _tmp78 = _tmp6 + _tmp65 + 1;
  const Scalar _tmp79 = -_tmp69;
  const Scalar _tmp80 = _tmp67 + _tmp79;
  const Scalar _tmp81 = _tmp21 + _tmp28;
  const Scalar _tmp82 = -_tmp48 * _tmp80 - _tmp57 * _tmp78 - _tmp62 * _tmp81 + _tmp78 * l_w(0, 0) +
                        _tmp80 * l_w(2, 0) + _tmp81 * l_w(1, 0);
  const Scalar _tmp83 = _calibration[0] * _tmp75;
  const Scalar _tmp84 = _calibration[2] + _tmp82 * _tmp83 - pixel(0, 0);
  const Scalar _tmp85 = std::max<Scalar>(0, (((_tmp73) > 0) - ((_tmp73) < 0)));
  const Scalar _tmp86 = (Scalar(1) / Scalar(2)) * _tmp10;
  const Scalar _tmp87 = -_tmp86;
  const Scalar _tmp88 = (Scalar(1) / Scalar(2)) * _tmp8;
  const Scalar _tmp89 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp90 = -_tmp89;
  const Scalar _tmp91 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp92 = -_tmp91;
  const Scalar _tmp93 = _tmp90 + _tmp92;
  const Scalar _tmp94 = _tmp87 + _tmp88 + _tmp93;
  const Scalar _tmp95 = _tmp20 * _tmp94;
  const Scalar _tmp96 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp97 = (Scalar(1) / Scalar(2)) * _tmp24;
  const Scalar _tmp98 = -_tmp97;
  const Scalar _tmp99 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp100 = (Scalar(1) / Scalar(2)) * _tmp23;
  const Scalar _tmp101 = _tmp100 + _tmp99;
  const Scalar _tmp102 = _tmp101 + _tmp96 + _tmp98;
  const Scalar _tmp103 = 2 * _tmp26;
  const Scalar _tmp104 = _tmp102 * _tmp103;
  const Scalar _tmp105 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp106 = -_tmp105;
  const Scalar _tmp107 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp108 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp109 = -_tmp108;
  const Scalar _tmp110 = (Scalar(1) / Scalar(2)) * _tmp16;
  const Scalar _tmp111 = -_tmp110;
  const Scalar _tmp112 = _tmp109 + _tmp111;
  const Scalar _tmp113 = _tmp106 + _tmp107 + _tmp112;
  const Scalar _tmp114 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp115 = -_tmp114;
  const Scalar _tmp116 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp117 = _tmp115 + _tmp116;
  const Scalar _tmp118 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp119 = -_tmp118;
  const Scalar _tmp120 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp121 = -_tmp120;
  const Scalar _tmp122 = _tmp119 + _tmp121;
  const Scalar _tmp123 = _tmp117 + _tmp122;
  const Scalar _tmp124 = _tmp113 * _tmp68 + _tmp123 * _tmp27;
  const Scalar _tmp125 = _tmp104 + _tmp124 + _tmp95;
  const Scalar _tmp126 = 4 * _tmp11;
  const Scalar _tmp127 = -_tmp102 * _tmp126;
  const Scalar _tmp128 = 4 * _tmp4;
  const Scalar _tmp129 = -_tmp113 * _tmp128;
  const Scalar _tmp130 = _tmp127 + _tmp129;
  const Scalar _tmp131 = _tmp27 * _tmp94;
  const Scalar _tmp132 = _tmp103 * _tmp113;
  const Scalar _tmp133 = _tmp102 * _tmp68 + _tmp123 * _tmp20;
  const Scalar _tmp134 = -_tmp131 - _tmp132 + _tmp133;
  const Scalar _tmp135 = -_tmp52;
  const Scalar _tmp136 = _b_T_c[5] * _tmp56 + _b_T_c[6] * (_tmp135 + _tmp53);
  const Scalar _tmp137 = -_tmp34;
  const Scalar _tmp138 = _tmp137 + _tmp36;
  const Scalar _tmp139 = std::pow(_w_T_b[3], Scalar(2));
  const Scalar _tmp140 = -_tmp139;
  const Scalar _tmp141 = _tmp140 + _tmp49;
  const Scalar _tmp142 = _b_T_c[5] * _tmp61 + _b_T_c[6] * (_tmp138 + _tmp141);
  const Scalar _tmp143 = -_tmp36;
  const Scalar _tmp144 = -_tmp46;
  const Scalar _tmp145 =
      _b_T_c[5] * (_tmp137 + _tmp139 + _tmp143 + _tmp49) + _b_T_c[6] * (_tmp144 + _tmp60);
  const Scalar _tmp146 = 4 * _tmp19;
  const Scalar _tmp147 = -_tmp123 * _tmp146;
  const Scalar _tmp148 = _tmp127 + _tmp147;
  const Scalar _tmp149 = _tmp68 * _tmp94;
  const Scalar _tmp150 = _tmp103 * _tmp123;
  const Scalar _tmp151 = _tmp102 * _tmp27 + _tmp113 * _tmp20;
  const Scalar _tmp152 = _tmp149 + _tmp150 + _tmp151;
  const Scalar _tmp153 = -_tmp104 + _tmp124 - _tmp95;
  const Scalar _tmp154 = -_tmp136 * _tmp70 - _tmp142 * _tmp72 - _tmp145 * _tmp66 -
                         _tmp148 * _tmp48 + _tmp148 * l_w(2, 0) - _tmp152 * _tmp57 +
                         _tmp152 * l_w(0, 0) - _tmp153 * _tmp62 + _tmp153 * l_w(1, 0);
  const Scalar _tmp155 = (Scalar(1) / Scalar(2)) *
                         ((((_tmp73 - epsilon) > 0) - ((_tmp73 - epsilon) < 0)) + 1) /
                         std::pow(_tmp74, Scalar(2));
  const Scalar _tmp156 = _calibration[1] * _tmp63;
  const Scalar _tmp157 = _tmp155 * _tmp156;
  const Scalar _tmp158 =
      -_tmp154 * _tmp157 + _tmp76 * (-_tmp125 * _tmp48 + _tmp125 * l_w(2, 0) - _tmp130 * _tmp62 +
                                     _tmp130 * l_w(1, 0) - _tmp134 * _tmp57 + _tmp134 * l_w(0, 0) -
                                     _tmp136 * _tmp30 - _tmp14 * _tmp142 - _tmp145 * _tmp33);
  const Scalar _tmp159 = _calibration[0] * _tmp82;
  const Scalar _tmp160 = _tmp155 * _tmp159;
  const Scalar _tmp161 = -_tmp149 - _tmp150 + _tmp151;
  const Scalar _tmp162 = _tmp129 + _tmp147;
  const Scalar _tmp163 = _tmp131 + _tmp132 + _tmp133;
  const Scalar _tmp164 =
      -_tmp154 * _tmp160 + _tmp83 * (-_tmp136 * _tmp78 - _tmp142 * _tmp81 - _tmp145 * _tmp80 -
                                     _tmp161 * _tmp48 + _tmp161 * l_w(2, 0) - _tmp162 * _tmp57 +
                                     _tmp162 * l_w(0, 0) - _tmp163 * _tmp62 + _tmp163 * l_w(1, 0));
  const Scalar _tmp165 = -_tmp116;
  const Scalar _tmp166 = _tmp115 + _tmp165;
  const Scalar _tmp167 = _tmp119 + _tmp120 + _tmp166;
  const Scalar _tmp168 = -_tmp126 * _tmp167;
  const Scalar _tmp169 = -_tmp96;
  const Scalar _tmp170 = _tmp101 + _tmp169 + _tmp97;
  const Scalar _tmp171 = -_tmp146 * _tmp170;
  const Scalar _tmp172 = _tmp168 + _tmp171;
  const Scalar _tmp173 = -_tmp107;
  const Scalar _tmp174 = _tmp105 + _tmp112 + _tmp173;
  const Scalar _tmp175 = _tmp174 * _tmp20;
  const Scalar _tmp176 = _tmp103 * _tmp167;
  const Scalar _tmp177 = -_tmp88;
  const Scalar _tmp178 = _tmp177 + _tmp87;
  const Scalar _tmp179 = _tmp89 + _tmp92;
  const Scalar _tmp180 = _tmp178 + _tmp179;
  const Scalar _tmp181 = _tmp170 * _tmp27 + _tmp180 * _tmp68;
  const Scalar _tmp182 = -_tmp175 - _tmp176 + _tmp181;
  const Scalar _tmp183 = _tmp174 * _tmp68;
  const Scalar _tmp184 = _tmp103 * _tmp170;
  const Scalar _tmp185 = _tmp167 * _tmp27 + _tmp180 * _tmp20;
  const Scalar _tmp186 = _tmp183 + _tmp184 + _tmp185;
  const Scalar _tmp187 = -_tmp49;
  const Scalar _tmp188 = _tmp139 + _tmp187;
  const Scalar _tmp189 = -_tmp40;
  const Scalar _tmp190 = _b_T_c[4] * (_tmp189 + _tmp42) + _b_T_c[6] * (_tmp138 + _tmp188);
  const Scalar _tmp191 = _b_T_c[4] * (_tmp144 + _tmp45) + _b_T_c[6] * _tmp59;
  const Scalar _tmp192 = _b_T_c[4] * (_tmp140 + _tmp187 + _tmp34 + _tmp36) + _b_T_c[6] * _tmp43;
  const Scalar _tmp193 = _tmp155 * (-_tmp172 * _tmp48 + _tmp172 * l_w(2, 0) - _tmp182 * _tmp62 +
                                    _tmp182 * l_w(1, 0) - _tmp186 * _tmp57 + _tmp186 * l_w(0, 0) -
                                    _tmp190 * _tmp70 - _tmp191 * _tmp72 - _tmp192 * _tmp66);
  const Scalar _tmp194 = -_tmp128 * _tmp180;
  const Scalar _tmp195 = _tmp168 + _tmp194;
  const Scalar _tmp196 = _tmp175 + _tmp176 + _tmp181;
  const Scalar _tmp197 = _tmp174 * _tmp27;
  const Scalar _tmp198 = _tmp103 * _tmp180;
  const Scalar _tmp199 = _tmp167 * _tmp68 + _tmp170 * _tmp20;
  const Scalar _tmp200 = -_tmp197 - _tmp198 + _tmp199;
  const Scalar _tmp201 =
      -_tmp156 * _tmp193 + _tmp76 * (-_tmp14 * _tmp191 - _tmp190 * _tmp30 - _tmp192 * _tmp33 -
                                     _tmp195 * _tmp62 + _tmp195 * l_w(1, 0) - _tmp196 * _tmp48 +
                                     _tmp196 * l_w(2, 0) - _tmp200 * _tmp57 + _tmp200 * l_w(0, 0));
  const Scalar _tmp202 = -_tmp183 - _tmp184 + _tmp185;
  const Scalar _tmp203 = _tmp171 + _tmp194;
  const Scalar _tmp204 = _tmp197 + _tmp198 + _tmp199;
  const Scalar _tmp205 =
      -_tmp159 * _tmp193 + _tmp83 * (-_tmp190 * _tmp78 - _tmp191 * _tmp81 - _tmp192 * _tmp80 -
                                     _tmp202 * _tmp48 + _tmp202 * l_w(2, 0) - _tmp203 * _tmp57 +
                                     _tmp203 * l_w(0, 0) - _tmp204 * _tmp62 + _tmp204 * l_w(1, 0));
  const Scalar _tmp206 = _b_T_c[4] * _tmp47 + _b_T_c[5] * (_tmp189 + _tmp41);
  const Scalar _tmp207 = _tmp118 + _tmp121 + _tmp166;
  const Scalar _tmp208 = _tmp207 * _tmp68;
  const Scalar _tmp209 = _tmp177 + _tmp86 + _tmp93;
  const Scalar _tmp210 = _tmp103 * _tmp209;
  const Scalar _tmp211 = -_tmp100 + _tmp99;
  const Scalar _tmp212 = _tmp211 + _tmp96 + _tmp97;
  const Scalar _tmp213 = _tmp106 + _tmp173;
  const Scalar _tmp214 = _tmp108 + _tmp111;
  const Scalar _tmp215 = _tmp213 + _tmp214;
  const Scalar _tmp216 = _tmp20 * _tmp212 + _tmp215 * _tmp27;
  const Scalar _tmp217 = _tmp208 + _tmp210 + _tmp216;
  const Scalar _tmp218 = -_tmp126 * _tmp215;
  const Scalar _tmp219 = -_tmp146 * _tmp209;
  const Scalar _tmp220 = _tmp218 + _tmp219;
  const Scalar _tmp221 = _tmp20 * _tmp207;
  const Scalar _tmp222 = _tmp103 * _tmp215;
  const Scalar _tmp223 = _tmp209 * _tmp27 + _tmp212 * _tmp68;
  const Scalar _tmp224 = -_tmp221 - _tmp222 + _tmp223;
  const Scalar _tmp225 = _tmp143 + _tmp34;
  const Scalar _tmp226 = _b_T_c[4] * _tmp55 + _b_T_c[5] * (_tmp141 + _tmp225);
  const Scalar _tmp227 = _b_T_c[4] * (_tmp188 + _tmp225) + _b_T_c[5] * (_tmp135 + _tmp54);
  const Scalar _tmp228 = -_tmp206 * _tmp66 - _tmp217 * _tmp57 + _tmp217 * l_w(0, 0) -
                         _tmp220 * _tmp48 + _tmp220 * l_w(2, 0) - _tmp224 * _tmp62 +
                         _tmp224 * l_w(1, 0) - _tmp226 * _tmp70 - _tmp227 * _tmp72;
  const Scalar _tmp229 = -_tmp208 - _tmp210 + _tmp216;
  const Scalar _tmp230 = _tmp207 * _tmp27;
  const Scalar _tmp231 = _tmp103 * _tmp212;
  const Scalar _tmp232 = _tmp20 * _tmp209 + _tmp215 * _tmp68;
  const Scalar _tmp233 = _tmp230 + _tmp231 + _tmp232;
  const Scalar _tmp234 = -_tmp128 * _tmp212;
  const Scalar _tmp235 = _tmp219 + _tmp234;
  const Scalar _tmp236 =
      -_tmp160 * _tmp228 + _tmp83 * (-_tmp206 * _tmp80 - _tmp226 * _tmp78 - _tmp227 * _tmp81 -
                                     _tmp229 * _tmp48 + _tmp229 * l_w(2, 0) - _tmp233 * _tmp62 +
                                     _tmp233 * l_w(1, 0) - _tmp235 * _tmp57 + _tmp235 * l_w(0, 0));
  const Scalar _tmp237 = _tmp218 + _tmp234;
  const Scalar _tmp238 = _tmp221 + _tmp222 + _tmp223;
  const Scalar _tmp239 = -_tmp230 - _tmp231 + _tmp232;
  const Scalar _tmp240 =
      -_tmp157 * _tmp228 + _tmp76 * (-_tmp14 * _tmp227 - _tmp206 * _tmp33 - _tmp226 * _tmp30 -
                                     _tmp237 * _tmp62 + _tmp237 * l_w(1, 0) - _tmp238 * _tmp48 +
                                     _tmp238 * l_w(2, 0) - _tmp239 * _tmp57 + _tmp239 * l_w(0, 0));
  const Scalar _tmp241 = -_tmp67;
  const Scalar _tmp242 = _tmp241 + _tmp79;
  const Scalar _tmp243 = -_tmp21;
  const Scalar _tmp244 = -_tmp157 * _tmp242 + _tmp76 * (_tmp243 + _tmp28);
  const Scalar _tmp245 = _tmp64 - 1;
  const Scalar _tmp246 = -_tmp160 * _tmp242 + _tmp83 * (_tmp245 + _tmp5);
  const Scalar _tmp247 = -_tmp31;
  const Scalar _tmp248 = _tmp247 + _tmp32;
  const Scalar _tmp249 = -_tmp160 * _tmp248 + _tmp83 * (_tmp243 + _tmp29);
  const Scalar _tmp250 = -_tmp157 * _tmp248 + _tmp76 * (_tmp12 + _tmp5 - 1);
  const Scalar _tmp251 = _tmp12 + _tmp245;
  const Scalar _tmp252 = -_tmp160 * _tmp251 + _tmp83 * (_tmp241 + _tmp69);
  const Scalar _tmp253 = -_tmp157 * _tmp251 + _tmp76 * (_tmp247 + _tmp71);
  const Scalar _tmp254 = _tmp178 + _tmp90 + _tmp91;
  const Scalar _tmp255 = _tmp254 * _tmp68;
  const Scalar _tmp256 = _tmp117 + _tmp118 + _tmp120;
  const Scalar _tmp257 = _tmp103 * _tmp256;
  const Scalar _tmp258 = _tmp109 + _tmp110 + _tmp213;
  const Scalar _tmp259 = _tmp20 * _tmp258;
  const Scalar _tmp260 = _tmp169 + _tmp211 + _tmp98;
  const Scalar _tmp261 = _tmp260 * _tmp27;
  const Scalar _tmp262 = _tmp259 + _tmp261;
  const Scalar _tmp263 = -_tmp255 - _tmp257 + _tmp262;
  const Scalar _tmp264 = -_tmp146 * _tmp256;
  const Scalar _tmp265 = -_tmp128 * _tmp258;
  const Scalar _tmp266 = _tmp264 + _tmp265;
  const Scalar _tmp267 = _tmp254 * _tmp27;
  const Scalar _tmp268 = _tmp103 * _tmp258;
  const Scalar _tmp269 = _tmp260 * _tmp68;
  const Scalar _tmp270 = _tmp20 * _tmp256 + _tmp269;
  const Scalar _tmp271 = _tmp267 + _tmp268 + _tmp270;
  const Scalar _tmp272 = -_tmp126 * _tmp260;
  const Scalar _tmp273 = _tmp264 + _tmp272;
  const Scalar _tmp274 = _tmp255 + _tmp257 + _tmp262;
  const Scalar _tmp275 = _tmp20 * _tmp254;
  const Scalar _tmp276 = _tmp103 * _tmp260;
  const Scalar _tmp277 = -_tmp276;
  const Scalar _tmp278 = _tmp258 * _tmp68;
  const Scalar _tmp279 = _tmp256 * _tmp27 + _tmp278;
  const Scalar _tmp280 = -_tmp275 + _tmp277 + _tmp279;
  const Scalar _tmp281 = -_tmp273 * _tmp48 + _tmp273 * l_w(2, 0) - _tmp274 * _tmp57 +
                         _tmp274 * l_w(0, 0) - _tmp280 * _tmp62 + _tmp280 * l_w(1, 0);
  const Scalar _tmp282 =
      -_tmp160 * _tmp281 + _tmp83 * (-_tmp263 * _tmp48 + _tmp263 * l_w(2, 0) - _tmp266 * _tmp57 +
                                     _tmp266 * l_w(0, 0) - _tmp271 * _tmp62 + _tmp271 * l_w(1, 0));
  const Scalar _tmp283 = _tmp275 + _tmp276 + _tmp279;
  const Scalar _tmp284 = _tmp265 + _tmp272;
  const Scalar _tmp285 = -_tmp267 - _tmp268 + _tmp270;
  const Scalar _tmp286 =
      -_tmp157 * _tmp281 + _tmp76 * (-_tmp283 * _tmp48 + _tmp283 * l_w(2, 0) - _tmp284 * _tmp62 +
                                     _tmp284 * l_w(1, 0) - _tmp285 * _tmp57 + _tmp285 * l_w(0, 0));
  const Scalar _tmp287 = _tmp114 + _tmp122 + _tmp165;
  const Scalar _tmp288 = -_tmp126 * _tmp287;
  const Scalar _tmp289 = _tmp179 + _tmp86 + _tmp88;
  const Scalar _tmp290 = -_tmp128 * _tmp289;
  const Scalar _tmp291 = _tmp288 + _tmp290;
  const Scalar _tmp292 = _tmp103 * _tmp287;
  const Scalar _tmp293 = _tmp261 + _tmp289 * _tmp68;
  const Scalar _tmp294 = _tmp259 + _tmp292 + _tmp293;
  const Scalar _tmp295 = _tmp258 * _tmp27;
  const Scalar _tmp296 = _tmp103 * _tmp289;
  const Scalar _tmp297 = _tmp20 * _tmp260;
  const Scalar _tmp298 = _tmp287 * _tmp68;
  const Scalar _tmp299 = _tmp297 + _tmp298;
  const Scalar _tmp300 = -_tmp295 - _tmp296 + _tmp299;
  const Scalar _tmp301 = -_tmp146 * _tmp260;
  const Scalar _tmp302 = _tmp288 + _tmp301;
  const Scalar _tmp303 = -_tmp259 - _tmp292 + _tmp293;
  const Scalar _tmp304 = _tmp20 * _tmp289;
  const Scalar _tmp305 = _tmp27 * _tmp287;
  const Scalar _tmp306 = _tmp276 + _tmp305;
  const Scalar _tmp307 = _tmp278 + _tmp304 + _tmp306;
  const Scalar _tmp308 = -_tmp302 * _tmp48 + _tmp302 * l_w(2, 0) - _tmp303 * _tmp62 +
                         _tmp303 * l_w(1, 0) - _tmp307 * _tmp57 + _tmp307 * l_w(0, 0);
  const Scalar _tmp309 =
      -_tmp157 * _tmp308 + _tmp76 * (-_tmp291 * _tmp62 + _tmp291 * l_w(1, 0) - _tmp294 * _tmp48 +
                                     _tmp294 * l_w(2, 0) - _tmp300 * _tmp57 + _tmp300 * l_w(0, 0));
  const Scalar _tmp310 = _tmp277 - _tmp278 + _tmp304 + _tmp305;
  const Scalar _tmp311 = _tmp290 + _tmp301;
  const Scalar _tmp312 = _tmp295 + _tmp296 + _tmp299;
  const Scalar _tmp313 =
      -_tmp160 * _tmp308 + _tmp83 * (-_tmp310 * _tmp48 + _tmp310 * l_w(2, 0) - _tmp311 * _tmp57 +
                                     _tmp311 * l_w(0, 0) - _tmp312 * _tmp62 + _tmp312 * l_w(1, 0));
  const Scalar _tmp314 = _tmp105 + _tmp107 + _tmp214;
  const Scalar _tmp315 = _tmp27 * _tmp314;
  const Scalar _tmp316 = _tmp103 * _tmp254;
  const Scalar _tmp317 = _tmp299 + _tmp315 + _tmp316;
  const Scalar _tmp318 = -_tmp126 * _tmp314;
  const Scalar _tmp319 = -_tmp146 * _tmp254;
  const Scalar _tmp320 = _tmp318 + _tmp319;
  const Scalar _tmp321 = _tmp20 * _tmp287;
  const Scalar _tmp322 = _tmp103 * _tmp314;
  const Scalar _tmp323 = _tmp267 + _tmp269;
  const Scalar _tmp324 = -_tmp321 - _tmp322 + _tmp323;
  const Scalar _tmp325 = -_tmp317 * _tmp57 + _tmp317 * l_w(0, 0) - _tmp320 * _tmp48 +
                         _tmp320 * l_w(2, 0) - _tmp324 * _tmp62 + _tmp324 * l_w(1, 0);
  const Scalar _tmp326 = _tmp297 - _tmp298 + _tmp315 - _tmp316;
  const Scalar _tmp327 = _tmp275 + _tmp314 * _tmp68;
  const Scalar _tmp328 = _tmp306 + _tmp327;
  const Scalar _tmp329 = -_tmp128 * _tmp260;
  const Scalar _tmp330 = _tmp319 + _tmp329;
  const Scalar _tmp331 =
      -_tmp160 * _tmp325 + _tmp83 * (-_tmp326 * _tmp48 + _tmp326 * l_w(2, 0) - _tmp328 * _tmp62 +
                                     _tmp328 * l_w(1, 0) - _tmp330 * _tmp57 + _tmp330 * l_w(0, 0));
  const Scalar _tmp332 = _tmp318 + _tmp329;
  const Scalar _tmp333 = _tmp321 + _tmp322 + _tmp323;
  const Scalar _tmp334 = _tmp277 - _tmp305 + _tmp327;
  const Scalar _tmp335 =
      -_tmp157 * _tmp325 + _tmp76 * (-_tmp332 * _tmp62 + _tmp332 * l_w(1, 0) - _tmp333 * _tmp48 +
                                     _tmp333 * l_w(2, 0) - _tmp334 * _tmp57 + _tmp334 * l_w(0, 0));
  const Scalar _tmp336 = -_tmp43 * _tmp66 - _tmp51 * _tmp70 - _tmp59 * _tmp72;
  const Scalar _tmp337 =
      -_tmp157 * _tmp336 + _tmp76 * (-_tmp14 * _tmp59 - _tmp30 * _tmp51 - _tmp33 * _tmp43);
  const Scalar _tmp338 =
      -_tmp160 * _tmp336 + _tmp83 * (-_tmp43 * _tmp80 - _tmp51 * _tmp78 - _tmp59 * _tmp81);
  const Scalar _tmp339 = -_tmp47 * _tmp66 - _tmp55 * _tmp70 - _tmp58 * _tmp72;
  const Scalar _tmp340 =
      -_tmp157 * _tmp339 + _tmp76 * (-_tmp14 * _tmp58 - _tmp30 * _tmp55 - _tmp33 * _tmp47);
  const Scalar _tmp341 =
      -_tmp160 * _tmp339 + _tmp83 * (-_tmp47 * _tmp80 - _tmp55 * _tmp78 - _tmp58 * _tmp81);
  const Scalar _tmp342 = -_tmp38 * _tmp66 - _tmp56 * _tmp70 - _tmp61 * _tmp72;
  const Scalar _tmp343 =
      -_tmp157 * _tmp342 + _tmp76 * (-_tmp14 * _tmp61 - _tmp30 * _tmp56 - _tmp33 * _tmp38);
  const Scalar _tmp344 =
      -_tmp160 * _tmp342 + _tmp83 * (-_tmp38 * _tmp80 - _tmp56 * _tmp78 - _tmp61 * _tmp81);
  const Scalar _tmp345 = -_tmp157 * _tmp70 + _tmp30 * _tmp76;
  const Scalar _tmp346 = -_tmp160 * _tmp70 + _tmp78 * _tmp83;
  const Scalar _tmp347 = _tmp155 * _tmp72;
  const Scalar _tmp348 = -_tmp159 * _tmp347 + _tmp81 * _tmp83;
  const Scalar _tmp349 = _tmp14 * _tmp76 - _tmp156 * _tmp347;
  const Scalar _tmp350 = -_tmp160 * _tmp66 + _tmp80 * _tmp83;
  const Scalar _tmp351 = -_tmp157 * _tmp66 + _tmp33 * _tmp76;

  // Output terms (4)
  Eigen::Matrix<Scalar, 2, 1> _res;

  _res(0, 0) = _tmp85 * (_tmp77 * sqrt_info(0, 1) + _tmp84 * sqrt_info(0, 0));
  _res(1, 0) = _tmp85 * (_tmp77 * sqrt_info(1, 1) + _tmp84 * sqrt_info(1, 0));

  if (res_D_w_T_b != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 2, 6>> _res_D_w_T_b{res_D_w_T_b};

    _res_D_w_T_b(0, 0) = _tmp85 * (_tmp158 * sqrt_info(0, 1) + _tmp164 * sqrt_info(0, 0));
    _res_D_w_T_b(1, 0) = _tmp85 * (_tmp158 * sqrt_info(1, 1) + _tmp164 * sqrt_info(1, 0));
    _res_D_w_T_b(0, 1) = _tmp85 * (_tmp201 * sqrt_info(0, 1) + _tmp205 * sqrt_info(0, 0));
    _res_D_w_T_b(1, 1) = _tmp85 * (_tmp201 * sqrt_info(1, 1) + _tmp205 * sqrt_info(1, 0));
    _res_D_w_T_b(0, 2) = _tmp85 * (_tmp236 * sqrt_info(0, 0) + _tmp240 * sqrt_info(0, 1));
    _res_D_w_T_b(1, 2) = _tmp85 * (_tmp236 * sqrt_info(1, 0) + _tmp240 * sqrt_info(1, 1));
    _res_D_w_T_b(0, 3) = _tmp85 * (_tmp244 * sqrt_info(0, 1) + _tmp246 * sqrt_info(0, 0));
    _res_D_w_T_b(1, 3) = _tmp85 * (_tmp244 * sqrt_info(1, 1) + _tmp246 * sqrt_info(1, 0));
    _res_D_w_T_b(0, 4) = _tmp85 * (_tmp249 * sqrt_info(0, 0) + _tmp250 * sqrt_info(0, 1));
    _res_D_w_T_b(1, 4) = _tmp85 * (_tmp249 * sqrt_info(1, 0) + _tmp250 * sqrt_info(1, 1));
    _res_D_w_T_b(0, 5) = _tmp85 * (_tmp252 * sqrt_info(0, 0) + _tmp253 * sqrt_info(0, 1));
    _res_D_w_T_b(1, 5) = _tmp85 * (_tmp252 * sqrt_info(1, 0) + _tmp253 * sqrt_info(1, 1));
  }

  if (res_D_b_T_c != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 2, 6>> _res_D_b_T_c{res_D_b_T_c};

    _res_D_b_T_c(0, 0) = _tmp85 * (_tmp282 * sqrt_info(0, 0) + _tmp286 * sqrt_info(0, 1));
    _res_D_b_T_c(1, 0) = _tmp85 * (_tmp282 * sqrt_info(1, 0) + _tmp286 * sqrt_info(1, 1));
    _res_D_b_T_c(0, 1) = _tmp85 * (_tmp309 * sqrt_info(0, 1) + _tmp313 * sqrt_info(0, 0));
    _res_D_b_T_c(1, 1) = _tmp85 * (_tmp309 * sqrt_info(1, 1) + _tmp313 * sqrt_info(1, 0));
    _res_D_b_T_c(0, 2) = _tmp85 * (_tmp331 * sqrt_info(0, 0) + _tmp335 * sqrt_info(0, 1));
    _res_D_b_T_c(1, 2) = _tmp85 * (_tmp331 * sqrt_info(1, 0) + _tmp335 * sqrt_info(1, 1));
    _res_D_b_T_c(0, 3) = _tmp85 * (_tmp337 * sqrt_info(0, 1) + _tmp338 * sqrt_info(0, 0));
    _res_D_b_T_c(1, 3) = _tmp85 * (_tmp337 * sqrt_info(1, 1) + _tmp338 * sqrt_info(1, 0));
    _res_D_b_T_c(0, 4) = _tmp85 * (_tmp340 * sqrt_info(0, 1) + _tmp341 * sqrt_info(0, 0));
    _res_D_b_T_c(1, 4) = _tmp85 * (_tmp340 * sqrt_info(1, 1) + _tmp341 * sqrt_info(1, 0));
    _res_D_b_T_c(0, 5) = _tmp85 * (_tmp343 * sqrt_info(0, 1) + _tmp344 * sqrt_info(0, 0));
    _res_D_b_T_c(1, 5) = _tmp85 * (_tmp343 * sqrt_info(1, 1) + _tmp344 * sqrt_info(1, 0));
  }

  if (res_D_l_w != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 2, 3>> _res_D_l_w{res_D_l_w};

    _res_D_l_w(0, 0) = _tmp85 * (_tmp345 * sqrt_info(0, 1) + _tmp346 * sqrt_info(0, 0));
    _res_D_l_w(1, 0) = _tmp85 * (_tmp345 * sqrt_info(1, 1) + _tmp346 * sqrt_info(1, 0));
    _res_D_l_w(0, 1) = _tmp85 * (_tmp348 * sqrt_info(0, 0) + _tmp349 * sqrt_info(0, 1));
    _res_D_l_w(1, 1) = _tmp85 * (_tmp348 * sqrt_info(1, 0) + _tmp349 * sqrt_info(1, 1));
    _res_D_l_w(0, 2) = _tmp85 * (_tmp350 * sqrt_info(0, 0) + _tmp351 * sqrt_info(0, 1));
    _res_D_l_w(1, 2) = _tmp85 * (_tmp350 * sqrt_info(1, 0) + _tmp351 * sqrt_info(1, 1));
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_hyperion
