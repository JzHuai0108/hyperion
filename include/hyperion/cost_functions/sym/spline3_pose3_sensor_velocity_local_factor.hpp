// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>

namespace sym_hyperion {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline3_pose3_sensor_velocity_factor
 *
 * Args:
 *     dt: Scalar
 *     lambdas: Matrix32
 *     x0: Pose3
 *     x1: Pose3
 *     x2: Pose3
 *     x3: Pose3
 *     x_T_s: Pose3
 *     velocity: Matrix61
 *     sqrt_info: Matrix66
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix61
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 6, 1> Spline3Pose3SensorVelocityLocalFactor(
    const Scalar dt, const Eigen::Matrix<Scalar, 3, 2>& lambdas, const sym::Pose3<Scalar>& x0,
    const sym::Pose3<Scalar>& x1, const sym::Pose3<Scalar>& x2, const sym::Pose3<Scalar>& x3,
    const sym::Pose3<Scalar>& x_T_s, const Eigen::Matrix<Scalar, 6, 1>& velocity,
    const Eigen::Matrix<Scalar, 6, 6>& sqrt_info, const Scalar epsilon) {
  // Total ops: 669

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x3 = x3.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x_T_s = x_T_s.Data();

  // Intermediate terms (171)
  const Scalar _tmp0 = 2 * _x_T_s[3];
  const Scalar _tmp1 = _tmp0 * _x_T_s[1];
  const Scalar _tmp2 = 2 * _x_T_s[0];
  const Scalar _tmp3 = _tmp2 * _x_T_s[2];
  const Scalar _tmp4 = -_tmp1 + _tmp3;
  const Scalar _tmp5 = Scalar(1.0) / (dt);
  const Scalar _tmp6 = -_x2[0] * _x3[3] - _x2[1] * _x3[2] + _x2[2] * _x3[1] + _x2[3] * _x3[0];
  const Scalar _tmp7 = _x2[0] * _x3[2] - _x2[1] * _x3[3] - _x2[2] * _x3[0] + _x2[3] * _x3[1];
  const Scalar _tmp8 = std::pow(_tmp7, Scalar(2));
  const Scalar _tmp9 = 1 - epsilon;
  const Scalar _tmp10 = -_x2[0] * _x3[0] - _x2[1] * _x3[1] - _x2[2] * _x3[2];
  const Scalar _tmp11 = _x2[3] * _x3[3];
  const Scalar _tmp12 = std::min<Scalar>(_tmp9, std::fabs(_tmp10 - _tmp11));
  const Scalar _tmp13 = 1 - std::pow(_tmp12, Scalar(2));
  const Scalar _tmp14 =
      2 * std::min<Scalar>(0, (((-_tmp10 + _tmp11) > 0) - ((-_tmp10 + _tmp11) < 0))) + 1;
  const Scalar _tmp15 = std::acos(_tmp12);
  const Scalar _tmp16 = std::pow(_tmp14, Scalar(2)) * std::pow(_tmp15, Scalar(2)) *
                        std::pow(lambdas(2, 0), Scalar(2)) / _tmp13;
  const Scalar _tmp17 = 4 * _tmp16;
  const Scalar _tmp18 = std::pow(_tmp6, Scalar(2));
  const Scalar _tmp19 = -_x2[0] * _x3[1] + _x2[1] * _x3[0] - _x2[2] * _x3[3] + _x2[3] * _x3[2];
  const Scalar _tmp20 = std::pow(_tmp19, Scalar(2));
  const Scalar _tmp21 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp22 = _tmp17 * _tmp18 + _tmp17 * _tmp20 + _tmp17 * _tmp8 + _tmp21;
  const Scalar _tmp23 = std::sqrt(_tmp22);
  const Scalar _tmp24 = (Scalar(1) / Scalar(2)) * _tmp23;
  const Scalar _tmp25 = std::cos(_tmp24);
  const Scalar _tmp26 = _tmp14 * _tmp15 / std::sqrt(_tmp13);
  const Scalar _tmp27 = std::sin(_tmp24);
  const Scalar _tmp28 = _tmp27 * lambdas(2, 0) / _tmp23;
  const Scalar _tmp29 = 4 * _tmp25 * _tmp26 * _tmp28;
  const Scalar _tmp30 = _tmp29 * _tmp6;
  const Scalar _tmp31 = 8 * _tmp16 * std::pow(_tmp27, Scalar(2)) / _tmp22;
  const Scalar _tmp32 = _tmp19 * _tmp31;
  const Scalar _tmp33 = _tmp32 * _tmp7;
  const Scalar _tmp34 = _x1[0] * _x2[2] - _x1[1] * _x2[3] - _x1[2] * _x2[0] + _x1[3] * _x2[1];
  const Scalar _tmp35 = -_x1[0] * _x2[3] - _x1[1] * _x2[2] + _x1[2] * _x2[1] + _x1[3] * _x2[0];
  const Scalar _tmp36 = std::pow(_tmp35, Scalar(2));
  const Scalar _tmp37 = -_x1[0] * _x2[0] - _x1[1] * _x2[1] - _x1[2] * _x2[2];
  const Scalar _tmp38 = _x1[3] * _x2[3];
  const Scalar _tmp39 = std::min<Scalar>(_tmp9, std::fabs(_tmp37 - _tmp38));
  const Scalar _tmp40 = 1 - std::pow(_tmp39, Scalar(2));
  const Scalar _tmp41 =
      2 * std::min<Scalar>(0, (((-_tmp37 + _tmp38) > 0) - ((-_tmp37 + _tmp38) < 0))) + 1;
  const Scalar _tmp42 = std::acos(_tmp39);
  const Scalar _tmp43 = std::pow(_tmp41, Scalar(2)) * std::pow(_tmp42, Scalar(2)) *
                        std::pow(lambdas(1, 0), Scalar(2)) / _tmp40;
  const Scalar _tmp44 = 4 * _tmp43;
  const Scalar _tmp45 = -_x1[0] * _x2[1] + _x1[1] * _x2[0] - _x1[2] * _x2[3] + _x1[3] * _x2[2];
  const Scalar _tmp46 = std::pow(_tmp45, Scalar(2));
  const Scalar _tmp47 = std::pow(_tmp34, Scalar(2));
  const Scalar _tmp48 = _tmp21 + _tmp36 * _tmp44 + _tmp44 * _tmp46 + _tmp44 * _tmp47;
  const Scalar _tmp49 = std::sqrt(_tmp48);
  const Scalar _tmp50 = (Scalar(1) / Scalar(2)) * _tmp49;
  const Scalar _tmp51 = std::sin(_tmp50);
  const Scalar _tmp52 = 8 * _tmp43 * std::pow(_tmp51, Scalar(2)) / _tmp48;
  const Scalar _tmp53 = _tmp35 * _tmp52;
  const Scalar _tmp54 = _tmp34 * _tmp53;
  const Scalar _tmp55 = std::cos(_tmp50);
  const Scalar _tmp56 = 4 * _tmp55;
  const Scalar _tmp57 = _tmp41 * _tmp42 / std::sqrt(_tmp40);
  const Scalar _tmp58 = _tmp51 * lambdas(1, 0) / _tmp49;
  const Scalar _tmp59 = _tmp57 * _tmp58;
  const Scalar _tmp60 = _tmp45 * _tmp59;
  const Scalar _tmp61 = _tmp56 * _tmp60;
  const Scalar _tmp62 = -_x0[0] * _x1[3] - _x0[1] * _x1[2] + _x0[2] * _x1[1] + _x0[3] * _x1[0];
  const Scalar _tmp63 = -_x0[0] * _x1[0] - _x0[1] * _x1[1] - _x0[2] * _x1[2];
  const Scalar _tmp64 = _x0[3] * _x1[3];
  const Scalar _tmp65 =
      2 * std::min<Scalar>(0, (((-_tmp63 + _tmp64) > 0) - ((-_tmp63 + _tmp64) < 0))) + 1;
  const Scalar _tmp66 = std::min<Scalar>(_tmp9, std::fabs(_tmp63 - _tmp64));
  const Scalar _tmp67 = std::acos(_tmp66);
  const Scalar _tmp68 = 1 - std::pow(_tmp66, Scalar(2));
  const Scalar _tmp69 = 2 * _tmp65 * _tmp67 / std::sqrt(_tmp68);
  const Scalar _tmp70 = _tmp69 * lambdas(0, 1);
  const Scalar _tmp71 = _tmp62 * _tmp70;
  const Scalar _tmp72 = _tmp34 * _tmp45 * _tmp52;
  const Scalar _tmp73 = _tmp35 * _tmp59;
  const Scalar _tmp74 = _tmp56 * _tmp73;
  const Scalar _tmp75 = -_x0[0] * _x1[1] + _x0[1] * _x1[0] - _x0[2] * _x1[3] + _x0[3] * _x1[2];
  const Scalar _tmp76 = _tmp70 * _tmp75;
  const Scalar _tmp77 = _tmp34 * _tmp57;
  const Scalar _tmp78 = 2 * lambdas(1, 1);
  const Scalar _tmp79 = -_tmp46 * _tmp52;
  const Scalar _tmp80 = -_tmp36 * _tmp52 + 1;
  const Scalar _tmp81 = _x0[0] * _x1[2] - _x0[1] * _x1[3] - _x0[2] * _x1[0] + _x0[3] * _x1[1];
  const Scalar _tmp82 = _tmp70 * _tmp81;
  const Scalar _tmp83 = _tmp71 * (_tmp54 - _tmp61) + _tmp76 * (_tmp72 + _tmp74) + _tmp77 * _tmp78 +
                        _tmp82 * (_tmp79 + _tmp80);
  const Scalar _tmp84 = _tmp58 * _tmp77;
  const Scalar _tmp85 = _tmp56 * _tmp84;
  const Scalar _tmp86 = _tmp45 * _tmp53;
  const Scalar _tmp87 = _tmp57 * _tmp78;
  const Scalar _tmp88 = -_tmp47 * _tmp52;
  const Scalar _tmp89 = _tmp35 * _tmp87 + _tmp71 * (_tmp79 + _tmp88 + 1) +
                        _tmp76 * (-_tmp85 + _tmp86) + _tmp82 * (_tmp54 + _tmp61);
  const Scalar _tmp90 = _tmp29 * _tmp7;
  const Scalar _tmp91 = _tmp32 * _tmp6;
  const Scalar _tmp92 = 2 * _tmp26;
  const Scalar _tmp93 = _tmp92 * lambdas(2, 1);
  const Scalar _tmp94 = -_tmp31 * _tmp8;
  const Scalar _tmp95 = -_tmp18 * _tmp31;
  const Scalar _tmp96 = _tmp45 * _tmp87 + _tmp71 * (_tmp85 + _tmp86) + _tmp76 * (_tmp80 + _tmp88) +
                        _tmp82 * (_tmp72 - _tmp74);
  const Scalar _tmp97 = _tmp5 * (_tmp19 * _tmp93 + _tmp83 * (-_tmp30 + _tmp33) +
                                 _tmp89 * (_tmp90 + _tmp91) + _tmp96 * (_tmp94 + _tmp95 + 1));
  const Scalar _tmp98 = -2 * std::pow(_x_T_s[1], Scalar(2));
  const Scalar _tmp99 = -2 * std::pow(_x_T_s[2], Scalar(2));
  const Scalar _tmp100 = _tmp98 + _tmp99 + 1;
  const Scalar _tmp101 = _tmp31 * _tmp6 * _tmp7;
  const Scalar _tmp102 = _tmp19 * _tmp29;
  const Scalar _tmp103 = -_tmp20 * _tmp31 + 1;
  const Scalar _tmp104 = _tmp5 * (_tmp6 * _tmp93 + _tmp83 * (_tmp101 + _tmp102) +
                                  _tmp89 * (_tmp103 + _tmp94) + _tmp96 * (-_tmp90 + _tmp91));
  const Scalar _tmp105 = _tmp2 * _x_T_s[1];
  const Scalar _tmp106 = _tmp0 * _x_T_s[2];
  const Scalar _tmp107 = _tmp105 + _tmp106;
  const Scalar _tmp108 = _tmp5 * (_tmp7 * _tmp93 + _tmp83 * (_tmp103 + _tmp95) +
                                  _tmp89 * (_tmp101 - _tmp102) + _tmp96 * (_tmp30 + _tmp33));
  const Scalar _tmp109 = _tmp100 * _tmp104 + _tmp107 * _tmp108 + _tmp4 * _tmp97 - velocity(0, 0);
  const Scalar _tmp110 = 4 * std::pow(_tmp65, Scalar(2)) * std::pow(_tmp67, Scalar(2)) *
                         std::pow(lambdas(0, 0), Scalar(2)) / _tmp68;
  const Scalar _tmp111 = std::sqrt(Scalar(_tmp110 * std::pow(_tmp62, Scalar(2)) +
                                          _tmp110 * std::pow(_tmp75, Scalar(2)) +
                                          _tmp110 * std::pow(_tmp81, Scalar(2)) + _tmp21));
  const Scalar _tmp112 = (Scalar(1) / Scalar(2)) * _tmp111;
  const Scalar _tmp113 = _tmp69 * lambdas(0, 0) * std::sin(_tmp112) / _tmp111;
  const Scalar _tmp114 = _tmp113 * _tmp81;
  const Scalar _tmp115 = std::cos(_tmp112);
  const Scalar _tmp116 = _tmp113 * _tmp62;
  const Scalar _tmp117 = _tmp113 * _tmp75;
  const Scalar _tmp118 = _tmp114 * _x0[0] + _tmp115 * _x0[2] - _tmp116 * _x0[1] + _tmp117 * _x0[3];
  const Scalar _tmp119 = 2 * _tmp73;
  const Scalar _tmp120 = -_tmp114 * _x0[2] + _tmp115 * _x0[0] + _tmp116 * _x0[3] + _tmp117 * _x0[1];
  const Scalar _tmp121 = 2 * _tmp60;
  const Scalar _tmp122 = _tmp114 * _x0[3] + _tmp115 * _x0[1] + _tmp116 * _x0[2] - _tmp117 * _x0[0];
  const Scalar _tmp123 = -_tmp114 * _x0[1] + _tmp115 * _x0[3] - _tmp116 * _x0[0] - _tmp117 * _x0[2];
  const Scalar _tmp124 = 2 * _tmp84;
  const Scalar _tmp125 =
      _tmp118 * _tmp119 - _tmp120 * _tmp121 + _tmp122 * _tmp55 + _tmp123 * _tmp124;
  const Scalar _tmp126 = _tmp28 * _tmp92;
  const Scalar _tmp127 = _tmp126 * _tmp19;
  const Scalar _tmp128 =
      -_tmp118 * _tmp124 + _tmp119 * _tmp123 + _tmp120 * _tmp55 + _tmp121 * _tmp122;
  const Scalar _tmp129 =
      -_tmp118 * _tmp121 - _tmp119 * _tmp120 - _tmp122 * _tmp124 + _tmp123 * _tmp55;
  const Scalar _tmp130 = _tmp126 * _tmp6;
  const Scalar _tmp131 =
      _tmp118 * _tmp55 - _tmp119 * _tmp122 + _tmp120 * _tmp124 + _tmp121 * _tmp123;
  const Scalar _tmp132 = _tmp126 * _tmp7;
  const Scalar _tmp133 =
      _tmp125 * _tmp127 + _tmp128 * _tmp25 + _tmp129 * _tmp130 - _tmp131 * _tmp132;
  const Scalar _tmp134 = -2 * std::pow(_tmp133, Scalar(2));
  const Scalar _tmp135 =
      -_tmp125 * _tmp130 + _tmp127 * _tmp129 + _tmp128 * _tmp132 + _tmp131 * _tmp25;
  const Scalar _tmp136 = -2 * std::pow(_tmp135, Scalar(2));
  const Scalar _tmp137 = lambdas(0, 1) * (-_x0[5] + _x1[5]) + lambdas(1, 1) * (-_x1[5] + _x2[5]) +
                         lambdas(2, 1) * (-_x2[5] + _x3[5]);
  const Scalar _tmp138 =
      -_tmp125 * _tmp132 - _tmp127 * _tmp131 - _tmp128 * _tmp130 + _tmp129 * _tmp25;
  const Scalar _tmp139 = 2 * _tmp138;
  const Scalar _tmp140 = _tmp135 * _tmp139;
  const Scalar _tmp141 =
      _tmp125 * _tmp25 - _tmp127 * _tmp128 + _tmp129 * _tmp132 + _tmp130 * _tmp131;
  const Scalar _tmp142 = 2 * _tmp141;
  const Scalar _tmp143 = _tmp133 * _tmp142;
  const Scalar _tmp144 = lambdas(0, 1) * (-_x0[4] + _x1[4]) + lambdas(1, 1) * (-_x1[4] + _x2[4]) +
                         lambdas(2, 1) * (-_x2[4] + _x3[4]);
  const Scalar _tmp145 = _tmp135 * _tmp142;
  const Scalar _tmp146 = _tmp133 * _tmp139;
  const Scalar _tmp147 = lambdas(0, 1) * (-_x0[6] + _x1[6]) + lambdas(1, 1) * (-_x1[6] + _x2[6]) +
                         lambdas(2, 1) * (-_x2[6] + _x3[6]);
  const Scalar _tmp148 = _tmp5 * (_tmp137 * (_tmp134 + _tmp136 + 1) +
                                  _tmp144 * (-_tmp140 + _tmp143) + _tmp147 * (_tmp145 + _tmp146));
  const Scalar _tmp149 = _tmp1 + _tmp3;
  const Scalar _tmp150 = _tmp105 - _tmp106;
  const Scalar _tmp151 = 1 - 2 * std::pow(_x_T_s[0], Scalar(2));
  const Scalar _tmp152 = _tmp151 + _tmp99;
  const Scalar _tmp153 = 2 * _x_T_s[1] * _x_T_s[2];
  const Scalar _tmp154 = _tmp0 * _x_T_s[0];
  const Scalar _tmp155 = _tmp153 + _tmp154;
  const Scalar _tmp156 = _tmp150 * _x_T_s[4] + _tmp152 * _x_T_s[5] + _tmp155 * _x_T_s[6];
  const Scalar _tmp157 = _tmp151 + _tmp98;
  const Scalar _tmp158 = _tmp153 - _tmp154;
  const Scalar _tmp159 = _tmp149 * _x_T_s[4] + _tmp157 * _x_T_s[6] + _tmp158 * _x_T_s[5];
  const Scalar _tmp160 = 2 * _tmp133 * _tmp135;
  const Scalar _tmp161 = _tmp138 * _tmp142;
  const Scalar _tmp162 = 1 - 2 * std::pow(_tmp141, Scalar(2));
  const Scalar _tmp163 = _tmp5 * (_tmp137 * (_tmp145 - _tmp146) + _tmp144 * (_tmp160 + _tmp161) +
                                  _tmp147 * (_tmp134 + _tmp162));
  const Scalar _tmp164 = _tmp5 * (_tmp137 * (_tmp140 + _tmp143) + _tmp144 * (_tmp136 + _tmp162) +
                                  _tmp147 * (_tmp160 - _tmp161));
  const Scalar _tmp165 = _tmp100 * _tmp164 + _tmp104 * (-_tmp149 * _tmp156 + _tmp150 * _tmp159) +
                         _tmp107 * _tmp148 + _tmp108 * (_tmp152 * _tmp159 - _tmp156 * _tmp158) +
                         _tmp163 * _tmp4 + _tmp97 * (_tmp155 * _tmp159 - _tmp156 * _tmp157) -
                         velocity(3, 0);
  const Scalar _tmp166 = _tmp104 * _tmp150 + _tmp108 * _tmp152 + _tmp155 * _tmp97 - velocity(1, 0);
  const Scalar _tmp167 = _tmp100 * _x_T_s[4] + _tmp107 * _x_T_s[5] + _tmp4 * _x_T_s[6];
  const Scalar _tmp168 = _tmp104 * (-_tmp100 * _tmp159 + _tmp149 * _tmp167) +
                         _tmp108 * (-_tmp107 * _tmp159 + _tmp158 * _tmp167) + _tmp148 * _tmp152 +
                         _tmp150 * _tmp164 + _tmp155 * _tmp163 +
                         _tmp97 * (_tmp157 * _tmp167 - _tmp159 * _tmp4) - velocity(4, 0);
  const Scalar _tmp169 = _tmp104 * (_tmp100 * _tmp156 - _tmp150 * _tmp167) +
                         _tmp108 * (_tmp107 * _tmp156 - _tmp152 * _tmp167) + _tmp148 * _tmp158 +
                         _tmp149 * _tmp164 + _tmp157 * _tmp163 +
                         _tmp97 * (-_tmp155 * _tmp167 + _tmp156 * _tmp4) - velocity(5, 0);
  const Scalar _tmp170 = _tmp104 * _tmp149 + _tmp108 * _tmp158 + _tmp157 * _tmp97 - velocity(2, 0);

  // Output terms (1)
  Eigen::Matrix<Scalar, 6, 1> _res;

  _res(0, 0) = _tmp109 * sqrt_info(0, 0) + _tmp165 * sqrt_info(0, 3) + _tmp166 * sqrt_info(0, 1) +
               _tmp168 * sqrt_info(0, 4) + _tmp169 * sqrt_info(0, 5) + _tmp170 * sqrt_info(0, 2);
  _res(1, 0) = _tmp109 * sqrt_info(1, 0) + _tmp165 * sqrt_info(1, 3) + _tmp166 * sqrt_info(1, 1) +
               _tmp168 * sqrt_info(1, 4) + _tmp169 * sqrt_info(1, 5) + _tmp170 * sqrt_info(1, 2);
  _res(2, 0) = _tmp109 * sqrt_info(2, 0) + _tmp165 * sqrt_info(2, 3) + _tmp166 * sqrt_info(2, 1) +
               _tmp168 * sqrt_info(2, 4) + _tmp169 * sqrt_info(2, 5) + _tmp170 * sqrt_info(2, 2);
  _res(3, 0) = _tmp109 * sqrt_info(3, 0) + _tmp165 * sqrt_info(3, 3) + _tmp166 * sqrt_info(3, 1) +
               _tmp168 * sqrt_info(3, 4) + _tmp169 * sqrt_info(3, 5) + _tmp170 * sqrt_info(3, 2);
  _res(4, 0) = _tmp109 * sqrt_info(4, 0) + _tmp165 * sqrt_info(4, 3) + _tmp166 * sqrt_info(4, 1) +
               _tmp168 * sqrt_info(4, 4) + _tmp169 * sqrt_info(4, 5) + _tmp170 * sqrt_info(4, 2);
  _res(5, 0) = _tmp109 * sqrt_info(5, 0) + _tmp165 * sqrt_info(5, 3) + _tmp166 * sqrt_info(5, 1) +
               _tmp168 * sqrt_info(5, 4) + _tmp169 * sqrt_info(5, 5) + _tmp170 * sqrt_info(5, 2);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_hyperion
