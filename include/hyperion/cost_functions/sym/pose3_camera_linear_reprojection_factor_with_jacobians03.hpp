// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/linear_camera_cal.h>
#include <sym/pose3.h>

namespace sym_hyperion {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: pose3_camera_linear_reprojection_factor
 *
 * Args:
 *     w_T_b: Pose3
 *     b_T_c: Pose3
 *     calibration: LinearCameraCal
 *     l_w: Matrix31
 *     pixel: Matrix21
 *     sqrt_info: Matrix22
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix21
 *     res_D_w_T_b: (2x6) jacobian of res (2) wrt arg w_T_b (6)
 *     res_D_l_w: (2x3) jacobian of res (2) wrt arg l_w (3)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 2, 1> Pose3CameraLinearReprojectionFactorWithJacobians03(
    const sym::Pose3<Scalar>& w_T_b, const sym::Pose3<Scalar>& b_T_c,
    const sym::LinearCameraCal<Scalar>& calibration, const Eigen::Matrix<Scalar, 3, 1>& l_w,
    const Eigen::Matrix<Scalar, 2, 1>& pixel, const Eigen::Matrix<Scalar, 2, 2>& sqrt_info,
    const Scalar epsilon, Scalar* const res_D_w_T_b = nullptr, Scalar* const res_D_l_w = nullptr) {
  // Total ops: 690

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _w_T_b = w_T_b.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _b_T_c = b_T_c.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _calibration = calibration.Data();

  // Intermediate terms (242)
  const Scalar _tmp0 = _b_T_c[1] * _w_T_b[0];
  const Scalar _tmp1 = _b_T_c[2] * _w_T_b[3];
  const Scalar _tmp2 = _b_T_c[3] * _w_T_b[2];
  const Scalar _tmp3 = _b_T_c[0] * _w_T_b[1];
  const Scalar _tmp4 = _tmp0 + _tmp1 + _tmp2 - _tmp3;
  const Scalar _tmp5 = 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _b_T_c[1] * _w_T_b[2];
  const Scalar _tmp8 = _b_T_c[2] * _w_T_b[1];
  const Scalar _tmp9 = _b_T_c[3] * _w_T_b[0];
  const Scalar _tmp10 = _b_T_c[0] * _w_T_b[3];
  const Scalar _tmp11 = _tmp10 - _tmp7 + _tmp8 + _tmp9;
  const Scalar _tmp12 = 2 * std::pow(_tmp11, Scalar(2));
  const Scalar _tmp13 = 1 - _tmp12;
  const Scalar _tmp14 = _tmp13 + _tmp6;
  const Scalar _tmp15 = _b_T_c[1] * _w_T_b[3];
  const Scalar _tmp16 = _b_T_c[2] * _w_T_b[0];
  const Scalar _tmp17 = _b_T_c[3] * _w_T_b[1];
  const Scalar _tmp18 = _b_T_c[0] * _w_T_b[2];
  const Scalar _tmp19 = _tmp15 - _tmp16 + _tmp17 + _tmp18;
  const Scalar _tmp20 = 2 * _tmp19;
  const Scalar _tmp21 = _tmp11 * _tmp20;
  const Scalar _tmp22 = _b_T_c[1] * _w_T_b[1];
  const Scalar _tmp23 = _b_T_c[2] * _w_T_b[2];
  const Scalar _tmp24 = _b_T_c[0] * _w_T_b[0];
  const Scalar _tmp25 = _b_T_c[3] * _w_T_b[3];
  const Scalar _tmp26 = -_tmp22 - _tmp23 - _tmp24 + _tmp25;
  const Scalar _tmp27 = 2 * _tmp4;
  const Scalar _tmp28 = _tmp26 * _tmp27;
  const Scalar _tmp29 = -_tmp28;
  const Scalar _tmp30 = _tmp21 + _tmp29;
  const Scalar _tmp31 = _tmp19 * _tmp27;
  const Scalar _tmp32 = 2 * _tmp11;
  const Scalar _tmp33 = _tmp26 * _tmp32;
  const Scalar _tmp34 = _tmp31 + _tmp33;
  const Scalar _tmp35 = std::pow(_w_T_b[1], Scalar(2));
  const Scalar _tmp36 = -2 * _tmp35;
  const Scalar _tmp37 = std::pow(_w_T_b[0], Scalar(2));
  const Scalar _tmp38 = 1 - 2 * _tmp37;
  const Scalar _tmp39 = 2 * _w_T_b[0] * _w_T_b[2];
  const Scalar _tmp40 = 2 * _w_T_b[1];
  const Scalar _tmp41 = _tmp40 * _w_T_b[3];
  const Scalar _tmp42 = -_tmp41;
  const Scalar _tmp43 = _tmp39 + _tmp42;
  const Scalar _tmp44 = 2 * _w_T_b[3];
  const Scalar _tmp45 = _tmp44 * _w_T_b[0];
  const Scalar _tmp46 = _tmp40 * _w_T_b[2];
  const Scalar _tmp47 = _tmp45 + _tmp46;
  const Scalar _tmp48 =
      _b_T_c[4] * _tmp43 + _b_T_c[5] * _tmp47 + _b_T_c[6] * (_tmp36 + _tmp38) + _w_T_b[6];
  const Scalar _tmp49 = std::pow(_w_T_b[2], Scalar(2));
  const Scalar _tmp50 = -2 * _tmp49;
  const Scalar _tmp51 = _tmp40 * _w_T_b[0];
  const Scalar _tmp52 = _tmp44 * _w_T_b[2];
  const Scalar _tmp53 = -_tmp52;
  const Scalar _tmp54 = _tmp51 + _tmp53;
  const Scalar _tmp55 = _tmp39 + _tmp41;
  const Scalar _tmp56 =
      _b_T_c[4] * (_tmp36 + _tmp50 + 1) + _b_T_c[5] * _tmp54 + _b_T_c[6] * _tmp55 + _w_T_b[4];
  const Scalar _tmp57 = _tmp51 + _tmp52;
  const Scalar _tmp58 = -_tmp45;
  const Scalar _tmp59 = _tmp46 + _tmp58;
  const Scalar _tmp60 =
      _b_T_c[4] * _tmp57 + _b_T_c[5] * (_tmp38 + _tmp50) + _b_T_c[6] * _tmp59 + _w_T_b[5];
  const Scalar _tmp61 = -_tmp14 * _tmp60 + _tmp14 * l_w(1, 0) - _tmp30 * _tmp56 +
                        _tmp30 * l_w(0, 0) - _tmp34 * _tmp48 + _tmp34 * l_w(2, 0);
  const Scalar _tmp62 = 2 * std::pow(_tmp19, Scalar(2));
  const Scalar _tmp63 = -_tmp62;
  const Scalar _tmp64 = _tmp13 + _tmp63;
  const Scalar _tmp65 = _tmp11 * _tmp27;
  const Scalar _tmp66 = _tmp20 * _tmp26;
  const Scalar _tmp67 = _tmp65 + _tmp66;
  const Scalar _tmp68 = -_tmp33;
  const Scalar _tmp69 = _tmp31 + _tmp68;
  const Scalar _tmp70 = -_tmp48 * _tmp64 - _tmp56 * _tmp67 - _tmp60 * _tmp69 + _tmp64 * l_w(2, 0) +
                        _tmp67 * l_w(0, 0) + _tmp69 * l_w(1, 0);
  const Scalar _tmp71 = std::max<Scalar>(_tmp70, epsilon);
  const Scalar _tmp72 = Scalar(1.0) / (_tmp71);
  const Scalar _tmp73 = _calibration[1] * _tmp72;
  const Scalar _tmp74 = _calibration[3] + _tmp61 * _tmp73 - pixel(1, 0);
  const Scalar _tmp75 = _tmp6 + _tmp63 + 1;
  const Scalar _tmp76 = -_tmp66;
  const Scalar _tmp77 = _tmp65 + _tmp76;
  const Scalar _tmp78 = _tmp21 + _tmp28;
  const Scalar _tmp79 = -_tmp48 * _tmp77 - _tmp56 * _tmp75 - _tmp60 * _tmp78 + _tmp75 * l_w(0, 0) +
                        _tmp77 * l_w(2, 0) + _tmp78 * l_w(1, 0);
  const Scalar _tmp80 = _calibration[0] * _tmp72;
  const Scalar _tmp81 = _calibration[2] + _tmp79 * _tmp80 - pixel(0, 0);
  const Scalar _tmp82 = std::max<Scalar>(0, (((_tmp70) > 0) - ((_tmp70) < 0)));
  const Scalar _tmp83 = (Scalar(1) / Scalar(2)) * _tmp8;
  const Scalar _tmp84 = (Scalar(1) / Scalar(2)) * _tmp10;
  const Scalar _tmp85 = -_tmp84;
  const Scalar _tmp86 = -Scalar(1) / Scalar(2) * _tmp7;
  const Scalar _tmp87 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp88 = _tmp86 - _tmp87;
  const Scalar _tmp89 = _tmp83 + _tmp85 + _tmp88;
  const Scalar _tmp90 = _tmp32 * _tmp89;
  const Scalar _tmp91 = (Scalar(1) / Scalar(2)) * _tmp23;
  const Scalar _tmp92 = (Scalar(1) / Scalar(2)) * _tmp24;
  const Scalar _tmp93 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp94 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp95 = _tmp93 + _tmp94;
  const Scalar _tmp96 = _tmp91 - _tmp92 + _tmp95;
  const Scalar _tmp97 = 2 * _tmp26;
  const Scalar _tmp98 = _tmp96 * _tmp97;
  const Scalar _tmp99 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp100 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp101 = -_tmp100;
  const Scalar _tmp102 = -Scalar(1) / Scalar(2) * _tmp16;
  const Scalar _tmp103 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp104 = _tmp102 - _tmp103;
  const Scalar _tmp105 = _tmp101 + _tmp104 + _tmp99;
  const Scalar _tmp106 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp107 = -_tmp106;
  const Scalar _tmp108 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp109 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp110 = -Scalar(1) / Scalar(2) * _tmp3;
  const Scalar _tmp111 = -_tmp109 + _tmp110;
  const Scalar _tmp112 = _tmp107 + _tmp108 + _tmp111;
  const Scalar _tmp113 = _tmp105 * _tmp20 + _tmp112 * _tmp27;
  const Scalar _tmp114 = _tmp113 + _tmp90 + _tmp98;
  const Scalar _tmp115 = 4 * _tmp11;
  const Scalar _tmp116 = -_tmp115 * _tmp96;
  const Scalar _tmp117 = 4 * _tmp4;
  const Scalar _tmp118 = -_tmp105 * _tmp117;
  const Scalar _tmp119 = _tmp116 + _tmp118;
  const Scalar _tmp120 = _tmp27 * _tmp89;
  const Scalar _tmp121 = _tmp105 * _tmp97;
  const Scalar _tmp122 = _tmp112 * _tmp32 + _tmp20 * _tmp96;
  const Scalar _tmp123 = -_tmp120 - _tmp121 + _tmp122;
  const Scalar _tmp124 = -_tmp51;
  const Scalar _tmp125 = _b_T_c[5] * _tmp55 + _b_T_c[6] * (_tmp124 + _tmp52);
  const Scalar _tmp126 = -_tmp35;
  const Scalar _tmp127 = _tmp126 + _tmp37;
  const Scalar _tmp128 = std::pow(_w_T_b[3], Scalar(2));
  const Scalar _tmp129 = -_tmp128;
  const Scalar _tmp130 = _tmp129 + _tmp49;
  const Scalar _tmp131 = _b_T_c[5] * _tmp59 + _b_T_c[6] * (_tmp127 + _tmp130);
  const Scalar _tmp132 = -_tmp37;
  const Scalar _tmp133 = -_tmp46;
  const Scalar _tmp134 =
      _b_T_c[5] * (_tmp126 + _tmp128 + _tmp132 + _tmp49) + _b_T_c[6] * (_tmp133 + _tmp58);
  const Scalar _tmp135 = 4 * _tmp19;
  const Scalar _tmp136 = -_tmp112 * _tmp135;
  const Scalar _tmp137 = _tmp116 + _tmp136;
  const Scalar _tmp138 = _tmp20 * _tmp89;
  const Scalar _tmp139 = _tmp112 * _tmp97;
  const Scalar _tmp140 = _tmp105 * _tmp32 + _tmp27 * _tmp96;
  const Scalar _tmp141 = _tmp138 + _tmp139 + _tmp140;
  const Scalar _tmp142 = _tmp113 - _tmp90 - _tmp98;
  const Scalar _tmp143 = -_tmp125 * _tmp67 - _tmp131 * _tmp69 - _tmp134 * _tmp64 -
                         _tmp137 * _tmp48 + _tmp137 * l_w(2, 0) - _tmp141 * _tmp56 +
                         _tmp141 * l_w(0, 0) - _tmp142 * _tmp60 + _tmp142 * l_w(1, 0);
  const Scalar _tmp144 = (Scalar(1) / Scalar(2)) *
                         ((((_tmp70 - epsilon) > 0) - ((_tmp70 - epsilon) < 0)) + 1) /
                         std::pow(_tmp71, Scalar(2));
  const Scalar _tmp145 = _calibration[1] * _tmp61;
  const Scalar _tmp146 = _tmp144 * _tmp145;
  const Scalar _tmp147 =
      -_tmp143 * _tmp146 + _tmp73 * (-_tmp114 * _tmp48 + _tmp114 * l_w(2, 0) - _tmp119 * _tmp60 +
                                     _tmp119 * l_w(1, 0) - _tmp123 * _tmp56 + _tmp123 * l_w(0, 0) -
                                     _tmp125 * _tmp30 - _tmp131 * _tmp14 - _tmp134 * _tmp34);
  const Scalar _tmp148 = _calibration[0] * _tmp79;
  const Scalar _tmp149 = _tmp144 * _tmp148;
  const Scalar _tmp150 = -_tmp138 - _tmp139 + _tmp140;
  const Scalar _tmp151 = _tmp118 + _tmp136;
  const Scalar _tmp152 = _tmp120 + _tmp121 + _tmp122;
  const Scalar _tmp153 =
      -_tmp143 * _tmp149 + _tmp80 * (-_tmp125 * _tmp75 - _tmp131 * _tmp78 - _tmp134 * _tmp77 -
                                     _tmp150 * _tmp48 + _tmp150 * l_w(2, 0) - _tmp151 * _tmp56 +
                                     _tmp151 * l_w(0, 0) - _tmp152 * _tmp60 + _tmp152 * l_w(1, 0));
  const Scalar _tmp154 = -_tmp108;
  const Scalar _tmp155 = _tmp107 + _tmp109 + _tmp110 + _tmp154;
  const Scalar _tmp156 = -_tmp115 * _tmp155;
  const Scalar _tmp157 = _tmp91 + _tmp92 - _tmp93 + _tmp94;
  const Scalar _tmp158 = -_tmp135 * _tmp157;
  const Scalar _tmp159 = _tmp156 + _tmp158;
  const Scalar _tmp160 = -_tmp99;
  const Scalar _tmp161 = _tmp100 + _tmp104 + _tmp160;
  const Scalar _tmp162 = _tmp161 * _tmp32;
  const Scalar _tmp163 = _tmp155 * _tmp97;
  const Scalar _tmp164 = -_tmp83;
  const Scalar _tmp165 = _tmp164 + _tmp85 + _tmp86 + _tmp87;
  const Scalar _tmp166 = _tmp157 * _tmp27 + _tmp165 * _tmp20;
  const Scalar _tmp167 = -_tmp162 - _tmp163 + _tmp166;
  const Scalar _tmp168 = _tmp161 * _tmp20;
  const Scalar _tmp169 = _tmp157 * _tmp97;
  const Scalar _tmp170 = _tmp155 * _tmp27 + _tmp165 * _tmp32;
  const Scalar _tmp171 = _tmp168 + _tmp169 + _tmp170;
  const Scalar _tmp172 = -_tmp49;
  const Scalar _tmp173 = _tmp128 + _tmp172;
  const Scalar _tmp174 = -_tmp39;
  const Scalar _tmp175 = _b_T_c[4] * (_tmp174 + _tmp42) + _b_T_c[6] * (_tmp127 + _tmp173);
  const Scalar _tmp176 = _b_T_c[4] * (_tmp133 + _tmp45) + _b_T_c[6] * _tmp57;
  const Scalar _tmp177 = _b_T_c[4] * (_tmp129 + _tmp172 + _tmp35 + _tmp37) + _b_T_c[6] * _tmp43;
  const Scalar _tmp178 = -_tmp159 * _tmp48 + _tmp159 * l_w(2, 0) - _tmp167 * _tmp60 +
                         _tmp167 * l_w(1, 0) - _tmp171 * _tmp56 + _tmp171 * l_w(0, 0) -
                         _tmp175 * _tmp67 - _tmp176 * _tmp69 - _tmp177 * _tmp64;
  const Scalar _tmp179 = -_tmp117 * _tmp165;
  const Scalar _tmp180 = _tmp156 + _tmp179;
  const Scalar _tmp181 = _tmp162 + _tmp163 + _tmp166;
  const Scalar _tmp182 = _tmp161 * _tmp27;
  const Scalar _tmp183 = _tmp165 * _tmp97;
  const Scalar _tmp184 = _tmp155 * _tmp20 + _tmp157 * _tmp32;
  const Scalar _tmp185 = -_tmp182 - _tmp183 + _tmp184;
  const Scalar _tmp186 =
      -_tmp146 * _tmp178 + _tmp73 * (-_tmp14 * _tmp176 - _tmp175 * _tmp30 - _tmp177 * _tmp34 -
                                     _tmp180 * _tmp60 + _tmp180 * l_w(1, 0) - _tmp181 * _tmp48 +
                                     _tmp181 * l_w(2, 0) - _tmp185 * _tmp56 + _tmp185 * l_w(0, 0));
  const Scalar _tmp187 = -_tmp168 - _tmp169 + _tmp170;
  const Scalar _tmp188 = _tmp158 + _tmp179;
  const Scalar _tmp189 = _tmp182 + _tmp183 + _tmp184;
  const Scalar _tmp190 =
      -_tmp149 * _tmp178 + _tmp80 * (-_tmp175 * _tmp75 - _tmp176 * _tmp78 - _tmp177 * _tmp77 -
                                     _tmp187 * _tmp48 + _tmp187 * l_w(2, 0) - _tmp188 * _tmp56 +
                                     _tmp188 * l_w(0, 0) - _tmp189 * _tmp60 + _tmp189 * l_w(1, 0));
  const Scalar _tmp191 = _b_T_c[4] * _tmp47 + _b_T_c[5] * (_tmp174 + _tmp41);
  const Scalar _tmp192 = _tmp106 + _tmp111 + _tmp154;
  const Scalar _tmp193 = _tmp192 * _tmp20;
  const Scalar _tmp194 = _tmp164 + _tmp84 + _tmp88;
  const Scalar _tmp195 = _tmp194 * _tmp97;
  const Scalar _tmp196 = -_tmp91 + _tmp92 + _tmp95;
  const Scalar _tmp197 = _tmp101 + _tmp102 + _tmp103 + _tmp160;
  const Scalar _tmp198 = _tmp196 * _tmp32 + _tmp197 * _tmp27;
  const Scalar _tmp199 = _tmp193 + _tmp195 + _tmp198;
  const Scalar _tmp200 = -_tmp115 * _tmp197;
  const Scalar _tmp201 = -_tmp135 * _tmp194;
  const Scalar _tmp202 = _tmp200 + _tmp201;
  const Scalar _tmp203 = _tmp192 * _tmp32;
  const Scalar _tmp204 = _tmp197 * _tmp97;
  const Scalar _tmp205 = _tmp194 * _tmp27 + _tmp196 * _tmp20;
  const Scalar _tmp206 = -_tmp203 - _tmp204 + _tmp205;
  const Scalar _tmp207 = _tmp132 + _tmp35;
  const Scalar _tmp208 = _b_T_c[4] * _tmp54 + _b_T_c[5] * (_tmp130 + _tmp207);
  const Scalar _tmp209 = _b_T_c[4] * (_tmp173 + _tmp207) + _b_T_c[5] * (_tmp124 + _tmp53);
  const Scalar _tmp210 = -_tmp191 * _tmp64 - _tmp199 * _tmp56 + _tmp199 * l_w(0, 0) -
                         _tmp202 * _tmp48 + _tmp202 * l_w(2, 0) - _tmp206 * _tmp60 +
                         _tmp206 * l_w(1, 0) - _tmp208 * _tmp67 - _tmp209 * _tmp69;
  const Scalar _tmp211 = -_tmp193 - _tmp195 + _tmp198;
  const Scalar _tmp212 = _tmp192 * _tmp27;
  const Scalar _tmp213 = _tmp196 * _tmp97;
  const Scalar _tmp214 = _tmp194 * _tmp32 + _tmp197 * _tmp20;
  const Scalar _tmp215 = _tmp212 + _tmp213 + _tmp214;
  const Scalar _tmp216 = -_tmp117 * _tmp196;
  const Scalar _tmp217 = _tmp201 + _tmp216;
  const Scalar _tmp218 =
      -_tmp149 * _tmp210 + _tmp80 * (-_tmp191 * _tmp77 - _tmp208 * _tmp75 - _tmp209 * _tmp78 -
                                     _tmp211 * _tmp48 + _tmp211 * l_w(2, 0) - _tmp215 * _tmp60 +
                                     _tmp215 * l_w(1, 0) - _tmp217 * _tmp56 + _tmp217 * l_w(0, 0));
  const Scalar _tmp219 = _tmp200 + _tmp216;
  const Scalar _tmp220 = _tmp203 + _tmp204 + _tmp205;
  const Scalar _tmp221 = -_tmp212 - _tmp213 + _tmp214;
  const Scalar _tmp222 =
      -_tmp146 * _tmp210 + _tmp73 * (-_tmp14 * _tmp209 - _tmp191 * _tmp34 - _tmp208 * _tmp30 -
                                     _tmp219 * _tmp60 + _tmp219 * l_w(1, 0) - _tmp220 * _tmp48 +
                                     _tmp220 * l_w(2, 0) - _tmp221 * _tmp56 + _tmp221 * l_w(0, 0));
  const Scalar _tmp223 = -_tmp65;
  const Scalar _tmp224 = _tmp223 + _tmp76;
  const Scalar _tmp225 = -_tmp21;
  const Scalar _tmp226 = -_tmp146 * _tmp224 + _tmp73 * (_tmp225 + _tmp28);
  const Scalar _tmp227 = _tmp5 - 1;
  const Scalar _tmp228 = -_tmp149 * _tmp224 + _tmp80 * (_tmp227 + _tmp62);
  const Scalar _tmp229 = -_tmp31;
  const Scalar _tmp230 = _tmp144 * (_tmp229 + _tmp33);
  const Scalar _tmp231 = -_tmp148 * _tmp230 + _tmp80 * (_tmp225 + _tmp29);
  const Scalar _tmp232 = -_tmp145 * _tmp230 + _tmp73 * (_tmp12 + _tmp227);
  const Scalar _tmp233 = _tmp144 * (_tmp12 + _tmp62 - 1);
  const Scalar _tmp234 = -_tmp148 * _tmp233 + _tmp80 * (_tmp223 + _tmp66);
  const Scalar _tmp235 = -_tmp145 * _tmp233 + _tmp73 * (_tmp229 + _tmp68);
  const Scalar _tmp236 = -_tmp146 * _tmp67 + _tmp30 * _tmp73;
  const Scalar _tmp237 = -_tmp149 * _tmp67 + _tmp75 * _tmp80;
  const Scalar _tmp238 = -_tmp149 * _tmp69 + _tmp78 * _tmp80;
  const Scalar _tmp239 = _tmp14 * _tmp73 - _tmp146 * _tmp69;
  const Scalar _tmp240 = -_tmp149 * _tmp64 + _tmp77 * _tmp80;
  const Scalar _tmp241 = -_tmp146 * _tmp64 + _tmp34 * _tmp73;

  // Output terms (3)
  Eigen::Matrix<Scalar, 2, 1> _res;

  _res(0, 0) = _tmp82 * (_tmp74 * sqrt_info(0, 1) + _tmp81 * sqrt_info(0, 0));
  _res(1, 0) = _tmp82 * (_tmp74 * sqrt_info(1, 1) + _tmp81 * sqrt_info(1, 0));

  if (res_D_w_T_b != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 2, 6>> _res_D_w_T_b{res_D_w_T_b};

    _res_D_w_T_b(0, 0) = _tmp82 * (_tmp147 * sqrt_info(0, 1) + _tmp153 * sqrt_info(0, 0));
    _res_D_w_T_b(1, 0) = _tmp82 * (_tmp147 * sqrt_info(1, 1) + _tmp153 * sqrt_info(1, 0));
    _res_D_w_T_b(0, 1) = _tmp82 * (_tmp186 * sqrt_info(0, 1) + _tmp190 * sqrt_info(0, 0));
    _res_D_w_T_b(1, 1) = _tmp82 * (_tmp186 * sqrt_info(1, 1) + _tmp190 * sqrt_info(1, 0));
    _res_D_w_T_b(0, 2) = _tmp82 * (_tmp218 * sqrt_info(0, 0) + _tmp222 * sqrt_info(0, 1));
    _res_D_w_T_b(1, 2) = _tmp82 * (_tmp218 * sqrt_info(1, 0) + _tmp222 * sqrt_info(1, 1));
    _res_D_w_T_b(0, 3) = _tmp82 * (_tmp226 * sqrt_info(0, 1) + _tmp228 * sqrt_info(0, 0));
    _res_D_w_T_b(1, 3) = _tmp82 * (_tmp226 * sqrt_info(1, 1) + _tmp228 * sqrt_info(1, 0));
    _res_D_w_T_b(0, 4) = _tmp82 * (_tmp231 * sqrt_info(0, 0) + _tmp232 * sqrt_info(0, 1));
    _res_D_w_T_b(1, 4) = _tmp82 * (_tmp231 * sqrt_info(1, 0) + _tmp232 * sqrt_info(1, 1));
    _res_D_w_T_b(0, 5) = _tmp82 * (_tmp234 * sqrt_info(0, 0) + _tmp235 * sqrt_info(0, 1));
    _res_D_w_T_b(1, 5) = _tmp82 * (_tmp234 * sqrt_info(1, 0) + _tmp235 * sqrt_info(1, 1));
  }

  if (res_D_l_w != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 2, 3>> _res_D_l_w{res_D_l_w};

    _res_D_l_w(0, 0) = _tmp82 * (_tmp236 * sqrt_info(0, 1) + _tmp237 * sqrt_info(0, 0));
    _res_D_l_w(1, 0) = _tmp82 * (_tmp236 * sqrt_info(1, 1) + _tmp237 * sqrt_info(1, 0));
    _res_D_l_w(0, 1) = _tmp82 * (_tmp238 * sqrt_info(0, 0) + _tmp239 * sqrt_info(0, 1));
    _res_D_l_w(1, 1) = _tmp82 * (_tmp238 * sqrt_info(1, 0) + _tmp239 * sqrt_info(1, 1));
    _res_D_l_w(0, 2) = _tmp82 * (_tmp240 * sqrt_info(0, 0) + _tmp241 * sqrt_info(0, 1));
    _res_D_l_w(1, 2) = _tmp82 * (_tmp240 * sqrt_info(1, 0) + _tmp241 * sqrt_info(1, 1));
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_hyperion
