// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>

namespace sym_hyperion {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline3_pose3_delta_factor
 *
 * Args:
 *     lambdas: Matrix31
 *     x0: Pose3
 *     x1: Pose3
 *     x2: Pose3
 *     x3: Pose3
 *     y: Pose3
 *     sqrt_info: Matrix66
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix61
 *     res_D_x0: (6x6) jacobian of res (6) wrt arg x0 (6)
 *     res_D_x1: (6x6) jacobian of res (6) wrt arg x1 (6)
 *     res_D_x2: (6x6) jacobian of res (6) wrt arg x2 (6)
 *     res_D_x3: (6x6) jacobian of res (6) wrt arg x3 (6)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 6, 1> Spline3Pose3DeltaFactorWithJacobians1234(
    const Eigen::Matrix<Scalar, 3, 1>& lambdas, const sym::Pose3<Scalar>& x0,
    const sym::Pose3<Scalar>& x1, const sym::Pose3<Scalar>& x2, const sym::Pose3<Scalar>& x3,
    const sym::Pose3<Scalar>& y, const Eigen::Matrix<Scalar, 6, 6>& sqrt_info, const Scalar epsilon,
    Scalar* const res_D_x0 = nullptr, Scalar* const res_D_x1 = nullptr,
    Scalar* const res_D_x2 = nullptr, Scalar* const res_D_x3 = nullptr) {
  // Total ops: 6188

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x3 = x3.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y = y.Data();

  // Intermediate terms (1297)
  const Scalar _tmp0 = _x2[2] * _x3[3];
  const Scalar _tmp1 = _x2[0] * _x3[1];
  const Scalar _tmp2 = _x2[3] * _x3[2];
  const Scalar _tmp3 = _x2[1] * _x3[0];
  const Scalar _tmp4 = -_tmp0 - _tmp1 + _tmp2 + _tmp3;
  const Scalar _tmp5 = _x2[2] * _x3[2];
  const Scalar _tmp6 = _x2[0] * _x3[0];
  const Scalar _tmp7 = _x2[1] * _x3[1];
  const Scalar _tmp8 = -_tmp5 - _tmp6 - _tmp7;
  const Scalar _tmp9 = _x2[3] * _x3[3];
  const Scalar _tmp10 =
      2 * std::min<Scalar>(0, (((-_tmp8 + _tmp9) > 0) - ((-_tmp8 + _tmp9) < 0))) + 1;
  const Scalar _tmp11 = _tmp10 * lambdas(2, 0);
  const Scalar _tmp12 = _tmp11 * _tmp4;
  const Scalar _tmp13 = 1 - epsilon;
  const Scalar _tmp14 = std::min<Scalar>(_tmp13, std::fabs(_tmp8 - _tmp9));
  const Scalar _tmp15 = 1 - std::pow(_tmp14, Scalar(2));
  const Scalar _tmp16 = std::acos(_tmp14);
  const Scalar _tmp17 = std::pow(_tmp16, Scalar(2)) / _tmp15;
  const Scalar _tmp18 = std::pow(_tmp10, Scalar(2)) * std::pow(lambdas(2, 0), Scalar(2));
  const Scalar _tmp19 = 4 * _tmp18;
  const Scalar _tmp20 = _tmp19 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp21 = _x2[2] * _x3[0];
  const Scalar _tmp22 = _x2[0] * _x3[2];
  const Scalar _tmp23 = _x2[3] * _x3[1];
  const Scalar _tmp24 = _x2[1] * _x3[3];
  const Scalar _tmp25 = -_tmp21 + _tmp22 + _tmp23 - _tmp24;
  const Scalar _tmp26 = _tmp19 * std::pow(_tmp25, Scalar(2));
  const Scalar _tmp27 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp28 = _x2[2] * _x3[1];
  const Scalar _tmp29 = _x2[0] * _x3[3];
  const Scalar _tmp30 = _x2[3] * _x3[0];
  const Scalar _tmp31 = _x2[1] * _x3[2];
  const Scalar _tmp32 = _tmp28 - _tmp29 + _tmp30 - _tmp31;
  const Scalar _tmp33 = _tmp19 * std::pow(_tmp32, Scalar(2));
  const Scalar _tmp34 =
      std::sqrt(Scalar(_tmp17 * _tmp20 + _tmp17 * _tmp26 + _tmp17 * _tmp33 + _tmp27));
  const Scalar _tmp35 = (Scalar(1) / Scalar(2)) * _tmp34;
  const Scalar _tmp36 = _tmp16 * std::sin(_tmp35) / (std::sqrt(_tmp15) * _tmp34);
  const Scalar _tmp37 = _tmp12 * _tmp36;
  const Scalar _tmp38 = _x1[2] * _x2[3];
  const Scalar _tmp39 = _x1[1] * _x2[0];
  const Scalar _tmp40 = _x1[0] * _x2[1];
  const Scalar _tmp41 = _x1[3] * _x2[2];
  const Scalar _tmp42 = -_tmp38 + _tmp39 - _tmp40 + _tmp41;
  const Scalar _tmp43 = _x1[0] * _x2[0];
  const Scalar _tmp44 = _x1[1] * _x2[1];
  const Scalar _tmp45 = _x1[2] * _x2[2];
  const Scalar _tmp46 = -_tmp43 - _tmp44 - _tmp45;
  const Scalar _tmp47 = _x1[3] * _x2[3];
  const Scalar _tmp48 =
      2 * std::min<Scalar>(0, (((-_tmp46 + _tmp47) > 0) - ((-_tmp46 + _tmp47) < 0))) + 1;
  const Scalar _tmp49 = _tmp48 * lambdas(1, 0);
  const Scalar _tmp50 = _tmp42 * _tmp49;
  const Scalar _tmp51 = std::min<Scalar>(_tmp13, std::fabs(_tmp46 - _tmp47));
  const Scalar _tmp52 = 1 - std::pow(_tmp51, Scalar(2));
  const Scalar _tmp53 = std::acos(_tmp51);
  const Scalar _tmp54 = std::pow(_tmp53, Scalar(2)) / _tmp52;
  const Scalar _tmp55 = _x1[1] * _x2[3];
  const Scalar _tmp56 = _x1[2] * _x2[0];
  const Scalar _tmp57 = _x1[3] * _x2[1];
  const Scalar _tmp58 = _x1[0] * _x2[2];
  const Scalar _tmp59 = -_tmp55 - _tmp56 + _tmp57 + _tmp58;
  const Scalar _tmp60 = std::pow(_tmp48, Scalar(2)) * std::pow(lambdas(1, 0), Scalar(2));
  const Scalar _tmp61 = 4 * _tmp60;
  const Scalar _tmp62 = std::pow(_tmp59, Scalar(2)) * _tmp61;
  const Scalar _tmp63 = std::pow(_tmp42, Scalar(2)) * _tmp61;
  const Scalar _tmp64 = _x1[0] * _x2[3];
  const Scalar _tmp65 = _x1[3] * _x2[0];
  const Scalar _tmp66 = _x1[2] * _x2[1];
  const Scalar _tmp67 = _x1[1] * _x2[2];
  const Scalar _tmp68 = -_tmp64 + _tmp65 + _tmp66 - _tmp67;
  const Scalar _tmp69 = _tmp61 * std::pow(_tmp68, Scalar(2));
  const Scalar _tmp70 =
      std::sqrt(Scalar(_tmp27 + _tmp54 * _tmp62 + _tmp54 * _tmp63 + _tmp54 * _tmp69));
  const Scalar _tmp71 = (Scalar(1) / Scalar(2)) * _tmp70;
  const Scalar _tmp72 = _tmp53 * std::sin(_tmp71) / (std::sqrt(_tmp52) * _tmp70);
  const Scalar _tmp73 = 4 * _tmp72;
  const Scalar _tmp74 = _tmp50 * _tmp73;
  const Scalar _tmp75 = _tmp11 * _tmp25;
  const Scalar _tmp76 = _tmp36 * _tmp75;
  const Scalar _tmp77 = _tmp49 * _tmp59;
  const Scalar _tmp78 = _tmp73 * _tmp77;
  const Scalar _tmp79 = _tmp49 * _tmp68;
  const Scalar _tmp80 = _tmp73 * _tmp79;
  const Scalar _tmp81 = _tmp11 * _tmp32;
  const Scalar _tmp82 = _tmp36 * _tmp81;
  const Scalar _tmp83 = std::cos(_tmp71);
  const Scalar _tmp84 = std::cos(_tmp35);
  const Scalar _tmp85 = -_tmp37 * _tmp74 - _tmp76 * _tmp78 - _tmp80 * _tmp82 + _tmp83 * _tmp84;
  const Scalar _tmp86 = _x0[3] * _x1[2];
  const Scalar _tmp87 = _x0[0] * _x1[1];
  const Scalar _tmp88 = _x0[2] * _x1[3];
  const Scalar _tmp89 = _x0[1] * _x1[0];
  const Scalar _tmp90 = _tmp86 - _tmp87 - _tmp88 + _tmp89;
  const Scalar _tmp91 = std::pow(_tmp90, Scalar(2));
  const Scalar _tmp92 = _x0[2] * _x1[2];
  const Scalar _tmp93 = _x0[1] * _x1[1];
  const Scalar _tmp94 = _x0[0] * _x1[0];
  const Scalar _tmp95 = -_tmp92 - _tmp93 - _tmp94;
  const Scalar _tmp96 = _x0[3] * _x1[3];
  const Scalar _tmp97 =
      2 * std::min<Scalar>(0, (((-_tmp95 + _tmp96) > 0) - ((-_tmp95 + _tmp96) < 0))) + 1;
  const Scalar _tmp98 = std::pow(_tmp97, Scalar(2));
  const Scalar _tmp99 = std::pow(lambdas(0, 0), Scalar(2));
  const Scalar _tmp100 = 4 * _tmp98 * _tmp99;
  const Scalar _tmp101 = std::min<Scalar>(_tmp13, std::fabs(_tmp95 - _tmp96));
  const Scalar _tmp102 = std::acos(_tmp101);
  const Scalar _tmp103 = 1 - std::pow(_tmp101, Scalar(2));
  const Scalar _tmp104 = std::pow(_tmp102, Scalar(2)) / _tmp103;
  const Scalar _tmp105 = _tmp100 * _tmp104;
  const Scalar _tmp106 = _x0[0] * _x1[2];
  const Scalar _tmp107 = _x0[3] * _x1[1];
  const Scalar _tmp108 = _x0[1] * _x1[3];
  const Scalar _tmp109 = _x0[2] * _x1[0];
  const Scalar _tmp110 = _tmp106 + _tmp107 - _tmp108 - _tmp109;
  const Scalar _tmp111 = std::pow(_tmp110, Scalar(2));
  const Scalar _tmp112 = _x0[1] * _x1[2];
  const Scalar _tmp113 = _x0[2] * _x1[1];
  const Scalar _tmp114 = _x0[0] * _x1[3];
  const Scalar _tmp115 = _x0[3] * _x1[0];
  const Scalar _tmp116 = -_tmp112 + _tmp113 - _tmp114 + _tmp115;
  const Scalar _tmp117 = _tmp100 * std::pow(_tmp116, Scalar(2));
  const Scalar _tmp118 =
      std::sqrt(Scalar(_tmp104 * _tmp117 + _tmp105 * _tmp111 + _tmp105 * _tmp91 + _tmp27));
  const Scalar _tmp119 = (Scalar(1) / Scalar(2)) * _tmp118;
  const Scalar _tmp120 = std::cos(_tmp119);
  const Scalar _tmp121 = _tmp97 * lambdas(0, 0);
  const Scalar _tmp122 = _tmp116 * _tmp121;
  const Scalar _tmp123 = 2 * _tmp49;
  const Scalar _tmp124 = _tmp123 * _tmp72 * _tmp84;
  const Scalar _tmp125 = 2 * _tmp83;
  const Scalar _tmp126 = _tmp125 * _tmp36;
  const Scalar _tmp127 = _tmp124 * _tmp68 + _tmp126 * _tmp81 + _tmp37 * _tmp78 - _tmp74 * _tmp76;
  const Scalar _tmp128 = 2 * _tmp102 * std::sin(_tmp119) / (std::sqrt(_tmp103) * _tmp118);
  const Scalar _tmp129 = _tmp127 * _tmp128;
  const Scalar _tmp130 = _tmp124 * _tmp59 + _tmp126 * _tmp75 - _tmp37 * _tmp80 + _tmp74 * _tmp82;
  const Scalar _tmp131 = _tmp128 * _tmp130;
  const Scalar _tmp132 = _tmp110 * _tmp121;
  const Scalar _tmp133 = _tmp121 * _tmp90;
  const Scalar _tmp134 = _tmp124 * _tmp42 + _tmp125 * _tmp37 + _tmp76 * _tmp80 - _tmp78 * _tmp82;
  const Scalar _tmp135 = _tmp128 * _tmp134;
  const Scalar _tmp136 =
      _tmp120 * _tmp85 - _tmp122 * _tmp129 - _tmp131 * _tmp132 - _tmp133 * _tmp135;
  const Scalar _tmp137 = _tmp128 * _tmp85;
  const Scalar _tmp138 =
      _tmp120 * _tmp130 - _tmp122 * _tmp135 + _tmp129 * _tmp133 + _tmp132 * _tmp137;
  const Scalar _tmp139 =
      _tmp120 * _tmp134 + _tmp122 * _tmp131 - _tmp129 * _tmp132 + _tmp133 * _tmp137;
  const Scalar _tmp140 =
      _tmp120 * _tmp127 + _tmp122 * _tmp137 - _tmp131 * _tmp133 + _tmp132 * _tmp135;
  const Scalar _tmp141 = _tmp136 * _x0[3] - _tmp138 * _x0[1] - _tmp139 * _x0[2] - _tmp140 * _x0[0];
  const Scalar _tmp142 = _tmp136 * _x0[2] + _tmp138 * _x0[0] + _tmp139 * _x0[3] - _tmp140 * _x0[1];
  const Scalar _tmp143 = _tmp136 * _x0[0] - _tmp138 * _x0[2] + _tmp139 * _x0[1] + _tmp140 * _x0[3];
  const Scalar _tmp144 = _tmp136 * _x0[1] + _tmp138 * _x0[3] - _tmp139 * _x0[0] + _tmp140 * _x0[2];
  const Scalar _tmp145 = _tmp141 * _y[3] + _tmp142 * _y[2] + _tmp143 * _y[0] + _tmp144 * _y[1];
  const Scalar _tmp146 = std::min<Scalar>(_tmp13, std::fabs(_tmp145));
  const Scalar _tmp147 = 2 * (2 * std::min<Scalar>(0, (((_tmp145) > 0) - ((_tmp145) < 0))) + 1) *
                         std::acos(_tmp146) / std::sqrt(Scalar(1 - std::pow(_tmp146, Scalar(2))));
  const Scalar _tmp148 =
      _tmp147 * (-_tmp141 * _y[0] - _tmp142 * _y[1] + _tmp143 * _y[3] + _tmp144 * _y[2]);
  const Scalar _tmp149 =
      _tmp147 * (-_tmp141 * _y[1] + _tmp142 * _y[0] - _tmp143 * _y[2] + _tmp144 * _y[3]);
  const Scalar _tmp150 =
      _tmp147 * (-_tmp141 * _y[2] + _tmp142 * _y[3] + _tmp143 * _y[1] - _tmp144 * _y[0]);
  const Scalar _tmp151 = _x0[4] - _y[4] + lambdas(0, 0) * (-_x0[4] + _x1[4]) +
                         lambdas(1, 0) * (-_x1[4] + _x2[4]) + lambdas(2, 0) * (-_x2[4] + _x3[4]);
  const Scalar _tmp152 = _x0[5] - _y[5] + lambdas(0, 0) * (-_x0[5] + _x1[5]) +
                         lambdas(1, 0) * (-_x1[5] + _x2[5]) + lambdas(2, 0) * (-_x2[5] + _x3[5]);
  const Scalar _tmp153 = _x0[6] - _y[6] + lambdas(0, 0) * (-_x0[6] + _x1[6]) +
                         lambdas(1, 0) * (-_x1[6] + _x2[6]) + lambdas(2, 0) * (-_x2[6] + _x3[6]);
  const Scalar _tmp154 = _tmp5 + _tmp6 + _tmp7 + _tmp9;
  const Scalar _tmp155 = std::fabs(_tmp154);
  const Scalar _tmp156 = std::min<Scalar>(_tmp13, _tmp155);
  const Scalar _tmp157 = std::acos(_tmp156);
  const Scalar _tmp158 = _tmp157 * _tmp25;
  const Scalar _tmp159 = 1 - std::pow(_tmp156, Scalar(2));
  const Scalar _tmp160 = _tmp11 / std::sqrt(_tmp159);
  const Scalar _tmp161 = _tmp43 + _tmp44 + _tmp45 + _tmp47;
  const Scalar _tmp162 = std::fabs(_tmp161);
  const Scalar _tmp163 = std::min<Scalar>(_tmp13, _tmp162);
  const Scalar _tmp164 = 1 - std::pow(_tmp163, Scalar(2));
  const Scalar _tmp165 = std::pow(_tmp164, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp166 = std::acos(_tmp163);
  const Scalar _tmp167 = _tmp165 * _tmp166;
  const Scalar _tmp168 = _tmp160 * _tmp167;
  const Scalar _tmp169 = _tmp158 * _tmp168;
  const Scalar _tmp170 = Scalar(1.0) / (_tmp164);
  const Scalar _tmp171 = std::pow(_tmp166, Scalar(2));
  const Scalar _tmp172 = _tmp170 * _tmp171;
  const Scalar _tmp173 = _tmp172 * _tmp62 + _tmp172 * _tmp63 + _tmp172 * _tmp69 + _tmp27;
  const Scalar _tmp174 = std::sqrt(_tmp173);
  const Scalar _tmp175 = Scalar(1.0) / (_tmp174);
  const Scalar _tmp176 = Scalar(1.0) / (_tmp159);
  const Scalar _tmp177 = std::pow(_tmp157, Scalar(2));
  const Scalar _tmp178 = _tmp176 * _tmp177;
  const Scalar _tmp179 = _tmp178 * _tmp20 + _tmp178 * _tmp26 + _tmp178 * _tmp33 + _tmp27;
  const Scalar _tmp180 = std::sqrt(_tmp179);
  const Scalar _tmp181 = (Scalar(1) / Scalar(2)) * _tmp180;
  const Scalar _tmp182 = std::sin(_tmp181);
  const Scalar _tmp183 = Scalar(1.0) / (_tmp180);
  const Scalar _tmp184 = (Scalar(1) / Scalar(2)) * _tmp174;
  const Scalar _tmp185 = std::sin(_tmp184);
  const Scalar _tmp186 = _tmp182 * _tmp183 * _tmp185;
  const Scalar _tmp187 = _tmp175 * _tmp186;
  const Scalar _tmp188 = 4 * _tmp187;
  const Scalar _tmp189 = std::cos(_tmp181);
  const Scalar _tmp190 = _tmp185 * _tmp189;
  const Scalar _tmp191 = _tmp175 * _tmp190;
  const Scalar _tmp192 = _tmp123 * _tmp165;
  const Scalar _tmp193 = _tmp191 * _tmp192;
  const Scalar _tmp194 = _tmp166 * _tmp193;
  const Scalar _tmp195 = _tmp157 * _tmp4;
  const Scalar _tmp196 = _tmp160 * _tmp195;
  const Scalar _tmp197 = _tmp167 * _tmp196;
  const Scalar _tmp198 = _tmp188 * _tmp197;
  const Scalar _tmp199 = std::cos(_tmp184);
  const Scalar _tmp200 = _tmp182 * _tmp199;
  const Scalar _tmp201 = _tmp183 * _tmp200;
  const Scalar _tmp202 = 2 * _tmp160;
  const Scalar _tmp203 = _tmp201 * _tmp202;
  const Scalar _tmp204 = _tmp157 * _tmp32;
  const Scalar _tmp205 =
      -_tmp169 * _tmp188 * _tmp50 + _tmp194 * _tmp68 + _tmp198 * _tmp77 + _tmp203 * _tmp204;
  const Scalar _tmp206 = _tmp92 + _tmp93 + _tmp94 + _tmp96;
  const Scalar _tmp207 = std::fabs(_tmp206);
  const Scalar _tmp208 = std::min<Scalar>(_tmp13, _tmp207);
  const Scalar _tmp209 = 1 - std::pow(_tmp208, Scalar(2));
  const Scalar _tmp210 = Scalar(1.0) / (_tmp209);
  const Scalar _tmp211 = std::acos(_tmp208);
  const Scalar _tmp212 = std::pow(_tmp211, Scalar(2));
  const Scalar _tmp213 = _tmp210 * _tmp212;
  const Scalar _tmp214 = _tmp100 * _tmp213;
  const Scalar _tmp215 = _tmp111 * _tmp214 + _tmp117 * _tmp213 + _tmp214 * _tmp91 + _tmp27;
  const Scalar _tmp216 = std::sqrt(_tmp215);
  const Scalar _tmp217 = (Scalar(1) / Scalar(2)) * _tmp216;
  const Scalar _tmp218 = std::sin(_tmp217);
  const Scalar _tmp219 = _tmp110 * _tmp218;
  const Scalar _tmp220 = Scalar(1.0) / (_tmp216);
  const Scalar _tmp221 = _tmp211 / std::sqrt(_tmp209);
  const Scalar _tmp222 = 2 * _tmp221;
  const Scalar _tmp223 = _tmp220 * _tmp222;
  const Scalar _tmp224 = _tmp121 * _tmp223;
  const Scalar _tmp225 = _tmp219 * _tmp224;
  const Scalar _tmp226 = _tmp169 * _tmp77;
  const Scalar _tmp227 = _tmp168 * _tmp188;
  const Scalar _tmp228 = _tmp204 * _tmp227;
  const Scalar _tmp229 = _tmp189 * _tmp199;
  const Scalar _tmp230 = -_tmp188 * _tmp226 - _tmp198 * _tmp50 - _tmp228 * _tmp79 + _tmp229;
  const Scalar _tmp231 = _tmp218 * _tmp230;
  const Scalar _tmp232 = _tmp121 * _tmp231;
  const Scalar _tmp233 = _tmp223 * _tmp232;
  const Scalar _tmp234 = _tmp227 * _tmp50;
  const Scalar _tmp235 =
      _tmp158 * _tmp203 + _tmp194 * _tmp59 - _tmp198 * _tmp79 + _tmp204 * _tmp234;
  const Scalar _tmp236 = _tmp218 * _tmp235;
  const Scalar _tmp237 = _tmp122 * _tmp236;
  const Scalar _tmp238 = std::cos(_tmp217);
  const Scalar _tmp239 = _tmp169 * _tmp79;
  const Scalar _tmp240 =
      _tmp188 * _tmp239 + _tmp194 * _tmp42 + _tmp195 * _tmp203 - _tmp228 * _tmp77;
  const Scalar _tmp241 = _tmp238 * _tmp240;
  const Scalar _tmp242 = -_tmp205 * _tmp225 + _tmp223 * _tmp237 + _tmp233 * _tmp90 + _tmp241;
  const Scalar _tmp243 = _tmp242 * _x0[3];
  const Scalar _tmp244 = (Scalar(1) / Scalar(2)) * _tmp243;
  const Scalar _tmp245 = -_tmp244;
  const Scalar _tmp246 = _tmp235 * _tmp238;
  const Scalar _tmp247 = _tmp122 * _tmp218;
  const Scalar _tmp248 = _tmp223 * _tmp247;
  const Scalar _tmp249 = _tmp218 * _tmp90;
  const Scalar _tmp250 = _tmp224 * _tmp249;
  const Scalar _tmp251 = _tmp110 * _tmp233 + _tmp205 * _tmp250 - _tmp240 * _tmp248 + _tmp246;
  const Scalar _tmp252 = _tmp251 * _x0[0];
  const Scalar _tmp253 = (Scalar(1) / Scalar(2)) * _tmp252;
  const Scalar _tmp254 = -_tmp253;
  const Scalar _tmp255 = _tmp212 / std::pow(_tmp209, Scalar(2));
  const Scalar _tmp256 = _tmp117 * _tmp255;
  const Scalar _tmp257 = (Scalar(1) / Scalar(2)) * _tmp112;
  const Scalar _tmp258 = (Scalar(1) / Scalar(2)) * _tmp113;
  const Scalar _tmp259 = (Scalar(1) / Scalar(2)) * _tmp114;
  const Scalar _tmp260 = (Scalar(1) / Scalar(2)) * _tmp115;
  const Scalar _tmp261 = -_tmp257 + _tmp258 - _tmp259 + _tmp260;
  const Scalar _tmp262 = ((((_tmp13 - _tmp207) > 0) - ((_tmp13 - _tmp207) < 0)) + 1) *
                         (((_tmp206) > 0) - ((_tmp206) < 0));
  const Scalar _tmp263 = _tmp261 * _tmp262;
  const Scalar _tmp264 = _tmp208 * _tmp263;
  const Scalar _tmp265 = _tmp211 / (_tmp209 * std::sqrt(_tmp209));
  const Scalar _tmp266 = _tmp100 * _tmp265;
  const Scalar _tmp267 = _tmp266 * _tmp91;
  const Scalar _tmp268 = _tmp262 * _tmp267;
  const Scalar _tmp269 = (Scalar(1) / Scalar(2)) * _tmp92;
  const Scalar _tmp270 = (Scalar(1) / Scalar(2)) * _tmp93;
  const Scalar _tmp271 = (Scalar(1) / Scalar(2)) * _tmp96;
  const Scalar _tmp272 = (Scalar(1) / Scalar(2)) * _tmp94;
  const Scalar _tmp273 = -_tmp269 - _tmp270 - _tmp271 - _tmp272;
  const Scalar _tmp274 = 8 * _tmp213 * _tmp98 * _tmp99;
  const Scalar _tmp275 = _tmp116 * _tmp274;
  const Scalar _tmp276 = _tmp111 * _tmp266;
  const Scalar _tmp277 = _tmp117 * _tmp265;
  const Scalar _tmp278 = _tmp100 * _tmp255;
  const Scalar _tmp279 = _tmp111 * _tmp278;
  const Scalar _tmp280 = _tmp278 * _tmp91;
  const Scalar _tmp281 = _tmp208 * _tmp280;
  const Scalar _tmp282 = (Scalar(1) / Scalar(2)) * _tmp106;
  const Scalar _tmp283 = (Scalar(1) / Scalar(2)) * _tmp107;
  const Scalar _tmp284 = (Scalar(1) / Scalar(2)) * _tmp108;
  const Scalar _tmp285 = (Scalar(1) / Scalar(2)) * _tmp109;
  const Scalar _tmp286 = -_tmp282 - _tmp283 + _tmp284 + _tmp285;
  const Scalar _tmp287 = _tmp274 * _tmp90;
  const Scalar _tmp288 = (Scalar(1) / Scalar(2)) * _tmp86;
  const Scalar _tmp289 = (Scalar(1) / Scalar(2)) * _tmp87;
  const Scalar _tmp290 = (Scalar(1) / Scalar(2)) * _tmp88;
  const Scalar _tmp291 = (Scalar(1) / Scalar(2)) * _tmp89;
  const Scalar _tmp292 = _tmp288 - _tmp289 - _tmp290 + _tmp291;
  const Scalar _tmp293 = _tmp110 * _tmp274;
  const Scalar _tmp294 = _tmp286 * _tmp287 + _tmp292 * _tmp293;
  const Scalar _tmp295 = _tmp256 * _tmp264 - _tmp261 * _tmp268 - _tmp263 * _tmp276 -
                         _tmp263 * _tmp277 + _tmp263 * _tmp281 + _tmp264 * _tmp279 +
                         _tmp273 * _tmp275 + _tmp294;
  const Scalar _tmp296 = (Scalar(1) / Scalar(4)) * _tmp220;
  const Scalar _tmp297 = _tmp218 * _tmp296;
  const Scalar _tmp298 = _tmp295 * _tmp297;
  const Scalar _tmp299 = _tmp122 * _tmp231;
  const Scalar _tmp300 = _tmp220 * _tmp265;
  const Scalar _tmp301 = _tmp264 * _tmp300;
  const Scalar _tmp302 = _tmp220 * _tmp236;
  const Scalar _tmp303 = _tmp133 * _tmp302;
  const Scalar _tmp304 = _tmp210 * _tmp263;
  const Scalar _tmp305 = _tmp221 / (_tmp215 * std::sqrt(_tmp215));
  const Scalar _tmp306 = _tmp121 * _tmp305;
  const Scalar _tmp307 = _tmp219 * _tmp306;
  const Scalar _tmp308 = _tmp240 * _tmp307;
  const Scalar _tmp309 = _tmp233 * _tmp273;
  const Scalar _tmp310 = _tmp121 * _tmp240;
  const Scalar _tmp311 = _tmp219 * _tmp310;
  const Scalar _tmp312 = (Scalar(1) / Scalar(2)) * _tmp221 / _tmp215;
  const Scalar _tmp313 = _tmp132 * _tmp312;
  const Scalar _tmp314 = _tmp241 * _tmp313;
  const Scalar _tmp315 = _tmp210 * _tmp220;
  const Scalar _tmp316 = _tmp263 * _tmp315;
  const Scalar _tmp317 = _tmp230 * _tmp238;
  const Scalar _tmp318 = _tmp122 * _tmp312;
  const Scalar _tmp319 = _tmp317 * _tmp318;
  const Scalar _tmp320 = _tmp295 * _tmp305;
  const Scalar _tmp321 = _tmp306 * _tmp90;
  const Scalar _tmp322 = _tmp295 * _tmp321;
  const Scalar _tmp323 = _tmp265 * _tmp303;
  const Scalar _tmp324 = _tmp133 * _tmp312;
  const Scalar _tmp325 = _tmp246 * _tmp295;
  const Scalar _tmp326 = _tmp224 * _tmp236;
  const Scalar _tmp327 = _tmp218 * _tmp240;
  const Scalar _tmp328 = _tmp220 * _tmp292;
  const Scalar _tmp329 = _tmp222 * _tmp328;
  const Scalar _tmp330 = _tmp121 * _tmp329;
  const Scalar _tmp331 = -_tmp286 * _tmp326 + _tmp327 * _tmp330;
  const Scalar _tmp332 = -_tmp205 * _tmp298 + _tmp236 * _tmp322 - _tmp264 * _tmp323 -
                         _tmp295 * _tmp308 + _tmp295 * _tmp314 + _tmp295 * _tmp319 +
                         _tmp299 * _tmp301 - _tmp299 * _tmp316 - _tmp299 * _tmp320 +
                         _tmp301 * _tmp311 + _tmp303 * _tmp304 + _tmp309 - _tmp311 * _tmp316 -
                         _tmp324 * _tmp325 + _tmp331;
  const Scalar _tmp333 = _tmp205 * _tmp238;
  const Scalar _tmp334 = _tmp318 * _tmp333;
  const Scalar _tmp335 = _tmp241 * _tmp324;
  const Scalar _tmp336 = _tmp205 * _tmp247;
  const Scalar _tmp337 = _tmp249 * _tmp310;
  const Scalar _tmp338 = _tmp300 * _tmp337;
  const Scalar _tmp339 = _tmp218 * _tmp224;
  const Scalar _tmp340 = _tmp205 * _tmp339;
  const Scalar _tmp341 = _tmp273 * _tmp340;
  const Scalar _tmp342 = -_tmp341;
  const Scalar _tmp343 = _tmp132 * _tmp302;
  const Scalar _tmp344 = _tmp265 * _tmp343;
  const Scalar _tmp345 = _tmp110 * _tmp306;
  const Scalar _tmp346 = _tmp295 * _tmp345;
  const Scalar _tmp347 = _tmp240 * _tmp339;
  const Scalar _tmp348 = -_tmp236 * _tmp330 - _tmp286 * _tmp347;
  const Scalar _tmp349 = -_tmp230 * _tmp298 + _tmp236 * _tmp346 - _tmp264 * _tmp338 -
                         _tmp264 * _tmp344 - _tmp295 * _tmp334 - _tmp295 * _tmp335 -
                         _tmp301 * _tmp336 + _tmp304 * _tmp343 - _tmp313 * _tmp325 +
                         _tmp316 * _tmp336 + _tmp316 * _tmp337 + _tmp320 * _tmp336 +
                         _tmp322 * _tmp327 + _tmp342 + _tmp348;
  const Scalar _tmp350 = _tmp223 * _tmp299 + _tmp225 * _tmp240 - _tmp326 * _tmp90 + _tmp333;
  const Scalar _tmp351 = _tmp350 * _x0[1];
  const Scalar _tmp352 = -Scalar(1) / Scalar(2) * _tmp351;
  const Scalar _tmp353 = _tmp240 * _tmp247;
  const Scalar _tmp354 = _tmp121 * _tmp205;
  const Scalar _tmp355 = _tmp249 * _tmp354;
  const Scalar _tmp356 = _tmp273 * _tmp347;
  const Scalar _tmp357 = -_tmp356;
  const Scalar _tmp358 = _tmp110 * _tmp232;
  const Scalar _tmp359 = _tmp313 * _tmp317;
  const Scalar _tmp360 = _tmp241 * _tmp318;
  const Scalar _tmp361 = _tmp236 * _tmp296;
  const Scalar _tmp362 = _tmp205 * _tmp218;
  const Scalar _tmp363 = _tmp324 * _tmp333;
  const Scalar _tmp364 = _tmp232 * _tmp328;
  const Scalar _tmp365 = _tmp222 * _tmp364 + _tmp286 * _tmp340;
  const Scalar _tmp366 = -_tmp231 * _tmp346 + _tmp295 * _tmp359 - _tmp295 * _tmp360 -
                         _tmp295 * _tmp361 + _tmp295 * _tmp363 - _tmp301 * _tmp353 +
                         _tmp301 * _tmp355 + _tmp301 * _tmp358 + _tmp316 * _tmp353 -
                         _tmp316 * _tmp355 - _tmp316 * _tmp358 + _tmp320 * _tmp353 -
                         _tmp322 * _tmp362 + _tmp357 + _tmp365;
  const Scalar _tmp367 = -_tmp110 * _tmp326 - _tmp223 * _tmp336 - _tmp240 * _tmp250 + _tmp317;
  const Scalar _tmp368 = _tmp367 * _x0[2];
  const Scalar _tmp369 = (Scalar(1) / Scalar(2)) * _tmp368;
  const Scalar _tmp370 = _tmp232 * _tmp90;
  const Scalar _tmp371 = _tmp205 * _tmp307;
  const Scalar _tmp372 = _tmp219 * _tmp354;
  const Scalar _tmp373 = _tmp313 * _tmp333;
  const Scalar _tmp374 = _tmp273 * _tmp326;
  const Scalar _tmp375 = _tmp317 * _tmp324;
  const Scalar _tmp376 = -_tmp218 * _tmp329 * _tmp354 + _tmp233 * _tmp286;
  const Scalar _tmp377 = -_tmp231 * _tmp322 + _tmp237 * _tmp301 - _tmp237 * _tmp316 -
                         _tmp237 * _tmp320 - _tmp240 * _tmp298 + _tmp295 * _tmp371 -
                         _tmp295 * _tmp373 + _tmp295 * _tmp375 + _tmp301 * _tmp370 -
                         _tmp301 * _tmp372 - _tmp316 * _tmp370 + _tmp316 * _tmp372 +
                         _tmp318 * _tmp325 + _tmp374 + _tmp376;
  const Scalar _tmp378 = _tmp245 + _tmp254 + _tmp332 * _x0[2] + _tmp349 * _x0[1] + _tmp352 +
                         _tmp366 * _x0[3] + _tmp369 - _tmp377 * _x0[0];
  const Scalar _tmp379 = _tmp242 * _x0[2];
  const Scalar _tmp380 = (Scalar(1) / Scalar(2)) * _tmp379;
  const Scalar _tmp381 = _tmp251 * _x0[1];
  const Scalar _tmp382 = (Scalar(1) / Scalar(2)) * _tmp381;
  const Scalar _tmp383 = _tmp350 * _x0[0];
  const Scalar _tmp384 = (Scalar(1) / Scalar(2)) * _tmp383;
  const Scalar _tmp385 = _tmp367 * _x0[3];
  const Scalar _tmp386 = (Scalar(1) / Scalar(2)) * _tmp385;
  const Scalar _tmp387 = _tmp332 * _x0[3] + _tmp349 * _x0[0] - _tmp366 * _x0[2] + _tmp377 * _x0[1] +
                         _tmp380 + _tmp382 - _tmp384 + _tmp386;
  const Scalar _tmp388 = _tmp242 * _x0[1];
  const Scalar _tmp389 = (Scalar(1) / Scalar(2)) * _tmp388;
  const Scalar _tmp390 = _tmp251 * _x0[2];
  const Scalar _tmp391 = -Scalar(1) / Scalar(2) * _tmp390;
  const Scalar _tmp392 = _tmp350 * _x0[3];
  const Scalar _tmp393 = (Scalar(1) / Scalar(2)) * _tmp392;
  const Scalar _tmp394 = -_tmp393;
  const Scalar _tmp395 = _tmp367 * _x0[0];
  const Scalar _tmp396 = (Scalar(1) / Scalar(2)) * _tmp395;
  const Scalar _tmp397 = -_tmp396;
  const Scalar _tmp398 = -_tmp332 * _x0[0] + _tmp349 * _x0[3] - _tmp366 * _x0[1] -
                         _tmp377 * _x0[2] + _tmp389 + _tmp391 + _tmp394 + _tmp397;
  const Scalar _tmp399 = _tmp242 * _x0[0];
  const Scalar _tmp400 = -Scalar(1) / Scalar(2) * _tmp399;
  const Scalar _tmp401 = _tmp251 * _x0[3];
  const Scalar _tmp402 = (Scalar(1) / Scalar(2)) * _tmp401;
  const Scalar _tmp403 = _tmp350 * _x0[2];
  const Scalar _tmp404 = (Scalar(1) / Scalar(2)) * _tmp403;
  const Scalar _tmp405 = -_tmp404;
  const Scalar _tmp406 = _tmp367 * _x0[1];
  const Scalar _tmp407 = (Scalar(1) / Scalar(2)) * _tmp406;
  const Scalar _tmp408 = -_tmp407;
  const Scalar _tmp409 = -_tmp332 * _x0[1] + _tmp349 * _x0[2] + _tmp366 * _x0[0] +
                         _tmp377 * _x0[3] + _tmp400 + _tmp402 + _tmp405 + _tmp408;
  const Scalar _tmp410 = _tmp378 * _y[2] + _tmp387 * _y[3] - _tmp398 * _y[0] - _tmp409 * _y[1];
  const Scalar _tmp411 = -_tmp379 - _tmp381 - _tmp383 + _tmp385;
  const Scalar _tmp412 = _tmp411 * _y[3];
  const Scalar _tmp413 = -_tmp399 + _tmp401 + _tmp403 + _tmp406;
  const Scalar _tmp414 = _tmp413 * _y[1];
  const Scalar _tmp415 = _tmp388 - _tmp390 + _tmp392 + _tmp395;
  const Scalar _tmp416 = _tmp415 * _y[0];
  const Scalar _tmp417 = _tmp243 + _tmp252 - _tmp351 + _tmp368;
  const Scalar _tmp418 = _tmp417 * _y[2];
  const Scalar _tmp419 = _tmp412 + _tmp414 + _tmp416 + _tmp418;
  const Scalar _tmp420 = std::fabs(_tmp419);
  const Scalar _tmp421 = std::min<Scalar>(_tmp13, _tmp420);
  const Scalar _tmp422 = 1 - std::pow(_tmp421, Scalar(2));
  const Scalar _tmp423 = std::acos(_tmp421);
  const Scalar _tmp424 = _tmp423 / std::sqrt(_tmp422);
  const Scalar _tmp425 = _tmp412 + _tmp414 + _tmp416 + _tmp418;
  const Scalar _tmp426 = (((_tmp425) > 0) - ((_tmp425) < 0));
  const Scalar _tmp427 = 2 * std::min<Scalar>(0, _tmp426) + 1;
  const Scalar _tmp428 = 2 * _tmp427;
  const Scalar _tmp429 = _tmp428 * sqrt_info(0, 0);
  const Scalar _tmp430 = _tmp424 * _tmp429;
  const Scalar _tmp431 =
      _tmp427 * (-_tmp411 * _y[2] - _tmp413 * _y[0] + _tmp415 * _y[1] + _tmp417 * _y[3]);
  const Scalar _tmp432 = _tmp431 * sqrt_info(0, 2);
  const Scalar _tmp433 = _tmp378 * _y[1] + _tmp387 * _y[0] + _tmp398 * _y[3] + _tmp409 * _y[2];
  const Scalar _tmp434 = ((((_tmp13 - _tmp420) > 0) - ((_tmp13 - _tmp420) < 0)) + 1) *
                         (((_tmp419) > 0) - ((_tmp419) < 0));
  const Scalar _tmp435 = _tmp434 / _tmp422;
  const Scalar _tmp436 = _tmp433 * _tmp435;
  const Scalar _tmp437 =
      _tmp427 * (-_tmp411 * _y[0] + _tmp413 * _y[2] + _tmp415 * _y[3] - _tmp417 * _y[1]);
  const Scalar _tmp438 = _tmp435 * _tmp437;
  const Scalar _tmp439 = _tmp438 * sqrt_info(0, 0);
  const Scalar _tmp440 =
      _tmp427 * (-_tmp411 * _y[1] + _tmp413 * _y[3] - _tmp415 * _y[2] + _tmp417 * _y[0]);
  const Scalar _tmp441 = _tmp436 * _tmp440;
  const Scalar _tmp442 = _tmp378 * _y[3] - _tmp387 * _y[2] - _tmp398 * _y[1] + _tmp409 * _y[0];
  const Scalar _tmp443 = _tmp424 * _tmp428;
  const Scalar _tmp444 = _tmp442 * _tmp443;
  const Scalar _tmp445 = _tmp421 * _tmp423 * _tmp434 / (_tmp422 * std::sqrt(_tmp422));
  const Scalar _tmp446 = _tmp433 * _tmp445;
  const Scalar _tmp447 = _tmp437 * sqrt_info(0, 0);
  const Scalar _tmp448 = _tmp440 * sqrt_info(0, 1);
  const Scalar _tmp449 = _tmp432 * _tmp445;
  const Scalar _tmp450 = -_tmp378 * _y[0] + _tmp387 * _y[1] - _tmp398 * _y[2] + _tmp409 * _y[3];
  const Scalar _tmp451 = _tmp443 * _tmp450;
  const Scalar _tmp452 = _tmp410 * _tmp443;
  const Scalar _tmp453 = _tmp431 * sqrt_info(1, 2);
  const Scalar _tmp454 = _tmp433 * _tmp438;
  const Scalar _tmp455 = _tmp440 * sqrt_info(1, 1);
  const Scalar _tmp456 = _tmp445 * _tmp455;
  const Scalar _tmp457 = _tmp437 * sqrt_info(1, 0);
  const Scalar _tmp458 = _tmp431 * _tmp436;
  const Scalar _tmp459 = _tmp443 * sqrt_info(2, 1);
  const Scalar _tmp460 = _tmp431 * sqrt_info(2, 2);
  const Scalar _tmp461 = _tmp440 * sqrt_info(2, 1);
  const Scalar _tmp462 = _tmp437 * sqrt_info(2, 0);
  const Scalar _tmp463 = _tmp443 * sqrt_info(3, 0);
  const Scalar _tmp464 = _tmp437 * sqrt_info(3, 0);
  const Scalar _tmp465 = _tmp431 * sqrt_info(3, 2);
  const Scalar _tmp466 = _tmp440 * sqrt_info(3, 1);
  const Scalar _tmp467 = _tmp428 * sqrt_info(3, 2);
  const Scalar _tmp468 = _tmp424 * _tmp467;
  const Scalar _tmp469 = _tmp440 * sqrt_info(4, 1);
  const Scalar _tmp470 = _tmp431 * sqrt_info(4, 2);
  const Scalar _tmp471 = _tmp437 * sqrt_info(4, 0);
  const Scalar _tmp472 = _tmp440 * sqrt_info(5, 1);
  const Scalar _tmp473 = _tmp431 * sqrt_info(5, 2);
  const Scalar _tmp474 = _tmp437 * sqrt_info(5, 0);
  const Scalar _tmp475 = _tmp443 * sqrt_info(5, 2);
  const Scalar _tmp476 = _tmp282 + _tmp283 - _tmp284 - _tmp285;
  const Scalar _tmp477 = _tmp208 * _tmp262;
  const Scalar _tmp478 = _tmp476 * _tmp477;
  const Scalar _tmp479 = _tmp265 * _tmp478;
  const Scalar _tmp480 = _tmp262 * _tmp276;
  const Scalar _tmp481 = _tmp262 * _tmp277;
  const Scalar _tmp482 = -_tmp288 + _tmp289 + _tmp290 - _tmp291;
  const Scalar _tmp483 = _tmp261 * _tmp287 + _tmp275 * _tmp482;
  const Scalar _tmp484 = _tmp256 * _tmp478 - _tmp268 * _tmp476 + _tmp273 * _tmp293 +
                         _tmp279 * _tmp478 + _tmp280 * _tmp478 - _tmp476 * _tmp480 -
                         _tmp476 * _tmp481 + _tmp483;
  const Scalar _tmp485 = _tmp296 * _tmp484;
  const Scalar _tmp486 = _tmp218 * _tmp485;
  const Scalar _tmp487 = _tmp241 * _tmp484;
  const Scalar _tmp488 = _tmp210 * _tmp262;
  const Scalar _tmp489 = _tmp476 * _tmp488;
  const Scalar _tmp490 = _tmp220 * _tmp488;
  const Scalar _tmp491 = _tmp476 * _tmp490;
  const Scalar _tmp492 = _tmp300 * _tmp478;
  const Scalar _tmp493 = _tmp305 * _tmp484;
  const Scalar _tmp494 = _tmp321 * _tmp484;
  const Scalar _tmp495 = _tmp246 * _tmp324;
  const Scalar _tmp496 = _tmp233 * _tmp482 - _tmp261 * _tmp326;
  const Scalar _tmp497 = -_tmp205 * _tmp486 + _tmp236 * _tmp494 - _tmp299 * _tmp491 +
                         _tmp299 * _tmp492 - _tmp299 * _tmp493 - _tmp303 * _tmp479 +
                         _tmp303 * _tmp489 - _tmp308 * _tmp484 - _tmp311 * _tmp491 +
                         _tmp311 * _tmp492 + _tmp313 * _tmp487 + _tmp319 * _tmp484 + _tmp356 -
                         _tmp484 * _tmp495 + _tmp496;
  const Scalar _tmp498 = _tmp318 * _tmp484;
  const Scalar _tmp499 = _tmp205 * _tmp484;
  const Scalar _tmp500 = _tmp233 * _tmp261 + _tmp326 * _tmp482;
  const Scalar _tmp501 = -_tmp231 * _tmp494 - _tmp237 * _tmp491 + _tmp237 * _tmp492 -
                         _tmp237 * _tmp493 - _tmp240 * _tmp486 + _tmp246 * _tmp498 +
                         _tmp307 * _tmp499 + _tmp342 - _tmp370 * _tmp491 + _tmp370 * _tmp492 +
                         _tmp372 * _tmp491 - _tmp372 * _tmp492 - _tmp373 * _tmp484 +
                         _tmp375 * _tmp484 + _tmp500;
  const Scalar _tmp502 = -_tmp374;
  const Scalar _tmp503 = _tmp246 * _tmp313;
  const Scalar _tmp504 = _tmp236 * _tmp345;
  const Scalar _tmp505 = -_tmp261 * _tmp347 - _tmp340 * _tmp482;
  const Scalar _tmp506 = -_tmp230 * _tmp486 - _tmp324 * _tmp487 + _tmp327 * _tmp494 -
                         _tmp333 * _tmp498 + _tmp336 * _tmp491 - _tmp336 * _tmp492 +
                         _tmp336 * _tmp493 + _tmp337 * _tmp491 - _tmp338 * _tmp478 -
                         _tmp343 * _tmp479 + _tmp343 * _tmp489 - _tmp484 * _tmp503 +
                         _tmp484 * _tmp504 + _tmp502 + _tmp505;
  const Scalar _tmp507 = _tmp231 * _tmp345;
  const Scalar _tmp508 = _tmp261 * _tmp340 - _tmp347 * _tmp482;
  const Scalar _tmp509 = -_tmp218 * _tmp321 * _tmp499 - _tmp236 * _tmp485 + _tmp309 -
                         _tmp318 * _tmp487 + _tmp353 * _tmp491 - _tmp353 * _tmp492 +
                         _tmp353 * _tmp493 - _tmp355 * _tmp491 + _tmp355 * _tmp492 -
                         _tmp358 * _tmp491 + _tmp358 * _tmp492 + _tmp359 * _tmp484 +
                         _tmp363 * _tmp484 - _tmp484 * _tmp507 + _tmp508;
  const Scalar _tmp510 = _tmp400 - _tmp402;
  const Scalar _tmp511 = _tmp404 + _tmp408 - _tmp497 * _x0[0] - _tmp501 * _x0[2] +
                         _tmp506 * _x0[3] - _tmp509 * _x0[1] + _tmp510;
  const Scalar _tmp512 = _tmp384 + _tmp386;
  const Scalar _tmp513 = _tmp380 - _tmp382 + _tmp497 * _x0[2] - _tmp501 * _x0[0] +
                         _tmp506 * _x0[1] + _tmp509 * _x0[3] + _tmp512;
  const Scalar _tmp514 = -_tmp389 + _tmp391;
  const Scalar _tmp515 = _tmp394 + _tmp396 - _tmp497 * _x0[1] + _tmp501 * _x0[3] +
                         _tmp506 * _x0[2] + _tmp509 * _x0[0] + _tmp514;
  const Scalar _tmp516 = _tmp352 - _tmp369;
  const Scalar _tmp517 = _tmp244 + _tmp254 + _tmp497 * _x0[3] + _tmp501 * _x0[1] +
                         _tmp506 * _x0[0] - _tmp509 * _x0[2] + _tmp516;
  const Scalar _tmp518 = -_tmp511 * _y[1] + _tmp513 * _y[3] + _tmp515 * _y[0] - _tmp517 * _y[2];
  const Scalar _tmp519 = _tmp443 * _tmp518;
  const Scalar _tmp520 = -_tmp511 * _y[2] - _tmp513 * _y[0] + _tmp515 * _y[3] + _tmp517 * _y[1];
  const Scalar _tmp521 = _tmp443 * _tmp520;
  const Scalar _tmp522 = -_tmp511 * _y[0] + _tmp513 * _y[2] - _tmp515 * _y[1] + _tmp517 * _y[3];
  const Scalar _tmp523 = _tmp511 * _y[3] + _tmp513 * _y[1] + _tmp515 * _y[2] + _tmp517 * _y[0];
  const Scalar _tmp524 = _tmp435 * _tmp523;
  const Scalar _tmp525 = _tmp440 * _tmp524;
  const Scalar _tmp526 = _tmp437 * _tmp524;
  const Scalar _tmp527 = _tmp445 * _tmp523;
  const Scalar _tmp528 = _tmp443 * sqrt_info(1, 1);
  const Scalar _tmp529 = _tmp443 * _tmp522;
  const Scalar _tmp530 = _tmp431 * _tmp524;
  const Scalar _tmp531 = _tmp445 * _tmp460;
  const Scalar _tmp532 = _tmp443 * sqrt_info(3, 1);
  const Scalar _tmp533 = _tmp445 * _tmp465;
  const Scalar _tmp534 = _tmp443 * sqrt_info(4, 0);
  const Scalar _tmp535 = _tmp443 * sqrt_info(5, 0);
  const Scalar _tmp536 = _tmp262 * _tmp292;
  const Scalar _tmp537 = _tmp208 * _tmp536;
  const Scalar _tmp538 = _tmp257 - _tmp258 + _tmp259 - _tmp260;
  const Scalar _tmp539 = _tmp275 * _tmp476 + _tmp293 * _tmp538;
  const Scalar _tmp540 = _tmp256 * _tmp537 - _tmp268 * _tmp292 + _tmp273 * _tmp287 -
                         _tmp276 * _tmp536 - _tmp277 * _tmp536 + _tmp279 * _tmp537 +
                         _tmp280 * _tmp537 + _tmp539;
  const Scalar _tmp541 = _tmp317 * _tmp540;
  const Scalar _tmp542 = _tmp328 * _tmp488;
  const Scalar _tmp543 = _tmp265 * _tmp477;
  const Scalar _tmp544 = _tmp328 * _tmp543;
  const Scalar _tmp545 = _tmp364 * _tmp543;
  const Scalar _tmp546 = _tmp321 * _tmp540;
  const Scalar _tmp547 = _tmp305 * _tmp540;
  const Scalar _tmp548 = _tmp318 * _tmp540;
  const Scalar _tmp549 = _tmp364 * _tmp488;
  const Scalar _tmp550 = _tmp233 * _tmp538 - _tmp347 * _tmp476;
  const Scalar _tmp551 = _tmp110 * _tmp545 - _tmp110 * _tmp549 - _tmp241 * _tmp548 +
                         _tmp313 * _tmp541 + _tmp341 + _tmp353 * _tmp542 - _tmp353 * _tmp544 +
                         _tmp353 * _tmp547 - _tmp355 * _tmp542 + _tmp355 * _tmp544 -
                         _tmp361 * _tmp540 - _tmp362 * _tmp546 + _tmp363 * _tmp540 -
                         _tmp507 * _tmp540 + _tmp550;
  const Scalar _tmp552 = _tmp236 * _tmp544;
  const Scalar _tmp553 = _tmp297 * _tmp540;
  const Scalar _tmp554 = _tmp307 * _tmp540;
  const Scalar _tmp555 = _tmp236 * _tmp542;
  const Scalar _tmp556 = _tmp236 * _tmp540;
  const Scalar _tmp557 = _tmp233 * _tmp476 + _tmp347 * _tmp538;
  const Scalar _tmp558 = -_tmp133 * _tmp552 + _tmp133 * _tmp555 - _tmp205 * _tmp553 -
                         _tmp240 * _tmp554 - _tmp299 * _tmp542 + _tmp299 * _tmp544 -
                         _tmp299 * _tmp547 - _tmp311 * _tmp542 + _tmp311 * _tmp544 +
                         _tmp314 * _tmp540 + _tmp319 * _tmp540 + _tmp321 * _tmp556 -
                         _tmp495 * _tmp540 + _tmp502 + _tmp557;
  const Scalar _tmp559 = _tmp122 * _tmp305;
  const Scalar _tmp560 = _tmp326 * _tmp476 - _tmp340 * _tmp538;
  const Scalar _tmp561 = _tmp205 * _tmp554 - _tmp231 * _tmp546 - _tmp237 * _tmp542 +
                         _tmp237 * _tmp544 - _tmp240 * _tmp553 + _tmp246 * _tmp548 + _tmp309 +
                         _tmp324 * _tmp541 + _tmp372 * _tmp542 - _tmp372 * _tmp544 -
                         _tmp373 * _tmp540 + _tmp545 * _tmp90 - _tmp549 * _tmp90 -
                         _tmp556 * _tmp559 + _tmp560;
  const Scalar _tmp562 = -_tmp326 * _tmp538 - _tmp340 * _tmp476;
  const Scalar _tmp563 = -_tmp132 * _tmp552 + _tmp132 * _tmp555 - _tmp230 * _tmp553 +
                         _tmp327 * _tmp546 - _tmp333 * _tmp548 - _tmp335 * _tmp540 +
                         _tmp336 * _tmp542 - _tmp336 * _tmp544 + _tmp336 * _tmp547 +
                         _tmp337 * _tmp542 - _tmp337 * _tmp544 + _tmp345 * _tmp556 + _tmp357 -
                         _tmp503 * _tmp540 + _tmp562;
  const Scalar _tmp564 = _tmp405 + _tmp407 + _tmp510 - _tmp551 * _x0[2] + _tmp558 * _x0[3] +
                         _tmp561 * _x0[1] + _tmp563 * _x0[0];
  const Scalar _tmp565 = -_tmp380 + _tmp382 + _tmp512 + _tmp551 * _x0[0] - _tmp558 * _x0[1] +
                         _tmp561 * _x0[3] + _tmp563 * _x0[2];
  const Scalar _tmp566 = _tmp393 + _tmp397 + _tmp514 + _tmp551 * _x0[3] + _tmp558 * _x0[2] -
                         _tmp561 * _x0[0] + _tmp563 * _x0[1];
  const Scalar _tmp567 = _tmp245 + _tmp253 + _tmp516 - _tmp551 * _x0[1] - _tmp558 * _x0[0] -
                         _tmp561 * _x0[2] + _tmp563 * _x0[3];
  const Scalar _tmp568 = _tmp564 * _y[3] - _tmp565 * _y[1] + _tmp566 * _y[2] - _tmp567 * _y[0];
  const Scalar _tmp569 = _tmp564 * _y[1] + _tmp565 * _y[3] - _tmp566 * _y[0] - _tmp567 * _y[2];
  const Scalar _tmp570 = _tmp443 * _tmp569;
  const Scalar _tmp571 = -_tmp564 * _y[2] + _tmp565 * _y[0] + _tmp566 * _y[3] - _tmp567 * _y[1];
  const Scalar _tmp572 = _tmp443 * _tmp571;
  const Scalar _tmp573 = _tmp564 * _y[0] + _tmp565 * _y[2] + _tmp566 * _y[1] + _tmp567 * _y[3];
  const Scalar _tmp574 = _tmp445 * _tmp573;
  const Scalar _tmp575 = _tmp435 * _tmp573;
  const Scalar _tmp576 = _tmp440 * _tmp575;
  const Scalar _tmp577 = _tmp437 * _tmp575;
  const Scalar _tmp578 = _tmp443 * _tmp568;
  const Scalar _tmp579 = _tmp431 * _tmp575;
  const Scalar _tmp580 = 1 - lambdas(0, 0);
  const Scalar _tmp581 = _tmp269 + _tmp270 + _tmp271 + _tmp272;
  const Scalar _tmp582 = _tmp340 * _tmp581;
  const Scalar _tmp583 = -_tmp582;
  const Scalar _tmp584 = (Scalar(1) / Scalar(2)) * _tmp187;
  const Scalar _tmp585 = _tmp160 * _tmp584;
  const Scalar _tmp586 = (Scalar(1) / Scalar(2)) * _tmp64;
  const Scalar _tmp587 = (Scalar(1) / Scalar(2)) * _tmp65;
  const Scalar _tmp588 = (Scalar(1) / Scalar(2)) * _tmp66;
  const Scalar _tmp589 = (Scalar(1) / Scalar(2)) * _tmp67;
  const Scalar _tmp590 = -_tmp586 + _tmp587 + _tmp588 - _tmp589;
  const Scalar _tmp591 = ((((_tmp13 - _tmp162) > 0) - ((_tmp13 - _tmp162) < 0)) + 1) *
                         (((_tmp161) > 0) - ((_tmp161) < 0));
  const Scalar _tmp592 = _tmp590 * _tmp591;
  const Scalar _tmp593 = _tmp163 * _tmp171 / std::pow(_tmp164, Scalar(2));
  const Scalar _tmp594 = _tmp593 * _tmp69;
  const Scalar _tmp595 = _tmp166 * _tmp590;
  const Scalar _tmp596 = _tmp591 / (_tmp164 * std::sqrt(_tmp164));
  const Scalar _tmp597 = _tmp596 * _tmp63;
  const Scalar _tmp598 = _tmp596 * _tmp69;
  const Scalar _tmp599 = _tmp593 * _tmp62;
  const Scalar _tmp600 = _tmp596 * _tmp62;
  const Scalar _tmp601 = _tmp593 * _tmp63;
  const Scalar _tmp602 = (Scalar(1) / Scalar(2)) * _tmp47;
  const Scalar _tmp603 = (Scalar(1) / Scalar(2)) * _tmp43;
  const Scalar _tmp604 = (Scalar(1) / Scalar(2)) * _tmp44;
  const Scalar _tmp605 = (Scalar(1) / Scalar(2)) * _tmp45;
  const Scalar _tmp606 = -_tmp602 - _tmp603 - _tmp604 - _tmp605;
  const Scalar _tmp607 = 8 * _tmp172 * _tmp60;
  const Scalar _tmp608 = _tmp607 * _tmp68;
  const Scalar _tmp609 = (Scalar(1) / Scalar(2)) * _tmp38;
  const Scalar _tmp610 = (Scalar(1) / Scalar(2)) * _tmp39;
  const Scalar _tmp611 = (Scalar(1) / Scalar(2)) * _tmp40;
  const Scalar _tmp612 = (Scalar(1) / Scalar(2)) * _tmp41;
  const Scalar _tmp613 = -_tmp609 + _tmp610 - _tmp611 + _tmp612;
  const Scalar _tmp614 = _tmp59 * _tmp607;
  const Scalar _tmp615 = (Scalar(1) / Scalar(2)) * _tmp55;
  const Scalar _tmp616 = (Scalar(1) / Scalar(2)) * _tmp56;
  const Scalar _tmp617 = (Scalar(1) / Scalar(2)) * _tmp57;
  const Scalar _tmp618 = (Scalar(1) / Scalar(2)) * _tmp58;
  const Scalar _tmp619 = _tmp615 + _tmp616 - _tmp617 - _tmp618;
  const Scalar _tmp620 = _tmp42 * _tmp607;
  const Scalar _tmp621 = _tmp613 * _tmp614 + _tmp619 * _tmp620;
  const Scalar _tmp622 = _tmp592 * _tmp594 + _tmp592 * _tmp599 + _tmp592 * _tmp601 -
                         _tmp595 * _tmp597 - _tmp595 * _tmp598 - _tmp595 * _tmp600 +
                         _tmp606 * _tmp608 + _tmp621;
  const Scalar _tmp623 = _tmp158 * _tmp622;
  const Scalar _tmp624 = _tmp187 * _tmp50;
  const Scalar _tmp625 = _tmp202 * _tmp204;
  const Scalar _tmp626 = _tmp624 * _tmp625;
  const Scalar _tmp627 = _tmp163 * _tmp596;
  const Scalar _tmp628 = _tmp595 * _tmp627;
  const Scalar _tmp629 = Scalar(1.0) / (_tmp173);
  const Scalar _tmp630 = _tmp50 * _tmp629;
  const Scalar _tmp631 = _tmp201 * _tmp630;
  const Scalar _tmp632 = _tmp168 * _tmp204;
  const Scalar _tmp633 = _tmp631 * _tmp632;
  const Scalar _tmp634 = _tmp170 * _tmp592;
  const Scalar _tmp635 = _tmp195 * _tmp202;
  const Scalar _tmp636 = _tmp187 * _tmp79;
  const Scalar _tmp637 = _tmp635 * _tmp636;
  const Scalar _tmp638 = std::pow(_tmp173, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp639 = _tmp190 * _tmp638;
  const Scalar _tmp640 = _tmp167 * _tmp639;
  const Scalar _tmp641 = _tmp640 * _tmp77;
  const Scalar _tmp642 = _tmp191 * _tmp77;
  const Scalar _tmp643 = _tmp188 * _tmp49;
  const Scalar _tmp644 = _tmp197 * _tmp643;
  const Scalar _tmp645 = _tmp606 * _tmp644;
  const Scalar _tmp646 = -_tmp645;
  const Scalar _tmp647 = _tmp167 * _tmp202;
  const Scalar _tmp648 = _tmp647 * _tmp79;
  const Scalar _tmp649 = _tmp186 * _tmp638;
  const Scalar _tmp650 = _tmp195 * _tmp649;
  const Scalar _tmp651 = _tmp648 * _tmp650;
  const Scalar _tmp652 = _tmp201 * _tmp629;
  const Scalar _tmp653 = _tmp652 * _tmp79;
  const Scalar _tmp654 = _tmp197 * _tmp653;
  const Scalar _tmp655 = (Scalar(1) / Scalar(2)) * _tmp229;
  const Scalar _tmp656 = _tmp167 * _tmp655;
  const Scalar _tmp657 = _tmp629 * _tmp656;
  const Scalar _tmp658 = _tmp657 * _tmp77;
  const Scalar _tmp659 = _tmp50 * _tmp647;
  const Scalar _tmp660 = _tmp649 * _tmp659;
  const Scalar _tmp661 = _tmp204 * _tmp660;
  const Scalar _tmp662 = _tmp627 * _tmp642;
  const Scalar _tmp663 = _tmp160 * _tmp204;
  const Scalar _tmp664 = _tmp166 * _tmp619;
  const Scalar _tmp665 = _tmp165 * _tmp643;
  const Scalar _tmp666 = _tmp664 * _tmp665;
  const Scalar _tmp667 = _tmp194 * _tmp613 + _tmp663 * _tmp666;
  const Scalar _tmp668 = -_tmp585 * _tmp623 + _tmp595 * _tmp662 + _tmp622 * _tmp633 -
                         _tmp622 * _tmp641 + _tmp622 * _tmp651 - _tmp622 * _tmp654 +
                         _tmp622 * _tmp658 - _tmp622 * _tmp661 + _tmp626 * _tmp628 -
                         _tmp626 * _tmp634 - _tmp628 * _tmp637 + _tmp634 * _tmp637 -
                         _tmp634 * _tmp642 + _tmp646 + _tmp667;
  const Scalar _tmp669 = _tmp194 * _tmp606;
  const Scalar _tmp670 = _tmp652 * _tmp77;
  const Scalar _tmp671 = _tmp197 * _tmp670;
  const Scalar _tmp672 = _tmp640 * _tmp79;
  const Scalar _tmp673 = _tmp657 * _tmp79;
  const Scalar _tmp674 = _tmp204 * _tmp585;
  const Scalar _tmp675 = _tmp187 * _tmp77;
  const Scalar _tmp676 = _tmp635 * _tmp675;
  const Scalar _tmp677 = _tmp191 * _tmp79;
  const Scalar _tmp678 = _tmp158 * _tmp202;
  const Scalar _tmp679 = _tmp624 * _tmp678;
  const Scalar _tmp680 = _tmp627 * _tmp677;
  const Scalar _tmp681 = _tmp168 * _tmp623;
  const Scalar _tmp682 = _tmp647 * _tmp77;
  const Scalar _tmp683 = _tmp650 * _tmp682;
  const Scalar _tmp684 = _tmp158 * _tmp160;
  const Scalar _tmp685 = _tmp613 * _tmp644 - _tmp666 * _tmp684;
  const Scalar _tmp686 = _tmp595 * _tmp680 + _tmp622 * _tmp671 - _tmp622 * _tmp672 +
                         _tmp622 * _tmp673 - _tmp622 * _tmp674 - _tmp622 * _tmp683 +
                         _tmp623 * _tmp660 + _tmp628 * _tmp676 - _tmp628 * _tmp679 -
                         _tmp631 * _tmp681 - _tmp634 * _tmp676 - _tmp634 * _tmp677 +
                         _tmp634 * _tmp679 + _tmp669 + _tmp685;
  const Scalar _tmp687 = _tmp650 * _tmp659;
  const Scalar _tmp688 = _tmp675 * _tmp678;
  const Scalar _tmp689 = _tmp623 * _tmp649;
  const Scalar _tmp690 = _tmp204 * _tmp648;
  const Scalar _tmp691 = _tmp622 * _tmp649;
  const Scalar _tmp692 = (Scalar(1) / Scalar(4)) * _tmp191;
  const Scalar _tmp693 = _tmp228 * _tmp49;
  const Scalar _tmp694 = _tmp606 * _tmp693;
  const Scalar _tmp695 = -_tmp694;
  const Scalar _tmp696 = _tmp197 * _tmp631;
  const Scalar _tmp697 = _tmp632 * _tmp653;
  const Scalar _tmp698 = _tmp625 * _tmp636;
  const Scalar _tmp699 = _tmp624 * _tmp635;
  const Scalar _tmp700 = _tmp627 * _tmp699;
  const Scalar _tmp701 = _tmp169 * _tmp643;
  const Scalar _tmp702 = -_tmp196 * _tmp666 - _tmp613 * _tmp701;
  const Scalar _tmp703 = -_tmp595 * _tmp700 + _tmp622 * _tmp687 - _tmp622 * _tmp692 -
                         _tmp622 * _tmp696 - _tmp622 * _tmp697 - _tmp628 * _tmp688 -
                         _tmp628 * _tmp698 + _tmp634 * _tmp688 + _tmp634 * _tmp698 +
                         _tmp634 * _tmp699 - _tmp670 * _tmp681 + _tmp682 * _tmp689 +
                         _tmp690 * _tmp691 + _tmp695 + _tmp702;
  const Scalar _tmp704 = _tmp262 * _tmp538;
  const Scalar _tmp705 = _tmp208 * _tmp704;
  const Scalar _tmp706 = _tmp300 * _tmp705;
  const Scalar _tmp707 = _tmp117 * _tmp704;
  const Scalar _tmp708 = _tmp208 * _tmp255 * _tmp707 - _tmp265 * _tmp707 - _tmp267 * _tmp704 +
                         _tmp275 * _tmp581 - _tmp276 * _tmp704 + _tmp279 * _tmp705 +
                         _tmp281 * _tmp704 + _tmp294;
  const Scalar _tmp709 = _tmp230 * _tmp297;
  const Scalar _tmp710 = _tmp321 * _tmp708;
  const Scalar _tmp711 = _tmp315 * _tmp704;
  const Scalar _tmp712 = _tmp313 * _tmp708;
  const Scalar _tmp713 = _tmp210 * _tmp704;
  const Scalar _tmp714 = _tmp305 * _tmp708;
  const Scalar _tmp715 = _tmp630 * _tmp656;
  const Scalar _tmp716 = _tmp50 * _tmp640;
  const Scalar _tmp717 = _tmp625 * _tmp675;
  const Scalar _tmp718 = _tmp158 * _tmp636;
  const Scalar _tmp719 = _tmp202 * _tmp718;
  const Scalar _tmp720 = _tmp627 * _tmp719;
  const Scalar _tmp721 = _tmp632 * _tmp670;
  const Scalar _tmp722 = _tmp191 * _tmp50;
  const Scalar _tmp723 = _tmp627 * _tmp722;
  const Scalar _tmp724 = _tmp606 * _tmp701;
  const Scalar _tmp725 = _tmp196 * _tmp584;
  const Scalar _tmp726 = _tmp204 * _tmp682;
  const Scalar _tmp727 = _tmp193 * _tmp664 - _tmp613 * _tmp693;
  const Scalar _tmp728 = _tmp595 * _tmp720 + _tmp595 * _tmp723 + _tmp622 * _tmp715 -
                         _tmp622 * _tmp716 - _tmp622 * _tmp721 - _tmp622 * _tmp725 -
                         _tmp628 * _tmp717 + _tmp634 * _tmp717 - _tmp634 * _tmp719 -
                         _tmp634 * _tmp722 - _tmp648 * _tmp689 + _tmp653 * _tmp681 +
                         _tmp691 * _tmp726 + _tmp724 + _tmp727;
  const Scalar _tmp729 = _tmp318 * _tmp708;
  const Scalar _tmp730 = -_tmp225 * _tmp668 + _tmp238 * _tmp703 - _tmp246 * _tmp712 -
                         _tmp248 * _tmp686 - _tmp250 * _tmp728 + _tmp327 * _tmp710 -
                         _tmp333 * _tmp729 - _tmp335 * _tmp708 - _tmp336 * _tmp706 +
                         _tmp336 * _tmp711 + _tmp336 * _tmp714 + _tmp337 * _tmp711 -
                         _tmp338 * _tmp705 + _tmp343 * _tmp713 - _tmp344 * _tmp705 + _tmp348 +
                         _tmp504 * _tmp708 + _tmp583 - _tmp708 * _tmp709;
  const Scalar _tmp731 = _tmp347 * _tmp581;
  const Scalar _tmp732 = -_tmp731;
  const Scalar _tmp733 = _tmp225 * _tmp703 + _tmp238 * _tmp668 - _tmp248 * _tmp728 +
                         _tmp250 * _tmp686 + _tmp317 * _tmp712 - _tmp353 * _tmp706 +
                         _tmp353 * _tmp711 + _tmp353 * _tmp714 + _tmp355 * _tmp706 -
                         _tmp355 * _tmp711 + _tmp358 * _tmp706 - _tmp358 * _tmp711 -
                         _tmp360 * _tmp708 - _tmp361 * _tmp708 - _tmp362 * _tmp710 +
                         _tmp363 * _tmp708 + _tmp365 - _tmp507 * _tmp708 + _tmp732;
  const Scalar _tmp734 = _tmp240 * _tmp297;
  const Scalar _tmp735 = _tmp326 * _tmp581;
  const Scalar _tmp736 = -_tmp225 * _tmp686 - _tmp231 * _tmp710 + _tmp237 * _tmp706 -
                         _tmp237 * _tmp711 - _tmp237 * _tmp714 + _tmp238 * _tmp728 +
                         _tmp246 * _tmp729 + _tmp248 * _tmp668 + _tmp250 * _tmp703 -
                         _tmp333 * _tmp712 + _tmp370 * _tmp706 - _tmp370 * _tmp711 +
                         _tmp371 * _tmp708 - _tmp372 * _tmp706 + _tmp372 * _tmp711 +
                         _tmp375 * _tmp708 + _tmp376 - _tmp708 * _tmp734 + _tmp735;
  const Scalar _tmp737 = _tmp233 * _tmp581;
  const Scalar _tmp738 = _tmp205 * _tmp297;
  const Scalar _tmp739 = _tmp225 * _tmp728 + _tmp236 * _tmp710 + _tmp238 * _tmp686 +
                         _tmp241 * _tmp712 + _tmp248 * _tmp703 - _tmp250 * _tmp668 +
                         _tmp299 * _tmp706 - _tmp299 * _tmp711 - _tmp299 * _tmp714 +
                         _tmp303 * _tmp713 - _tmp308 * _tmp708 + _tmp311 * _tmp706 -
                         _tmp311 * _tmp711 + _tmp319 * _tmp708 - _tmp323 * _tmp705 + _tmp331 -
                         _tmp495 * _tmp708 - _tmp708 * _tmp738 + _tmp737;
  const Scalar _tmp740 = _tmp730 * _x0[1] + _tmp733 * _x0[3] - _tmp736 * _x0[0] + _tmp739 * _x0[2];
  const Scalar _tmp741 = _tmp730 * _x0[0] - _tmp733 * _x0[2] + _tmp736 * _x0[1] + _tmp739 * _x0[3];
  const Scalar _tmp742 = _tmp730 * _x0[3] - _tmp733 * _x0[1] - _tmp736 * _x0[2] - _tmp739 * _x0[0];
  const Scalar _tmp743 = _tmp730 * _x0[2] + _tmp733 * _x0[0] + _tmp736 * _x0[3] - _tmp739 * _x0[1];
  const Scalar _tmp744 = _tmp740 * _y[1] + _tmp741 * _y[0] + _tmp742 * _y[3] + _tmp743 * _y[2];
  const Scalar _tmp745 = _tmp435 * _tmp744;
  const Scalar _tmp746 = _tmp440 * _tmp745;
  const Scalar _tmp747 = _tmp740 * _y[3] - _tmp741 * _y[2] - _tmp742 * _y[1] + _tmp743 * _y[0];
  const Scalar _tmp748 = _tmp443 * _tmp747;
  const Scalar _tmp749 = _tmp445 * _tmp744;
  const Scalar _tmp750 = -_tmp740 * _y[0] + _tmp741 * _y[1] - _tmp742 * _y[2] + _tmp743 * _y[3];
  const Scalar _tmp751 = _tmp443 * _tmp750;
  const Scalar _tmp752 = _tmp740 * _y[2] + _tmp741 * _y[3] - _tmp742 * _y[0] - _tmp743 * _y[1];
  const Scalar _tmp753 = _tmp438 * _tmp744;
  const Scalar _tmp754 = _tmp443 * _tmp752;
  const Scalar _tmp755 = _tmp286 * _tmp490;
  const Scalar _tmp756 = _tmp286 * _tmp477;
  const Scalar _tmp757 = _tmp300 * _tmp756;
  const Scalar _tmp758 = -_tmp615 - _tmp616 + _tmp617 + _tmp618;
  const Scalar _tmp759 = _tmp166 * _tmp758;
  const Scalar _tmp760 = _tmp591 * _tmp758;
  const Scalar _tmp761 = _tmp591 * _tmp599;
  const Scalar _tmp762 = _tmp609 - _tmp610 + _tmp611 - _tmp612;
  const Scalar _tmp763 = _tmp590 * _tmp620 + _tmp608 * _tmp762;
  const Scalar _tmp764 = _tmp594 * _tmp760 - _tmp597 * _tmp759 - _tmp598 * _tmp759 -
                         _tmp600 * _tmp759 + _tmp601 * _tmp760 + _tmp606 * _tmp614 +
                         _tmp758 * _tmp761 + _tmp763;
  const Scalar _tmp765 = _tmp197 * _tmp764;
  const Scalar _tmp766 = _tmp191 * _tmp759;
  const Scalar _tmp767 = _tmp627 * _tmp766;
  const Scalar _tmp768 = _tmp170 * _tmp760;
  const Scalar _tmp769 = _tmp170 * _tmp642;
  const Scalar _tmp770 = _tmp660 * _tmp764;
  const Scalar _tmp771 = _tmp158 * _tmp585;
  const Scalar _tmp772 = _tmp627 * _tmp759;
  const Scalar _tmp773 = _tmp663 * _tmp665;
  const Scalar _tmp774 = _tmp595 * _tmp773 - _tmp644 * _tmp762;
  const Scalar _tmp775 = -_tmp204 * _tmp770 - _tmp626 * _tmp768 + _tmp626 * _tmp772 +
                         _tmp633 * _tmp764 + _tmp637 * _tmp768 - _tmp637 * _tmp772 -
                         _tmp641 * _tmp764 + _tmp651 * _tmp764 - _tmp653 * _tmp765 +
                         _tmp658 * _tmp764 + _tmp669 - _tmp760 * _tmp769 - _tmp764 * _tmp771 +
                         _tmp767 * _tmp77 + _tmp774;
  const Scalar _tmp776 = _tmp256 * _tmp756 - _tmp268 * _tmp286 + _tmp279 * _tmp756 +
                         _tmp280 * _tmp756 - _tmp286 * _tmp480 - _tmp286 * _tmp481 +
                         _tmp293 * _tmp581 + _tmp483;
  const Scalar _tmp777 = _tmp678 * _tmp768;
  const Scalar _tmp778 = _tmp649 * _tmp764;
  const Scalar _tmp779 = _tmp158 * _tmp682;
  const Scalar _tmp780 = _tmp226 * _tmp652;
  const Scalar _tmp781 = -_tmp724;
  const Scalar _tmp782 = _tmp196 * _tmp665;
  const Scalar _tmp783 = -_tmp595 * _tmp782 - _tmp693 * _tmp762;
  const Scalar _tmp784 = _tmp675 * _tmp777 + _tmp687 * _tmp764 - _tmp688 * _tmp772 +
                         _tmp690 * _tmp778 - _tmp692 * _tmp764 - _tmp696 * _tmp764 -
                         _tmp697 * _tmp764 + _tmp698 * _tmp768 - _tmp698 * _tmp772 +
                         _tmp699 * _tmp768 - _tmp700 * _tmp759 - _tmp764 * _tmp780 +
                         _tmp778 * _tmp779 + _tmp781 + _tmp783;
  const Scalar _tmp785 = _tmp305 * _tmp776;
  const Scalar _tmp786 = _tmp236 * _tmp785;
  const Scalar _tmp787 = _tmp169 * _tmp631;
  const Scalar _tmp788 = _tmp170 * _tmp677;
  const Scalar _tmp789 = _tmp665 * _tmp684;
  const Scalar _tmp790 = _tmp194 * _tmp762 - _tmp595 * _tmp789;
  const Scalar _tmp791 = _tmp158 * _tmp770 + _tmp624 * _tmp777 + _tmp645 + _tmp670 * _tmp765 -
                         _tmp672 * _tmp764 + _tmp673 * _tmp764 - _tmp674 * _tmp764 -
                         _tmp676 * _tmp768 + _tmp676 * _tmp772 - _tmp679 * _tmp772 -
                         _tmp683 * _tmp764 - _tmp760 * _tmp788 - _tmp764 * _tmp787 +
                         _tmp767 * _tmp79 + _tmp790;
  const Scalar _tmp792 = _tmp246 * _tmp776;
  const Scalar _tmp793 = _tmp219 * _tmp785;
  const Scalar _tmp794 = _tmp286 * _tmp488;
  const Scalar _tmp795 = _tmp170 * _tmp722;
  const Scalar _tmp796 = _tmp239 * _tmp652;
  const Scalar _tmp797 = _tmp158 * _tmp648;
  const Scalar _tmp798 = _tmp193 * _tmp595 + _tmp701 * _tmp762;
  const Scalar _tmp799 = _tmp50 * _tmp767 + _tmp695 + _tmp715 * _tmp764 - _tmp716 * _tmp764 +
                         _tmp717 * _tmp768 - _tmp717 * _tmp772 - _tmp719 * _tmp768 +
                         _tmp720 * _tmp759 - _tmp721 * _tmp764 - _tmp725 * _tmp764 +
                         _tmp726 * _tmp778 - _tmp760 * _tmp795 + _tmp764 * _tmp796 -
                         _tmp778 * _tmp797 + _tmp798;
  const Scalar _tmp800 = _tmp133 * _tmp786 + _tmp225 * _tmp799 + _tmp238 * _tmp791 +
                         _tmp248 * _tmp784 - _tmp250 * _tmp775 - _tmp299 * _tmp755 +
                         _tmp299 * _tmp757 - _tmp299 * _tmp785 + _tmp303 * _tmp794 -
                         _tmp310 * _tmp793 - _tmp311 * _tmp755 + _tmp311 * _tmp757 +
                         _tmp314 * _tmp776 + _tmp319 * _tmp776 - _tmp323 * _tmp756 -
                         _tmp324 * _tmp792 + _tmp496 + _tmp731 - _tmp738 * _tmp776;
  const Scalar _tmp801 = _tmp249 * _tmp785;
  const Scalar _tmp802 = _tmp232 * _tmp785;
  const Scalar _tmp803 = -_tmp110 * _tmp802 + _tmp225 * _tmp784 + _tmp238 * _tmp775 -
                         _tmp248 * _tmp799 + _tmp250 * _tmp791 + _tmp353 * _tmp755 -
                         _tmp353 * _tmp757 + _tmp353 * _tmp785 - _tmp354 * _tmp801 -
                         _tmp355 * _tmp755 + _tmp355 * _tmp757 - _tmp358 * _tmp755 +
                         _tmp358 * _tmp757 + _tmp359 * _tmp776 - _tmp360 * _tmp776 -
                         _tmp361 * _tmp776 + _tmp363 * _tmp776 + _tmp508 + _tmp737;
  const Scalar _tmp804 = -_tmp122 * _tmp786 - _tmp225 * _tmp791 - _tmp237 * _tmp755 +
                         _tmp237 * _tmp757 + _tmp238 * _tmp799 + _tmp248 * _tmp775 +
                         _tmp250 * _tmp784 + _tmp318 * _tmp792 + _tmp354 * _tmp793 -
                         _tmp370 * _tmp755 + _tmp370 * _tmp757 + _tmp372 * _tmp755 -
                         _tmp372 * _tmp757 - _tmp373 * _tmp776 + _tmp375 * _tmp776 + _tmp500 +
                         _tmp583 - _tmp734 * _tmp776 - _tmp802 * _tmp90;
  const Scalar _tmp805 = -_tmp735;
  const Scalar _tmp806 = _tmp132 * _tmp786 - _tmp225 * _tmp775 + _tmp238 * _tmp784 -
                         _tmp248 * _tmp791 - _tmp250 * _tmp799 + _tmp310 * _tmp801 -
                         _tmp313 * _tmp792 - _tmp334 * _tmp776 - _tmp335 * _tmp776 +
                         _tmp336 * _tmp755 - _tmp336 * _tmp757 + _tmp336 * _tmp785 +
                         _tmp337 * _tmp755 - _tmp338 * _tmp756 + _tmp343 * _tmp794 -
                         _tmp344 * _tmp756 + _tmp505 - _tmp709 * _tmp776 + _tmp805;
  const Scalar _tmp807 = _tmp800 * _x0[3] - _tmp803 * _x0[2] + _tmp804 * _x0[1] + _tmp806 * _x0[0];
  const Scalar _tmp808 = -_tmp800 * _x0[0] - _tmp803 * _x0[1] - _tmp804 * _x0[2] + _tmp806 * _x0[3];
  const Scalar _tmp809 = -_tmp800 * _x0[1] + _tmp803 * _x0[0] + _tmp804 * _x0[3] + _tmp806 * _x0[2];
  const Scalar _tmp810 = _tmp800 * _x0[2] + _tmp803 * _x0[3] - _tmp804 * _x0[0] + _tmp806 * _x0[1];
  const Scalar _tmp811 = _tmp807 * _y[0] + _tmp808 * _y[3] + _tmp809 * _y[2] + _tmp810 * _y[1];
  const Scalar _tmp812 = _tmp435 * _tmp811;
  const Scalar _tmp813 = _tmp438 * _tmp811;
  const Scalar _tmp814 = _tmp440 * _tmp812;
  const Scalar _tmp815 = _tmp807 * _y[1] - _tmp808 * _y[2] + _tmp809 * _y[3] - _tmp810 * _y[0];
  const Scalar _tmp816 = _tmp443 * _tmp815;
  const Scalar _tmp817 = _tmp807 * _y[3] - _tmp808 * _y[0] - _tmp809 * _y[1] + _tmp810 * _y[2];
  const Scalar _tmp818 = _tmp445 * _tmp811;
  const Scalar _tmp819 = -_tmp807 * _y[2] - _tmp808 * _y[1] + _tmp809 * _y[0] + _tmp810 * _y[3];
  const Scalar _tmp820 = _tmp443 * _tmp819;
  const Scalar _tmp821 = _tmp443 * _tmp817;
  const Scalar _tmp822 = _tmp431 * _tmp812;
  const Scalar _tmp823 = _tmp443 * sqrt_info(4, 2);
  const Scalar _tmp824 = _tmp477 * _tmp482;
  const Scalar _tmp825 = _tmp256 * _tmp824 - _tmp268 * _tmp482 + _tmp279 * _tmp824 +
                         _tmp280 * _tmp824 + _tmp287 * _tmp581 - _tmp480 * _tmp482 -
                         _tmp481 * _tmp482 + _tmp539;
  const Scalar _tmp826 = _tmp305 * _tmp825;
  const Scalar _tmp827 = _tmp300 * _tmp824;
  const Scalar _tmp828 = _tmp236 * _tmp825;
  const Scalar _tmp829 = _tmp166 * _tmp597;
  const Scalar _tmp830 = _tmp166 * _tmp600;
  const Scalar _tmp831 = _tmp166 * _tmp598;
  const Scalar _tmp832 = _tmp591 * _tmp613;
  const Scalar _tmp833 = _tmp586 - _tmp587 - _tmp588 + _tmp589;
  const Scalar _tmp834 = _tmp608 * _tmp758 + _tmp614 * _tmp833;
  const Scalar _tmp835 = _tmp594 * _tmp832 + _tmp601 * _tmp832 + _tmp606 * _tmp620 +
                         _tmp613 * _tmp761 - _tmp613 * _tmp829 - _tmp613 * _tmp830 -
                         _tmp613 * _tmp831 + _tmp834;
  const Scalar _tmp836 = _tmp170 * _tmp832;
  const Scalar _tmp837 = _tmp166 * _tmp613;
  const Scalar _tmp838 = _tmp627 * _tmp837;
  const Scalar _tmp839 = _tmp649 * _tmp835;
  const Scalar _tmp840 = _tmp665 * _tmp759;
  const Scalar _tmp841 = -_tmp663 * _tmp840 - _tmp701 * _tmp833;
  const Scalar _tmp842 = _tmp646 + _tmp687 * _tmp835 + _tmp688 * _tmp836 - _tmp688 * _tmp838 +
                         _tmp690 * _tmp839 - _tmp692 * _tmp835 - _tmp696 * _tmp835 -
                         _tmp697 * _tmp835 + _tmp698 * _tmp836 - _tmp698 * _tmp838 +
                         _tmp699 * _tmp836 - _tmp700 * _tmp837 + _tmp779 * _tmp839 -
                         _tmp780 * _tmp835 + _tmp841;
  const Scalar _tmp843 = _tmp482 * _tmp488;
  const Scalar _tmp844 = _tmp220 * _tmp843;
  const Scalar _tmp845 = _tmp640 * _tmp835;
  const Scalar _tmp846 = _tmp194 * _tmp833 - _tmp196 * _tmp840;
  const Scalar _tmp847 = -_tmp626 * _tmp836 + _tmp626 * _tmp838 + _tmp633 * _tmp835 +
                         _tmp637 * _tmp836 - _tmp637 * _tmp838 + _tmp651 * _tmp835 -
                         _tmp654 * _tmp835 + _tmp658 * _tmp835 - _tmp661 * _tmp835 +
                         _tmp662 * _tmp837 + _tmp694 - _tmp769 * _tmp832 - _tmp77 * _tmp845 -
                         _tmp771 * _tmp835 + _tmp846;
  const Scalar _tmp848 = _tmp627 * _tmp717;
  const Scalar _tmp849 = _tmp684 * _tmp840 - _tmp693 * _tmp833;
  const Scalar _tmp850 = -_tmp50 * _tmp845 + _tmp669 + _tmp715 * _tmp835 + _tmp717 * _tmp836 -
                         _tmp719 * _tmp836 + _tmp720 * _tmp837 - _tmp721 * _tmp835 +
                         _tmp723 * _tmp837 - _tmp725 * _tmp835 + _tmp726 * _tmp839 -
                         _tmp795 * _tmp832 + _tmp796 * _tmp835 - _tmp797 * _tmp839 -
                         _tmp837 * _tmp848 + _tmp849;
  const Scalar _tmp851 = _tmp158 * _tmp660;
  const Scalar _tmp852 = _tmp192 * _tmp766 + _tmp644 * _tmp833;
  const Scalar _tmp853 = _tmp671 * _tmp835 + _tmp673 * _tmp835 - _tmp674 * _tmp835 -
                         _tmp676 * _tmp836 + _tmp676 * _tmp838 + _tmp679 * _tmp836 -
                         _tmp679 * _tmp838 + _tmp680 * _tmp837 - _tmp683 * _tmp835 + _tmp781 -
                         _tmp787 * _tmp835 - _tmp788 * _tmp832 - _tmp79 * _tmp845 +
                         _tmp835 * _tmp851 + _tmp852;
  const Scalar _tmp854 = _tmp318 * _tmp825;
  const Scalar _tmp855 = _tmp225 * _tmp850 + _tmp238 * _tmp853 + _tmp248 * _tmp842 -
                         _tmp250 * _tmp847 - _tmp299 * _tmp826 + _tmp299 * _tmp827 -
                         _tmp299 * _tmp844 + _tmp303 * _tmp843 - _tmp308 * _tmp825 +
                         _tmp311 * _tmp827 - _tmp311 * _tmp844 + _tmp314 * _tmp825 +
                         _tmp317 * _tmp854 + _tmp321 * _tmp828 - _tmp323 * _tmp824 -
                         _tmp495 * _tmp825 + _tmp557 - _tmp738 * _tmp825 + _tmp805;
  const Scalar _tmp856 = _tmp317 * _tmp825;
  const Scalar _tmp857 = _tmp321 * _tmp825;
  const Scalar _tmp858 = _tmp225 * _tmp842 + _tmp238 * _tmp847 - _tmp241 * _tmp854 -
                         _tmp248 * _tmp850 + _tmp250 * _tmp853 - _tmp296 * _tmp828 +
                         _tmp313 * _tmp856 + _tmp353 * _tmp826 - _tmp353 * _tmp827 +
                         _tmp353 * _tmp844 + _tmp355 * _tmp827 - _tmp355 * _tmp844 +
                         _tmp358 * _tmp827 - _tmp358 * _tmp844 - _tmp362 * _tmp857 +
                         _tmp363 * _tmp825 - _tmp507 * _tmp825 + _tmp550 + _tmp582;
  const Scalar _tmp859 = -_tmp225 * _tmp853 - _tmp231 * _tmp857 + _tmp237 * _tmp827 -
                         _tmp237 * _tmp844 + _tmp238 * _tmp850 + _tmp246 * _tmp854 +
                         _tmp248 * _tmp847 + _tmp250 * _tmp842 + _tmp324 * _tmp856 +
                         _tmp370 * _tmp827 - _tmp370 * _tmp844 + _tmp371 * _tmp825 -
                         _tmp372 * _tmp827 + _tmp372 * _tmp844 - _tmp373 * _tmp825 -
                         _tmp559 * _tmp828 + _tmp560 - _tmp734 * _tmp825 + _tmp737;
  const Scalar _tmp860 = -_tmp225 * _tmp847 + _tmp238 * _tmp842 - _tmp248 * _tmp853 -
                         _tmp250 * _tmp850 + _tmp327 * _tmp857 - _tmp333 * _tmp854 -
                         _tmp335 * _tmp825 + _tmp336 * _tmp826 - _tmp336 * _tmp827 +
                         _tmp336 * _tmp844 + _tmp337 * _tmp844 - _tmp338 * _tmp824 +
                         _tmp343 * _tmp843 - _tmp344 * _tmp824 + _tmp345 * _tmp828 -
                         _tmp503 * _tmp825 + _tmp562 - _tmp709 * _tmp825 + _tmp732;
  const Scalar _tmp861 = _tmp855 * _x0[2] + _tmp858 * _x0[3] - _tmp859 * _x0[0] + _tmp860 * _x0[1];
  const Scalar _tmp862 = -_tmp855 * _x0[1] + _tmp858 * _x0[0] + _tmp859 * _x0[3] + _tmp860 * _x0[2];
  const Scalar _tmp863 = _tmp855 * _x0[3] - _tmp858 * _x0[2] + _tmp859 * _x0[1] + _tmp860 * _x0[0];
  const Scalar _tmp864 = -_tmp855 * _x0[0] - _tmp858 * _x0[1] - _tmp859 * _x0[2] + _tmp860 * _x0[3];
  const Scalar _tmp865 = _tmp861 * _y[1] + _tmp862 * _y[2] + _tmp863 * _y[0] + _tmp864 * _y[3];
  const Scalar _tmp866 = _tmp445 * _tmp865;
  const Scalar _tmp867 = _tmp435 * _tmp865;
  const Scalar _tmp868 = _tmp861 * _y[3] + _tmp862 * _y[0] - _tmp863 * _y[2] - _tmp864 * _y[1];
  const Scalar _tmp869 = _tmp443 * _tmp868;
  const Scalar _tmp870 = -_tmp861 * _y[0] + _tmp862 * _y[3] + _tmp863 * _y[1] - _tmp864 * _y[2];
  const Scalar _tmp871 = _tmp443 * _tmp870;
  const Scalar _tmp872 = _tmp861 * _y[2] - _tmp862 * _y[1] + _tmp863 * _y[3] - _tmp864 * _y[0];
  const Scalar _tmp873 = _tmp438 * _tmp865;
  const Scalar _tmp874 = _tmp443 * _tmp872;
  const Scalar _tmp875 = lambdas(0, 0) - lambdas(1, 0);
  const Scalar _tmp876 = _tmp602 + _tmp603 + _tmp604 + _tmp605;
  const Scalar _tmp877 = _tmp166 * _tmp876;
  const Scalar _tmp878 = _tmp782 * _tmp877;
  const Scalar _tmp879 = -_tmp878;
  const Scalar _tmp880 = _tmp607 * _tmp876;
  const Scalar _tmp881 = _tmp591 * _tmp833;
  const Scalar _tmp882 = _tmp594 * _tmp881 + _tmp599 * _tmp881 + _tmp601 * _tmp881 + _tmp621 +
                         _tmp68 * _tmp880 - _tmp829 * _tmp833 - _tmp830 * _tmp833 -
                         _tmp831 * _tmp833;
  const Scalar _tmp883 = _tmp166 * _tmp833;
  const Scalar _tmp884 = _tmp627 * _tmp883;
  const Scalar _tmp885 = (Scalar(1) / Scalar(2)) * _tmp28;
  const Scalar _tmp886 = (Scalar(1) / Scalar(2)) * _tmp29;
  const Scalar _tmp887 = (Scalar(1) / Scalar(2)) * _tmp30;
  const Scalar _tmp888 = (Scalar(1) / Scalar(2)) * _tmp31;
  const Scalar _tmp889 = _tmp885 - _tmp886 + _tmp887 - _tmp888;
  const Scalar _tmp890 = std::pow(_tmp159, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp891 = ((((_tmp13 - _tmp155) > 0) - ((_tmp13 - _tmp155) < 0)) + 1) *
                         (((_tmp154) > 0) - ((_tmp154) < 0));
  const Scalar _tmp892 = _tmp890 * _tmp891;
  const Scalar _tmp893 = _tmp156 * _tmp892;
  const Scalar _tmp894 = _tmp201 * _tmp893;
  const Scalar _tmp895 = _tmp11 * _tmp894;
  const Scalar _tmp896 = _tmp158 * _tmp895;
  const Scalar _tmp897 = _tmp176 * _tmp891;
  const Scalar _tmp898 = _tmp201 * _tmp897;
  const Scalar _tmp899 = _tmp889 * _tmp898;
  const Scalar _tmp900 = _tmp166 * _tmp187 * _tmp192;
  const Scalar _tmp901 = _tmp897 * _tmp900;
  const Scalar _tmp902 = _tmp68 * _tmp901;
  const Scalar _tmp903 = _tmp12 * _tmp902;
  const Scalar _tmp904 = _tmp652 * _tmp882;
  const Scalar _tmp905 = _tmp197 * _tmp904;
  const Scalar _tmp906 = _tmp20 * _tmp892;
  const Scalar _tmp907 = _tmp157 * _tmp906;
  const Scalar _tmp908 = _tmp33 * _tmp892;
  const Scalar _tmp909 = _tmp157 * _tmp908;
  const Scalar _tmp910 = _tmp26 * _tmp891;
  const Scalar _tmp911 = _tmp156 * _tmp177 / std::pow(_tmp159, Scalar(2));
  const Scalar _tmp912 = _tmp910 * _tmp911;
  const Scalar _tmp913 = _tmp890 * _tmp910;
  const Scalar _tmp914 = _tmp157 * _tmp913;
  const Scalar _tmp915 = (Scalar(1) / Scalar(2)) * _tmp5;
  const Scalar _tmp916 = (Scalar(1) / Scalar(2)) * _tmp6;
  const Scalar _tmp917 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp918 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp919 = -_tmp915 - _tmp916 - _tmp917 - _tmp918;
  const Scalar _tmp920 = 8 * _tmp178 * _tmp18;
  const Scalar _tmp921 = _tmp32 * _tmp920;
  const Scalar _tmp922 = _tmp33 * _tmp911;
  const Scalar _tmp923 = _tmp891 * _tmp922;
  const Scalar _tmp924 = _tmp20 * _tmp911;
  const Scalar _tmp925 = _tmp891 * _tmp924;
  const Scalar _tmp926 = (Scalar(1) / Scalar(2)) * _tmp21;
  const Scalar _tmp927 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp928 = (Scalar(1) / Scalar(2)) * _tmp23;
  const Scalar _tmp929 = (Scalar(1) / Scalar(2)) * _tmp24;
  const Scalar _tmp930 = _tmp926 - _tmp927 - _tmp928 + _tmp929;
  const Scalar _tmp931 = _tmp4 * _tmp920;
  const Scalar _tmp932 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp933 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp934 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp935 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp936 = -_tmp932 - _tmp933 + _tmp934 + _tmp935;
  const Scalar _tmp937 = _tmp25 * _tmp920;
  const Scalar _tmp938 = _tmp930 * _tmp931 + _tmp936 * _tmp937;
  const Scalar _tmp939 = -_tmp889 * _tmp907 - _tmp889 * _tmp909 + _tmp889 * _tmp912 -
                         _tmp889 * _tmp914 + _tmp889 * _tmp923 + _tmp889 * _tmp925 +
                         _tmp919 * _tmp921 + _tmp938;
  const Scalar _tmp940 = std::pow(_tmp179, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp941 = _tmp939 * _tmp940;
  const Scalar _tmp942 = _tmp175 * _tmp182 * _tmp185;
  const Scalar _tmp943 = _tmp195 * _tmp942;
  const Scalar _tmp944 = _tmp648 * _tmp943;
  const Scalar _tmp945 = _tmp640 * _tmp882;
  const Scalar _tmp946 = _tmp170 * _tmp881;
  const Scalar _tmp947 = _tmp167 * _tmp584;
  const Scalar _tmp948 = _tmp77 * _tmp947;
  const Scalar _tmp949 = Scalar(1.0) / (_tmp179);
  const Scalar _tmp950 = _tmp677 * _tmp949;
  const Scalar _tmp951 = _tmp197 * _tmp950;
  const Scalar _tmp952 = _tmp157 * _tmp234;
  const Scalar _tmp953 = _tmp919 * _tmp952;
  const Scalar _tmp954 = _tmp42 * _tmp81;
  const Scalar _tmp955 = _tmp901 * _tmp954;
  const Scalar _tmp956 = _tmp722 * _tmp949;
  const Scalar _tmp957 = _tmp632 * _tmp956;
  const Scalar _tmp958 = _tmp160 * _tmp200;
  const Scalar _tmp959 = _tmp158 * _tmp958;
  const Scalar _tmp960 = _tmp893 * _tmp900;
  const Scalar _tmp961 = _tmp11 * _tmp960;
  const Scalar _tmp962 = _tmp42 * _tmp961;
  const Scalar _tmp963 = _tmp889 * _tmp962;
  const Scalar _tmp964 = _tmp655 * _tmp949;
  const Scalar _tmp965 = _tmp160 * _tmp964;
  const Scalar _tmp966 = _tmp158 * _tmp965;
  const Scalar _tmp967 = _tmp68 * _tmp961;
  const Scalar _tmp968 = _tmp195 * _tmp967;
  const Scalar _tmp969 = _tmp660 * _tmp882;
  const Scalar _tmp970 = _tmp204 * _tmp942;
  const Scalar _tmp971 = _tmp659 * _tmp970;
  const Scalar _tmp972 = _tmp157 * _tmp930;
  const Scalar _tmp973 = _tmp227 * _tmp79;
  const Scalar _tmp974 = _tmp157 * _tmp203;
  const Scalar _tmp975 = _tmp936 * _tmp974 - _tmp972 * _tmp973;
  const Scalar _tmp976 =
      _tmp204 * _tmp963 - _tmp204 * _tmp969 + _tmp626 * _tmp884 - _tmp626 * _tmp946 +
      _tmp633 * _tmp882 - _tmp637 * _tmp884 + _tmp637 * _tmp946 - _tmp642 * _tmp946 +
      _tmp651 * _tmp882 + _tmp658 * _tmp882 + _tmp662 * _tmp883 + _tmp667 - _tmp75 * _tmp899 -
      _tmp77 * _tmp945 - _tmp771 * _tmp882 - _tmp79 * _tmp905 + _tmp879 + _tmp889 * _tmp896 +
      _tmp889 * _tmp903 - _tmp889 * _tmp955 - _tmp889 * _tmp968 - _tmp939 * _tmp948 -
      _tmp939 * _tmp951 + _tmp939 * _tmp957 + _tmp939 * _tmp966 + _tmp941 * _tmp944 -
      _tmp941 * _tmp959 - _tmp941 * _tmp971 + _tmp953 + _tmp975;
  const Scalar _tmp977 = _tmp79 * _tmp947;
  const Scalar _tmp978 = _tmp158 * _tmp942;
  const Scalar _tmp979 = _tmp659 * _tmp941;
  const Scalar _tmp980 = _tmp59 * _tmp961;
  const Scalar _tmp981 = _tmp195 * _tmp980;
  const Scalar _tmp982 = _tmp12 * _tmp59;
  const Scalar _tmp983 = _tmp889 * _tmp901;
  const Scalar _tmp984 = _tmp169 * _tmp939;
  const Scalar _tmp985 = _tmp204 * _tmp958;
  const Scalar _tmp986 = _tmp682 * _tmp941;
  const Scalar _tmp987 = _tmp201 * _tmp81;
  const Scalar _tmp988 = _tmp897 * _tmp987;
  const Scalar _tmp989 = _tmp204 * _tmp965;
  const Scalar _tmp990 = _tmp642 * _tmp949;
  const Scalar _tmp991 = _tmp197 * _tmp990;
  const Scalar _tmp992 = _tmp204 * _tmp895;
  const Scalar _tmp993 = _tmp42 * _tmp75;
  const Scalar _tmp994 = _tmp157 * _tmp936;
  const Scalar _tmp995 = _tmp227 * _tmp77;
  const Scalar _tmp996 = -_tmp234 * _tmp994 + _tmp972 * _tmp995;
  const Scalar _tmp997 = _tmp193 * _tmp877 + _tmp919 * _tmp974;
  const Scalar _tmp998 =
      -_tmp158 * _tmp963 + _tmp158 * _tmp969 + _tmp673 * _tmp882 - _tmp674 * _tmp882 +
      _tmp676 * _tmp884 - _tmp676 * _tmp946 - _tmp677 * _tmp946 - _tmp679 * _tmp884 +
      _tmp679 * _tmp946 + _tmp680 * _tmp883 - _tmp683 * _tmp882 + _tmp685 + _tmp77 * _tmp905 -
      _tmp787 * _tmp882 - _tmp79 * _tmp945 + _tmp889 * _tmp981 - _tmp889 * _tmp988 +
      _tmp889 * _tmp992 - _tmp939 * _tmp977 + _tmp939 * _tmp989 + _tmp939 * _tmp991 -
      _tmp941 * _tmp985 - _tmp943 * _tmp986 - _tmp956 * _tmp984 + _tmp978 * _tmp979 -
      _tmp982 * _tmp983 + _tmp983 * _tmp993 + _tmp996 + _tmp997;
  const Scalar _tmp999 = _tmp773 * _tmp877;
  const Scalar _tmp1000 = -_tmp999;
  const Scalar _tmp1001 = _tmp649 * _tmp882;
  const Scalar _tmp1002 = _tmp632 * _tmp904;
  const Scalar _tmp1003 = _tmp195 * _tmp962;
  const Scalar _tmp1004 = (Scalar(1) / Scalar(4)) * _tmp201;
  const Scalar _tmp1005 = _tmp158 * _tmp889;
  const Scalar _tmp1006 = _tmp59 * _tmp75;
  const Scalar _tmp1007 = _tmp81 * _tmp902;
  const Scalar _tmp1008 = _tmp197 * _tmp956;
  const Scalar _tmp1009 = _tmp12 * _tmp42;
  const Scalar _tmp1010 = _tmp690 * _tmp942;
  const Scalar _tmp1011 = _tmp632 * _tmp950;
  const Scalar _tmp1012 = _tmp157 * _tmp973;
  const Scalar _tmp1013 = _tmp1012 * _tmp919;
  const Scalar _tmp1014 = -_tmp1013;
  const Scalar _tmp1015 = -_tmp234 * _tmp972 - _tmp994 * _tmp995;
  const Scalar _tmp1016 =
      _tmp1000 + _tmp1001 * _tmp690 + _tmp1001 * _tmp779 - _tmp1002 * _tmp79 - _tmp1003 * _tmp889 -
      _tmp1004 * _tmp939 - _tmp1005 * _tmp980 + _tmp1006 * _tmp983 + _tmp1007 * _tmp889 -
      _tmp1008 * _tmp939 + _tmp1009 * _tmp983 + _tmp1010 * _tmp941 - _tmp1011 * _tmp939 + _tmp1014 +
      _tmp1015 - _tmp204 * _tmp889 * _tmp967 - _tmp226 * _tmp904 + _tmp687 * _tmp882 -
      _tmp688 * _tmp884 + _tmp688 * _tmp946 - _tmp692 * _tmp882 - _tmp696 * _tmp882 -
      _tmp698 * _tmp884 + _tmp698 * _tmp946 + _tmp699 * _tmp946 - _tmp700 * _tmp883 + _tmp702 +
      _tmp943 * _tmp979 + _tmp978 * _tmp986 - _tmp984 * _tmp990;
  const Scalar _tmp1017 = _tmp157 * _tmp995;
  const Scalar _tmp1018 = _tmp1017 * _tmp919;
  const Scalar _tmp1019 = -_tmp1018;
  const Scalar _tmp1020 = _tmp196 * _tmp200;
  const Scalar _tmp1021 = _tmp789 * _tmp877;
  const Scalar _tmp1022 = _tmp797 * _tmp942;
  const Scalar _tmp1023 = _tmp75 * _tmp902;
  const Scalar _tmp1024 = _tmp204 * _tmp980;
  const Scalar _tmp1025 = _tmp196 * _tmp964;
  const Scalar _tmp1026 = _tmp50 * _tmp947;
  const Scalar _tmp1027 = _tmp632 * _tmp990;
  const Scalar _tmp1028 = _tmp195 * _tmp895;
  const Scalar _tmp1029 = _tmp59 * _tmp81;
  const Scalar _tmp1030 = _tmp203 * _tmp972 + _tmp973 * _tmp994;
  const Scalar _tmp1031 =
      _tmp1001 * _tmp726 - _tmp1001 * _tmp797 - _tmp1002 * _tmp77 + _tmp1005 * _tmp967 + _tmp1019 -
      _tmp1020 * _tmp941 + _tmp1021 - _tmp1022 * _tmp941 - _tmp1023 * _tmp889 - _tmp1024 * _tmp889 +
      _tmp1025 * _tmp939 - _tmp1026 * _tmp939 - _tmp1027 * _tmp939 + _tmp1028 * _tmp889 +
      _tmp1029 * _tmp983 + _tmp1030 - _tmp12 * _tmp899 + _tmp239 * _tmp904 - _tmp50 * _tmp945 +
      _tmp715 * _tmp882 + _tmp717 * _tmp946 - _tmp719 * _tmp946 + _tmp720 * _tmp883 +
      _tmp723 * _tmp883 - _tmp725 * _tmp882 + _tmp727 - _tmp795 * _tmp881 - _tmp848 * _tmp883 +
      _tmp950 * _tmp984 + _tmp970 * _tmp986;
  const Scalar _tmp1032 =
      _tmp1016 * _tmp250 + _tmp1031 * _tmp238 - _tmp225 * _tmp998 + _tmp248 * _tmp976;
  const Scalar _tmp1033 =
      _tmp1016 * _tmp248 + _tmp1031 * _tmp225 + _tmp238 * _tmp998 - _tmp250 * _tmp976;
  const Scalar _tmp1034 =
      _tmp1016 * _tmp238 - _tmp1031 * _tmp250 - _tmp225 * _tmp976 - _tmp248 * _tmp998;
  const Scalar _tmp1035 =
      _tmp1016 * _tmp225 - _tmp1031 * _tmp248 + _tmp238 * _tmp976 + _tmp250 * _tmp998;
  const Scalar _tmp1036 =
      -_tmp1032 * _x0[0] + _tmp1033 * _x0[2] + _tmp1034 * _x0[1] + _tmp1035 * _x0[3];
  const Scalar _tmp1037 =
      _tmp1032 * _x0[1] + _tmp1033 * _x0[3] + _tmp1034 * _x0[0] - _tmp1035 * _x0[2];
  const Scalar _tmp1038 =
      -_tmp1032 * _x0[2] - _tmp1033 * _x0[0] + _tmp1034 * _x0[3] - _tmp1035 * _x0[1];
  const Scalar _tmp1039 =
      _tmp1032 * _x0[3] - _tmp1033 * _x0[1] + _tmp1034 * _x0[2] + _tmp1035 * _x0[0];
  const Scalar _tmp1040 = _tmp1036 * _y[2] + _tmp1037 * _y[3] - _tmp1038 * _y[0] - _tmp1039 * _y[1];
  const Scalar _tmp1041 = _tmp1036 * _y[1] + _tmp1037 * _y[0] + _tmp1038 * _y[3] + _tmp1039 * _y[2];
  const Scalar _tmp1042 = _tmp1041 * _tmp435;
  const Scalar _tmp1043 = _tmp1041 * _tmp445;
  const Scalar _tmp1044 =
      -_tmp1036 * _y[0] + _tmp1037 * _y[1] - _tmp1038 * _y[2] + _tmp1039 * _y[3];
  const Scalar _tmp1045 = _tmp1044 * _tmp443;
  const Scalar _tmp1046 = _tmp1036 * _y[3] - _tmp1037 * _y[2] - _tmp1038 * _y[1] + _tmp1039 * _y[0];
  const Scalar _tmp1047 = _tmp1046 * _tmp443;
  const Scalar _tmp1048 = _tmp1040 * _tmp443;
  const Scalar _tmp1049 = _tmp1041 * _tmp438;
  const Scalar _tmp1050 = _tmp591 * _tmp619;
  const Scalar _tmp1051 = _tmp1050 * _tmp594 + _tmp1050 * _tmp599 + _tmp1050 * _tmp601 +
                          _tmp59 * _tmp880 - _tmp597 * _tmp664 - _tmp598 * _tmp664 -
                          _tmp600 * _tmp664 + _tmp763;
  const Scalar _tmp1052 = _tmp1051 * _tmp167;
  const Scalar _tmp1053 = _tmp1052 * _tmp77;
  const Scalar _tmp1054 = _tmp202 * _tmp649;
  const Scalar _tmp1055 = _tmp1054 * _tmp158;
  const Scalar _tmp1056 = -_tmp926 + _tmp927 + _tmp928 - _tmp929;
  const Scalar _tmp1057 = _tmp1056 * _tmp157;
  const Scalar _tmp1058 = _tmp1006 * _tmp960;
  const Scalar _tmp1059 = _tmp932 + _tmp933 - _tmp934 - _tmp935;
  const Scalar _tmp1060 = _tmp1059 * _tmp921 + _tmp889 * _tmp931;
  const Scalar _tmp1061 = _tmp1056 * _tmp912 + _tmp1056 * _tmp923 + _tmp1056 * _tmp925 -
                          _tmp1057 * _tmp906 - _tmp1057 * _tmp908 - _tmp1057 * _tmp913 + _tmp1060 +
                          _tmp919 * _tmp937;
  const Scalar _tmp1062 = _tmp1061 * _tmp169;
  const Scalar _tmp1063 = _tmp1009 * _tmp901;
  const Scalar _tmp1064 = _tmp1057 * _tmp960;
  const Scalar _tmp1065 = _tmp1050 * _tmp170;
  const Scalar _tmp1066 = _tmp1065 * _tmp636;
  const Scalar _tmp1067 = _tmp1061 * _tmp940;
  const Scalar _tmp1068 = _tmp1067 * _tmp943;
  const Scalar _tmp1069 = _tmp68 * _tmp81;
  const Scalar _tmp1070 = -_tmp1021;
  const Scalar _tmp1071 = _tmp627 * _tmp664;
  const Scalar _tmp1072 = _tmp1053 * _tmp652;
  const Scalar _tmp1073 = _tmp1052 * _tmp79;
  const Scalar _tmp1074 = _tmp1054 * _tmp204;
  const Scalar _tmp1075 = _tmp1052 * _tmp630;
  const Scalar _tmp1076 = _tmp1075 * _tmp201;
  const Scalar _tmp1077 = _tmp779 * _tmp942;
  const Scalar _tmp1078 = _tmp1056 * _tmp901;
  const Scalar _tmp1079 = _tmp635 * _tmp649;
  const Scalar _tmp1080 = _tmp1052 * _tmp50;
  const Scalar _tmp1081 = _tmp1073 * _tmp652;
  const Scalar _tmp1082 = -_tmp1012 * _tmp1059 - _tmp889 * _tmp952;
  const Scalar _tmp1083 =
      -_tmp1004 * _tmp1061 + _tmp1006 * _tmp1078 + _tmp1007 * _tmp1056 - _tmp1008 * _tmp1061 -
      _tmp1009 * _tmp1064 + _tmp1010 * _tmp1067 - _tmp1011 * _tmp1061 + _tmp1019 -
      _tmp1051 * _tmp692 + _tmp1053 * _tmp1055 + _tmp1056 * _tmp1063 - _tmp1057 * _tmp1058 -
      _tmp1062 * _tmp990 - _tmp1064 * _tmp1069 + _tmp1065 * _tmp688 + _tmp1065 * _tmp699 +
      _tmp1066 * _tmp625 + _tmp1067 * _tmp1077 + _tmp1068 * _tmp659 + _tmp1070 -
      _tmp1071 * _tmp688 - _tmp1071 * _tmp698 - _tmp1072 * _tmp684 + _tmp1073 * _tmp1074 -
      _tmp1076 * _tmp196 + _tmp1079 * _tmp1080 - _tmp1081 * _tmp663 + _tmp1082 - _tmp664 * _tmp700 +
      _tmp783;
  const Scalar _tmp1084 = -_tmp953;
  const Scalar _tmp1085 = _tmp901 * _tmp982;
  const Scalar _tmp1086 = _tmp1057 * _tmp201;
  const Scalar _tmp1087 = _tmp1086 * _tmp893;
  const Scalar _tmp1088 = _tmp659 * _tmp978;
  const Scalar _tmp1089 = _tmp629 * _tmp655;
  const Scalar _tmp1090 = _tmp1051 * _tmp585;
  const Scalar _tmp1091 = _tmp157 * _tmp889;
  const Scalar _tmp1092 = _tmp1059 * _tmp974 + _tmp1091 * _tmp995;
  const Scalar _tmp1093 =
      -_tmp1053 * _tmp1079 + _tmp1055 * _tmp1080 - _tmp1056 * _tmp1085 - _tmp1056 * _tmp988 -
      _tmp1061 * _tmp977 + _tmp1061 * _tmp989 + _tmp1061 * _tmp991 - _tmp1062 * _tmp956 +
      _tmp1064 * _tmp982 - _tmp1064 * _tmp993 - _tmp1065 * _tmp676 - _tmp1065 * _tmp677 +
      _tmp1065 * _tmp679 + _tmp1067 * _tmp1088 - _tmp1067 * _tmp985 - _tmp1068 * _tmp682 +
      _tmp1071 * _tmp676 - _tmp1071 * _tmp679 + _tmp1072 * _tmp196 + _tmp1073 * _tmp1089 -
      _tmp1073 * _tmp639 - _tmp1076 * _tmp684 + _tmp1078 * _tmp993 + _tmp1084 + _tmp1087 * _tmp81 -
      _tmp1090 * _tmp204 + _tmp1092 + _tmp664 * _tmp680 + _tmp790 + _tmp878;
  const Scalar _tmp1094 = _tmp682 * _tmp970;
  const Scalar _tmp1095 = _tmp1052 * _tmp639;
  const Scalar _tmp1096 = _tmp12 * _tmp898;
  const Scalar _tmp1097 = _tmp68 * _tmp75;
  const Scalar _tmp1098 = _tmp1029 * _tmp901;
  const Scalar _tmp1099 = -_tmp1017 * _tmp1059 + _tmp889 * _tmp974;
  const Scalar _tmp1100 =
      _tmp1000 + _tmp1013 - _tmp1020 * _tmp1067 - _tmp1022 * _tmp1067 - _tmp1023 * _tmp1056 +
      _tmp1025 * _tmp1061 - _tmp1026 * _tmp1061 - _tmp1027 * _tmp1061 - _tmp1029 * _tmp1064 -
      _tmp1051 * _tmp725 + _tmp1053 * _tmp1074 - _tmp1055 * _tmp1073 - _tmp1056 * _tmp1096 +
      _tmp1056 * _tmp1098 + _tmp1062 * _tmp950 + _tmp1064 * _tmp1097 + _tmp1065 * _tmp717 -
      _tmp1065 * _tmp719 - _tmp1065 * _tmp722 + _tmp1067 * _tmp1094 - _tmp1072 * _tmp663 +
      _tmp1075 * _tmp655 + _tmp1081 * _tmp684 + _tmp1087 * _tmp12 - _tmp1095 * _tmp50 + _tmp1099 +
      _tmp664 * _tmp720 + _tmp664 * _tmp723 - _tmp664 * _tmp848 + _tmp798;
  const Scalar _tmp1101 = _tmp12 * _tmp68;
  const Scalar _tmp1102 = _tmp75 * _tmp898;
  const Scalar _tmp1103 = _tmp1059 * _tmp952 - _tmp1091 * _tmp973;
  const Scalar _tmp1104 =
      _tmp1053 * _tmp1089 - _tmp1056 * _tmp1102 + _tmp1056 * _tmp903 - _tmp1056 * _tmp955 -
      _tmp1061 * _tmp948 - _tmp1061 * _tmp951 + _tmp1061 * _tmp957 + _tmp1061 * _tmp966 -
      _tmp1064 * _tmp1101 + _tmp1064 * _tmp954 - _tmp1065 * _tmp626 - _tmp1065 * _tmp642 +
      _tmp1066 * _tmp635 - _tmp1067 * _tmp959 - _tmp1067 * _tmp971 + _tmp1068 * _tmp648 +
      _tmp1071 * _tmp626 - _tmp1071 * _tmp637 + _tmp1073 * _tmp1079 - _tmp1074 * _tmp1080 +
      _tmp1076 * _tmp663 - _tmp1081 * _tmp196 + _tmp1087 * _tmp75 - _tmp1090 * _tmp158 -
      _tmp1095 * _tmp77 + _tmp1103 + _tmp662 * _tmp664 + _tmp774 + _tmp997;
  const Scalar _tmp1105 =
      _tmp1083 * _tmp225 + _tmp1093 * _tmp250 - _tmp1100 * _tmp248 + _tmp1104 * _tmp238;
  const Scalar _tmp1106 =
      _tmp1083 * _tmp250 - _tmp1093 * _tmp225 + _tmp1100 * _tmp238 + _tmp1104 * _tmp248;
  const Scalar _tmp1107 =
      _tmp1083 * _tmp238 - _tmp1093 * _tmp248 - _tmp1100 * _tmp250 - _tmp1104 * _tmp225;
  const Scalar _tmp1108 =
      _tmp1083 * _tmp248 + _tmp1093 * _tmp238 + _tmp1100 * _tmp225 - _tmp1104 * _tmp250;
  const Scalar _tmp1109 =
      -_tmp1105 * _x0[1] - _tmp1106 * _x0[2] + _tmp1107 * _x0[3] - _tmp1108 * _x0[0];
  const Scalar _tmp1110 =
      -_tmp1105 * _x0[2] + _tmp1106 * _x0[1] + _tmp1107 * _x0[0] + _tmp1108 * _x0[3];
  const Scalar _tmp1111 =
      _tmp1105 * _x0[3] - _tmp1106 * _x0[0] + _tmp1107 * _x0[1] + _tmp1108 * _x0[2];
  const Scalar _tmp1112 =
      _tmp1105 * _x0[0] + _tmp1106 * _x0[3] + _tmp1107 * _x0[2] - _tmp1108 * _x0[1];
  const Scalar _tmp1113 = _tmp1109 * _y[3] + _tmp1110 * _y[0] + _tmp1111 * _y[1] + _tmp1112 * _y[2];
  const Scalar _tmp1114 = _tmp1113 * _tmp435;
  const Scalar _tmp1115 =
      -_tmp1109 * _y[1] - _tmp1110 * _y[2] + _tmp1111 * _y[3] + _tmp1112 * _y[0];
  const Scalar _tmp1116 = _tmp1115 * _tmp443;
  const Scalar _tmp1117 = _tmp1113 * _tmp445;
  const Scalar _tmp1118 =
      -_tmp1109 * _y[0] + _tmp1110 * _y[3] + _tmp1111 * _y[2] - _tmp1112 * _y[1];
  const Scalar _tmp1119 =
      -_tmp1109 * _y[2] + _tmp1110 * _y[1] - _tmp1111 * _y[0] + _tmp1112 * _y[3];
  const Scalar _tmp1120 = _tmp1119 * _tmp443;
  const Scalar _tmp1121 = _tmp1113 * _tmp438;
  const Scalar _tmp1122 = _tmp1118 * _tmp443;
  const Scalar _tmp1123 = _tmp591 * _tmp762;
  const Scalar _tmp1124 = _tmp1123 * _tmp594 + _tmp1123 * _tmp601 + _tmp42 * _tmp880 +
                          _tmp761 * _tmp762 - _tmp762 * _tmp829 - _tmp762 * _tmp830 -
                          _tmp762 * _tmp831 + _tmp834;
  const Scalar _tmp1125 = _tmp1124 * _tmp79;
  const Scalar _tmp1126 = _tmp1125 * _tmp647;
  const Scalar _tmp1127 = -_tmp885 + _tmp886 - _tmp887 + _tmp888;
  const Scalar _tmp1128 = _tmp1056 * _tmp921 + _tmp1127 * _tmp937;
  const Scalar _tmp1129 = _tmp1128 - _tmp907 * _tmp936 - _tmp908 * _tmp994 + _tmp912 * _tmp936 -
                          _tmp914 * _tmp936 + _tmp919 * _tmp931 + _tmp923 * _tmp936 +
                          _tmp925 * _tmp936;
  const Scalar _tmp1130 = _tmp1129 * _tmp940;
  const Scalar _tmp1131 = _tmp166 * _tmp762;
  const Scalar _tmp1132 = _tmp1123 * _tmp170;
  const Scalar _tmp1133 = _tmp1125 * _tmp652;
  const Scalar _tmp1134 = _tmp902 * _tmp936;
  const Scalar _tmp1135 = _tmp1129 * _tmp950;
  const Scalar _tmp1136 = _tmp1130 * _tmp943;
  const Scalar _tmp1137 = _tmp1132 * _tmp202;
  const Scalar _tmp1138 = _tmp1137 * _tmp204;
  const Scalar _tmp1139 = _tmp1131 * _tmp627;
  const Scalar _tmp1140 = _tmp1127 * _tmp157;
  const Scalar _tmp1141 = _tmp1057 * _tmp234 + _tmp1140 * _tmp203;
  const Scalar _tmp1142 =
      _tmp1014 - _tmp1102 * _tmp936 + _tmp1124 * _tmp633 - _tmp1124 * _tmp641 + _tmp1124 * _tmp658 -
      _tmp1124 * _tmp661 - _tmp1124 * _tmp771 + _tmp1126 * _tmp650 - _tmp1129 * _tmp948 +
      _tmp1129 * _tmp957 + _tmp1129 * _tmp966 - _tmp1130 * _tmp959 - _tmp1130 * _tmp971 +
      _tmp1131 * _tmp662 + _tmp1132 * _tmp637 - _tmp1132 * _tmp642 - _tmp1133 * _tmp197 +
      _tmp1134 * _tmp12 - _tmp1135 * _tmp197 + _tmp1136 * _tmp648 - _tmp1138 * _tmp624 +
      _tmp1139 * _tmp626 - _tmp1139 * _tmp637 + _tmp1141 + _tmp204 * _tmp936 * _tmp962 + _tmp846 +
      _tmp896 * _tmp936 - _tmp936 * _tmp955 - _tmp936 * _tmp968 + _tmp999;
  const Scalar _tmp1143 = _tmp1124 * _tmp649;
  const Scalar _tmp1144 = _tmp1130 * _tmp942;
  const Scalar _tmp1145 = _tmp1126 * _tmp649;
  const Scalar _tmp1146 = _tmp936 * _tmp967;
  const Scalar _tmp1147 = _tmp901 * _tmp936;
  const Scalar _tmp1148 = _tmp1129 * _tmp990;
  const Scalar _tmp1149 = -_tmp1057 * _tmp995 + _tmp1140 * _tmp973;
  const Scalar _tmp1150 =
      -_tmp1020 * _tmp1130 - _tmp1024 * _tmp936 + _tmp1025 * _tmp1129 - _tmp1026 * _tmp1129 +
      _tmp1028 * _tmp936 + _tmp1029 * _tmp1147 + _tmp1094 * _tmp1130 - _tmp1096 * _tmp936 -
      _tmp1123 * _tmp795 + _tmp1124 * _tmp715 - _tmp1124 * _tmp716 - _tmp1124 * _tmp721 -
      _tmp1124 * _tmp725 + _tmp1131 * _tmp720 + _tmp1131 * _tmp723 - _tmp1131 * _tmp848 +
      _tmp1133 * _tmp169 - _tmp1134 * _tmp75 + _tmp1135 * _tmp169 - _tmp1137 * _tmp718 +
      _tmp1138 * _tmp675 + _tmp1143 * _tmp726 - _tmp1144 * _tmp797 - _tmp1145 * _tmp158 +
      _tmp1146 * _tmp158 - _tmp1148 * _tmp632 + _tmp1149 + _tmp849 + _tmp997;
  const Scalar _tmp1151 = _tmp1137 * _tmp158;
  const Scalar _tmp1152 = _tmp158 * _tmp936;
  const Scalar _tmp1153 = -_tmp1057 * _tmp973 - _tmp1140 * _tmp995;
  const Scalar _tmp1154 =
      -_tmp1003 * _tmp936 - _tmp1004 * _tmp1129 + _tmp1006 * _tmp1147 - _tmp1008 * _tmp1129 +
      _tmp1009 * _tmp1147 + _tmp1010 * _tmp1130 + _tmp1084 + _tmp1124 * _tmp687 -
      _tmp1124 * _tmp692 - _tmp1124 * _tmp696 - _tmp1124 * _tmp780 - _tmp1131 * _tmp700 +
      _tmp1132 * _tmp699 - _tmp1133 * _tmp632 + _tmp1134 * _tmp81 - _tmp1135 * _tmp632 +
      _tmp1136 * _tmp659 + _tmp1138 * _tmp636 - _tmp1139 * _tmp688 - _tmp1139 * _tmp698 +
      _tmp1143 * _tmp779 + _tmp1144 * _tmp779 + _tmp1145 * _tmp204 - _tmp1146 * _tmp204 -
      _tmp1148 * _tmp169 + _tmp1151 * _tmp675 - _tmp1152 * _tmp980 + _tmp1153 + _tmp841 + _tmp879;
  const Scalar _tmp1155 = _tmp1086 * _tmp202 - _tmp1140 * _tmp234;
  const Scalar _tmp1156 =
      _tmp1018 + _tmp1070 + _tmp1088 * _tmp1130 + _tmp1124 * _tmp671 - _tmp1124 * _tmp672 -
      _tmp1124 * _tmp674 - _tmp1124 * _tmp683 - _tmp1124 * _tmp787 + _tmp1124 * _tmp851 +
      _tmp1125 * _tmp657 - _tmp1129 * _tmp169 * _tmp956 - _tmp1129 * _tmp977 + _tmp1129 * _tmp989 -
      _tmp1130 * _tmp985 + _tmp1131 * _tmp680 - _tmp1132 * _tmp676 - _tmp1132 * _tmp677 -
      _tmp1136 * _tmp682 + _tmp1139 * _tmp676 - _tmp1139 * _tmp679 - _tmp1147 * _tmp982 +
      _tmp1147 * _tmp993 + _tmp1148 * _tmp197 + _tmp1151 * _tmp624 - _tmp1152 * _tmp962 + _tmp1155 +
      _tmp852 + _tmp936 * _tmp981 - _tmp936 * _tmp988 + _tmp936 * _tmp992;
  const Scalar _tmp1157 =
      -_tmp1142 * _tmp250 + _tmp1150 * _tmp225 + _tmp1154 * _tmp248 + _tmp1156 * _tmp238;
  const Scalar _tmp1158 =
      -_tmp1142 * _tmp225 - _tmp1150 * _tmp250 + _tmp1154 * _tmp238 - _tmp1156 * _tmp248;
  const Scalar _tmp1159 =
      _tmp1142 * _tmp238 - _tmp1150 * _tmp248 + _tmp1154 * _tmp225 + _tmp1156 * _tmp250;
  const Scalar _tmp1160 =
      _tmp1142 * _tmp248 + _tmp1150 * _tmp238 + _tmp1154 * _tmp250 - _tmp1156 * _tmp225;
  const Scalar _tmp1161 =
      _tmp1157 * _x0[2] + _tmp1158 * _x0[1] + _tmp1159 * _x0[3] - _tmp1160 * _x0[0];
  const Scalar _tmp1162 =
      -_tmp1157 * _x0[1] + _tmp1158 * _x0[2] + _tmp1159 * _x0[0] + _tmp1160 * _x0[3];
  const Scalar _tmp1163 =
      -_tmp1157 * _x0[0] + _tmp1158 * _x0[3] - _tmp1159 * _x0[1] - _tmp1160 * _x0[2];
  const Scalar _tmp1164 =
      _tmp1157 * _x0[3] + _tmp1158 * _x0[0] - _tmp1159 * _x0[2] + _tmp1160 * _x0[1];
  const Scalar _tmp1165 =
      -_tmp1161 * _y[0] + _tmp1162 * _y[3] - _tmp1163 * _y[2] + _tmp1164 * _y[1];
  const Scalar _tmp1166 = _tmp1165 * _tmp443;
  const Scalar _tmp1167 = _tmp1161 * _y[3] + _tmp1162 * _y[0] - _tmp1163 * _y[1] - _tmp1164 * _y[2];
  const Scalar _tmp1168 = _tmp1167 * _tmp443;
  const Scalar _tmp1169 = _tmp1161 * _y[1] + _tmp1162 * _y[2] + _tmp1163 * _y[3] + _tmp1164 * _y[0];
  const Scalar _tmp1170 = _tmp1169 * _tmp435;
  const Scalar _tmp1171 = _tmp1161 * _y[2] - _tmp1162 * _y[1] - _tmp1163 * _y[0] + _tmp1164 * _y[3];
  const Scalar _tmp1172 = _tmp1169 * _tmp445;
  const Scalar _tmp1173 = _tmp1169 * _tmp438;
  const Scalar _tmp1174 = _tmp1171 * _tmp443;
  const Scalar _tmp1175 = lambdas(1, 0) - lambdas(2, 0);
  const Scalar _tmp1176 = _tmp1140 * _tmp960;
  const Scalar _tmp1177 = _tmp1127 * _tmp891;
  const Scalar _tmp1178 = _tmp915 + _tmp916 + _tmp917 + _tmp918;
  const Scalar _tmp1179 = _tmp1178 * _tmp920;
  const Scalar _tmp1180 = _tmp1127 * _tmp912 - _tmp1140 * _tmp906 - _tmp1140 * _tmp908 -
                          _tmp1140 * _tmp913 + _tmp1177 * _tmp922 + _tmp1177 * _tmp924 +
                          _tmp1179 * _tmp32 + _tmp938;
  const Scalar _tmp1181 = _tmp1180 * _tmp940;
  const Scalar _tmp1182 = _tmp1177 * _tmp176;
  const Scalar _tmp1183 = _tmp1182 * _tmp900;
  const Scalar _tmp1184 = _tmp1181 * _tmp659;
  const Scalar _tmp1185 = _tmp1180 * _tmp169;
  const Scalar _tmp1186 = _tmp1178 * _tmp157;
  const Scalar _tmp1187 = _tmp1186 * _tmp973;
  const Scalar _tmp1188 = -_tmp1187;
  const Scalar _tmp1189 = -_tmp1004 * _tmp1180 - _tmp1006 * _tmp1176 + _tmp1006 * _tmp1183 -
                          _tmp1008 * _tmp1180 - _tmp1009 * _tmp1176 + _tmp1009 * _tmp1183 +
                          _tmp1010 * _tmp1181 - _tmp1011 * _tmp1180 + _tmp1015 -
                          _tmp1069 * _tmp1176 + _tmp1069 * _tmp1183 + _tmp1077 * _tmp1181 +
                          _tmp1184 * _tmp943 - _tmp1185 * _tmp990 + _tmp1188;
  const Scalar _tmp1190 = _tmp1186 * _tmp995;
  const Scalar _tmp1191 = -_tmp1190;
  const Scalar _tmp1192 = _tmp1182 * _tmp201;
  const Scalar _tmp1193 = _tmp1140 * _tmp894;
  const Scalar _tmp1194 = -_tmp1020 * _tmp1181 - _tmp1022 * _tmp1181 + _tmp1025 * _tmp1180 -
                          _tmp1026 * _tmp1180 - _tmp1027 * _tmp1180 - _tmp1029 * _tmp1176 +
                          _tmp1029 * _tmp1183 + _tmp1030 + _tmp1094 * _tmp1181 +
                          _tmp1097 * _tmp1176 - _tmp1097 * _tmp1183 + _tmp1185 * _tmp950 +
                          _tmp1191 - _tmp1192 * _tmp12 + _tmp1193 * _tmp12;
  const Scalar _tmp1195 = _tmp1178 * _tmp974;
  const Scalar _tmp1196 = _tmp893 * _tmp987;
  const Scalar _tmp1197 = _tmp1140 * _tmp1196 + _tmp1176 * _tmp982 - _tmp1176 * _tmp993 -
                          _tmp1180 * _tmp977 + _tmp1180 * _tmp989 + _tmp1180 * _tmp991 -
                          _tmp1181 * _tmp682 * _tmp943 - _tmp1181 * _tmp985 - _tmp1182 * _tmp987 -
                          _tmp1183 * _tmp982 + _tmp1183 * _tmp993 + _tmp1184 * _tmp978 -
                          _tmp1185 * _tmp956 + _tmp1195 + _tmp996;
  const Scalar _tmp1198 = _tmp1178 * _tmp952;
  const Scalar _tmp1199 = -_tmp1101 * _tmp1176 + _tmp1101 * _tmp1183 + _tmp1176 * _tmp954 -
                          _tmp1180 * _tmp948 - _tmp1180 * _tmp951 + _tmp1180 * _tmp957 +
                          _tmp1180 * _tmp966 + _tmp1181 * _tmp944 - _tmp1181 * _tmp959 -
                          _tmp1183 * _tmp954 - _tmp1184 * _tmp970 - _tmp1192 * _tmp75 +
                          _tmp1193 * _tmp75 + _tmp1198 + _tmp975;
  const Scalar _tmp1200 =
      _tmp1189 * _tmp248 + _tmp1194 * _tmp225 + _tmp1197 * _tmp238 - _tmp1199 * _tmp250;
  const Scalar _tmp1201 =
      _tmp1189 * _tmp250 + _tmp1194 * _tmp238 - _tmp1197 * _tmp225 + _tmp1199 * _tmp248;
  const Scalar _tmp1202 =
      _tmp1189 * _tmp238 - _tmp1194 * _tmp250 - _tmp1197 * _tmp248 - _tmp1199 * _tmp225;
  const Scalar _tmp1203 =
      _tmp1189 * _tmp225 - _tmp1194 * _tmp248 + _tmp1197 * _tmp250 + _tmp1199 * _tmp238;
  const Scalar _tmp1204 =
      _tmp1200 * _x0[3] + _tmp1201 * _x0[1] + _tmp1202 * _x0[0] - _tmp1203 * _x0[2];
  const Scalar _tmp1205 =
      -_tmp1200 * _x0[0] - _tmp1201 * _x0[2] + _tmp1202 * _x0[3] - _tmp1203 * _x0[1];
  const Scalar _tmp1206 =
      -_tmp1200 * _x0[1] + _tmp1201 * _x0[3] + _tmp1202 * _x0[2] + _tmp1203 * _x0[0];
  const Scalar _tmp1207 =
      _tmp1200 * _x0[2] - _tmp1201 * _x0[0] + _tmp1202 * _x0[1] + _tmp1203 * _x0[3];
  const Scalar _tmp1208 = _tmp1204 * _y[0] + _tmp1205 * _y[3] + _tmp1206 * _y[2] + _tmp1207 * _y[1];
  const Scalar _tmp1209 = std::fabs(_tmp425);
  const Scalar _tmp1210 = std::min<Scalar>(_tmp1209, _tmp13);
  const Scalar _tmp1211 = std::acos(_tmp1210);
  const Scalar _tmp1212 = 1 - std::pow(_tmp1210, Scalar(2));
  const Scalar _tmp1213 = _tmp426 * ((((-_tmp1209 + _tmp13) > 0) - ((-_tmp1209 + _tmp13) < 0)) + 1);
  const Scalar _tmp1214 = _tmp1210 * _tmp1211 * _tmp1213 / (_tmp1212 * std::sqrt(_tmp1212));
  const Scalar _tmp1215 = _tmp1208 * _tmp1214;
  const Scalar _tmp1216 = _tmp1213 / _tmp1212;
  const Scalar _tmp1217 = _tmp1208 * _tmp1216;
  const Scalar _tmp1218 = _tmp1217 * _tmp437;
  const Scalar _tmp1219 = _tmp1211 / std::sqrt(_tmp1212);
  const Scalar _tmp1220 =
      _tmp1219 * (_tmp1204 * _y[3] - _tmp1205 * _y[0] - _tmp1206 * _y[1] + _tmp1207 * _y[2]);
  const Scalar _tmp1221 = _tmp1219 * _tmp428;
  const Scalar _tmp1222 =
      _tmp1221 * (-_tmp1204 * _y[2] - _tmp1205 * _y[1] + _tmp1206 * _y[0] + _tmp1207 * _y[3]);
  const Scalar _tmp1223 = _tmp1204 * _y[1] - _tmp1205 * _y[2] + _tmp1206 * _y[3] - _tmp1207 * _y[0];
  const Scalar _tmp1224 = _tmp1221 * _tmp1223;
  const Scalar _tmp1225 = _tmp1220 * _tmp428;
  const Scalar _tmp1226 = _tmp1219 * _tmp467;
  const Scalar _tmp1227 = _tmp960 * _tmp972;
  const Scalar _tmp1228 = _tmp1060 + _tmp1179 * _tmp25 - _tmp906 * _tmp972 - _tmp908 * _tmp972 +
                          _tmp912 * _tmp930 - _tmp913 * _tmp972 + _tmp923 * _tmp930 +
                          _tmp925 * _tmp930;
  const Scalar _tmp1229 = -_tmp1198;
  const Scalar _tmp1230 = _tmp1228 * _tmp940;
  const Scalar _tmp1231 = _tmp1230 * _tmp942;
  const Scalar _tmp1232 = _tmp1231 * _tmp659;
  const Scalar _tmp1233 = _tmp1228 * _tmp169;
  const Scalar _tmp1234 = _tmp1231 * _tmp195;
  const Scalar _tmp1235 = _tmp901 * _tmp930;
  const Scalar _tmp1236 = -_tmp1085 * _tmp930 + _tmp1092 + _tmp1196 * _tmp972 + _tmp1227 * _tmp982 -
                          _tmp1227 * _tmp993 - _tmp1228 * _tmp977 + _tmp1228 * _tmp989 +
                          _tmp1228 * _tmp991 + _tmp1229 - _tmp1230 * _tmp985 + _tmp1232 * _tmp158 -
                          _tmp1233 * _tmp956 - _tmp1234 * _tmp682 + _tmp1235 * _tmp993 -
                          _tmp930 * _tmp988;
  const Scalar _tmp1237 = _tmp1231 * _tmp204;
  const Scalar _tmp1238 = _tmp894 * _tmp972;
  const Scalar _tmp1239 = -_tmp1101 * _tmp1227 - _tmp1102 * _tmp930 + _tmp1103 + _tmp1195 +
                          _tmp1227 * _tmp954 - _tmp1228 * _tmp948 - _tmp1228 * _tmp951 +
                          _tmp1228 * _tmp957 + _tmp1228 * _tmp966 - _tmp1230 * _tmp959 +
                          _tmp1234 * _tmp648 - _tmp1237 * _tmp659 + _tmp1238 * _tmp75 +
                          _tmp903 * _tmp930 - _tmp930 * _tmp955;
  const Scalar _tmp1240 = -_tmp1020 * _tmp1230 - _tmp1023 * _tmp930 + _tmp1025 * _tmp1228 -
                          _tmp1026 * _tmp1228 - _tmp1027 * _tmp1228 - _tmp1029 * _tmp1227 -
                          _tmp1096 * _tmp930 + _tmp1097 * _tmp1227 + _tmp1098 * _tmp930 + _tmp1099 +
                          _tmp1187 + _tmp12 * _tmp1238 - _tmp1231 * _tmp797 + _tmp1233 * _tmp950 +
                          _tmp1237 * _tmp682;
  const Scalar _tmp1241 = -_tmp1004 * _tmp1228 + _tmp1006 * _tmp1235 + _tmp1007 * _tmp930 -
                          _tmp1008 * _tmp1228 - _tmp1009 * _tmp1227 - _tmp1011 * _tmp1228 -
                          _tmp1058 * _tmp972 + _tmp1063 * _tmp930 - _tmp1069 * _tmp1227 + _tmp1082 +
                          _tmp1191 + _tmp1231 * _tmp690 + _tmp1231 * _tmp779 + _tmp1232 * _tmp195 -
                          _tmp1233 * _tmp990;
  const Scalar _tmp1242 =
      -_tmp1236 * _tmp225 + _tmp1239 * _tmp248 + _tmp1240 * _tmp238 + _tmp1241 * _tmp250;
  const Scalar _tmp1243 =
      -_tmp1236 * _tmp248 - _tmp1239 * _tmp225 - _tmp1240 * _tmp250 + _tmp1241 * _tmp238;
  const Scalar _tmp1244 =
      _tmp1236 * _tmp238 - _tmp1239 * _tmp250 + _tmp1240 * _tmp225 + _tmp1241 * _tmp248;
  const Scalar _tmp1245 =
      _tmp1236 * _tmp250 + _tmp1239 * _tmp238 - _tmp1240 * _tmp248 + _tmp1241 * _tmp225;
  const Scalar _tmp1246 =
      -_tmp1242 * _x0[2] + _tmp1243 * _x0[3] - _tmp1244 * _x0[0] - _tmp1245 * _x0[1];
  const Scalar _tmp1247 =
      _tmp1242 * _x0[1] + _tmp1243 * _x0[0] + _tmp1244 * _x0[3] - _tmp1245 * _x0[2];
  const Scalar _tmp1248 =
      _tmp1242 * _x0[3] + _tmp1243 * _x0[2] - _tmp1244 * _x0[1] + _tmp1245 * _x0[0];
  const Scalar _tmp1249 =
      -_tmp1242 * _x0[0] + _tmp1243 * _x0[1] + _tmp1244 * _x0[2] + _tmp1245 * _x0[3];
  const Scalar _tmp1250 =
      -_tmp1246 * _y[0] + _tmp1247 * _y[3] - _tmp1248 * _y[1] + _tmp1249 * _y[2];
  const Scalar _tmp1251 = _tmp1219 * _tmp429;
  const Scalar _tmp1252 =
      -_tmp1246 * _y[2] + _tmp1247 * _y[1] + _tmp1248 * _y[3] - _tmp1249 * _y[0];
  const Scalar _tmp1253 = _tmp1221 * _tmp1252;
  const Scalar _tmp1254 = _tmp1246 * _y[3] + _tmp1247 * _y[0] + _tmp1248 * _y[2] + _tmp1249 * _y[1];
  const Scalar _tmp1255 = _tmp1214 * _tmp1254;
  const Scalar _tmp1256 =
      _tmp1221 * (-_tmp1246 * _y[1] - _tmp1247 * _y[2] + _tmp1248 * _y[0] + _tmp1249 * _y[3]);
  const Scalar _tmp1257 = _tmp1216 * _tmp1254;
  const Scalar _tmp1258 = _tmp1257 * _tmp437;
  const Scalar _tmp1259 = _tmp1221 * _tmp1250;
  const Scalar _tmp1260 = _tmp1059 * _tmp891;
  const Scalar _tmp1261 = -_tmp1059 * _tmp907 - _tmp1059 * _tmp909 + _tmp1059 * _tmp912 -
                          _tmp1059 * _tmp914 + _tmp1128 + _tmp1179 * _tmp4 + _tmp1260 * _tmp922 +
                          _tmp1260 * _tmp924;
  const Scalar _tmp1262 = _tmp1261 * _tmp167;
  const Scalar _tmp1263 = _tmp1262 * _tmp684;
  const Scalar _tmp1264 = _tmp1261 * _tmp940;
  const Scalar _tmp1265 = _tmp1059 * _tmp158;
  const Scalar _tmp1266 = _tmp1262 * _tmp584;
  const Scalar _tmp1267 = _tmp1264 * _tmp942;
  const Scalar _tmp1268 = _tmp1059 * _tmp901;
  const Scalar _tmp1269 = _tmp1262 * _tmp663;
  const Scalar _tmp1270 = -_tmp1020 * _tmp1264 - _tmp1024 * _tmp1059 + _tmp1025 * _tmp1261 +
                          _tmp1028 * _tmp1059 + _tmp1029 * _tmp1268 - _tmp1059 * _tmp1096 +
                          _tmp1094 * _tmp1264 - _tmp1097 * _tmp1268 + _tmp1149 + _tmp1195 +
                          _tmp1263 * _tmp950 + _tmp1265 * _tmp967 - _tmp1266 * _tmp50 -
                          _tmp1267 * _tmp797 - _tmp1269 * _tmp990;
  const Scalar _tmp1271 = _tmp1262 * _tmp196;
  const Scalar _tmp1272 = _tmp1264 * _tmp943;
  const Scalar _tmp1273 = _tmp1059 * _tmp204;
  const Scalar _tmp1274 = _tmp12 * _tmp1268;
  const Scalar _tmp1275 = -_tmp1003 * _tmp1059 - _tmp1004 * _tmp1261 + _tmp1006 * _tmp1268 +
                          _tmp1010 * _tmp1264 + _tmp1069 * _tmp1268 + _tmp1153 + _tmp1229 -
                          _tmp1263 * _tmp990 - _tmp1265 * _tmp980 + _tmp1267 * _tmp779 -
                          _tmp1269 * _tmp950 - _tmp1271 * _tmp956 + _tmp1272 * _tmp659 -
                          _tmp1273 * _tmp967 + _tmp1274 * _tmp42;
  const Scalar _tmp1276 = -_tmp1059 * _tmp1102 + _tmp1059 * _tmp896 - _tmp1059 * _tmp968 +
                          _tmp1141 + _tmp1188 + _tmp1261 * _tmp966 + _tmp1264 * _tmp944 -
                          _tmp1264 * _tmp959 - _tmp1264 * _tmp971 - _tmp1266 * _tmp77 -
                          _tmp1268 * _tmp954 + _tmp1269 * _tmp956 - _tmp1271 * _tmp950 +
                          _tmp1273 * _tmp962 + _tmp1274 * _tmp68;
  const Scalar _tmp1277 = _tmp1059 * _tmp981 - _tmp1059 * _tmp988 + _tmp1059 * _tmp992 + _tmp1155 +
                          _tmp1190 + _tmp1261 * _tmp989 - _tmp1263 * _tmp956 - _tmp1264 * _tmp985 -
                          _tmp1265 * _tmp962 - _tmp1266 * _tmp79 + _tmp1267 * _tmp158 * _tmp659 +
                          _tmp1268 * _tmp993 + _tmp1271 * _tmp990 - _tmp1272 * _tmp682 -
                          _tmp1274 * _tmp59;
  const Scalar _tmp1278 =
      -_tmp1270 * _tmp250 + _tmp1275 * _tmp238 - _tmp1276 * _tmp225 - _tmp1277 * _tmp248;
  const Scalar _tmp1279 =
      _tmp1270 * _tmp225 + _tmp1275 * _tmp248 - _tmp1276 * _tmp250 + _tmp1277 * _tmp238;
  const Scalar _tmp1280 =
      _tmp1270 * _tmp238 + _tmp1275 * _tmp250 + _tmp1276 * _tmp248 - _tmp1277 * _tmp225;
  const Scalar _tmp1281 =
      -_tmp1270 * _tmp248 + _tmp1275 * _tmp225 + _tmp1276 * _tmp238 + _tmp1277 * _tmp250;
  const Scalar _tmp1282 =
      _tmp1278 * _x0[0] + _tmp1279 * _x0[3] + _tmp1280 * _x0[1] - _tmp1281 * _x0[2];
  const Scalar _tmp1283 =
      _tmp1278 * _x0[2] - _tmp1279 * _x0[1] + _tmp1280 * _x0[3] + _tmp1281 * _x0[0];
  const Scalar _tmp1284 =
      _tmp1278 * _x0[1] + _tmp1279 * _x0[2] - _tmp1280 * _x0[0] + _tmp1281 * _x0[3];
  const Scalar _tmp1285 =
      _tmp1278 * _x0[3] - _tmp1279 * _x0[0] - _tmp1280 * _x0[2] - _tmp1281 * _x0[1];
  const Scalar _tmp1286 = _tmp1282 * _y[0] + _tmp1283 * _y[2] + _tmp1284 * _y[1] + _tmp1285 * _y[3];
  const Scalar _tmp1287 = _tmp1214 * _tmp1286;
  const Scalar _tmp1288 = _tmp1216 * _tmp1286;
  const Scalar _tmp1289 = _tmp1288 * _tmp440;
  const Scalar _tmp1290 = _tmp1288 * _tmp437;
  const Scalar _tmp1291 =
      _tmp1221 * (-_tmp1282 * _y[2] + _tmp1283 * _y[0] + _tmp1284 * _y[3] - _tmp1285 * _y[1]);
  const Scalar _tmp1292 = _tmp1282 * _y[3] - _tmp1283 * _y[1] + _tmp1284 * _y[2] - _tmp1285 * _y[0];
  const Scalar _tmp1293 = _tmp1282 * _y[1] + _tmp1283 * _y[3] - _tmp1284 * _y[0] - _tmp1285 * _y[2];
  const Scalar _tmp1294 = _tmp1221 * _tmp1293;
  const Scalar _tmp1295 = _tmp1221 * _tmp1292;
  const Scalar _tmp1296 = _tmp1288 * _tmp431;

  // Output terms (5)
  Eigen::Matrix<Scalar, 6, 1> _res;

  _res(0, 0) = _tmp148 * sqrt_info(0, 0) + _tmp149 * sqrt_info(0, 1) + _tmp150 * sqrt_info(0, 2) +
               _tmp151 * sqrt_info(0, 3) + _tmp152 * sqrt_info(0, 4) + _tmp153 * sqrt_info(0, 5);
  _res(1, 0) = _tmp148 * sqrt_info(1, 0) + _tmp149 * sqrt_info(1, 1) + _tmp150 * sqrt_info(1, 2) +
               _tmp151 * sqrt_info(1, 3) + _tmp152 * sqrt_info(1, 4) + _tmp153 * sqrt_info(1, 5);
  _res(2, 0) = _tmp148 * sqrt_info(2, 0) + _tmp149 * sqrt_info(2, 1) + _tmp150 * sqrt_info(2, 2) +
               _tmp151 * sqrt_info(2, 3) + _tmp152 * sqrt_info(2, 4) + _tmp153 * sqrt_info(2, 5);
  _res(3, 0) = _tmp148 * sqrt_info(3, 0) + _tmp149 * sqrt_info(3, 1) + _tmp150 * sqrt_info(3, 2) +
               _tmp151 * sqrt_info(3, 3) + _tmp152 * sqrt_info(3, 4) + _tmp153 * sqrt_info(3, 5);
  _res(4, 0) = _tmp148 * sqrt_info(4, 0) + _tmp149 * sqrt_info(4, 1) + _tmp150 * sqrt_info(4, 2) +
               _tmp151 * sqrt_info(4, 3) + _tmp152 * sqrt_info(4, 4) + _tmp153 * sqrt_info(4, 5);
  _res(5, 0) = _tmp148 * sqrt_info(5, 0) + _tmp149 * sqrt_info(5, 1) + _tmp150 * sqrt_info(5, 2) +
               _tmp151 * sqrt_info(5, 3) + _tmp152 * sqrt_info(5, 4) + _tmp153 * sqrt_info(5, 5);

  if (res_D_x0 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x0{res_D_x0};

    _res_D_x0(0, 0) = _tmp410 * _tmp430 - _tmp432 * _tmp436 - _tmp433 * _tmp439 +
                      _tmp433 * _tmp449 - _tmp441 * sqrt_info(0, 1) + _tmp444 * sqrt_info(0, 1) +
                      _tmp446 * _tmp447 + _tmp446 * _tmp448 + _tmp451 * sqrt_info(0, 2);
    _res_D_x0(1, 0) = _tmp433 * _tmp456 - _tmp436 * _tmp453 - _tmp441 * sqrt_info(1, 1) +
                      _tmp444 * sqrt_info(1, 1) + _tmp446 * _tmp453 + _tmp446 * _tmp457 +
                      _tmp451 * sqrt_info(1, 2) + _tmp452 * sqrt_info(1, 0) -
                      _tmp454 * sqrt_info(1, 0);
    _res_D_x0(2, 0) = -_tmp441 * sqrt_info(2, 1) + _tmp442 * _tmp459 + _tmp446 * _tmp460 +
                      _tmp446 * _tmp461 + _tmp446 * _tmp462 + _tmp451 * sqrt_info(2, 2) +
                      _tmp452 * sqrt_info(2, 0) - _tmp454 * sqrt_info(2, 0) -
                      _tmp458 * sqrt_info(2, 2);
    _res_D_x0(3, 0) = _tmp410 * _tmp463 - _tmp436 * _tmp464 - _tmp436 * _tmp465 -
                      _tmp436 * _tmp466 + _tmp444 * sqrt_info(3, 1) + _tmp446 * _tmp464 +
                      _tmp446 * _tmp465 + _tmp446 * _tmp466 + _tmp450 * _tmp468;
    _res_D_x0(4, 0) = -_tmp436 * _tmp469 + _tmp444 * sqrt_info(4, 1) + _tmp446 * _tmp469 +
                      _tmp446 * _tmp470 + _tmp446 * _tmp471 + _tmp451 * sqrt_info(4, 2) +
                      _tmp452 * sqrt_info(4, 0) - _tmp454 * sqrt_info(4, 0) -
                      _tmp458 * sqrt_info(4, 2);
    _res_D_x0(5, 0) = -_tmp436 * _tmp472 + _tmp444 * sqrt_info(5, 1) + _tmp446 * _tmp472 +
                      _tmp446 * _tmp473 + _tmp446 * _tmp474 + _tmp450 * _tmp475 +
                      _tmp452 * sqrt_info(5, 0) - _tmp454 * sqrt_info(5, 0) -
                      _tmp458 * sqrt_info(5, 2);
    _res_D_x0(0, 1) = _tmp430 * _tmp522 - _tmp432 * _tmp524 + _tmp447 * _tmp527 +
                      _tmp448 * _tmp527 + _tmp449 * _tmp523 + _tmp519 * sqrt_info(0, 1) +
                      _tmp521 * sqrt_info(0, 2) - _tmp525 * sqrt_info(0, 1) -
                      _tmp526 * sqrt_info(0, 0);
    _res_D_x0(1, 1) = -_tmp453 * _tmp524 + _tmp453 * _tmp527 + _tmp456 * _tmp523 +
                      _tmp457 * _tmp527 + _tmp518 * _tmp528 + _tmp521 * sqrt_info(1, 2) -
                      _tmp525 * sqrt_info(1, 1) - _tmp526 * sqrt_info(1, 0) +
                      _tmp529 * sqrt_info(1, 0);
    _res_D_x0(2, 1) = _tmp459 * _tmp518 + _tmp461 * _tmp527 + _tmp462 * _tmp527 +
                      _tmp521 * sqrt_info(2, 2) + _tmp523 * _tmp531 - _tmp525 * sqrt_info(2, 1) -
                      _tmp526 * sqrt_info(2, 0) + _tmp529 * sqrt_info(2, 0) -
                      _tmp530 * sqrt_info(2, 2);
    _res_D_x0(3, 1) = _tmp463 * _tmp522 - _tmp464 * _tmp524 + _tmp464 * _tmp527 -
                      _tmp465 * _tmp524 - _tmp466 * _tmp524 + _tmp466 * _tmp527 +
                      _tmp468 * _tmp520 + _tmp518 * _tmp532 + _tmp523 * _tmp533;
    _res_D_x0(4, 1) = _tmp469 * _tmp527 + _tmp470 * _tmp527 + _tmp471 * _tmp527 +
                      _tmp519 * sqrt_info(4, 1) + _tmp521 * sqrt_info(4, 2) + _tmp522 * _tmp534 -
                      _tmp525 * sqrt_info(4, 1) - _tmp526 * sqrt_info(4, 0) -
                      _tmp530 * sqrt_info(4, 2);
    _res_D_x0(5, 1) = _tmp472 * _tmp527 + _tmp473 * _tmp527 + _tmp474 * _tmp527 +
                      _tmp475 * _tmp520 + _tmp519 * sqrt_info(5, 1) + _tmp522 * _tmp535 -
                      _tmp525 * sqrt_info(5, 1) - _tmp526 * sqrt_info(5, 0) -
                      _tmp530 * sqrt_info(5, 2);
    _res_D_x0(0, 2) = _tmp430 * _tmp568 - _tmp432 * _tmp575 + _tmp447 * _tmp574 +
                      _tmp448 * _tmp574 + _tmp449 * _tmp573 + _tmp570 * sqrt_info(0, 2) +
                      _tmp572 * sqrt_info(0, 1) - _tmp576 * sqrt_info(0, 1) -
                      _tmp577 * sqrt_info(0, 0);
    _res_D_x0(1, 2) = _tmp453 * _tmp574 - _tmp453 * _tmp575 + _tmp456 * _tmp573 +
                      _tmp457 * _tmp574 + _tmp570 * sqrt_info(1, 2) + _tmp572 * sqrt_info(1, 1) -
                      _tmp576 * sqrt_info(1, 1) - _tmp577 * sqrt_info(1, 0) +
                      _tmp578 * sqrt_info(1, 0);
    _res_D_x0(2, 2) = _tmp459 * _tmp571 + _tmp461 * _tmp574 + _tmp462 * _tmp574 +
                      _tmp531 * _tmp573 + _tmp570 * sqrt_info(2, 2) - _tmp576 * sqrt_info(2, 1) -
                      _tmp577 * sqrt_info(2, 0) + _tmp578 * sqrt_info(2, 0) -
                      _tmp579 * sqrt_info(2, 2);
    _res_D_x0(3, 2) = _tmp463 * _tmp568 + _tmp464 * _tmp574 - _tmp464 * _tmp575 -
                      _tmp465 * _tmp575 + _tmp466 * _tmp574 - _tmp466 * _tmp575 +
                      _tmp468 * _tmp569 + _tmp532 * _tmp571 + _tmp533 * _tmp573;
    _res_D_x0(4, 2) = _tmp469 * _tmp574 - _tmp469 * _tmp575 + _tmp470 * _tmp574 +
                      _tmp471 * _tmp574 + _tmp534 * _tmp568 + _tmp570 * sqrt_info(4, 2) +
                      _tmp572 * sqrt_info(4, 1) - _tmp577 * sqrt_info(4, 0) -
                      _tmp579 * sqrt_info(4, 2);
    _res_D_x0(5, 2) = _tmp472 * _tmp574 - _tmp472 * _tmp575 + _tmp473 * _tmp574 +
                      _tmp474 * _tmp574 + _tmp475 * _tmp569 + _tmp535 * _tmp568 +
                      _tmp572 * sqrt_info(5, 1) - _tmp577 * sqrt_info(5, 0) -
                      _tmp579 * sqrt_info(5, 2);
    _res_D_x0(0, 3) = _tmp580 * sqrt_info(0, 3);
    _res_D_x0(1, 3) = _tmp580 * sqrt_info(1, 3);
    _res_D_x0(2, 3) = _tmp580 * sqrt_info(2, 3);
    _res_D_x0(3, 3) = _tmp580 * sqrt_info(3, 3);
    _res_D_x0(4, 3) = _tmp580 * sqrt_info(4, 3);
    _res_D_x0(5, 3) = _tmp580 * sqrt_info(5, 3);
    _res_D_x0(0, 4) = _tmp580 * sqrt_info(0, 4);
    _res_D_x0(1, 4) = _tmp580 * sqrt_info(1, 4);
    _res_D_x0(2, 4) = _tmp580 * sqrt_info(2, 4);
    _res_D_x0(3, 4) = _tmp580 * sqrt_info(3, 4);
    _res_D_x0(4, 4) = _tmp580 * sqrt_info(4, 4);
    _res_D_x0(5, 4) = _tmp580 * sqrt_info(5, 4);
    _res_D_x0(0, 5) = _tmp580 * sqrt_info(0, 5);
    _res_D_x0(1, 5) = _tmp580 * sqrt_info(1, 5);
    _res_D_x0(2, 5) = _tmp580 * sqrt_info(2, 5);
    _res_D_x0(3, 5) = _tmp580 * sqrt_info(3, 5);
    _res_D_x0(4, 5) = _tmp580 * sqrt_info(4, 5);
    _res_D_x0(5, 5) = _tmp580 * sqrt_info(5, 5);
  }

  if (res_D_x1 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x1{res_D_x1};

    _res_D_x1(0, 0) = _tmp430 * _tmp752 - _tmp432 * _tmp745 - _tmp439 * _tmp744 +
                      _tmp447 * _tmp749 + _tmp448 * _tmp749 + _tmp449 * _tmp744 -
                      _tmp746 * sqrt_info(0, 1) + _tmp748 * sqrt_info(0, 1) +
                      _tmp751 * sqrt_info(0, 2);
    _res_D_x1(1, 0) = -_tmp453 * _tmp745 + _tmp453 * _tmp749 + _tmp456 * _tmp744 +
                      _tmp457 * _tmp749 - _tmp746 * sqrt_info(1, 1) + _tmp748 * sqrt_info(1, 1) +
                      _tmp751 * sqrt_info(1, 2) - _tmp753 * sqrt_info(1, 0) +
                      _tmp754 * sqrt_info(1, 0);
    _res_D_x1(2, 0) = _tmp459 * _tmp747 - _tmp460 * _tmp745 - _tmp461 * _tmp745 +
                      _tmp461 * _tmp749 + _tmp462 * _tmp749 + _tmp531 * _tmp744 +
                      _tmp751 * sqrt_info(2, 2) - _tmp753 * sqrt_info(2, 0) +
                      _tmp754 * sqrt_info(2, 0);
    _res_D_x1(3, 0) = -_tmp464 * _tmp745 + _tmp464 * _tmp749 - _tmp465 * _tmp745 -
                      _tmp466 * _tmp745 + _tmp466 * _tmp749 + _tmp468 * _tmp750 +
                      _tmp532 * _tmp747 + _tmp533 * _tmp744 + _tmp754 * sqrt_info(3, 0);
    _res_D_x1(4, 0) = -_tmp469 * _tmp745 + _tmp469 * _tmp749 - _tmp470 * _tmp745 +
                      _tmp470 * _tmp749 + _tmp471 * _tmp749 + _tmp748 * sqrt_info(4, 1) +
                      _tmp751 * sqrt_info(4, 2) - _tmp753 * sqrt_info(4, 0) +
                      _tmp754 * sqrt_info(4, 0);
    _res_D_x1(5, 0) = -_tmp472 * _tmp745 + _tmp472 * _tmp749 - _tmp473 * _tmp745 +
                      _tmp473 * _tmp749 + _tmp474 * _tmp749 + _tmp475 * _tmp750 +
                      _tmp748 * sqrt_info(5, 1) - _tmp753 * sqrt_info(5, 0) +
                      _tmp754 * sqrt_info(5, 0);
    _res_D_x1(0, 1) = _tmp430 * _tmp817 - _tmp432 * _tmp812 + _tmp447 * _tmp818 +
                      _tmp448 * _tmp818 + _tmp449 * _tmp811 - _tmp813 * sqrt_info(0, 0) -
                      _tmp814 * sqrt_info(0, 1) + _tmp816 * sqrt_info(0, 2) +
                      _tmp820 * sqrt_info(0, 1);
    _res_D_x1(1, 1) = -_tmp453 * _tmp812 + _tmp453 * _tmp818 + _tmp456 * _tmp811 +
                      _tmp457 * _tmp818 + _tmp528 * _tmp819 - _tmp813 * sqrt_info(1, 0) -
                      _tmp814 * sqrt_info(1, 1) + _tmp816 * sqrt_info(1, 2) +
                      _tmp821 * sqrt_info(1, 0);
    _res_D_x1(2, 1) = _tmp459 * _tmp819 + _tmp461 * _tmp818 + _tmp462 * _tmp818 +
                      _tmp531 * _tmp811 - _tmp813 * sqrt_info(2, 0) - _tmp814 * sqrt_info(2, 1) +
                      _tmp816 * sqrt_info(2, 2) + _tmp821 * sqrt_info(2, 0) -
                      _tmp822 * sqrt_info(2, 2);
    _res_D_x1(3, 1) = _tmp463 * _tmp817 - _tmp464 * _tmp812 + _tmp464 * _tmp818 -
                      _tmp465 * _tmp812 - _tmp466 * _tmp812 + _tmp466 * _tmp818 +
                      _tmp468 * _tmp815 + _tmp532 * _tmp819 + _tmp533 * _tmp811;
    _res_D_x1(4, 1) = -_tmp469 * _tmp812 + _tmp469 * _tmp818 + _tmp470 * _tmp818 +
                      _tmp471 * _tmp818 + _tmp534 * _tmp817 - _tmp813 * sqrt_info(4, 0) +
                      _tmp815 * _tmp823 + _tmp820 * sqrt_info(4, 1) - _tmp822 * sqrt_info(4, 2);
    _res_D_x1(5, 1) = _tmp472 * _tmp818 + _tmp473 * _tmp818 + _tmp474 * _tmp818 +
                      _tmp475 * _tmp815 - _tmp813 * sqrt_info(5, 0) - _tmp814 * sqrt_info(5, 1) +
                      _tmp820 * sqrt_info(5, 1) + _tmp821 * sqrt_info(5, 0) -
                      _tmp822 * sqrt_info(5, 2);
    _res_D_x1(0, 2) = _tmp430 * _tmp872 - _tmp432 * _tmp867 - _tmp439 * _tmp865 +
                      _tmp447 * _tmp866 + _tmp448 * _tmp866 - _tmp448 * _tmp867 +
                      _tmp449 * _tmp865 + _tmp869 * sqrt_info(0, 1) + _tmp871 * sqrt_info(0, 2);
    _res_D_x1(1, 2) = _tmp453 * _tmp866 - _tmp453 * _tmp867 - _tmp455 * _tmp867 +
                      _tmp456 * _tmp865 + _tmp457 * _tmp866 + _tmp528 * _tmp868 +
                      _tmp871 * sqrt_info(1, 2) - _tmp873 * sqrt_info(1, 0) +
                      _tmp874 * sqrt_info(1, 0);
    _res_D_x1(2, 2) = _tmp459 * _tmp868 - _tmp460 * _tmp867 + _tmp461 * _tmp866 -
                      _tmp461 * _tmp867 + _tmp462 * _tmp866 + _tmp531 * _tmp865 +
                      _tmp871 * sqrt_info(2, 2) - _tmp873 * sqrt_info(2, 0) +
                      _tmp874 * sqrt_info(2, 0);
    _res_D_x1(3, 2) = _tmp463 * _tmp872 + _tmp464 * _tmp866 - _tmp464 * _tmp867 -
                      _tmp465 * _tmp867 + _tmp466 * _tmp866 - _tmp466 * _tmp867 +
                      _tmp468 * _tmp870 + _tmp532 * _tmp868 + _tmp533 * _tmp865;
    _res_D_x1(4, 2) = _tmp469 * _tmp866 - _tmp469 * _tmp867 + _tmp470 * _tmp866 -
                      _tmp470 * _tmp867 + _tmp471 * _tmp866 + _tmp534 * _tmp872 +
                      _tmp823 * _tmp870 + _tmp869 * sqrt_info(4, 1) - _tmp873 * sqrt_info(4, 0);
    _res_D_x1(5, 2) = _tmp472 * _tmp866 - _tmp472 * _tmp867 + _tmp473 * _tmp866 -
                      _tmp473 * _tmp867 + _tmp474 * _tmp866 + _tmp475 * _tmp870 +
                      _tmp535 * _tmp872 + _tmp869 * sqrt_info(5, 1) - _tmp873 * sqrt_info(5, 0);
    _res_D_x1(0, 3) = _tmp875 * sqrt_info(0, 3);
    _res_D_x1(1, 3) = _tmp875 * sqrt_info(1, 3);
    _res_D_x1(2, 3) = _tmp875 * sqrt_info(2, 3);
    _res_D_x1(3, 3) = _tmp875 * sqrt_info(3, 3);
    _res_D_x1(4, 3) = _tmp875 * sqrt_info(4, 3);
    _res_D_x1(5, 3) = _tmp875 * sqrt_info(5, 3);
    _res_D_x1(0, 4) = _tmp875 * sqrt_info(0, 4);
    _res_D_x1(1, 4) = _tmp875 * sqrt_info(1, 4);
    _res_D_x1(2, 4) = _tmp875 * sqrt_info(2, 4);
    _res_D_x1(3, 4) = _tmp875 * sqrt_info(3, 4);
    _res_D_x1(4, 4) = _tmp875 * sqrt_info(4, 4);
    _res_D_x1(5, 4) = _tmp875 * sqrt_info(5, 4);
    _res_D_x1(0, 5) = _tmp875 * sqrt_info(0, 5);
    _res_D_x1(1, 5) = _tmp875 * sqrt_info(1, 5);
    _res_D_x1(2, 5) = _tmp875 * sqrt_info(2, 5);
    _res_D_x1(3, 5) = _tmp875 * sqrt_info(3, 5);
    _res_D_x1(4, 5) = _tmp875 * sqrt_info(4, 5);
    _res_D_x1(5, 5) = _tmp875 * sqrt_info(5, 5);
  }

  if (res_D_x2 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x2{res_D_x2};

    _res_D_x2(0, 0) = _tmp1040 * _tmp430 - _tmp1041 * _tmp439 + _tmp1041 * _tmp449 -
                      _tmp1042 * _tmp432 - _tmp1042 * _tmp448 + _tmp1043 * _tmp447 +
                      _tmp1043 * _tmp448 + _tmp1045 * sqrt_info(0, 2) + _tmp1047 * sqrt_info(0, 1);
    _res_D_x2(1, 0) = _tmp1041 * _tmp456 - _tmp1042 * _tmp453 - _tmp1042 * _tmp455 +
                      _tmp1043 * _tmp453 + _tmp1043 * _tmp457 + _tmp1045 * sqrt_info(1, 2) +
                      _tmp1047 * sqrt_info(1, 1) + _tmp1048 * sqrt_info(1, 0) -
                      _tmp1049 * sqrt_info(1, 0);
    _res_D_x2(2, 0) = _tmp1041 * _tmp531 - _tmp1042 * _tmp460 - _tmp1042 * _tmp461 +
                      _tmp1043 * _tmp461 + _tmp1043 * _tmp462 + _tmp1045 * sqrt_info(2, 2) +
                      _tmp1046 * _tmp459 + _tmp1048 * sqrt_info(2, 0) - _tmp1049 * sqrt_info(2, 0);
    _res_D_x2(3, 0) = _tmp1041 * _tmp533 - _tmp1042 * _tmp464 - _tmp1042 * _tmp465 -
                      _tmp1042 * _tmp466 + _tmp1043 * _tmp464 + _tmp1043 * _tmp466 +
                      _tmp1044 * _tmp468 + _tmp1046 * _tmp532 + _tmp1048 * sqrt_info(3, 0);
    _res_D_x2(4, 0) = -_tmp1042 * _tmp469 - _tmp1042 * _tmp470 + _tmp1043 * _tmp469 +
                      _tmp1043 * _tmp470 + _tmp1043 * _tmp471 + _tmp1045 * sqrt_info(4, 2) +
                      _tmp1047 * sqrt_info(4, 1) + _tmp1048 * sqrt_info(4, 0) -
                      _tmp1049 * sqrt_info(4, 0);
    _res_D_x2(5, 0) = -_tmp1042 * _tmp472 - _tmp1042 * _tmp473 + _tmp1043 * _tmp472 +
                      _tmp1043 * _tmp473 + _tmp1043 * _tmp474 + _tmp1044 * _tmp475 +
                      _tmp1047 * sqrt_info(5, 1) + _tmp1048 * sqrt_info(5, 0) -
                      _tmp1049 * sqrt_info(5, 0);
    _res_D_x2(0, 1) = -_tmp1113 * _tmp439 - _tmp1114 * _tmp432 - _tmp1114 * _tmp448 +
                      _tmp1116 * sqrt_info(0, 1) + _tmp1117 * _tmp432 + _tmp1117 * _tmp447 +
                      _tmp1117 * _tmp448 + _tmp1118 * _tmp430 + _tmp1120 * sqrt_info(0, 2);
    _res_D_x2(1, 1) = -_tmp1114 * _tmp453 - _tmp1114 * _tmp455 + _tmp1115 * _tmp528 +
                      _tmp1117 * _tmp453 + _tmp1117 * _tmp455 + _tmp1117 * _tmp457 +
                      _tmp1120 * sqrt_info(1, 2) - _tmp1121 * sqrt_info(1, 0) +
                      _tmp1122 * sqrt_info(1, 0);
    _res_D_x2(2, 1) = -_tmp1114 * _tmp460 - _tmp1114 * _tmp461 + _tmp1115 * _tmp459 +
                      _tmp1117 * _tmp460 + _tmp1117 * _tmp461 + _tmp1117 * _tmp462 +
                      _tmp1120 * sqrt_info(2, 2) - _tmp1121 * sqrt_info(2, 0) +
                      _tmp1122 * sqrt_info(2, 0);
    _res_D_x2(3, 1) = -_tmp1114 * _tmp464 - _tmp1114 * _tmp465 - _tmp1114 * _tmp466 +
                      _tmp1115 * _tmp532 + _tmp1117 * _tmp464 + _tmp1117 * _tmp465 +
                      _tmp1117 * _tmp466 + _tmp1119 * _tmp468 + _tmp1122 * sqrt_info(3, 0);
    _res_D_x2(4, 1) = -_tmp1114 * _tmp469 - _tmp1114 * _tmp470 + _tmp1116 * sqrt_info(4, 1) +
                      _tmp1117 * _tmp469 + _tmp1117 * _tmp470 + _tmp1117 * _tmp471 +
                      _tmp1119 * _tmp823 - _tmp1121 * sqrt_info(4, 0) + _tmp1122 * sqrt_info(4, 0);
    _res_D_x2(5, 1) = -_tmp1114 * _tmp472 - _tmp1114 * _tmp473 + _tmp1116 * sqrt_info(5, 1) +
                      _tmp1117 * _tmp472 + _tmp1117 * _tmp473 + _tmp1117 * _tmp474 +
                      _tmp1119 * _tmp475 - _tmp1121 * sqrt_info(5, 0) + _tmp1122 * sqrt_info(5, 0);
    _res_D_x2(0, 2) = _tmp1166 * sqrt_info(0, 2) + _tmp1168 * sqrt_info(0, 1) - _tmp1169 * _tmp439 -
                      _tmp1170 * _tmp432 - _tmp1170 * _tmp448 + _tmp1171 * _tmp430 +
                      _tmp1172 * _tmp432 + _tmp1172 * _tmp447 + _tmp1172 * _tmp448;
    _res_D_x2(1, 2) = _tmp1166 * sqrt_info(1, 2) + _tmp1168 * sqrt_info(1, 1) + _tmp1169 * _tmp456 -
                      _tmp1170 * _tmp453 - _tmp1170 * _tmp455 + _tmp1172 * _tmp453 +
                      _tmp1172 * _tmp457 - _tmp1173 * sqrt_info(1, 0) + _tmp1174 * sqrt_info(1, 0);
    _res_D_x2(2, 2) = _tmp1166 * sqrt_info(2, 2) + _tmp1167 * _tmp459 - _tmp1170 * _tmp460 -
                      _tmp1170 * _tmp461 + _tmp1172 * _tmp460 + _tmp1172 * _tmp461 +
                      _tmp1172 * _tmp462 - _tmp1173 * sqrt_info(2, 0) + _tmp1174 * sqrt_info(2, 0);
    _res_D_x2(3, 2) = _tmp1165 * _tmp468 + _tmp1167 * _tmp532 - _tmp1170 * _tmp464 -
                      _tmp1170 * _tmp465 - _tmp1170 * _tmp466 + _tmp1171 * _tmp463 +
                      _tmp1172 * _tmp464 + _tmp1172 * _tmp465 + _tmp1172 * _tmp466;
    _res_D_x2(4, 2) = _tmp1165 * _tmp823 + _tmp1168 * sqrt_info(4, 1) - _tmp1170 * _tmp469 -
                      _tmp1170 * _tmp470 + _tmp1171 * _tmp534 + _tmp1172 * _tmp469 +
                      _tmp1172 * _tmp470 + _tmp1172 * _tmp471 - _tmp1173 * sqrt_info(4, 0);
    _res_D_x2(5, 2) = _tmp1165 * _tmp475 + _tmp1168 * sqrt_info(5, 1) - _tmp1170 * _tmp472 -
                      _tmp1170 * _tmp473 + _tmp1171 * _tmp535 + _tmp1172 * _tmp472 +
                      _tmp1172 * _tmp473 + _tmp1172 * _tmp474 - _tmp1173 * sqrt_info(5, 0);
    _res_D_x2(0, 3) = _tmp1175 * sqrt_info(0, 3);
    _res_D_x2(1, 3) = _tmp1175 * sqrt_info(1, 3);
    _res_D_x2(2, 3) = _tmp1175 * sqrt_info(2, 3);
    _res_D_x2(3, 3) = _tmp1175 * sqrt_info(3, 3);
    _res_D_x2(4, 3) = _tmp1175 * sqrt_info(4, 3);
    _res_D_x2(5, 3) = _tmp1175 * sqrt_info(5, 3);
    _res_D_x2(0, 4) = _tmp1175 * sqrt_info(0, 4);
    _res_D_x2(1, 4) = _tmp1175 * sqrt_info(1, 4);
    _res_D_x2(2, 4) = _tmp1175 * sqrt_info(2, 4);
    _res_D_x2(3, 4) = _tmp1175 * sqrt_info(3, 4);
    _res_D_x2(4, 4) = _tmp1175 * sqrt_info(4, 4);
    _res_D_x2(5, 4) = _tmp1175 * sqrt_info(5, 4);
    _res_D_x2(0, 5) = _tmp1175 * sqrt_info(0, 5);
    _res_D_x2(1, 5) = _tmp1175 * sqrt_info(1, 5);
    _res_D_x2(2, 5) = _tmp1175 * sqrt_info(2, 5);
    _res_D_x2(3, 5) = _tmp1175 * sqrt_info(3, 5);
    _res_D_x2(4, 5) = _tmp1175 * sqrt_info(4, 5);
    _res_D_x2(5, 5) = _tmp1175 * sqrt_info(5, 5);
  }

  if (res_D_x3 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x3{res_D_x3};

    _res_D_x3(0, 0) = _tmp1215 * _tmp432 + _tmp1215 * _tmp447 + _tmp1215 * _tmp448 -
                      _tmp1217 * _tmp432 - _tmp1217 * _tmp448 - _tmp1218 * sqrt_info(0, 0) +
                      _tmp1220 * _tmp429 + _tmp1222 * sqrt_info(0, 1) + _tmp1224 * sqrt_info(0, 2);
    _res_D_x3(1, 0) = _tmp1215 * _tmp453 + _tmp1215 * _tmp455 + _tmp1215 * _tmp457 -
                      _tmp1217 * _tmp453 - _tmp1217 * _tmp455 - _tmp1217 * _tmp457 +
                      _tmp1222 * sqrt_info(1, 1) + _tmp1224 * sqrt_info(1, 2) +
                      _tmp1225 * sqrt_info(1, 0);
    _res_D_x3(2, 0) = _tmp1215 * _tmp460 + _tmp1215 * _tmp461 + _tmp1215 * _tmp462 -
                      _tmp1217 * _tmp460 - _tmp1217 * _tmp461 - _tmp1218 * sqrt_info(2, 0) +
                      _tmp1222 * sqrt_info(2, 1) + _tmp1224 * sqrt_info(2, 2) +
                      _tmp1225 * sqrt_info(2, 0);
    _res_D_x3(3, 0) = _tmp1215 * _tmp464 + _tmp1215 * _tmp465 + _tmp1215 * _tmp466 -
                      _tmp1217 * _tmp464 - _tmp1217 * _tmp465 - _tmp1217 * _tmp466 +
                      _tmp1222 * sqrt_info(3, 1) + _tmp1223 * _tmp1226 + _tmp1225 * sqrt_info(3, 0);
    _res_D_x3(4, 0) = _tmp1215 * _tmp469 + _tmp1215 * _tmp470 + _tmp1215 * _tmp471 -
                      _tmp1217 * _tmp469 - _tmp1217 * _tmp470 - _tmp1218 * sqrt_info(4, 0) +
                      _tmp1222 * sqrt_info(4, 1) + _tmp1224 * sqrt_info(4, 2) +
                      _tmp1225 * sqrt_info(4, 0);
    _res_D_x3(5, 0) = _tmp1215 * _tmp472 + _tmp1215 * _tmp473 + _tmp1215 * _tmp474 -
                      _tmp1217 * _tmp472 - _tmp1217 * _tmp473 - _tmp1217 * _tmp474 +
                      _tmp1222 * sqrt_info(5, 1) + _tmp1224 * sqrt_info(5, 2) +
                      _tmp1225 * sqrt_info(5, 0);
    _res_D_x3(0, 1) = _tmp1250 * _tmp1251 + _tmp1253 * sqrt_info(0, 2) + _tmp1255 * _tmp432 +
                      _tmp1255 * _tmp447 + _tmp1255 * _tmp448 + _tmp1256 * sqrt_info(0, 1) -
                      _tmp1257 * _tmp432 - _tmp1257 * _tmp448 - _tmp1258 * sqrt_info(0, 0);
    _res_D_x3(1, 1) = _tmp1253 * sqrt_info(1, 2) + _tmp1255 * _tmp453 + _tmp1255 * _tmp455 +
                      _tmp1255 * _tmp457 + _tmp1256 * sqrt_info(1, 1) - _tmp1257 * _tmp453 -
                      _tmp1257 * _tmp455 - _tmp1257 * _tmp457 + _tmp1259 * sqrt_info(1, 0);
    _res_D_x3(2, 1) = _tmp1253 * sqrt_info(2, 2) + _tmp1255 * _tmp460 + _tmp1255 * _tmp461 +
                      _tmp1255 * _tmp462 + _tmp1256 * sqrt_info(2, 1) - _tmp1257 * _tmp460 -
                      _tmp1257 * _tmp461 - _tmp1258 * sqrt_info(2, 0) + _tmp1259 * sqrt_info(2, 0);
    _res_D_x3(3, 1) = _tmp1226 * _tmp1252 + _tmp1255 * _tmp464 + _tmp1255 * _tmp465 +
                      _tmp1255 * _tmp466 + _tmp1256 * sqrt_info(3, 1) - _tmp1257 * _tmp464 -
                      _tmp1257 * _tmp465 - _tmp1257 * _tmp466 + _tmp1259 * sqrt_info(3, 0);
    _res_D_x3(4, 1) = _tmp1253 * sqrt_info(4, 2) + _tmp1255 * _tmp469 + _tmp1255 * _tmp470 +
                      _tmp1255 * _tmp471 + _tmp1256 * sqrt_info(4, 1) - _tmp1257 * _tmp469 -
                      _tmp1257 * _tmp470 - _tmp1258 * sqrt_info(4, 0) + _tmp1259 * sqrt_info(4, 0);
    _res_D_x3(5, 1) = _tmp1253 * sqrt_info(5, 2) + _tmp1255 * _tmp472 + _tmp1255 * _tmp473 +
                      _tmp1255 * _tmp474 + _tmp1256 * sqrt_info(5, 1) - _tmp1257 * _tmp472 -
                      _tmp1257 * _tmp473 - _tmp1258 * sqrt_info(5, 0) + _tmp1259 * sqrt_info(5, 0);
    _res_D_x3(0, 2) = _tmp1251 * _tmp1292 + _tmp1287 * _tmp432 + _tmp1287 * _tmp447 +
                      _tmp1287 * _tmp448 - _tmp1288 * _tmp432 - _tmp1289 * sqrt_info(0, 1) -
                      _tmp1290 * sqrt_info(0, 0) + _tmp1291 * sqrt_info(0, 1) +
                      _tmp1294 * sqrt_info(0, 2);
    _res_D_x3(1, 2) = _tmp1287 * _tmp453 + _tmp1287 * _tmp455 + _tmp1287 * _tmp457 -
                      _tmp1288 * _tmp453 - _tmp1289 * sqrt_info(1, 1) - _tmp1290 * sqrt_info(1, 0) +
                      _tmp1291 * sqrt_info(1, 1) + _tmp1294 * sqrt_info(1, 2) +
                      _tmp1295 * sqrt_info(1, 0);
    _res_D_x3(2, 2) = _tmp1287 * _tmp460 + _tmp1287 * _tmp461 + _tmp1287 * _tmp462 -
                      _tmp1289 * sqrt_info(2, 1) - _tmp1290 * sqrt_info(2, 0) +
                      _tmp1291 * sqrt_info(2, 1) + _tmp1294 * sqrt_info(2, 2) +
                      _tmp1295 * sqrt_info(2, 0) - _tmp1296 * sqrt_info(2, 2);
    _res_D_x3(3, 2) = _tmp1226 * _tmp1293 + _tmp1287 * _tmp464 + _tmp1287 * _tmp465 +
                      _tmp1287 * _tmp466 - _tmp1288 * _tmp464 - _tmp1288 * _tmp466 +
                      _tmp1291 * sqrt_info(3, 1) + _tmp1295 * sqrt_info(3, 0) -
                      _tmp1296 * sqrt_info(3, 2);
    _res_D_x3(4, 2) = _tmp1287 * _tmp469 + _tmp1287 * _tmp470 + _tmp1287 * _tmp471 -
                      _tmp1289 * sqrt_info(4, 1) - _tmp1290 * sqrt_info(4, 0) +
                      _tmp1291 * sqrt_info(4, 1) + _tmp1294 * sqrt_info(4, 2) +
                      _tmp1295 * sqrt_info(4, 0) - _tmp1296 * sqrt_info(4, 2);
    _res_D_x3(5, 2) = _tmp1287 * _tmp472 + _tmp1287 * _tmp473 + _tmp1287 * _tmp474 -
                      _tmp1289 * sqrt_info(5, 1) - _tmp1290 * sqrt_info(5, 0) +
                      _tmp1291 * sqrt_info(5, 1) + _tmp1294 * sqrt_info(5, 2) +
                      _tmp1295 * sqrt_info(5, 0) - _tmp1296 * sqrt_info(5, 2);
    _res_D_x3(0, 3) = lambdas(2, 0) * sqrt_info(0, 3);
    _res_D_x3(1, 3) = lambdas(2, 0) * sqrt_info(1, 3);
    _res_D_x3(2, 3) = lambdas(2, 0) * sqrt_info(2, 3);
    _res_D_x3(3, 3) = lambdas(2, 0) * sqrt_info(3, 3);
    _res_D_x3(4, 3) = lambdas(2, 0) * sqrt_info(4, 3);
    _res_D_x3(5, 3) = lambdas(2, 0) * sqrt_info(5, 3);
    _res_D_x3(0, 4) = lambdas(2, 0) * sqrt_info(0, 4);
    _res_D_x3(1, 4) = lambdas(2, 0) * sqrt_info(1, 4);
    _res_D_x3(2, 4) = lambdas(2, 0) * sqrt_info(2, 4);
    _res_D_x3(3, 4) = lambdas(2, 0) * sqrt_info(3, 4);
    _res_D_x3(4, 4) = lambdas(2, 0) * sqrt_info(4, 4);
    _res_D_x3(5, 4) = lambdas(2, 0) * sqrt_info(5, 4);
    _res_D_x3(0, 5) = lambdas(2, 0) * sqrt_info(0, 5);
    _res_D_x3(1, 5) = lambdas(2, 0) * sqrt_info(1, 5);
    _res_D_x3(2, 5) = lambdas(2, 0) * sqrt_info(2, 5);
    _res_D_x3(3, 5) = lambdas(2, 0) * sqrt_info(3, 5);
    _res_D_x3(4, 5) = lambdas(2, 0) * sqrt_info(4, 5);
    _res_D_x3(5, 5) = lambdas(2, 0) * sqrt_info(5, 5);
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_hyperion
