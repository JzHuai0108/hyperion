// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/rot3.h>

namespace sym_hyperion {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline4_rot3_acceleration_factor
 *
 * Args:
 *     dt: Scalar
 *     lambdas: Matrix43
 *     x0: Rot3
 *     x1: Rot3
 *     x2: Rot3
 *     x3: Rot3
 *     x4: Rot3
 *     acceleration: Matrix31
 *     sqrt_info: Matrix33
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix31
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 3, 1> Spline4Rot3AccelerationLocalFactor(
    const Scalar dt, const Eigen::Matrix<Scalar, 4, 3>& lambdas, const sym::Rot3<Scalar>& x0,
    const sym::Rot3<Scalar>& x1, const sym::Rot3<Scalar>& x2, const sym::Rot3<Scalar>& x3,
    const sym::Rot3<Scalar>& x4, const Eigen::Matrix<Scalar, 3, 1>& acceleration,
    const Eigen::Matrix<Scalar, 3, 3>& sqrt_info, const Scalar epsilon) {
  // Total ops: 533

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x3 = x3.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x4 = x4.Data();

  // Intermediate terms (178)
  const Scalar _tmp0 = std::pow(dt, Scalar(-2));
  const Scalar _tmp1 = -_x3[0] * _x4[3] - _x3[1] * _x4[2] + _x3[2] * _x4[1] + _x3[3] * _x4[0];
  const Scalar _tmp2 = std::pow(_tmp1, Scalar(2));
  const Scalar _tmp3 = -_x3[0] * _x4[0] - _x3[1] * _x4[1] - _x3[2] * _x4[2];
  const Scalar _tmp4 = _x3[3] * _x4[3];
  const Scalar _tmp5 = 1 - epsilon;
  const Scalar _tmp6 = std::min<Scalar>(_tmp5, std::fabs(_tmp3 - _tmp4));
  const Scalar _tmp7 = std::acos(_tmp6);
  const Scalar _tmp8 =
      2 * std::min<Scalar>(0, (((-_tmp3 + _tmp4) > 0) - ((-_tmp3 + _tmp4) < 0))) + 1;
  const Scalar _tmp9 = 1 - std::pow(_tmp6, Scalar(2));
  const Scalar _tmp10 = std::pow(_tmp7, Scalar(2)) * std::pow(_tmp8, Scalar(2)) *
                        std::pow(lambdas(3, 0), Scalar(2)) / _tmp9;
  const Scalar _tmp11 = 4 * _tmp10;
  const Scalar _tmp12 = _x3[0] * _x4[2] - _x3[1] * _x4[3] - _x3[2] * _x4[0] + _x3[3] * _x4[1];
  const Scalar _tmp13 = std::pow(_tmp12, Scalar(2));
  const Scalar _tmp14 = -_x3[0] * _x4[1] + _x3[1] * _x4[0] - _x3[2] * _x4[3] + _x3[3] * _x4[2];
  const Scalar _tmp15 = std::pow(_tmp14, Scalar(2));
  const Scalar _tmp16 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp17 = _tmp11 * _tmp13 + _tmp11 * _tmp15 + _tmp11 * _tmp2 + _tmp16;
  const Scalar _tmp18 = std::sqrt(_tmp17);
  const Scalar _tmp19 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp20 = std::sin(_tmp19);
  const Scalar _tmp21 = 8 * _tmp10 * std::pow(_tmp20, Scalar(2)) / _tmp17;
  const Scalar _tmp22 = -_tmp2 * _tmp21;
  const Scalar _tmp23 = -_tmp13 * _tmp21;
  const Scalar _tmp24 = _tmp22 + _tmp23 + 1;
  const Scalar _tmp25 = -_x2[0] * _x3[1] + _x2[1] * _x3[0] - _x2[2] * _x3[3] + _x2[3] * _x3[2];
  const Scalar _tmp26 = -_x2[0] * _x3[0] - _x2[1] * _x3[1] - _x2[2] * _x3[2];
  const Scalar _tmp27 = _x2[3] * _x3[3];
  const Scalar _tmp28 = std::min<Scalar>(_tmp5, std::fabs(_tmp26 - _tmp27));
  const Scalar _tmp29 = std::acos(_tmp28);
  const Scalar _tmp30 =
      2 * std::min<Scalar>(0, (((-_tmp26 + _tmp27) > 0) - ((-_tmp26 + _tmp27) < 0))) + 1;
  const Scalar _tmp31 = 1 - std::pow(_tmp28, Scalar(2));
  const Scalar _tmp32 = _tmp29 * _tmp30 / std::sqrt(_tmp31);
  const Scalar _tmp33 = 2 * _tmp32;
  const Scalar _tmp34 = _tmp25 * _tmp33;
  const Scalar _tmp35 = -_x1[0] * _x2[3] - _x1[1] * _x2[2] + _x1[2] * _x2[1] + _x1[3] * _x2[0];
  const Scalar _tmp36 = -_x1[0] * _x2[0] - _x1[1] * _x2[1] - _x1[2] * _x2[2];
  const Scalar _tmp37 = _x1[3] * _x2[3];
  const Scalar _tmp38 = std::min<Scalar>(_tmp5, std::fabs(_tmp36 - _tmp37));
  const Scalar _tmp39 = 1 - std::pow(_tmp38, Scalar(2));
  const Scalar _tmp40 = std::acos(_tmp38);
  const Scalar _tmp41 =
      2 * std::min<Scalar>(0, (((-_tmp36 + _tmp37) > 0) - ((-_tmp36 + _tmp37) < 0))) + 1;
  const Scalar _tmp42 = _tmp40 * _tmp41 / std::sqrt(_tmp39);
  const Scalar _tmp43 = 2 * _tmp42;
  const Scalar _tmp44 = _tmp35 * _tmp43;
  const Scalar _tmp45 = _tmp44 * lambdas(1, 1);
  const Scalar _tmp46 = -_x1[0] * _x2[1] + _x1[1] * _x2[0] - _x1[2] * _x2[3] + _x1[3] * _x2[2];
  const Scalar _tmp47 = std::pow(_tmp46, Scalar(2));
  const Scalar _tmp48 = _x1[0] * _x2[2] - _x1[1] * _x2[3] - _x1[2] * _x2[0] + _x1[3] * _x2[1];
  const Scalar _tmp49 = std::pow(_tmp48, Scalar(2));
  const Scalar _tmp50 = std::pow(_tmp40, Scalar(2)) * std::pow(_tmp41, Scalar(2)) *
                        std::pow(lambdas(1, 0), Scalar(2)) / _tmp39;
  const Scalar _tmp51 = 4 * _tmp50;
  const Scalar _tmp52 = std::pow(_tmp35, Scalar(2));
  const Scalar _tmp53 = _tmp16 + _tmp47 * _tmp51 + _tmp49 * _tmp51 + _tmp51 * _tmp52;
  const Scalar _tmp54 = std::sqrt(_tmp53);
  const Scalar _tmp55 = (Scalar(1) / Scalar(2)) * _tmp54;
  const Scalar _tmp56 = std::sin(_tmp55);
  const Scalar _tmp57 = 8 * _tmp50 * std::pow(_tmp56, Scalar(2)) / _tmp53;
  const Scalar _tmp58 = -_tmp47 * _tmp57;
  const Scalar _tmp59 = -_tmp49 * _tmp57;
  const Scalar _tmp60 = _tmp58 + _tmp59 + 1;
  const Scalar _tmp61 = -_x0[0] * _x1[3] - _x0[1] * _x1[2] + _x0[2] * _x1[1] + _x0[3] * _x1[0];
  const Scalar _tmp62 = -_x0[0] * _x1[0] - _x0[1] * _x1[1] - _x0[2] * _x1[2];
  const Scalar _tmp63 = _x0[3] * _x1[3];
  const Scalar _tmp64 = std::min<Scalar>(_tmp5, std::fabs(_tmp62 - _tmp63));
  const Scalar _tmp65 =
      2 * (2 * std::min<Scalar>(0, (((-_tmp62 + _tmp63) > 0) - ((-_tmp62 + _tmp63) < 0))) + 1) *
      std::acos(_tmp64) / std::sqrt(Scalar(1 - std::pow(_tmp64, Scalar(2))));
  const Scalar _tmp66 = _tmp65 * lambdas(0, 1);
  const Scalar _tmp67 = _tmp61 * _tmp66;
  const Scalar _tmp68 = 4 * _tmp42 * _tmp56 * lambdas(1, 0) * std::cos(_tmp55) / _tmp54;
  const Scalar _tmp69 = _tmp46 * _tmp68;
  const Scalar _tmp70 = _tmp35 * _tmp57;
  const Scalar _tmp71 = _tmp48 * _tmp70;
  const Scalar _tmp72 = _tmp69 + _tmp71;
  const Scalar _tmp73 = _x0[0] * _x1[2] - _x0[1] * _x1[3] - _x0[2] * _x1[0] + _x0[3] * _x1[1];
  const Scalar _tmp74 = _tmp66 * _tmp73;
  const Scalar _tmp75 = -_x0[0] * _x1[1] + _x0[1] * _x1[0] - _x0[2] * _x1[3] + _x0[3] * _x1[2];
  const Scalar _tmp76 = _tmp48 * _tmp68;
  const Scalar _tmp77 = _tmp46 * _tmp70;
  const Scalar _tmp78 = _tmp75 * (-_tmp76 + _tmp77);
  const Scalar _tmp79 = _tmp60 * _tmp67 + _tmp66 * _tmp78 + _tmp72 * _tmp74;
  const Scalar _tmp80 = _tmp45 + _tmp79;
  const Scalar _tmp81 = std::pow(_tmp25, Scalar(2));
  const Scalar _tmp82 = std::pow(_tmp29, Scalar(2)) * std::pow(_tmp30, Scalar(2)) *
                        std::pow(lambdas(2, 0), Scalar(2)) / _tmp31;
  const Scalar _tmp83 = 4 * _tmp82;
  const Scalar _tmp84 = _x2[0] * _x3[2] - _x2[1] * _x3[3] - _x2[2] * _x3[0] + _x2[3] * _x3[1];
  const Scalar _tmp85 = std::pow(_tmp84, Scalar(2));
  const Scalar _tmp86 = -_x2[0] * _x3[3] - _x2[1] * _x3[2] + _x2[2] * _x3[1] + _x2[3] * _x3[0];
  const Scalar _tmp87 = std::pow(_tmp86, Scalar(2));
  const Scalar _tmp88 = _tmp16 + _tmp81 * _tmp83 + _tmp83 * _tmp85 + _tmp83 * _tmp87;
  const Scalar _tmp89 = std::sqrt(_tmp88);
  const Scalar _tmp90 = (Scalar(1) / Scalar(2)) * _tmp89;
  const Scalar _tmp91 = std::sin(_tmp90);
  const Scalar _tmp92 = 4 * _tmp32 * _tmp91 * lambdas(2, 0) * std::cos(_tmp90) / _tmp89;
  const Scalar _tmp93 = _tmp25 * _tmp92;
  const Scalar _tmp94 = 8 * _tmp82 * std::pow(_tmp91, Scalar(2)) / _tmp88;
  const Scalar _tmp95 = _tmp84 * _tmp94;
  const Scalar _tmp96 = _tmp86 * _tmp95;
  const Scalar _tmp97 = -_tmp93 + _tmp96;
  const Scalar _tmp98 = _tmp43 * _tmp46;
  const Scalar _tmp99 = _tmp98 * lambdas(1, 1);
  const Scalar _tmp100 = -_tmp52 * _tmp57 + 1;
  const Scalar _tmp101 = _tmp75 * (_tmp100 + _tmp59);
  const Scalar _tmp102 = _tmp46 * _tmp48 * _tmp57;
  const Scalar _tmp103 = _tmp35 * _tmp68;
  const Scalar _tmp104 = _tmp102 - _tmp103;
  const Scalar _tmp105 = _tmp76 + _tmp77;
  const Scalar _tmp106 = _tmp101 * _tmp66 + _tmp104 * _tmp74 + _tmp105 * _tmp67;
  const Scalar _tmp107 = _tmp106 + _tmp99;
  const Scalar _tmp108 = _tmp86 * _tmp92;
  const Scalar _tmp109 = _tmp25 * _tmp95;
  const Scalar _tmp110 = _tmp108 + _tmp109;
  const Scalar _tmp111 = -_tmp87 * _tmp94;
  const Scalar _tmp112 = -_tmp81 * _tmp94 + 1;
  const Scalar _tmp113 = _tmp111 + _tmp112;
  const Scalar _tmp114 = _tmp43 * _tmp48;
  const Scalar _tmp115 = _tmp114 * lambdas(1, 1);
  const Scalar _tmp116 = _tmp61 * (-_tmp69 + _tmp71);
  const Scalar _tmp117 = _tmp75 * (_tmp102 + _tmp103);
  const Scalar _tmp118 = _tmp100 + _tmp58;
  const Scalar _tmp119 = _tmp116 * _tmp66 + _tmp117 * _tmp66 + _tmp118 * _tmp74;
  const Scalar _tmp120 = _tmp115 + _tmp119;
  const Scalar _tmp121 = _tmp107 * _tmp110 + _tmp113 * _tmp120 + _tmp80 * _tmp97;
  const Scalar _tmp122 = _tmp33 * lambdas(2, 1);
  const Scalar _tmp123 = _tmp122 * _tmp86;
  const Scalar _tmp124 = _tmp93 + _tmp96;
  const Scalar _tmp125 = -_tmp85 * _tmp94;
  const Scalar _tmp126 = _tmp112 + _tmp125;
  const Scalar _tmp127 = _tmp25 * _tmp86 * _tmp94;
  const Scalar _tmp128 = _tmp84 * _tmp92;
  const Scalar _tmp129 = _tmp127 - _tmp128;
  const Scalar _tmp130 = _tmp107 * _tmp129 + _tmp120 * _tmp124 + _tmp126 * _tmp80;
  const Scalar _tmp131 = _tmp122 * _tmp84;
  const Scalar _tmp132 = _tmp65 * lambdas(0, 2);
  const Scalar _tmp133 = _tmp132 * _tmp73;
  const Scalar _tmp134 = _tmp132 * _tmp61;
  const Scalar _tmp135 = _tmp101 * _tmp132 + _tmp104 * _tmp133 + _tmp105 * _tmp134 +
                         _tmp115 * _tmp79 - _tmp119 * _tmp45 + _tmp98 * lambdas(1, 2);
  const Scalar _tmp136 = _tmp111 + _tmp125 + 1;
  const Scalar _tmp137 = -_tmp106 * _tmp115 + _tmp119 * _tmp99 + _tmp132 * _tmp78 +
                         _tmp133 * _tmp72 + _tmp134 * _tmp60 + _tmp44 * lambdas(1, 2);
  const Scalar _tmp138 = _tmp127 + _tmp128;
  const Scalar _tmp139 = _tmp106 * _tmp45 + _tmp114 * lambdas(1, 2) + _tmp116 * _tmp132 +
                         _tmp117 * _tmp132 + _tmp118 * _tmp133 - _tmp79 * _tmp99;
  const Scalar _tmp140 = -_tmp108 + _tmp109;
  const Scalar _tmp141 = -_tmp121 * _tmp123 + _tmp130 * _tmp131 + _tmp135 * _tmp136 +
                         _tmp137 * _tmp138 + _tmp139 * _tmp140 + _tmp34 * lambdas(2, 2);
  const Scalar _tmp142 = _tmp7 * _tmp8 / std::sqrt(_tmp9);
  const Scalar _tmp143 = 4 * _tmp142 * _tmp20 * lambdas(3, 0) * std::cos(_tmp19) / _tmp18;
  const Scalar _tmp144 = _tmp12 * _tmp143;
  const Scalar _tmp145 = _tmp1 * _tmp21;
  const Scalar _tmp146 = _tmp14 * _tmp145;
  const Scalar _tmp147 = _tmp144 + _tmp146;
  const Scalar _tmp148 = _tmp33 * lambdas(2, 2);
  const Scalar _tmp149 = _tmp107 * _tmp136 + _tmp120 * _tmp140 + _tmp138 * _tmp80;
  const Scalar _tmp150 = _tmp34 * lambdas(2, 1);
  const Scalar _tmp151 = _tmp121 * _tmp150 + _tmp124 * _tmp139 + _tmp126 * _tmp137 +
                         _tmp129 * _tmp135 - _tmp131 * _tmp149 + _tmp148 * _tmp86;
  const Scalar _tmp152 = _tmp12 * _tmp14 * _tmp21;
  const Scalar _tmp153 = _tmp1 * _tmp143;
  const Scalar _tmp154 = _tmp152 - _tmp153;
  const Scalar _tmp155 = _tmp110 * _tmp135 + _tmp113 * _tmp139 + _tmp123 * _tmp149 -
                         _tmp130 * _tmp150 + _tmp137 * _tmp97 + _tmp148 * _tmp84;
  const Scalar _tmp156 = 2 * _tmp142;
  const Scalar _tmp157 = _tmp156 * lambdas(3, 2);
  const Scalar _tmp158 = _tmp12 * _tmp145;
  const Scalar _tmp159 = _tmp14 * _tmp143;
  const Scalar _tmp160 = _tmp158 + _tmp159;
  const Scalar _tmp161 = _tmp121 + _tmp131;
  const Scalar _tmp162 = _tmp123 + _tmp130;
  const Scalar _tmp163 = -_tmp15 * _tmp21 + 1;
  const Scalar _tmp164 = _tmp163 + _tmp23;
  const Scalar _tmp165 = -_tmp144 + _tmp146;
  const Scalar _tmp166 = _tmp149 + _tmp150;
  const Scalar _tmp167 = _tmp160 * _tmp161 + _tmp162 * _tmp164 + _tmp165 * _tmp166;
  const Scalar _tmp168 = _tmp156 * lambdas(3, 1);
  const Scalar _tmp169 = _tmp152 + _tmp153;
  const Scalar _tmp170 = _tmp163 + _tmp22;
  const Scalar _tmp171 = _tmp158 - _tmp159;
  const Scalar _tmp172 = _tmp161 * _tmp170 + _tmp162 * _tmp171 + _tmp166 * _tmp169;
  const Scalar _tmp173 =
      _tmp0 * (-_tmp1 * _tmp168 * _tmp172 + _tmp12 * _tmp167 * _tmp168 + _tmp14 * _tmp157 +
               _tmp141 * _tmp24 + _tmp147 * _tmp151 + _tmp154 * _tmp155) -
      acceleration(2, 0);
  const Scalar _tmp174 = _tmp14 * _tmp168;
  const Scalar _tmp175 = _tmp168 * (_tmp147 * _tmp162 + _tmp154 * _tmp161 + _tmp166 * _tmp24);
  const Scalar _tmp176 = _tmp0 * (_tmp1 * _tmp157 - _tmp12 * _tmp175 + _tmp141 * _tmp165 +
                                  _tmp151 * _tmp164 + _tmp155 * _tmp160 + _tmp172 * _tmp174) -
                         acceleration(0, 0);
  const Scalar _tmp177 = _tmp0 * (_tmp1 * _tmp175 + _tmp12 * _tmp157 + _tmp141 * _tmp169 +
                                  _tmp151 * _tmp171 + _tmp155 * _tmp170 - _tmp167 * _tmp174) -
                         acceleration(1, 0);

  // Output terms (1)
  Eigen::Matrix<Scalar, 3, 1> _res;

  _res(0, 0) = _tmp173 * sqrt_info(0, 2) + _tmp176 * sqrt_info(0, 0) + _tmp177 * sqrt_info(0, 1);
  _res(1, 0) = _tmp173 * sqrt_info(1, 2) + _tmp176 * sqrt_info(1, 0) + _tmp177 * sqrt_info(1, 1);
  _res(2, 0) = _tmp173 * sqrt_info(2, 2) + _tmp176 * sqrt_info(2, 0) + _tmp177 * sqrt_info(2, 1);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_hyperion
