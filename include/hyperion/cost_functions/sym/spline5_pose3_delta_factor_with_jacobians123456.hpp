// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>

namespace sym_hyperion {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline5_pose3_delta_factor
 *
 * Args:
 *     lambdas: Matrix51
 *     x0: Pose3
 *     x1: Pose3
 *     x2: Pose3
 *     x3: Pose3
 *     x4: Pose3
 *     x5: Pose3
 *     y: Pose3
 *     sqrt_info: Matrix66
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix61
 *     res_D_x0: (6x6) jacobian of res (6) wrt arg x0 (6)
 *     res_D_x1: (6x6) jacobian of res (6) wrt arg x1 (6)
 *     res_D_x2: (6x6) jacobian of res (6) wrt arg x2 (6)
 *     res_D_x3: (6x6) jacobian of res (6) wrt arg x3 (6)
 *     res_D_x4: (6x6) jacobian of res (6) wrt arg x4 (6)
 *     res_D_x5: (6x6) jacobian of res (6) wrt arg x5 (6)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 6, 1> Spline5Pose3DeltaFactorWithJacobians123456(
    const Eigen::Matrix<Scalar, 5, 1>& lambdas, const sym::Pose3<Scalar>& x0,
    const sym::Pose3<Scalar>& x1, const sym::Pose3<Scalar>& x2, const sym::Pose3<Scalar>& x3,
    const sym::Pose3<Scalar>& x4, const sym::Pose3<Scalar>& x5, const sym::Pose3<Scalar>& y,
    const Eigen::Matrix<Scalar, 6, 6>& sqrt_info, const Scalar epsilon,
    Scalar* const res_D_x0 = nullptr, Scalar* const res_D_x1 = nullptr,
    Scalar* const res_D_x2 = nullptr, Scalar* const res_D_x3 = nullptr,
    Scalar* const res_D_x4 = nullptr, Scalar* const res_D_x5 = nullptr) {
  // Total ops: 10327

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x3 = x3.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x4 = x4.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x5 = x5.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y = y.Data();

  // Intermediate terms (2092)
  const Scalar _tmp0 = _x0[5] - _y[5] + lambdas(0, 0) * (-_x0[5] + _x1[5]) +
                       lambdas(1, 0) * (-_x1[5] + _x2[5]) + lambdas(2, 0) * (-_x2[5] + _x3[5]) +
                       lambdas(3, 0) * (-_x3[5] + _x4[5]) + lambdas(4, 0) * (-_x4[5] + _x5[5]);
  const Scalar _tmp1 = _x0[4] - _y[4] + lambdas(0, 0) * (-_x0[4] + _x1[4]) +
                       lambdas(1, 0) * (-_x1[4] + _x2[4]) + lambdas(2, 0) * (-_x2[4] + _x3[4]) +
                       lambdas(3, 0) * (-_x3[4] + _x4[4]) + lambdas(4, 0) * (-_x4[4] + _x5[4]);
  const Scalar _tmp2 = _x0[6] - _y[6] + lambdas(0, 0) * (-_x0[6] + _x1[6]) +
                       lambdas(1, 0) * (-_x1[6] + _x2[6]) + lambdas(2, 0) * (-_x2[6] + _x3[6]) +
                       lambdas(3, 0) * (-_x3[6] + _x4[6]) + lambdas(4, 0) * (-_x4[6] + _x5[6]);
  const Scalar _tmp3 = 2 * sqrt_info(0, 0);
  const Scalar _tmp4 = _x2[2] * _x3[0];
  const Scalar _tmp5 = _x2[0] * _x3[2];
  const Scalar _tmp6 = _x2[3] * _x3[1];
  const Scalar _tmp7 = _x2[1] * _x3[3];
  const Scalar _tmp8 = -_tmp4 + _tmp5 + _tmp6 - _tmp7;
  const Scalar _tmp9 = _x2[2] * _x3[2];
  const Scalar _tmp10 = _x2[0] * _x3[0];
  const Scalar _tmp11 = _x2[1] * _x3[1];
  const Scalar _tmp12 = -_tmp10 - _tmp11 - _tmp9;
  const Scalar _tmp13 = _x2[3] * _x3[3];
  const Scalar _tmp14 =
      2 * std::min<Scalar>(0, (((-_tmp12 + _tmp13) > 0) - ((-_tmp12 + _tmp13) < 0))) + 1;
  const Scalar _tmp15 = 2 * _tmp14 * lambdas(2, 0);
  const Scalar _tmp16 = _tmp15 * _tmp8;
  const Scalar _tmp17 = _x3[0] * _x4[0];
  const Scalar _tmp18 = _x3[1] * _x4[1];
  const Scalar _tmp19 = _x3[2] * _x4[2];
  const Scalar _tmp20 = -_tmp17 - _tmp18 - _tmp19;
  const Scalar _tmp21 = _x3[3] * _x4[3];
  const Scalar _tmp22 = 1 - epsilon;
  const Scalar _tmp23 = std::min<Scalar>(_tmp22, std::fabs(_tmp20 - _tmp21));
  const Scalar _tmp24 = std::acos(_tmp23);
  const Scalar _tmp25 = 1 - std::pow(_tmp23, Scalar(2));
  const Scalar _tmp26 = std::pow(_tmp24, Scalar(2)) / _tmp25;
  const Scalar _tmp27 = _x3[3] * _x4[2];
  const Scalar _tmp28 = _x3[0] * _x4[1];
  const Scalar _tmp29 = _x3[1] * _x4[0];
  const Scalar _tmp30 = _x3[2] * _x4[3];
  const Scalar _tmp31 = _tmp27 - _tmp28 + _tmp29 - _tmp30;
  const Scalar _tmp32 = std::pow(_tmp31, Scalar(2));
  const Scalar _tmp33 =
      2 * std::min<Scalar>(0, (((-_tmp20 + _tmp21) > 0) - ((-_tmp20 + _tmp21) < 0))) + 1;
  const Scalar _tmp34 = std::pow(_tmp33, Scalar(2));
  const Scalar _tmp35 = std::pow(lambdas(3, 0), Scalar(2));
  const Scalar _tmp36 = 4 * _tmp34 * _tmp35;
  const Scalar _tmp37 = _tmp32 * _tmp36;
  const Scalar _tmp38 = _x3[3] * _x4[1];
  const Scalar _tmp39 = _x3[0] * _x4[2];
  const Scalar _tmp40 = _x3[1] * _x4[3];
  const Scalar _tmp41 = _x3[2] * _x4[0];
  const Scalar _tmp42 = _tmp38 + _tmp39 - _tmp40 - _tmp41;
  const Scalar _tmp43 = std::pow(_tmp42, Scalar(2));
  const Scalar _tmp44 = _tmp36 * _tmp43;
  const Scalar _tmp45 = _x3[3] * _x4[0];
  const Scalar _tmp46 = _x3[0] * _x4[3];
  const Scalar _tmp47 = _x3[1] * _x4[2];
  const Scalar _tmp48 = _x3[2] * _x4[1];
  const Scalar _tmp49 = _tmp45 - _tmp46 - _tmp47 + _tmp48;
  const Scalar _tmp50 = _tmp36 * std::pow(_tmp49, Scalar(2));
  const Scalar _tmp51 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp52 =
      std::sqrt(Scalar(_tmp26 * _tmp37 + _tmp26 * _tmp44 + _tmp26 * _tmp50 + _tmp51));
  const Scalar _tmp53 = (Scalar(1) / Scalar(2)) * _tmp52;
  const Scalar _tmp54 = std::cos(_tmp53);
  const Scalar _tmp55 = _x4[2] * _x5[2];
  const Scalar _tmp56 = _x4[1] * _x5[1];
  const Scalar _tmp57 = _x4[0] * _x5[0];
  const Scalar _tmp58 = -_tmp55 - _tmp56 - _tmp57;
  const Scalar _tmp59 = _x4[3] * _x5[3];
  const Scalar _tmp60 = std::min<Scalar>(_tmp22, std::fabs(_tmp58 - _tmp59));
  const Scalar _tmp61 = 1 - std::pow(_tmp60, Scalar(2));
  const Scalar _tmp62 = std::acos(_tmp60);
  const Scalar _tmp63 = std::pow(_tmp62, Scalar(2)) / _tmp61;
  const Scalar _tmp64 = _x4[0] * _x5[2];
  const Scalar _tmp65 = _x4[1] * _x5[3];
  const Scalar _tmp66 = _x4[3] * _x5[1];
  const Scalar _tmp67 = _x4[2] * _x5[0];
  const Scalar _tmp68 = _tmp64 - _tmp65 + _tmp66 - _tmp67;
  const Scalar _tmp69 =
      2 * std::min<Scalar>(0, (((-_tmp58 + _tmp59) > 0) - ((-_tmp58 + _tmp59) < 0))) + 1;
  const Scalar _tmp70 = std::pow(_tmp69, Scalar(2));
  const Scalar _tmp71 = std::pow(lambdas(4, 0), Scalar(2));
  const Scalar _tmp72 = 4 * _tmp70 * _tmp71;
  const Scalar _tmp73 = std::pow(_tmp68, Scalar(2)) * _tmp72;
  const Scalar _tmp74 = _x4[3] * _x5[2];
  const Scalar _tmp75 = _x4[2] * _x5[3];
  const Scalar _tmp76 = _x4[0] * _x5[1];
  const Scalar _tmp77 = _x4[1] * _x5[0];
  const Scalar _tmp78 = _tmp74 - _tmp75 - _tmp76 + _tmp77;
  const Scalar _tmp79 = _tmp72 * std::pow(_tmp78, Scalar(2));
  const Scalar _tmp80 = _x4[1] * _x5[2];
  const Scalar _tmp81 = _x4[0] * _x5[3];
  const Scalar _tmp82 = _x4[2] * _x5[1];
  const Scalar _tmp83 = _x4[3] * _x5[0];
  const Scalar _tmp84 = -_tmp80 - _tmp81 + _tmp82 + _tmp83;
  const Scalar _tmp85 = _tmp72 * std::pow(_tmp84, Scalar(2));
  const Scalar _tmp86 =
      std::sqrt(Scalar(_tmp51 + _tmp63 * _tmp73 + _tmp63 * _tmp79 + _tmp63 * _tmp85));
  const Scalar _tmp87 = (Scalar(1) / Scalar(2)) * _tmp86;
  const Scalar _tmp88 = std::cos(_tmp87);
  const Scalar _tmp89 = _tmp69 * lambdas(4, 0);
  const Scalar _tmp90 = _tmp68 * _tmp89;
  const Scalar _tmp91 = _tmp33 * lambdas(3, 0);
  const Scalar _tmp92 = _tmp42 * _tmp91;
  const Scalar _tmp93 = _tmp62 * std::sin(_tmp87) / (std::sqrt(_tmp61) * _tmp86);
  const Scalar _tmp94 = _tmp24 * std::sin(_tmp53) / (std::sqrt(_tmp25) * _tmp52);
  const Scalar _tmp95 = 4 * _tmp94;
  const Scalar _tmp96 = _tmp93 * _tmp95;
  const Scalar _tmp97 = _tmp92 * _tmp96;
  const Scalar _tmp98 = _tmp78 * _tmp89;
  const Scalar _tmp99 = _tmp31 * _tmp91;
  const Scalar _tmp100 = _tmp96 * _tmp99;
  const Scalar _tmp101 = _tmp84 * _tmp89;
  const Scalar _tmp102 = _tmp101 * _tmp93;
  const Scalar _tmp103 = _tmp102 * _tmp95;
  const Scalar _tmp104 = _tmp49 * _tmp91;
  const Scalar _tmp105 = -_tmp100 * _tmp98 - _tmp103 * _tmp104 + _tmp54 * _tmp88 - _tmp90 * _tmp97;
  const Scalar _tmp106 = std::min<Scalar>(_tmp22, std::fabs(_tmp12 - _tmp13));
  const Scalar _tmp107 = 1 - std::pow(_tmp106, Scalar(2));
  const Scalar _tmp108 = std::acos(_tmp106);
  const Scalar _tmp109 = _x2[2] * _x3[3];
  const Scalar _tmp110 = _x2[0] * _x3[1];
  const Scalar _tmp111 = _x2[3] * _x3[2];
  const Scalar _tmp112 = _x2[1] * _x3[0];
  const Scalar _tmp113 = -_tmp109 - _tmp110 + _tmp111 + _tmp112;
  const Scalar _tmp114 = std::pow(_tmp113, Scalar(2));
  const Scalar _tmp115 = std::pow(_tmp14, Scalar(2)) * std::pow(lambdas(2, 0), Scalar(2));
  const Scalar _tmp116 = 4 * _tmp115;
  const Scalar _tmp117 = std::pow(_tmp108, Scalar(2)) / _tmp107;
  const Scalar _tmp118 = _tmp116 * _tmp117;
  const Scalar _tmp119 = std::pow(_tmp8, Scalar(2));
  const Scalar _tmp120 = _x2[2] * _x3[1];
  const Scalar _tmp121 = _x2[0] * _x3[3];
  const Scalar _tmp122 = _x2[3] * _x3[0];
  const Scalar _tmp123 = _x2[1] * _x3[2];
  const Scalar _tmp124 = _tmp120 - _tmp121 + _tmp122 - _tmp123;
  const Scalar _tmp125 = _tmp116 * std::pow(_tmp124, Scalar(2));
  const Scalar _tmp126 =
      std::sqrt(Scalar(_tmp114 * _tmp118 + _tmp117 * _tmp125 + _tmp118 * _tmp119 + _tmp51));
  const Scalar _tmp127 = (Scalar(1) / Scalar(2)) * _tmp126;
  const Scalar _tmp128 = _tmp108 * std::sin(_tmp127) / (std::sqrt(_tmp107) * _tmp126);
  const Scalar _tmp129 = _tmp105 * _tmp128;
  const Scalar _tmp130 = _tmp113 * _tmp15;
  const Scalar _tmp131 = 2 * _tmp91;
  const Scalar _tmp132 = _tmp88 * _tmp94;
  const Scalar _tmp133 = _tmp131 * _tmp132;
  const Scalar _tmp134 = 2 * _tmp54;
  const Scalar _tmp135 = -_tmp100 * _tmp90 + _tmp102 * _tmp134 + _tmp133 * _tmp49 + _tmp97 * _tmp98;
  const Scalar _tmp136 = _tmp128 * _tmp135;
  const Scalar _tmp137 = _tmp104 * _tmp96;
  const Scalar _tmp138 = _tmp131 * _tmp31;
  const Scalar _tmp139 = _tmp134 * _tmp93;
  const Scalar _tmp140 =
      -_tmp103 * _tmp92 + _tmp132 * _tmp138 + _tmp137 * _tmp90 + _tmp139 * _tmp98;
  const Scalar _tmp141 = _tmp124 * _tmp15;
  const Scalar _tmp142 = _tmp128 * _tmp141;
  const Scalar _tmp143 = _tmp103 * _tmp99 + _tmp133 * _tmp42 - _tmp137 * _tmp98 + _tmp139 * _tmp90;
  const Scalar _tmp144 = std::cos(_tmp127);
  const Scalar _tmp145 =
      _tmp129 * _tmp16 + _tmp130 * _tmp136 - _tmp140 * _tmp142 + _tmp143 * _tmp144;
  const Scalar _tmp146 = _x1[0] * _x2[0];
  const Scalar _tmp147 = _x1[1] * _x2[1];
  const Scalar _tmp148 = _x1[2] * _x2[2];
  const Scalar _tmp149 = -_tmp146 - _tmp147 - _tmp148;
  const Scalar _tmp150 = _x1[3] * _x2[3];
  const Scalar _tmp151 = std::min<Scalar>(_tmp22, std::fabs(_tmp149 - _tmp150));
  const Scalar _tmp152 = 1 - std::pow(_tmp151, Scalar(2));
  const Scalar _tmp153 = std::acos(_tmp151);
  const Scalar _tmp154 = std::pow(_tmp153, Scalar(2)) / _tmp152;
  const Scalar _tmp155 = _x1[1] * _x2[3];
  const Scalar _tmp156 = _x1[2] * _x2[0];
  const Scalar _tmp157 = _x1[3] * _x2[1];
  const Scalar _tmp158 = _x1[0] * _x2[2];
  const Scalar _tmp159 = -_tmp155 - _tmp156 + _tmp157 + _tmp158;
  const Scalar _tmp160 = std::pow(_tmp159, Scalar(2));
  const Scalar _tmp161 =
      2 * std::min<Scalar>(0, (((-_tmp149 + _tmp150) > 0) - ((-_tmp149 + _tmp150) < 0))) + 1;
  const Scalar _tmp162 = std::pow(_tmp161, Scalar(2));
  const Scalar _tmp163 = std::pow(lambdas(1, 0), Scalar(2));
  const Scalar _tmp164 = 4 * _tmp162 * _tmp163;
  const Scalar _tmp165 = _tmp160 * _tmp164;
  const Scalar _tmp166 = _x1[2] * _x2[3];
  const Scalar _tmp167 = _x1[1] * _x2[0];
  const Scalar _tmp168 = _x1[0] * _x2[1];
  const Scalar _tmp169 = _x1[3] * _x2[2];
  const Scalar _tmp170 = -_tmp166 + _tmp167 - _tmp168 + _tmp169;
  const Scalar _tmp171 = _tmp164 * std::pow(_tmp170, Scalar(2));
  const Scalar _tmp172 = _x1[0] * _x2[3];
  const Scalar _tmp173 = _x1[3] * _x2[0];
  const Scalar _tmp174 = _x1[2] * _x2[1];
  const Scalar _tmp175 = _x1[1] * _x2[2];
  const Scalar _tmp176 = -_tmp172 + _tmp173 + _tmp174 - _tmp175;
  const Scalar _tmp177 = std::pow(_tmp176, Scalar(2));
  const Scalar _tmp178 = _tmp164 * _tmp177;
  const Scalar _tmp179 =
      std::sqrt(Scalar(_tmp154 * _tmp165 + _tmp154 * _tmp171 + _tmp154 * _tmp178 + _tmp51));
  const Scalar _tmp180 = (Scalar(1) / Scalar(2)) * _tmp179;
  const Scalar _tmp181 = std::cos(_tmp180);
  const Scalar _tmp182 = _tmp128 * _tmp130;
  const Scalar _tmp183 = _tmp128 * _tmp16;
  const Scalar _tmp184 =
      _tmp129 * _tmp141 + _tmp135 * _tmp144 + _tmp140 * _tmp183 - _tmp143 * _tmp182;
  const Scalar _tmp185 = _tmp153 * std::sin(_tmp180) / (std::sqrt(_tmp152) * _tmp179);
  const Scalar _tmp186 = _tmp184 * _tmp185;
  const Scalar _tmp187 = 2 * _tmp161 * lambdas(1, 0);
  const Scalar _tmp188 = _tmp170 * _tmp187;
  const Scalar _tmp189 =
      _tmp105 * _tmp144 - _tmp136 * _tmp141 - _tmp140 * _tmp182 - _tmp143 * _tmp183;
  const Scalar _tmp190 = _tmp159 * _tmp187;
  const Scalar _tmp191 = _tmp185 * _tmp190;
  const Scalar _tmp192 = _tmp176 * _tmp187;
  const Scalar _tmp193 =
      _tmp129 * _tmp130 - _tmp136 * _tmp16 + _tmp140 * _tmp144 + _tmp142 * _tmp143;
  const Scalar _tmp194 = _tmp185 * _tmp193;
  const Scalar _tmp195 =
      _tmp145 * _tmp181 + _tmp186 * _tmp188 + _tmp189 * _tmp191 - _tmp192 * _tmp194;
  const Scalar _tmp196 = _x0[0] * _x1[2];
  const Scalar _tmp197 = _x0[3] * _x1[1];
  const Scalar _tmp198 = _x0[1] * _x1[3];
  const Scalar _tmp199 = _x0[2] * _x1[0];
  const Scalar _tmp200 = _tmp196 + _tmp197 - _tmp198 - _tmp199;
  const Scalar _tmp201 = _x0[2] * _x1[2];
  const Scalar _tmp202 = _x0[1] * _x1[1];
  const Scalar _tmp203 = _x0[0] * _x1[0];
  const Scalar _tmp204 = -_tmp201 - _tmp202 - _tmp203;
  const Scalar _tmp205 = _x0[3] * _x1[3];
  const Scalar _tmp206 =
      2 * std::min<Scalar>(0, (((-_tmp204 + _tmp205) > 0) - ((-_tmp204 + _tmp205) < 0))) + 1;
  const Scalar _tmp207 = 2 * _tmp206 * lambdas(0, 0);
  const Scalar _tmp208 = std::min<Scalar>(_tmp22, std::fabs(_tmp204 - _tmp205));
  const Scalar _tmp209 = std::acos(_tmp208);
  const Scalar _tmp210 = 1 - std::pow(_tmp208, Scalar(2));
  const Scalar _tmp211 = std::pow(_tmp209, Scalar(2)) / _tmp210;
  const Scalar _tmp212 = _x0[3] * _x1[2];
  const Scalar _tmp213 = _x0[0] * _x1[1];
  const Scalar _tmp214 = _x0[2] * _x1[3];
  const Scalar _tmp215 = _x0[1] * _x1[0];
  const Scalar _tmp216 = _tmp212 - _tmp213 - _tmp214 + _tmp215;
  const Scalar _tmp217 = std::pow(_tmp206, Scalar(2));
  const Scalar _tmp218 = std::pow(lambdas(0, 0), Scalar(2));
  const Scalar _tmp219 = 4 * _tmp217 * _tmp218;
  const Scalar _tmp220 = std::pow(_tmp216, Scalar(2)) * _tmp219;
  const Scalar _tmp221 = std::pow(_tmp200, Scalar(2)) * _tmp219;
  const Scalar _tmp222 = _x0[1] * _x1[2];
  const Scalar _tmp223 = _x0[2] * _x1[1];
  const Scalar _tmp224 = _x0[0] * _x1[3];
  const Scalar _tmp225 = _x0[3] * _x1[0];
  const Scalar _tmp226 = -_tmp222 + _tmp223 - _tmp224 + _tmp225;
  const Scalar _tmp227 = _tmp219 * std::pow(_tmp226, Scalar(2));
  const Scalar _tmp228 =
      std::sqrt(Scalar(_tmp211 * _tmp220 + _tmp211 * _tmp221 + _tmp211 * _tmp227 + _tmp51));
  const Scalar _tmp229 = (Scalar(1) / Scalar(2)) * _tmp228;
  const Scalar _tmp230 = _tmp209 * std::sin(_tmp229) / (std::sqrt(_tmp210) * _tmp228);
  const Scalar _tmp231 = _tmp207 * _tmp230;
  const Scalar _tmp232 = _tmp200 * _tmp231;
  const Scalar _tmp233 = _tmp185 * _tmp189;
  const Scalar _tmp234 = _tmp145 * _tmp185;
  const Scalar _tmp235 =
      _tmp181 * _tmp184 - _tmp188 * _tmp234 + _tmp191 * _tmp193 + _tmp192 * _tmp233;
  const Scalar _tmp236 = _tmp207 * _tmp226;
  const Scalar _tmp237 = _tmp230 * _tmp236;
  const Scalar _tmp238 =
      _tmp181 * _tmp193 - _tmp186 * _tmp190 + _tmp188 * _tmp233 + _tmp192 * _tmp234;
  const Scalar _tmp239 = _tmp216 * _tmp231;
  const Scalar _tmp240 = std::cos(_tmp229);
  const Scalar _tmp241 =
      -_tmp145 * _tmp191 + _tmp181 * _tmp189 - _tmp186 * _tmp192 - _tmp188 * _tmp194;
  const Scalar _tmp242 =
      -_tmp195 * _tmp232 - _tmp235 * _tmp237 - _tmp238 * _tmp239 + _tmp240 * _tmp241;
  const Scalar _tmp243 =
      _tmp195 * _tmp237 - _tmp232 * _tmp235 + _tmp238 * _tmp240 + _tmp239 * _tmp241;
  const Scalar _tmp244 =
      -_tmp195 * _tmp239 + _tmp232 * _tmp238 + _tmp235 * _tmp240 + _tmp237 * _tmp241;
  const Scalar _tmp245 =
      _tmp195 * _tmp240 + _tmp232 * _tmp241 + _tmp235 * _tmp239 - _tmp237 * _tmp238;
  const Scalar _tmp246 = _tmp242 * _x0[0] + _tmp243 * _x0[1] + _tmp244 * _x0[3] - _tmp245 * _x0[2];
  const Scalar _tmp247 = _tmp242 * _x0[2] + _tmp243 * _x0[3] - _tmp244 * _x0[1] + _tmp245 * _x0[0];
  const Scalar _tmp248 = _tmp242 * _x0[1] - _tmp243 * _x0[0] + _tmp244 * _x0[2] + _tmp245 * _x0[3];
  const Scalar _tmp249 = _tmp242 * _x0[3] - _tmp243 * _x0[2] - _tmp244 * _x0[0] - _tmp245 * _x0[1];
  const Scalar _tmp250 = _tmp246 * _y[0] + _tmp247 * _y[2] + _tmp248 * _y[1] + _tmp249 * _y[3];
  const Scalar _tmp251 = std::min<Scalar>(_tmp22, std::fabs(_tmp250));
  const Scalar _tmp252 = (2 * std::min<Scalar>(0, (((_tmp250) > 0) - ((_tmp250) < 0))) + 1) *
                         std::acos(_tmp251) / std::sqrt(Scalar(1 - std::pow(_tmp251, Scalar(2))));
  const Scalar _tmp253 =
      _tmp252 * (_tmp246 * _y[3] - _tmp247 * _y[1] + _tmp248 * _y[2] - _tmp249 * _y[0]);
  const Scalar _tmp254 = 2 * _tmp252;
  const Scalar _tmp255 =
      _tmp254 * (_tmp246 * _y[1] + _tmp247 * _y[3] - _tmp248 * _y[0] - _tmp249 * _y[2]);
  const Scalar _tmp256 = 2 * sqrt_info(0, 1);
  const Scalar _tmp257 = -_tmp246 * _y[2] + _tmp247 * _y[0] + _tmp248 * _y[3] - _tmp249 * _y[1];
  const Scalar _tmp258 = _tmp252 * _tmp257;
  const Scalar _tmp259 = 2 * _tmp253;
  const Scalar _tmp260 = 2 * sqrt_info(1, 1);
  const Scalar _tmp261 = _tmp254 * _tmp257;
  const Scalar _tmp262 = (Scalar(1) / Scalar(2)) * _tmp222;
  const Scalar _tmp263 = (Scalar(1) / Scalar(2)) * _tmp223;
  const Scalar _tmp264 = (Scalar(1) / Scalar(2)) * _tmp224;
  const Scalar _tmp265 = (Scalar(1) / Scalar(2)) * _tmp225;
  const Scalar _tmp266 = -_tmp262 + _tmp263 - _tmp264 + _tmp265;
  const Scalar _tmp267 = _tmp201 + _tmp202 + _tmp203 + _tmp205;
  const Scalar _tmp268 = std::fabs(_tmp267);
  const Scalar _tmp269 = ((((_tmp22 - _tmp268) > 0) - ((_tmp22 - _tmp268) < 0)) + 1) *
                         (((_tmp267) > 0) - ((_tmp267) < 0));
  const Scalar _tmp270 = _tmp266 * _tmp269;
  const Scalar _tmp271 = std::min<Scalar>(_tmp22, _tmp268);
  const Scalar _tmp272 = std::acos(_tmp271);
  const Scalar _tmp273 = std::pow(_tmp272, Scalar(2));
  const Scalar _tmp274 = 1 - std::pow(_tmp271, Scalar(2));
  const Scalar _tmp275 = _tmp271 * _tmp273 / std::pow(_tmp274, Scalar(2));
  const Scalar _tmp276 = _tmp227 * _tmp275;
  const Scalar _tmp277 = _tmp272 / (_tmp274 * std::sqrt(_tmp274));
  const Scalar _tmp278 = _tmp269 * _tmp277;
  const Scalar _tmp279 = _tmp220 * _tmp278;
  const Scalar _tmp280 = (Scalar(1) / Scalar(2)) * _tmp201;
  const Scalar _tmp281 = (Scalar(1) / Scalar(2)) * _tmp202;
  const Scalar _tmp282 = (Scalar(1) / Scalar(2)) * _tmp205;
  const Scalar _tmp283 = (Scalar(1) / Scalar(2)) * _tmp203;
  const Scalar _tmp284 = -_tmp280 - _tmp281 - _tmp282 - _tmp283;
  const Scalar _tmp285 = Scalar(1.0) / (_tmp274);
  const Scalar _tmp286 = _tmp273 * _tmp285;
  const Scalar _tmp287 = 8 * _tmp217 * _tmp218 * _tmp286;
  const Scalar _tmp288 = _tmp226 * _tmp287;
  const Scalar _tmp289 = _tmp221 * _tmp277;
  const Scalar _tmp290 = _tmp269 * _tmp289;
  const Scalar _tmp291 = _tmp227 * _tmp278;
  const Scalar _tmp292 = _tmp221 * _tmp275;
  const Scalar _tmp293 = _tmp220 * _tmp275;
  const Scalar _tmp294 = (Scalar(1) / Scalar(2)) * _tmp196;
  const Scalar _tmp295 = (Scalar(1) / Scalar(2)) * _tmp197;
  const Scalar _tmp296 = (Scalar(1) / Scalar(2)) * _tmp198;
  const Scalar _tmp297 = (Scalar(1) / Scalar(2)) * _tmp199;
  const Scalar _tmp298 = -_tmp294 - _tmp295 + _tmp296 + _tmp297;
  const Scalar _tmp299 = _tmp216 * _tmp298;
  const Scalar _tmp300 = (Scalar(1) / Scalar(2)) * _tmp212;
  const Scalar _tmp301 = (Scalar(1) / Scalar(2)) * _tmp213;
  const Scalar _tmp302 = (Scalar(1) / Scalar(2)) * _tmp214;
  const Scalar _tmp303 = (Scalar(1) / Scalar(2)) * _tmp215;
  const Scalar _tmp304 = _tmp300 - _tmp301 - _tmp302 + _tmp303;
  const Scalar _tmp305 = _tmp200 * _tmp287;
  const Scalar _tmp306 = _tmp287 * _tmp299 + _tmp304 * _tmp305;
  const Scalar _tmp307 = -_tmp266 * _tmp279 - _tmp266 * _tmp290 - _tmp266 * _tmp291 +
                         _tmp270 * _tmp276 + _tmp270 * _tmp292 + _tmp270 * _tmp293 +
                         _tmp284 * _tmp288 + _tmp306;
  const Scalar _tmp308 = _tmp272 / std::sqrt(_tmp274);
  const Scalar _tmp309 = _tmp206 * lambdas(0, 0);
  const Scalar _tmp310 = _tmp308 * _tmp309;
  const Scalar _tmp311 = _tmp200 * _tmp310;
  const Scalar _tmp312 = _tmp307 * _tmp311;
  const Scalar _tmp313 = _tmp55 + _tmp56 + _tmp57 + _tmp59;
  const Scalar _tmp314 = std::fabs(_tmp313);
  const Scalar _tmp315 = std::min<Scalar>(_tmp22, _tmp314);
  const Scalar _tmp316 = 1 - std::pow(_tmp315, Scalar(2));
  const Scalar _tmp317 = std::acos(_tmp315);
  const Scalar _tmp318 = _tmp317 / std::sqrt(_tmp316);
  const Scalar _tmp319 = _tmp101 * _tmp318;
  const Scalar _tmp320 = _tmp17 + _tmp18 + _tmp19 + _tmp21;
  const Scalar _tmp321 = std::fabs(_tmp320);
  const Scalar _tmp322 = std::min<Scalar>(_tmp22, _tmp321);
  const Scalar _tmp323 = 1 - std::pow(_tmp322, Scalar(2));
  const Scalar _tmp324 = std::acos(_tmp322);
  const Scalar _tmp325 = _tmp324 / std::sqrt(_tmp323);
  const Scalar _tmp326 = _tmp325 * _tmp91;
  const Scalar _tmp327 = _tmp326 * _tmp42;
  const Scalar _tmp328 = Scalar(1.0) / (_tmp316);
  const Scalar _tmp329 = std::pow(_tmp317, Scalar(2));
  const Scalar _tmp330 = _tmp328 * _tmp329;
  const Scalar _tmp331 = _tmp330 * _tmp73 + _tmp330 * _tmp79 + _tmp330 * _tmp85 + _tmp51;
  const Scalar _tmp332 = std::sqrt(_tmp331);
  const Scalar _tmp333 = Scalar(1.0) / (_tmp332);
  const Scalar _tmp334 = Scalar(1.0) / (_tmp323);
  const Scalar _tmp335 = std::pow(_tmp324, Scalar(2));
  const Scalar _tmp336 = _tmp334 * _tmp335;
  const Scalar _tmp337 = _tmp336 * _tmp36;
  const Scalar _tmp338 = _tmp32 * _tmp337 + _tmp336 * _tmp50 + _tmp337 * _tmp43 + _tmp51;
  const Scalar _tmp339 = std::sqrt(_tmp338);
  const Scalar _tmp340 = (Scalar(1) / Scalar(2)) * _tmp339;
  const Scalar _tmp341 = std::sin(_tmp340);
  const Scalar _tmp342 = Scalar(1.0) / (_tmp339);
  const Scalar _tmp343 = (Scalar(1) / Scalar(2)) * _tmp332;
  const Scalar _tmp344 = std::sin(_tmp343);
  const Scalar _tmp345 = _tmp341 * _tmp342 * _tmp344;
  const Scalar _tmp346 = _tmp333 * _tmp345;
  const Scalar _tmp347 = 4 * _tmp346;
  const Scalar _tmp348 = _tmp327 * _tmp347;
  const Scalar _tmp349 = std::cos(_tmp343);
  const Scalar _tmp350 = _tmp341 * _tmp349;
  const Scalar _tmp351 = _tmp342 * _tmp350;
  const Scalar _tmp352 = _tmp325 * _tmp351;
  const Scalar _tmp353 = _tmp131 * _tmp352;
  const Scalar _tmp354 = _tmp318 * _tmp89;
  const Scalar _tmp355 = _tmp354 * _tmp68;
  const Scalar _tmp356 = _tmp326 * _tmp49;
  const Scalar _tmp357 = _tmp347 * _tmp356;
  const Scalar _tmp358 = std::cos(_tmp340);
  const Scalar _tmp359 = _tmp344 * _tmp358;
  const Scalar _tmp360 = _tmp333 * _tmp359;
  const Scalar _tmp361 = 2 * _tmp360;
  const Scalar _tmp362 = _tmp354 * _tmp361;
  const Scalar _tmp363 =
      _tmp31 * _tmp353 - _tmp319 * _tmp348 + _tmp355 * _tmp357 + _tmp362 * _tmp78;
  const Scalar _tmp364 = _tmp10 + _tmp11 + _tmp13 + _tmp9;
  const Scalar _tmp365 = std::fabs(_tmp364);
  const Scalar _tmp366 = std::min<Scalar>(_tmp22, _tmp365);
  const Scalar _tmp367 = 1 - std::pow(_tmp366, Scalar(2));
  const Scalar _tmp368 = Scalar(1.0) / (_tmp367);
  const Scalar _tmp369 = std::acos(_tmp366);
  const Scalar _tmp370 = std::pow(_tmp369, Scalar(2));
  const Scalar _tmp371 = _tmp368 * _tmp370;
  const Scalar _tmp372 = _tmp116 * _tmp371;
  const Scalar _tmp373 = _tmp114 * _tmp372 + _tmp119 * _tmp372 + _tmp125 * _tmp371 + _tmp51;
  const Scalar _tmp374 = std::sqrt(_tmp373);
  const Scalar _tmp375 = (Scalar(1) / Scalar(2)) * _tmp374;
  const Scalar _tmp376 = std::sin(_tmp375);
  const Scalar _tmp377 = _tmp376 / _tmp374;
  const Scalar _tmp378 = _tmp369 / std::sqrt(_tmp367);
  const Scalar _tmp379 = _tmp377 * _tmp378;
  const Scalar _tmp380 = _tmp15 * _tmp379;
  const Scalar _tmp381 = _tmp124 * _tmp380;
  const Scalar _tmp382 = _tmp31 * _tmp326;
  const Scalar _tmp383 = _tmp347 * _tmp382;
  const Scalar _tmp384 = _tmp354 * _tmp78;
  const Scalar _tmp385 = _tmp347 * _tmp384;
  const Scalar _tmp386 =
      _tmp319 * _tmp361 + _tmp327 * _tmp385 + _tmp353 * _tmp49 - _tmp355 * _tmp383;
  const Scalar _tmp387 = _tmp113 * _tmp380;
  const Scalar _tmp388 = _tmp349 * _tmp358;
  const Scalar _tmp389 = -_tmp319 * _tmp357 - _tmp348 * _tmp355 - _tmp382 * _tmp385 + _tmp388;
  const Scalar _tmp390 = _tmp16 * _tmp379;
  const Scalar _tmp391 = std::cos(_tmp375);
  const Scalar _tmp392 =
      _tmp319 * _tmp383 + _tmp353 * _tmp42 - _tmp356 * _tmp385 + _tmp362 * _tmp68;
  const Scalar _tmp393 = _tmp391 * _tmp392;
  const Scalar _tmp394 = -_tmp363 * _tmp381 + _tmp386 * _tmp387 + _tmp389 * _tmp390 + _tmp393;
  const Scalar _tmp395 = _tmp146 + _tmp147 + _tmp148 + _tmp150;
  const Scalar _tmp396 = std::fabs(_tmp395);
  const Scalar _tmp397 = std::min<Scalar>(_tmp22, _tmp396);
  const Scalar _tmp398 = 1 - std::pow(_tmp397, Scalar(2));
  const Scalar _tmp399 = Scalar(1.0) / (_tmp398);
  const Scalar _tmp400 = std::acos(_tmp397);
  const Scalar _tmp401 = std::pow(_tmp400, Scalar(2));
  const Scalar _tmp402 = _tmp399 * _tmp401;
  const Scalar _tmp403 = _tmp164 * _tmp402;
  const Scalar _tmp404 = _tmp160 * _tmp403 + _tmp171 * _tmp402 + _tmp177 * _tmp403 + _tmp51;
  const Scalar _tmp405 = std::sqrt(_tmp404);
  const Scalar _tmp406 = (Scalar(1) / Scalar(2)) * _tmp405;
  const Scalar _tmp407 = std::sin(_tmp406);
  const Scalar _tmp408 = _tmp407 / _tmp405;
  const Scalar _tmp409 = _tmp400 / std::sqrt(_tmp398);
  const Scalar _tmp410 = _tmp408 * _tmp409;
  const Scalar _tmp411 = _tmp187 * _tmp410;
  const Scalar _tmp412 = _tmp170 * _tmp411;
  const Scalar _tmp413 = std::cos(_tmp406);
  const Scalar _tmp414 = _tmp386 * _tmp391;
  const Scalar _tmp415 = _tmp363 * _tmp390 + _tmp381 * _tmp389 - _tmp387 * _tmp392 + _tmp414;
  const Scalar _tmp416 = _tmp413 * _tmp415;
  const Scalar _tmp417 = _tmp363 * _tmp391;
  const Scalar _tmp418 = _tmp381 * _tmp392 - _tmp386 * _tmp390 + _tmp387 * _tmp389 + _tmp417;
  const Scalar _tmp419 = _tmp190 * _tmp410;
  const Scalar _tmp420 = _tmp389 * _tmp391;
  const Scalar _tmp421 = _tmp124 * _tmp386;
  const Scalar _tmp422 = -_tmp363 * _tmp387 - _tmp380 * _tmp421 - _tmp390 * _tmp392 + _tmp420;
  const Scalar _tmp423 = _tmp176 * _tmp411;
  const Scalar _tmp424 = -_tmp394 * _tmp412 + _tmp416 + _tmp418 * _tmp419 + _tmp422 * _tmp423;
  const Scalar _tmp425 = _tmp220 * _tmp286 + _tmp221 * _tmp286 + _tmp227 * _tmp286 + _tmp51;
  const Scalar _tmp426 = std::sqrt(_tmp425);
  const Scalar _tmp427 = (Scalar(1) / Scalar(2)) * _tmp426;
  const Scalar _tmp428 = std::cos(_tmp427);
  const Scalar _tmp429 = _tmp424 * _tmp428;
  const Scalar _tmp430 = (Scalar(1) / Scalar(2)) / _tmp425;
  const Scalar _tmp431 = _tmp429 * _tmp430;
  const Scalar _tmp432 = std::sin(_tmp427);
  const Scalar _tmp433 = _tmp432 / (_tmp425 * std::sqrt(_tmp425));
  const Scalar _tmp434 = _tmp311 * _tmp433;
  const Scalar _tmp435 = _tmp307 * _tmp434;
  const Scalar _tmp436 = _tmp413 * _tmp418;
  const Scalar _tmp437 = _tmp394 * _tmp423 + _tmp412 * _tmp422 - _tmp415 * _tmp419 + _tmp436;
  const Scalar _tmp438 = _tmp432 / _tmp426;
  const Scalar _tmp439 = (Scalar(1) / Scalar(4)) * _tmp438;
  const Scalar _tmp440 = _tmp307 * _tmp439;
  const Scalar _tmp441 = _tmp309 * _tmp438;
  const Scalar _tmp442 = _tmp285 * _tmp441;
  const Scalar _tmp443 = _tmp200 * _tmp442;
  const Scalar _tmp444 = _tmp424 * _tmp443;
  const Scalar _tmp445 = _tmp413 * _tmp422;
  const Scalar _tmp446 = -_tmp394 * _tmp419 - _tmp412 * _tmp418 - _tmp415 * _tmp423 + _tmp445;
  const Scalar _tmp447 = _tmp433 * _tmp446;
  const Scalar _tmp448 = _tmp216 * _tmp310;
  const Scalar _tmp449 = _tmp447 * _tmp448;
  const Scalar _tmp450 = _tmp271 * _tmp441;
  const Scalar _tmp451 = _tmp278 * _tmp450;
  const Scalar _tmp452 = _tmp266 * _tmp451;
  const Scalar _tmp453 = _tmp394 * _tmp413;
  const Scalar _tmp454 = _tmp412 * _tmp415 - _tmp418 * _tmp423 + _tmp419 * _tmp422 + _tmp453;
  const Scalar _tmp455 = _tmp226 * _tmp454;
  const Scalar _tmp456 = _tmp428 * _tmp446;
  const Scalar _tmp457 = _tmp430 * _tmp456;
  const Scalar _tmp458 = _tmp448 * _tmp457;
  const Scalar _tmp459 = _tmp442 * _tmp446;
  const Scalar _tmp460 = _tmp216 * _tmp459;
  const Scalar _tmp461 = _tmp226 * _tmp310;
  const Scalar _tmp462 = _tmp428 * _tmp454;
  const Scalar _tmp463 = _tmp430 * _tmp462;
  const Scalar _tmp464 = _tmp461 * _tmp463;
  const Scalar _tmp465 = _tmp200 * _tmp424;
  const Scalar _tmp466 = _tmp216 * _tmp452;
  const Scalar _tmp467 = _tmp226 * _tmp442;
  const Scalar _tmp468 = _tmp270 * _tmp454;
  const Scalar _tmp469 = _tmp308 * _tmp438;
  const Scalar _tmp470 = _tmp207 * _tmp469;
  const Scalar _tmp471 = _tmp454 * _tmp470;
  const Scalar _tmp472 = _tmp284 * _tmp471;
  const Scalar _tmp473 = _tmp433 * _tmp461;
  const Scalar _tmp474 = _tmp307 * _tmp473;
  const Scalar _tmp475 = _tmp446 * _tmp470;
  const Scalar _tmp476 = _tmp424 * _tmp470;
  const Scalar _tmp477 = _tmp298 * _tmp475 - _tmp304 * _tmp476;
  const Scalar _tmp478 = _tmp270 * _tmp444 - _tmp270 * _tmp460 - _tmp307 * _tmp449 +
                         _tmp307 * _tmp458 + _tmp307 * _tmp464 - _tmp312 * _tmp431 +
                         _tmp424 * _tmp435 - _tmp437 * _tmp440 + _tmp446 * _tmp466 +
                         _tmp452 * _tmp455 - _tmp452 * _tmp465 - _tmp454 * _tmp474 -
                         _tmp467 * _tmp468 + _tmp472 + _tmp477;
  const Scalar _tmp479 = _tmp236 * _tmp469;
  const Scalar _tmp480 = _tmp216 * _tmp470;
  const Scalar _tmp481 = _tmp200 * _tmp475 + _tmp424 * _tmp480 - _tmp437 * _tmp479 + _tmp462;
  const Scalar _tmp482 = _tmp481 * _x0[0];
  const Scalar _tmp483 = (Scalar(1) / Scalar(2)) * _tmp482;
  const Scalar _tmp484 = -_tmp483;
  const Scalar _tmp485 = _tmp284 * _tmp476;
  const Scalar _tmp486 = -_tmp485;
  const Scalar _tmp487 = _tmp200 * _tmp454;
  const Scalar _tmp488 = _tmp424 * _tmp467;
  const Scalar _tmp489 = _tmp431 * _tmp461;
  const Scalar _tmp490 = _tmp433 * _tmp448;
  const Scalar _tmp491 = _tmp437 * _tmp490;
  const Scalar _tmp492 = _tmp216 * _tmp437;
  const Scalar _tmp493 = _tmp428 * _tmp437;
  const Scalar _tmp494 = _tmp430 * _tmp493;
  const Scalar _tmp495 = _tmp448 * _tmp494;
  const Scalar _tmp496 = _tmp216 * _tmp442;
  const Scalar _tmp497 = _tmp437 * _tmp496;
  const Scalar _tmp498 = _tmp226 * _tmp424;
  const Scalar _tmp499 = _tmp437 * _tmp470;
  const Scalar _tmp500 = -_tmp298 * _tmp499 - _tmp304 * _tmp471;
  const Scalar _tmp501 = _tmp270 * _tmp488 + _tmp270 * _tmp497 - _tmp307 * _tmp489 +
                         _tmp307 * _tmp491 - _tmp307 * _tmp495 - _tmp312 * _tmp463 +
                         _tmp424 * _tmp474 + _tmp435 * _tmp454 - _tmp440 * _tmp446 +
                         _tmp443 * _tmp468 - _tmp452 * _tmp487 - _tmp452 * _tmp492 -
                         _tmp452 * _tmp498 + _tmp486 + _tmp500;
  const Scalar _tmp502 = _tmp200 * _tmp470;
  const Scalar _tmp503 = -_tmp424 * _tmp479 - _tmp437 * _tmp480 - _tmp454 * _tmp502 + _tmp456;
  const Scalar _tmp504 = _tmp503 * _x0[2];
  const Scalar _tmp505 = (Scalar(1) / Scalar(2)) * _tmp504;
  const Scalar _tmp506 = _tmp284 * _tmp499;
  const Scalar _tmp507 = -_tmp506;
  const Scalar _tmp508 = _tmp311 * _tmp447;
  const Scalar _tmp509 = _tmp429 * _tmp448;
  const Scalar _tmp510 = _tmp430 * _tmp509;
  const Scalar _tmp511 = _tmp200 * _tmp446;
  const Scalar _tmp512 = _tmp461 * _tmp494;
  const Scalar _tmp513 = _tmp424 * _tmp490;
  const Scalar _tmp514 = _tmp226 * _tmp437;
  const Scalar _tmp515 = _tmp424 * _tmp496;
  const Scalar _tmp516 = _tmp437 * _tmp467;
  const Scalar _tmp517 = _tmp200 * _tmp459;
  const Scalar _tmp518 = _tmp298 * _tmp476 + _tmp304 * _tmp475;
  const Scalar _tmp519 = -_tmp270 * _tmp515 + _tmp270 * _tmp516 - _tmp270 * _tmp517 -
                         _tmp307 * _tmp508 + _tmp307 * _tmp510 - _tmp307 * _tmp512 -
                         _tmp307 * _tmp513 + _tmp312 * _tmp457 + _tmp424 * _tmp466 +
                         _tmp437 * _tmp474 - _tmp440 * _tmp454 + _tmp452 * _tmp511 -
                         _tmp452 * _tmp514 + _tmp507 + _tmp518;
  const Scalar _tmp520 = _tmp284 * _tmp475;
  const Scalar _tmp521 = _tmp216 * _tmp454;
  const Scalar _tmp522 = _tmp454 * _tmp490;
  const Scalar _tmp523 = _tmp200 * _tmp437;
  const Scalar _tmp524 = _tmp448 * _tmp463;
  const Scalar _tmp525 = _tmp226 * _tmp459;
  const Scalar _tmp526 = _tmp447 * _tmp461;
  const Scalar _tmp527 = _tmp456 * _tmp461;
  const Scalar _tmp528 = _tmp430 * _tmp527;
  const Scalar _tmp529 = _tmp437 * _tmp443;
  const Scalar _tmp530 = _tmp226 * _tmp446;
  const Scalar _tmp531 = _tmp434 * _tmp437;
  const Scalar _tmp532 = -_tmp298 * _tmp471 + _tmp304 * _tmp499;
  const Scalar _tmp533 = -_tmp270 * _tmp525 - _tmp270 * _tmp529 + _tmp307 * _tmp522 -
                         _tmp307 * _tmp524 - _tmp307 * _tmp526 + _tmp307 * _tmp528 -
                         _tmp307 * _tmp531 + _tmp312 * _tmp494 - _tmp424 * _tmp440 -
                         _tmp452 * _tmp521 + _tmp452 * _tmp523 + _tmp452 * _tmp530 +
                         _tmp468 * _tmp496 + _tmp520 + _tmp532;
  const Scalar _tmp534 = _tmp429 + _tmp437 * _tmp502 + _tmp446 * _tmp479 - _tmp454 * _tmp480;
  const Scalar _tmp535 = _tmp534 * _x0[1];
  const Scalar _tmp536 = -Scalar(1) / Scalar(2) * _tmp535;
  const Scalar _tmp537 = -_tmp424 * _tmp502 + _tmp446 * _tmp480 + _tmp454 * _tmp479 + _tmp493;
  const Scalar _tmp538 = _tmp537 * _x0[3];
  const Scalar _tmp539 = (Scalar(1) / Scalar(2)) * _tmp538;
  const Scalar _tmp540 = _tmp536 - _tmp539;
  const Scalar _tmp541 = -_tmp478 * _x0[0] + _tmp484 + _tmp501 * _x0[1] + _tmp505 +
                         _tmp519 * _x0[3] + _tmp533 * _x0[2] + _tmp540;
  const Scalar _tmp542 = _tmp534 * _x0[0];
  const Scalar _tmp543 = (Scalar(1) / Scalar(2)) * _tmp542;
  const Scalar _tmp544 = _tmp481 * _x0[1];
  const Scalar _tmp545 = (Scalar(1) / Scalar(2)) * _tmp544;
  const Scalar _tmp546 = _tmp537 * _x0[2];
  const Scalar _tmp547 = (Scalar(1) / Scalar(2)) * _tmp546;
  const Scalar _tmp548 = _tmp503 * _x0[3];
  const Scalar _tmp549 = (Scalar(1) / Scalar(2)) * _tmp548;
  const Scalar _tmp550 = _tmp547 + _tmp549;
  const Scalar _tmp551 = _tmp478 * _x0[1] + _tmp501 * _x0[0] - _tmp519 * _x0[2] + _tmp533 * _x0[3] -
                         _tmp543 + _tmp545 + _tmp550;
  const Scalar _tmp552 = _tmp534 * _x0[2];
  const Scalar _tmp553 = (Scalar(1) / Scalar(2)) * _tmp552;
  const Scalar _tmp554 = -_tmp553;
  const Scalar _tmp555 = _tmp537 * _x0[0];
  const Scalar _tmp556 = -Scalar(1) / Scalar(2) * _tmp555;
  const Scalar _tmp557 = _tmp481 * _x0[3];
  const Scalar _tmp558 = (Scalar(1) / Scalar(2)) * _tmp557;
  const Scalar _tmp559 = _tmp503 * _x0[1];
  const Scalar _tmp560 = (Scalar(1) / Scalar(2)) * _tmp559;
  const Scalar _tmp561 = -_tmp560;
  const Scalar _tmp562 = _tmp478 * _x0[3] + _tmp501 * _x0[2] + _tmp519 * _x0[0] - _tmp533 * _x0[1] +
                         _tmp554 + _tmp556 + _tmp558 + _tmp561;
  const Scalar _tmp563 = _tmp537 * _x0[1];
  const Scalar _tmp564 = (Scalar(1) / Scalar(2)) * _tmp563;
  const Scalar _tmp565 = _tmp503 * _x0[0];
  const Scalar _tmp566 = (Scalar(1) / Scalar(2)) * _tmp565;
  const Scalar _tmp567 = -_tmp566;
  const Scalar _tmp568 = _tmp534 * _x0[3];
  const Scalar _tmp569 = (Scalar(1) / Scalar(2)) * _tmp568;
  const Scalar _tmp570 = _tmp481 * _x0[2];
  const Scalar _tmp571 = -Scalar(1) / Scalar(2) * _tmp570;
  const Scalar _tmp572 = -_tmp569 + _tmp571;
  const Scalar _tmp573 = -_tmp478 * _x0[2] + _tmp501 * _x0[3] - _tmp519 * _x0[1] -
                         _tmp533 * _x0[0] + _tmp564 + _tmp567 + _tmp572;
  const Scalar _tmp574 = _tmp541 * _y[1] + _tmp551 * _y[0] + _tmp562 * _y[2] + _tmp573 * _y[3];
  const Scalar _tmp575 = -_tmp542 - _tmp544 - _tmp546 + _tmp548;
  const Scalar _tmp576 = _tmp575 * _y[3];
  const Scalar _tmp577 = _tmp482 + _tmp504 - _tmp535 + _tmp538;
  const Scalar _tmp578 = _tmp577 * _y[2];
  const Scalar _tmp579 = _tmp563 + _tmp565 + _tmp568 - _tmp570;
  const Scalar _tmp580 = _tmp579 * _y[0];
  const Scalar _tmp581 = _tmp552 - _tmp555 + _tmp557 + _tmp559;
  const Scalar _tmp582 = _tmp581 * _y[1];
  const Scalar _tmp583 = -_tmp578 - _tmp580 - _tmp582;
  const Scalar _tmp584 = _tmp576 - _tmp583;
  const Scalar _tmp585 = (((_tmp584) > 0) - ((_tmp584) < 0));
  const Scalar _tmp586 = 2 * std::min<Scalar>(0, _tmp585) + 1;
  const Scalar _tmp587 = -_tmp575 * _y[0] - _tmp577 * _y[1] + _tmp579 * _y[3] + _tmp581 * _y[2];
  const Scalar _tmp588 = _tmp576 + _tmp578 + _tmp580 + _tmp582;
  const Scalar _tmp589 = (((_tmp588) > 0) - ((_tmp588) < 0));
  const Scalar _tmp590 = std::fabs(_tmp588);
  const Scalar _tmp591 = (((_tmp22 - _tmp590) > 0) - ((_tmp22 - _tmp590) < 0)) + 1;
  const Scalar _tmp592 = std::min<Scalar>(_tmp22, _tmp590);
  const Scalar _tmp593 = 1 - std::pow(_tmp592, Scalar(2));
  const Scalar _tmp594 = _tmp591 / _tmp593;
  const Scalar _tmp595 = _tmp589 * _tmp594;
  const Scalar _tmp596 = _tmp587 * _tmp595;
  const Scalar _tmp597 = _tmp586 * _tmp596;
  const Scalar _tmp598 = _tmp574 * _tmp597;
  const Scalar _tmp599 = _tmp587 * sqrt_info(0, 0);
  const Scalar _tmp600 = _tmp586 * std::acos(_tmp592);
  const Scalar _tmp601 = _tmp591 * _tmp592 * _tmp600 / (_tmp593 * std::sqrt(_tmp593));
  const Scalar _tmp602 = _tmp589 * _tmp601;
  const Scalar _tmp603 = _tmp574 * _tmp602;
  const Scalar _tmp604 = -_tmp575 * _y[1] + _tmp577 * _y[0] - _tmp579 * _y[2] + _tmp581 * _y[3];
  const Scalar _tmp605 = _tmp586 * _tmp604;
  const Scalar _tmp606 = _tmp605 * sqrt_info(0, 1);
  const Scalar _tmp607 = _tmp574 * _tmp595;
  const Scalar _tmp608 = -_tmp541 * _y[0] + _tmp551 * _y[1] + _tmp562 * _y[3] - _tmp573 * _y[2];
  const Scalar _tmp609 = _tmp600 / std::sqrt(_tmp593);
  const Scalar _tmp610 = 2 * _tmp609;
  const Scalar _tmp611 = _tmp610 * sqrt_info(0, 2);
  const Scalar _tmp612 = _tmp541 * _y[3] - _tmp551 * _y[2] + _tmp562 * _y[0] - _tmp573 * _y[1];
  const Scalar _tmp613 = _tmp256 * _tmp609;
  const Scalar _tmp614 = _tmp602 * _tmp604;
  const Scalar _tmp615 = _tmp574 * _tmp614;
  const Scalar _tmp616 = -_tmp575 * _y[2] + _tmp577 * _y[3] + _tmp579 * _y[1] - _tmp581 * _y[0];
  const Scalar _tmp617 = _tmp602 * _tmp616;
  const Scalar _tmp618 = _tmp574 * _tmp617;
  const Scalar _tmp619 = _tmp541 * _y[2] + _tmp551 * _y[3] - _tmp562 * _y[1] - _tmp573 * _y[0];
  const Scalar _tmp620 = _tmp610 * sqrt_info(0, 0);
  const Scalar _tmp621 = _tmp586 * _tmp616;
  const Scalar _tmp622 = _tmp621 * sqrt_info(0, 2);
  const Scalar _tmp623 = _tmp587 * sqrt_info(1, 0);
  const Scalar _tmp624 = _tmp605 * sqrt_info(1, 1);
  const Scalar _tmp625 = _tmp610 * sqrt_info(1, 2);
  const Scalar _tmp626 = _tmp610 * sqrt_info(1, 1);
  const Scalar _tmp627 = _tmp614 * sqrt_info(1, 1);
  const Scalar _tmp628 = _tmp610 * sqrt_info(1, 0);
  const Scalar _tmp629 = _tmp621 * sqrt_info(1, 2);
  const Scalar _tmp630 = _tmp597 * sqrt_info(2, 0);
  const Scalar _tmp631 = _tmp587 * sqrt_info(2, 0);
  const Scalar _tmp632 = _tmp605 * sqrt_info(2, 1);
  const Scalar _tmp633 = _tmp610 * sqrt_info(2, 2);
  const Scalar _tmp634 = _tmp610 * sqrt_info(2, 1);
  const Scalar _tmp635 = _tmp610 * sqrt_info(2, 0);
  const Scalar _tmp636 = _tmp621 * sqrt_info(2, 2);
  const Scalar _tmp637 = _tmp574 * sqrt_info(3, 0);
  const Scalar _tmp638 = _tmp605 * sqrt_info(3, 1);
  const Scalar _tmp639 = _tmp610 * sqrt_info(3, 2);
  const Scalar _tmp640 = _tmp610 * sqrt_info(3, 1);
  const Scalar _tmp641 = _tmp610 * sqrt_info(3, 0);
  const Scalar _tmp642 = _tmp621 * sqrt_info(3, 2);
  const Scalar _tmp643 = _tmp595 * _tmp642;
  const Scalar _tmp644 = _tmp597 * sqrt_info(4, 0);
  const Scalar _tmp645 = _tmp587 * sqrt_info(4, 0);
  const Scalar _tmp646 = _tmp605 * sqrt_info(4, 1);
  const Scalar _tmp647 = _tmp610 * sqrt_info(4, 2);
  const Scalar _tmp648 = _tmp610 * sqrt_info(4, 1);
  const Scalar _tmp649 = _tmp610 * sqrt_info(4, 0);
  const Scalar _tmp650 = _tmp621 * sqrt_info(4, 2);
  const Scalar _tmp651 = _tmp586 * sqrt_info(5, 0);
  const Scalar _tmp652 = _tmp596 * _tmp651;
  const Scalar _tmp653 = _tmp587 * sqrt_info(5, 0);
  const Scalar _tmp654 = _tmp605 * sqrt_info(5, 1);
  const Scalar _tmp655 = _tmp610 * sqrt_info(5, 2);
  const Scalar _tmp656 = _tmp610 * sqrt_info(5, 1);
  const Scalar _tmp657 = _tmp617 * sqrt_info(5, 2);
  const Scalar _tmp658 = _tmp610 * sqrt_info(5, 0);
  const Scalar _tmp659 = _tmp621 * sqrt_info(5, 2);
  const Scalar _tmp660 = _tmp294 + _tmp295 - _tmp296 - _tmp297;
  const Scalar _tmp661 = _tmp269 * _tmp660;
  const Scalar _tmp662 = _tmp277 * _tmp450;
  const Scalar _tmp663 = _tmp661 * _tmp662;
  const Scalar _tmp664 = _tmp220 * _tmp661;
  const Scalar _tmp665 = _tmp227 * _tmp277;
  const Scalar _tmp666 = _tmp216 * _tmp287;
  const Scalar _tmp667 = -_tmp300 + _tmp301 + _tmp302 - _tmp303;
  const Scalar _tmp668 = _tmp266 * _tmp666 + _tmp288 * _tmp667;
  const Scalar _tmp669 = _tmp275 * _tmp664 + _tmp276 * _tmp661 - _tmp277 * _tmp664 +
                         _tmp284 * _tmp305 - _tmp289 * _tmp661 + _tmp292 * _tmp661 -
                         _tmp661 * _tmp665 + _tmp668;
  const Scalar _tmp670 = _tmp216 * _tmp662;
  const Scalar _tmp671 = _tmp661 * _tmp670;
  const Scalar _tmp672 = _tmp437 * _tmp473;
  const Scalar _tmp673 = _tmp439 * _tmp669;
  const Scalar _tmp674 = _tmp311 * _tmp457;
  const Scalar _tmp675 = _tmp266 * _tmp476 - _tmp499 * _tmp667;
  const Scalar _tmp676 = _tmp424 * _tmp671 - _tmp454 * _tmp673 - _tmp508 * _tmp669 +
                         _tmp510 * _tmp669 + _tmp511 * _tmp663 - _tmp512 * _tmp669 -
                         _tmp513 * _tmp669 - _tmp514 * _tmp663 - _tmp515 * _tmp661 +
                         _tmp516 * _tmp661 - _tmp517 * _tmp661 + _tmp520 + _tmp669 * _tmp672 +
                         _tmp669 * _tmp674 + _tmp675;
  const Scalar _tmp677 = -_tmp472;
  const Scalar _tmp678 = _tmp454 * _tmp661;
  const Scalar _tmp679 = _tmp437 * _tmp670;
  const Scalar _tmp680 = _tmp424 * _tmp669;
  const Scalar _tmp681 = _tmp311 * _tmp669;
  const Scalar _tmp682 = _tmp662 * _tmp678;
  const Scalar _tmp683 = _tmp454 * _tmp669;
  const Scalar _tmp684 = -_tmp266 * _tmp499 - _tmp476 * _tmp667;
  const Scalar _tmp685 = -_tmp200 * _tmp682 + _tmp434 * _tmp683 + _tmp443 * _tmp678 -
                         _tmp446 * _tmp673 - _tmp463 * _tmp681 + _tmp473 * _tmp680 +
                         _tmp488 * _tmp661 - _tmp489 * _tmp669 + _tmp491 * _tmp669 -
                         _tmp495 * _tmp669 + _tmp497 * _tmp661 - _tmp498 * _tmp663 -
                         _tmp661 * _tmp679 + _tmp677 + _tmp684;
  const Scalar _tmp686 = -_tmp266 * _tmp471 + _tmp475 * _tmp667;
  const Scalar _tmp687 = -_tmp424 * _tmp673 + _tmp490 * _tmp683 + _tmp494 * _tmp681 +
                         _tmp496 * _tmp678 + _tmp506 + _tmp523 * _tmp663 - _tmp524 * _tmp669 -
                         _tmp525 * _tmp661 - _tmp526 * _tmp669 + _tmp528 * _tmp669 -
                         _tmp529 * _tmp661 + _tmp530 * _tmp663 - _tmp531 * _tmp669 -
                         _tmp670 * _tmp678 + _tmp686;
  const Scalar _tmp688 = _tmp266 * _tmp475 + _tmp471 * _tmp667;
  const Scalar _tmp689 = _tmp226 * _tmp682 - _tmp431 * _tmp681 + _tmp434 * _tmp680 -
                         _tmp437 * _tmp673 + _tmp444 * _tmp661 + _tmp446 * _tmp671 -
                         _tmp449 * _tmp669 + _tmp458 * _tmp669 - _tmp460 * _tmp661 +
                         _tmp464 * _tmp669 - _tmp465 * _tmp663 - _tmp467 * _tmp678 -
                         _tmp473 * _tmp683 + _tmp486 + _tmp688;
  const Scalar _tmp690 = _tmp543 - _tmp545 + _tmp550 + _tmp676 * _x0[3] + _tmp685 * _x0[1] +
                         _tmp687 * _x0[2] - _tmp689 * _x0[0];
  const Scalar _tmp691 = _tmp556 - _tmp558;
  const Scalar _tmp692 = _tmp553 + _tmp561 - _tmp676 * _x0[1] + _tmp685 * _x0[3] -
                         _tmp687 * _x0[0] - _tmp689 * _x0[2] + _tmp691;
  const Scalar _tmp693 = -_tmp564;
  const Scalar _tmp694 = _tmp566 + _tmp572 + _tmp676 * _x0[0] + _tmp685 * _x0[2] -
                         _tmp687 * _x0[1] + _tmp689 * _x0[3] + _tmp693;
  const Scalar _tmp695 = -_tmp505;
  const Scalar _tmp696 = _tmp484 + _tmp536 + _tmp539 - _tmp676 * _x0[2] + _tmp685 * _x0[0] +
                         _tmp687 * _x0[3] + _tmp689 * _x0[1] + _tmp695;
  const Scalar _tmp697 = _tmp690 * _y[1] + _tmp692 * _y[3] + _tmp694 * _y[2] + _tmp696 * _y[0];
  const Scalar _tmp698 = _tmp595 * _tmp697;
  const Scalar _tmp699 = _tmp602 * _tmp697;
  const Scalar _tmp700 = _tmp597 * _tmp697;
  const Scalar _tmp701 =
      _tmp609 * (_tmp690 * _y[3] - _tmp692 * _y[1] + _tmp694 * _y[0] - _tmp696 * _y[2]);
  const Scalar _tmp702 = -_tmp690 * _y[0] - _tmp692 * _y[2] + _tmp694 * _y[3] + _tmp696 * _y[1];
  const Scalar _tmp703 = _tmp610 * _tmp702;
  const Scalar _tmp704 = _tmp605 * _tmp698;
  const Scalar _tmp705 = _tmp617 * _tmp697;
  const Scalar _tmp706 = _tmp614 * _tmp697;
  const Scalar _tmp707 = _tmp690 * _y[2] - _tmp692 * _y[0] - _tmp694 * _y[1] + _tmp696 * _y[3];
  const Scalar _tmp708 = 2 * _tmp701;
  const Scalar _tmp709 = _tmp587 * sqrt_info(3, 0);
  const Scalar _tmp710 = _tmp597 * sqrt_info(3, 0);
  const Scalar _tmp711 = _tmp269 * _tmp304;
  const Scalar _tmp712 = _tmp262 - _tmp263 + _tmp264 - _tmp265;
  const Scalar _tmp713 = _tmp288 * _tmp660 + _tmp305 * _tmp712;
  const Scalar _tmp714 = _tmp276 * _tmp711 - _tmp279 * _tmp304 + _tmp284 * _tmp666 -
                         _tmp290 * _tmp304 - _tmp291 * _tmp304 + _tmp292 * _tmp711 +
                         _tmp293 * _tmp711 + _tmp713;
  const Scalar _tmp715 = _tmp430 * _tmp714;
  const Scalar _tmp716 = _tmp493 * _tmp715;
  const Scalar _tmp717 = _tmp454 * _tmp714;
  const Scalar _tmp718 = _tmp437 * _tmp451;
  const Scalar _tmp719 = _tmp226 * _tmp718;
  const Scalar _tmp720 = _tmp304 * _tmp451;
  const Scalar _tmp721 = _tmp216 * _tmp720;
  const Scalar _tmp722 = _tmp200 * _tmp451;
  const Scalar _tmp723 = _tmp304 * _tmp722;
  const Scalar _tmp724 = _tmp446 * _tmp714;
  const Scalar _tmp725 = _tmp311 * _tmp715;
  const Scalar _tmp726 = _tmp424 * _tmp714;
  const Scalar _tmp727 = _tmp475 * _tmp712 - _tmp499 * _tmp660;
  const Scalar _tmp728 = -_tmp304 * _tmp719 + _tmp424 * _tmp721 - _tmp434 * _tmp724 -
                         _tmp439 * _tmp717 + _tmp446 * _tmp723 + _tmp456 * _tmp725 -
                         _tmp461 * _tmp716 + _tmp485 - _tmp490 * _tmp726 + _tmp509 * _tmp715 -
                         _tmp515 * _tmp711 + _tmp516 * _tmp711 - _tmp517 * _tmp711 +
                         _tmp672 * _tmp714 + _tmp727;
  const Scalar _tmp729 = _tmp443 * _tmp454;
  const Scalar _tmp730 = _tmp462 * _tmp715;
  const Scalar _tmp731 = -_tmp471 * _tmp712 - _tmp476 * _tmp660;
  const Scalar _tmp732 = -_tmp216 * _tmp304 * _tmp718 - _tmp311 * _tmp730 -
                         _tmp429 * _tmp461 * _tmp715 + _tmp434 * _tmp717 - _tmp439 * _tmp724 -
                         _tmp448 * _tmp716 - _tmp454 * _tmp723 + _tmp473 * _tmp726 +
                         _tmp488 * _tmp711 + _tmp491 * _tmp714 + _tmp497 * _tmp711 -
                         _tmp498 * _tmp720 + _tmp507 + _tmp711 * _tmp729 + _tmp731;
  const Scalar _tmp733 = _tmp442 * _tmp454;
  const Scalar _tmp734 = _tmp216 * _tmp733;
  const Scalar _tmp735 = _tmp424 * _tmp439;
  const Scalar _tmp736 = _tmp475 * _tmp660 + _tmp499 * _tmp712;
  const Scalar _tmp737 = _tmp437 * _tmp723 - _tmp448 * _tmp730 - _tmp473 * _tmp724 +
                         _tmp490 * _tmp717 + _tmp493 * _tmp725 - _tmp521 * _tmp720 -
                         _tmp525 * _tmp711 + _tmp527 * _tmp715 - _tmp529 * _tmp711 +
                         _tmp530 * _tmp720 - _tmp531 * _tmp714 + _tmp677 + _tmp711 * _tmp734 -
                         _tmp714 * _tmp735 + _tmp736;
  const Scalar _tmp738 = _tmp454 * _tmp467;
  const Scalar _tmp739 = _tmp437 * _tmp439;
  const Scalar _tmp740 = _tmp471 * _tmp660 - _tmp476 * _tmp712;
  const Scalar _tmp741 = -_tmp424 * _tmp723 - _tmp429 * _tmp725 + _tmp434 * _tmp726 +
                         _tmp444 * _tmp711 + _tmp446 * _tmp721 + _tmp448 * _tmp456 * _tmp715 +
                         _tmp455 * _tmp720 - _tmp460 * _tmp711 + _tmp461 * _tmp730 -
                         _tmp473 * _tmp717 - _tmp490 * _tmp724 + _tmp520 - _tmp711 * _tmp738 -
                         _tmp714 * _tmp739 + _tmp740;
  const Scalar _tmp742 = _tmp483 + _tmp540 + _tmp695 - _tmp728 * _x0[1] + _tmp732 * _x0[3] -
                         _tmp737 * _x0[0] - _tmp741 * _x0[2];
  const Scalar _tmp743 = _tmp554 + _tmp560 + _tmp691 - _tmp728 * _x0[2] + _tmp732 * _x0[0] +
                         _tmp737 * _x0[3] + _tmp741 * _x0[1];
  const Scalar _tmp744 = _tmp543 + _tmp545 - _tmp547 + _tmp549 + _tmp728 * _x0[0] +
                         _tmp732 * _x0[2] - _tmp737 * _x0[1] + _tmp741 * _x0[3];
  const Scalar _tmp745 = _tmp567 + _tmp569 + _tmp571 + _tmp693 + _tmp728 * _x0[3] +
                         _tmp732 * _x0[1] + _tmp737 * _x0[2] - _tmp741 * _x0[0];
  const Scalar _tmp746 = _tmp742 * _y[3] + _tmp743 * _y[0] + _tmp744 * _y[2] + _tmp745 * _y[1];
  const Scalar _tmp747 = _tmp617 * _tmp746;
  const Scalar _tmp748 = -_tmp742 * _y[1] - _tmp743 * _y[2] + _tmp744 * _y[0] + _tmp745 * _y[3];
  const Scalar _tmp749 = _tmp597 * _tmp746;
  const Scalar _tmp750 = -_tmp742 * _y[0] + _tmp743 * _y[3] - _tmp744 * _y[1] + _tmp745 * _y[2];
  const Scalar _tmp751 = _tmp614 * _tmp746;
  const Scalar _tmp752 = _tmp595 * _tmp746;
  const Scalar _tmp753 = -_tmp742 * _y[2] + _tmp743 * _y[1] + _tmp744 * _y[3] - _tmp745 * _y[0];
  const Scalar _tmp754 = _tmp610 * _tmp753;
  const Scalar _tmp755 = _tmp602 * _tmp746;
  const Scalar _tmp756 = _tmp610 * _tmp748;
  const Scalar _tmp757 = 1 - lambdas(0, 0);
  const Scalar _tmp758 = _tmp269 * _tmp712;
  const Scalar _tmp759 = _tmp220 * _tmp758;
  const Scalar _tmp760 = _tmp280 + _tmp281 + _tmp282 + _tmp283;
  const Scalar _tmp761 = _tmp275 * _tmp759 + _tmp276 * _tmp758 - _tmp277 * _tmp759 +
                         _tmp288 * _tmp760 - _tmp289 * _tmp758 + _tmp292 * _tmp758 + _tmp306 -
                         _tmp665 * _tmp758;
  const Scalar _tmp762 = _tmp431 * _tmp761;
  const Scalar _tmp763 = _tmp226 * _tmp758;
  const Scalar _tmp764 = _tmp662 * _tmp763;
  const Scalar _tmp765 = _tmp473 * _tmp761;
  const Scalar _tmp766 = (Scalar(1) / Scalar(2)) * _tmp150;
  const Scalar _tmp767 = (Scalar(1) / Scalar(2)) * _tmp146;
  const Scalar _tmp768 = (Scalar(1) / Scalar(2)) * _tmp147;
  const Scalar _tmp769 = (Scalar(1) / Scalar(2)) * _tmp148;
  const Scalar _tmp770 = -_tmp766 - _tmp767 - _tmp768 - _tmp769;
  const Scalar _tmp771 = _tmp411 * _tmp422;
  const Scalar _tmp772 = _tmp770 * _tmp771;
  const Scalar _tmp773 = _tmp161 * lambdas(1, 0);
  const Scalar _tmp774 = _tmp409 * _tmp773;
  const Scalar _tmp775 = _tmp407 / (_tmp404 * std::sqrt(_tmp404));
  const Scalar _tmp776 = _tmp774 * _tmp775;
  const Scalar _tmp777 = _tmp176 * _tmp776;
  const Scalar _tmp778 = (Scalar(1) / Scalar(2)) * _tmp172;
  const Scalar _tmp779 = (Scalar(1) / Scalar(2)) * _tmp173;
  const Scalar _tmp780 = (Scalar(1) / Scalar(2)) * _tmp174;
  const Scalar _tmp781 = (Scalar(1) / Scalar(2)) * _tmp175;
  const Scalar _tmp782 = -_tmp778 + _tmp779 + _tmp780 - _tmp781;
  const Scalar _tmp783 = ((((_tmp22 - _tmp396) > 0) - ((_tmp22 - _tmp396) < 0)) + 1) *
                         (((_tmp395) > 0) - ((_tmp395) < 0));
  const Scalar _tmp784 = _tmp782 * _tmp783;
  const Scalar _tmp785 = _tmp397 * _tmp401 / std::pow(_tmp398, Scalar(2));
  const Scalar _tmp786 = _tmp178 * _tmp785;
  const Scalar _tmp787 = _tmp400 / (_tmp398 * std::sqrt(_tmp398));
  const Scalar _tmp788 = _tmp783 * _tmp787;
  const Scalar _tmp789 = _tmp171 * _tmp788;
  const Scalar _tmp790 = _tmp178 * _tmp788;
  const Scalar _tmp791 = _tmp165 * _tmp785;
  const Scalar _tmp792 = _tmp165 * _tmp788;
  const Scalar _tmp793 = _tmp171 * _tmp785;
  const Scalar _tmp794 = 8 * _tmp162 * _tmp163 * _tmp402;
  const Scalar _tmp795 = _tmp176 * _tmp794;
  const Scalar _tmp796 = (Scalar(1) / Scalar(2)) * _tmp166;
  const Scalar _tmp797 = (Scalar(1) / Scalar(2)) * _tmp167;
  const Scalar _tmp798 = (Scalar(1) / Scalar(2)) * _tmp168;
  const Scalar _tmp799 = (Scalar(1) / Scalar(2)) * _tmp169;
  const Scalar _tmp800 = -_tmp796 + _tmp797 - _tmp798 + _tmp799;
  const Scalar _tmp801 = _tmp159 * _tmp794;
  const Scalar _tmp802 = (Scalar(1) / Scalar(2)) * _tmp155;
  const Scalar _tmp803 = (Scalar(1) / Scalar(2)) * _tmp156;
  const Scalar _tmp804 = (Scalar(1) / Scalar(2)) * _tmp157;
  const Scalar _tmp805 = (Scalar(1) / Scalar(2)) * _tmp158;
  const Scalar _tmp806 = _tmp802 + _tmp803 - _tmp804 - _tmp805;
  const Scalar _tmp807 = _tmp170 * _tmp806;
  const Scalar _tmp808 = _tmp794 * _tmp807 + _tmp800 * _tmp801;
  const Scalar _tmp809 = _tmp770 * _tmp795 - _tmp782 * _tmp789 - _tmp782 * _tmp790 -
                         _tmp782 * _tmp792 + _tmp784 * _tmp786 + _tmp784 * _tmp791 +
                         _tmp784 * _tmp793 + _tmp808;
  const Scalar _tmp810 = _tmp422 * _tmp809;
  const Scalar _tmp811 = (Scalar(1) / Scalar(2)) / _tmp404;
  const Scalar _tmp812 = _tmp774 * _tmp811;
  const Scalar _tmp813 = _tmp170 * _tmp812;
  const Scalar _tmp814 = _tmp453 * _tmp809;
  const Scalar _tmp815 = _tmp170 * _tmp394;
  const Scalar _tmp816 = _tmp408 * _tmp773;
  const Scalar _tmp817 = _tmp397 * _tmp816;
  const Scalar _tmp818 = _tmp788 * _tmp817;
  const Scalar _tmp819 = _tmp782 * _tmp818;
  const Scalar _tmp820 = _tmp399 * _tmp816;
  const Scalar _tmp821 = _tmp422 * _tmp820;
  const Scalar _tmp822 = _tmp784 * _tmp821;
  const Scalar _tmp823 = _tmp159 * _tmp418;
  const Scalar _tmp824 = _tmp176 * _tmp812;
  const Scalar _tmp825 = _tmp445 * _tmp824;
  const Scalar _tmp826 = _tmp784 * _tmp820;
  const Scalar _tmp827 = _tmp159 * _tmp812;
  const Scalar _tmp828 = _tmp436 * _tmp809;
  const Scalar _tmp829 = _tmp159 * _tmp776;
  const Scalar _tmp830 = _tmp809 * _tmp829;
  const Scalar _tmp831 = _tmp820 * _tmp823;
  const Scalar _tmp832 = _tmp176 * _tmp422;
  const Scalar _tmp833 = (Scalar(1) / Scalar(4)) * _tmp408;
  const Scalar _tmp834 = _tmp415 * _tmp833;
  const Scalar _tmp835 = _tmp170 * _tmp776;
  const Scalar _tmp836 = _tmp394 * _tmp835;
  const Scalar _tmp837 = _tmp411 * _tmp418;
  const Scalar _tmp838 = _tmp394 * _tmp411;
  const Scalar _tmp839 = _tmp800 * _tmp837 - _tmp806 * _tmp838;
  const Scalar _tmp840 = -_tmp176 * _tmp822 - _tmp418 * _tmp830 + _tmp772 - _tmp777 * _tmp810 -
                         _tmp784 * _tmp831 + _tmp809 * _tmp825 - _tmp809 * _tmp834 +
                         _tmp809 * _tmp836 - _tmp813 * _tmp814 - _tmp815 * _tmp819 +
                         _tmp815 * _tmp826 + _tmp819 * _tmp823 + _tmp819 * _tmp832 +
                         _tmp827 * _tmp828 + _tmp839;
  const Scalar _tmp841 = _tmp471 * _tmp760;
  const Scalar _tmp842 = _tmp434 * _tmp761;
  const Scalar _tmp843 = _tmp670 * _tmp758;
  const Scalar _tmp844 = _tmp662 * _tmp758;
  const Scalar _tmp845 = _tmp159 * _tmp415;
  const Scalar _tmp846 = _tmp416 * _tmp827;
  const Scalar _tmp847 = _tmp415 * _tmp809;
  const Scalar _tmp848 = _tmp418 * _tmp833;
  const Scalar _tmp849 = _tmp176 * _tmp394;
  const Scalar _tmp850 = _tmp445 * _tmp813;
  const Scalar _tmp851 = _tmp770 * _tmp838;
  const Scalar _tmp852 = _tmp394 * _tmp777;
  const Scalar _tmp853 = _tmp170 * _tmp422;
  const Scalar _tmp854 = _tmp411 * _tmp415;
  const Scalar _tmp855 = _tmp771 * _tmp806 - _tmp800 * _tmp854;
  const Scalar _tmp856 = -_tmp170 * _tmp822 - _tmp809 * _tmp846 - _tmp809 * _tmp848 +
                         _tmp809 * _tmp850 - _tmp809 * _tmp852 - _tmp810 * _tmp835 +
                         _tmp814 * _tmp824 - _tmp819 * _tmp845 + _tmp819 * _tmp849 +
                         _tmp819 * _tmp853 + _tmp826 * _tmp845 - _tmp826 * _tmp849 +
                         _tmp829 * _tmp847 + _tmp851 + _tmp855;
  const Scalar _tmp857 = _tmp176 * _tmp418;
  const Scalar _tmp858 = _tmp818 * _tmp857;
  const Scalar _tmp859 = _tmp394 * _tmp833;
  const Scalar _tmp860 = _tmp170 * _tmp415;
  const Scalar _tmp861 = _tmp776 * _tmp857;
  const Scalar _tmp862 = _tmp820 * _tmp857;
  const Scalar _tmp863 = _tmp159 * _tmp821;
  const Scalar _tmp864 = _tmp170 * _tmp416;
  const Scalar _tmp865 = _tmp812 * _tmp864;
  const Scalar _tmp866 = _tmp445 * _tmp827;
  const Scalar _tmp867 = _tmp159 * _tmp422;
  const Scalar _tmp868 = _tmp770 * _tmp837;
  const Scalar _tmp869 = -_tmp868;
  const Scalar _tmp870 = _tmp771 * _tmp800 + _tmp806 * _tmp854;
  const Scalar _tmp871 = -_tmp422 * _tmp830 - _tmp782 * _tmp858 + _tmp784 * _tmp862 -
                         _tmp784 * _tmp863 - _tmp809 * _tmp859 + _tmp809 * _tmp861 +
                         _tmp809 * _tmp865 + _tmp809 * _tmp866 + _tmp819 * _tmp860 +
                         _tmp819 * _tmp867 - _tmp824 * _tmp828 - _tmp826 * _tmp860 -
                         _tmp835 * _tmp847 + _tmp869 + _tmp870;
  const Scalar _tmp872 = _tmp439 * _tmp761;
  const Scalar _tmp873 = _tmp770 * _tmp854;
  const Scalar _tmp874 = -_tmp873;
  const Scalar _tmp875 = _tmp176 * _tmp415;
  const Scalar _tmp876 = _tmp416 * _tmp824;
  const Scalar _tmp877 = _tmp418 * _tmp835;
  const Scalar _tmp878 = _tmp159 * _tmp394;
  const Scalar _tmp879 = _tmp776 * _tmp878;
  const Scalar _tmp880 = _tmp422 * _tmp833;
  const Scalar _tmp881 = _tmp170 * _tmp418;
  const Scalar _tmp882 = -_tmp800 * _tmp838 - _tmp806 * _tmp837;
  const Scalar _tmp883 = _tmp777 * _tmp847 - _tmp809 * _tmp876 + _tmp809 * _tmp877 +
                         _tmp809 * _tmp879 - _tmp809 * _tmp880 - _tmp813 * _tmp828 -
                         _tmp814 * _tmp827 - _tmp819 * _tmp875 - _tmp819 * _tmp878 -
                         _tmp819 * _tmp881 + _tmp826 * _tmp875 + _tmp826 * _tmp878 +
                         _tmp826 * _tmp881 + _tmp874 + _tmp882;
  const Scalar _tmp884 = -_tmp311 * _tmp762 + _tmp424 * _tmp842 + _tmp428 * _tmp856 -
                         _tmp437 * _tmp872 + _tmp444 * _tmp758 + _tmp446 * _tmp843 -
                         _tmp449 * _tmp761 + _tmp454 * _tmp764 - _tmp454 * _tmp765 +
                         _tmp458 * _tmp761 - _tmp460 * _tmp758 + _tmp464 * _tmp761 -
                         _tmp465 * _tmp844 + _tmp477 + _tmp479 * _tmp871 + _tmp480 * _tmp883 -
                         _tmp502 * _tmp840 - _tmp733 * _tmp763 + _tmp841;
  const Scalar _tmp885 = _tmp499 * _tmp760;
  const Scalar _tmp886 = -_tmp885;
  const Scalar _tmp887 = _tmp442 * _tmp763;
  const Scalar _tmp888 = _tmp494 * _tmp761;
  const Scalar _tmp889 = _tmp424 * _tmp843 + _tmp428 * _tmp871 - _tmp437 * _tmp764 +
                         _tmp437 * _tmp765 + _tmp437 * _tmp887 - _tmp454 * _tmp872 -
                         _tmp461 * _tmp888 - _tmp479 * _tmp856 + _tmp480 * _tmp840 +
                         _tmp502 * _tmp883 - _tmp508 * _tmp761 + _tmp510 * _tmp761 +
                         _tmp511 * _tmp844 - _tmp513 * _tmp761 - _tmp515 * _tmp758 -
                         _tmp517 * _tmp758 + _tmp518 + _tmp674 * _tmp761 + _tmp886;
  const Scalar _tmp890 = _tmp475 * _tmp760;
  const Scalar _tmp891 = _tmp311 * _tmp888 - _tmp424 * _tmp872 + _tmp428 * _tmp840 +
                         _tmp446 * _tmp764 - _tmp454 * _tmp843 - _tmp459 * _tmp763 +
                         _tmp479 * _tmp883 - _tmp480 * _tmp871 + _tmp502 * _tmp856 +
                         _tmp522 * _tmp761 + _tmp523 * _tmp844 - _tmp524 * _tmp761 -
                         _tmp526 * _tmp761 + _tmp528 * _tmp761 - _tmp529 * _tmp758 -
                         _tmp531 * _tmp761 + _tmp532 + _tmp734 * _tmp758 + _tmp890;
  const Scalar _tmp892 = _tmp476 * _tmp760;
  const Scalar _tmp893 = -_tmp892;
  const Scalar _tmp894 = -_tmp311 * _tmp463 * _tmp761 - _tmp424 * _tmp764 + _tmp424 * _tmp765 +
                         _tmp424 * _tmp887 + _tmp428 * _tmp883 - _tmp446 * _tmp872 -
                         _tmp448 * _tmp888 + _tmp454 * _tmp842 - _tmp461 * _tmp762 -
                         _tmp479 * _tmp840 - _tmp480 * _tmp856 - _tmp487 * _tmp844 +
                         _tmp491 * _tmp761 + _tmp497 * _tmp758 + _tmp500 - _tmp502 * _tmp871 -
                         _tmp679 * _tmp758 + _tmp729 * _tmp758 + _tmp893;
  const Scalar _tmp895 = _tmp884 * _x0[1] - _tmp889 * _x0[2] + _tmp891 * _x0[3] + _tmp894 * _x0[0];
  const Scalar _tmp896 = -_tmp884 * _x0[0] + _tmp889 * _x0[3] + _tmp891 * _x0[2] + _tmp894 * _x0[1];
  const Scalar _tmp897 = _tmp884 * _x0[3] + _tmp889 * _x0[0] - _tmp891 * _x0[1] + _tmp894 * _x0[2];
  const Scalar _tmp898 = -_tmp884 * _x0[2] - _tmp889 * _x0[1] - _tmp891 * _x0[0] + _tmp894 * _x0[3];
  const Scalar _tmp899 = _tmp895 * _y[0] + _tmp896 * _y[1] + _tmp897 * _y[2] + _tmp898 * _y[3];
  const Scalar _tmp900 = _tmp595 * _tmp899;
  const Scalar _tmp901 = _tmp597 * _tmp899;
  const Scalar _tmp902 = _tmp602 * _tmp899;
  const Scalar _tmp903 = _tmp617 * _tmp899;
  const Scalar _tmp904 = _tmp895 * _y[3] + _tmp896 * _y[2] - _tmp897 * _y[1] - _tmp898 * _y[0];
  const Scalar _tmp905 = _tmp610 * _tmp904;
  const Scalar _tmp906 = -_tmp895 * _y[2] + _tmp896 * _y[3] + _tmp897 * _y[0] - _tmp898 * _y[1];
  const Scalar _tmp907 = _tmp895 * _y[1] - _tmp896 * _y[0] + _tmp897 * _y[3] - _tmp898 * _y[2];
  const Scalar _tmp908 = _tmp614 * _tmp899;
  const Scalar _tmp909 = _tmp610 * _tmp906;
  const Scalar _tmp910 = _tmp605 * _tmp900;
  const Scalar _tmp911 = -_tmp802 - _tmp803 + _tmp804 + _tmp805;
  const Scalar _tmp912 = _tmp783 * _tmp911;
  const Scalar _tmp913 = _tmp787 * _tmp912;
  const Scalar _tmp914 = _tmp165 * _tmp912;
  const Scalar _tmp915 = _tmp170 * _tmp794;
  const Scalar _tmp916 = _tmp796 - _tmp797 + _tmp798 - _tmp799;
  const Scalar _tmp917 = _tmp782 * _tmp915 + _tmp795 * _tmp916;
  const Scalar _tmp918 = -_tmp171 * _tmp913 - _tmp178 * _tmp913 + _tmp770 * _tmp801 +
                         _tmp785 * _tmp914 + _tmp786 * _tmp912 - _tmp787 * _tmp914 +
                         _tmp793 * _tmp912 + _tmp917;
  const Scalar _tmp919 = _tmp422 * _tmp918;
  const Scalar _tmp920 = _tmp176 * _tmp912;
  const Scalar _tmp921 = _tmp394 * _tmp820;
  const Scalar _tmp922 = _tmp817 * _tmp913;
  const Scalar _tmp923 = _tmp415 * _tmp918;
  const Scalar _tmp924 = _tmp820 * _tmp845;
  const Scalar _tmp925 = _tmp812 * _tmp918;
  const Scalar _tmp926 = _tmp453 * _tmp925;
  const Scalar _tmp927 = _tmp170 * _tmp445;
  const Scalar _tmp928 = _tmp416 * _tmp925;
  const Scalar _tmp929 = _tmp170 * _tmp912;
  const Scalar _tmp930 = _tmp771 * _tmp782 + _tmp838 * _tmp916;
  const Scalar _tmp931 = -_tmp159 * _tmp928 + _tmp176 * _tmp926 - _tmp821 * _tmp929 +
                         _tmp829 * _tmp923 - _tmp835 * _tmp919 - _tmp845 * _tmp922 -
                         _tmp848 * _tmp918 + _tmp849 * _tmp922 - _tmp852 * _tmp918 +
                         _tmp853 * _tmp922 + _tmp874 + _tmp912 * _tmp924 - _tmp920 * _tmp921 +
                         _tmp925 * _tmp927 + _tmp930;
  const Scalar _tmp932 = _tmp269 * _tmp298;
  const Scalar _tmp933 = _tmp276 * _tmp932 - _tmp279 * _tmp298 - _tmp290 * _tmp298 -
                         _tmp291 * _tmp298 + _tmp292 * _tmp932 + _tmp293 * _tmp932 +
                         _tmp305 * _tmp760 + _tmp668;
  const Scalar _tmp934 = _tmp436 * _tmp925;
  const Scalar _tmp935 = _tmp776 * _tmp918;
  const Scalar _tmp936 = _tmp445 * _tmp925;
  const Scalar _tmp937 = _tmp820 * _tmp912;
  const Scalar _tmp938 = _tmp771 * _tmp916 - _tmp782 * _tmp838;
  const Scalar _tmp939 = _tmp159 * _tmp934 - _tmp170 * _tmp926 + _tmp176 * _tmp936 -
                         _tmp777 * _tmp919 - _tmp815 * _tmp922 + _tmp815 * _tmp935 +
                         _tmp815 * _tmp937 - _tmp821 * _tmp920 + _tmp823 * _tmp922 -
                         _tmp823 * _tmp935 - _tmp831 * _tmp912 + _tmp832 * _tmp922 -
                         _tmp833 * _tmp923 + _tmp868 + _tmp938;
  const Scalar _tmp940 = _tmp424 * _tmp933;
  const Scalar _tmp941 = _tmp298 * _tmp451;
  const Scalar _tmp942 = _tmp439 * _tmp933;
  const Scalar _tmp943 = -_tmp841;
  const Scalar _tmp944 = _tmp176 * _tmp436;
  const Scalar _tmp945 = _tmp415 * _tmp820;
  const Scalar _tmp946 = _tmp782 * _tmp854 - _tmp837 * _tmp916;
  const Scalar _tmp947 = _tmp159 * _tmp936 + _tmp772 - _tmp829 * _tmp919 - _tmp835 * _tmp923 -
                         _tmp857 * _tmp922 + _tmp857 * _tmp935 - _tmp859 * _tmp918 +
                         _tmp860 * _tmp922 + _tmp862 * _tmp912 - _tmp863 * _tmp912 +
                         _tmp864 * _tmp925 + _tmp867 * _tmp922 - _tmp925 * _tmp944 -
                         _tmp929 * _tmp945 + _tmp946;
  const Scalar _tmp948 = _tmp298 * _tmp722;
  const Scalar _tmp949 = _tmp311 * _tmp933;
  const Scalar _tmp950 = _tmp820 * _tmp881;
  const Scalar _tmp951 = -_tmp851;
  const Scalar _tmp952 = -_tmp782 * _tmp837 - _tmp854 * _tmp916;
  const Scalar _tmp953 = -_tmp159 * _tmp926 - _tmp170 * _tmp934 - _tmp176 * _tmp928 +
                         _tmp777 * _tmp923 - _tmp875 * _tmp922 - _tmp878 * _tmp922 +
                         _tmp878 * _tmp935 + _tmp878 * _tmp937 - _tmp880 * _tmp918 -
                         _tmp881 * _tmp922 + _tmp881 * _tmp935 + _tmp912 * _tmp950 +
                         _tmp920 * _tmp945 + _tmp951 + _tmp952;
  const Scalar _tmp954 = _tmp454 * _tmp933;
  const Scalar _tmp955 = _tmp269 * _tmp299;
  const Scalar _tmp956 = _tmp442 * _tmp955;
  const Scalar _tmp957 = -_tmp299 * _tmp718 + _tmp428 * _tmp953 + _tmp434 * _tmp954 +
                         _tmp437 * _tmp956 - _tmp446 * _tmp942 - _tmp454 * _tmp948 -
                         _tmp463 * _tmp949 + _tmp473 * _tmp940 - _tmp479 * _tmp939 -
                         _tmp480 * _tmp931 + _tmp488 * _tmp932 - _tmp489 * _tmp933 +
                         _tmp491 * _tmp933 - _tmp495 * _tmp933 - _tmp498 * _tmp941 -
                         _tmp502 * _tmp947 + _tmp684 + _tmp729 * _tmp932 + _tmp943;
  const Scalar _tmp958 = _tmp299 * _tmp451;
  const Scalar _tmp959 = _tmp428 * _tmp939 + _tmp437 * _tmp948 - _tmp454 * _tmp958 +
                         _tmp479 * _tmp953 - _tmp480 * _tmp947 + _tmp490 * _tmp954 +
                         _tmp494 * _tmp949 + _tmp502 * _tmp931 - _tmp524 * _tmp933 -
                         _tmp525 * _tmp932 - _tmp526 * _tmp933 + _tmp528 * _tmp933 -
                         _tmp529 * _tmp932 + _tmp530 * _tmp941 - _tmp531 * _tmp933 + _tmp686 +
                         _tmp733 * _tmp955 - _tmp735 * _tmp933 + _tmp885;
  const Scalar _tmp960 = -_tmp298 * _tmp719 - _tmp424 * _tmp956 + _tmp424 * _tmp958 +
                         _tmp428 * _tmp947 + _tmp446 * _tmp948 - _tmp454 * _tmp942 -
                         _tmp479 * _tmp931 + _tmp480 * _tmp939 + _tmp502 * _tmp953 -
                         _tmp508 * _tmp933 + _tmp510 * _tmp933 - _tmp512 * _tmp933 -
                         _tmp513 * _tmp933 + _tmp516 * _tmp932 - _tmp517 * _tmp932 +
                         _tmp672 * _tmp933 + _tmp674 * _tmp933 + _tmp675 + _tmp890;
  const Scalar _tmp961 = -_tmp424 * _tmp948 + _tmp428 * _tmp931 - _tmp431 * _tmp949 +
                         _tmp434 * _tmp940 + _tmp444 * _tmp932 + _tmp446 * _tmp958 -
                         _tmp449 * _tmp933 + _tmp455 * _tmp941 + _tmp458 * _tmp933 -
                         _tmp459 * _tmp955 + _tmp464 * _tmp933 - _tmp473 * _tmp954 +
                         _tmp479 * _tmp947 + _tmp480 * _tmp953 - _tmp502 * _tmp939 + _tmp688 -
                         _tmp738 * _tmp932 - _tmp739 * _tmp933 + _tmp893;
  const Scalar _tmp962 = _tmp957 * _x0[2] - _tmp959 * _x0[1] + _tmp960 * _x0[0] + _tmp961 * _x0[3];
  const Scalar _tmp963 = _tmp957 * _x0[1] + _tmp959 * _x0[2] + _tmp960 * _x0[3] - _tmp961 * _x0[0];
  const Scalar _tmp964 = _tmp957 * _x0[3] - _tmp959 * _x0[0] - _tmp960 * _x0[1] - _tmp961 * _x0[2];
  const Scalar _tmp965 = _tmp957 * _x0[0] + _tmp959 * _x0[3] - _tmp960 * _x0[2] + _tmp961 * _x0[1];
  const Scalar _tmp966 = _tmp962 * _y[3] - _tmp963 * _y[0] - _tmp964 * _y[2] + _tmp965 * _y[1];
  const Scalar _tmp967 = _tmp610 * _tmp966;
  const Scalar _tmp968 = _tmp962 * _y[2] + _tmp963 * _y[1] + _tmp964 * _y[3] + _tmp965 * _y[0];
  const Scalar _tmp969 = _tmp602 * _tmp968;
  const Scalar _tmp970 = _tmp595 * _tmp968;
  const Scalar _tmp971 = _tmp962 * _y[0] + _tmp963 * _y[3] - _tmp964 * _y[1] - _tmp965 * _y[2];
  const Scalar _tmp972 = -_tmp962 * _y[1] + _tmp963 * _y[2] - _tmp964 * _y[0] + _tmp965 * _y[3];
  const Scalar _tmp973 = _tmp610 * _tmp972;
  const Scalar _tmp974 = _tmp597 * _tmp968;
  const Scalar _tmp975 = _tmp617 * _tmp968;
  const Scalar _tmp976 = _tmp614 * _tmp968;
  const Scalar _tmp977 = _tmp610 * _tmp971;
  const Scalar _tmp978 = _tmp269 * _tmp667;
  const Scalar _tmp979 = _tmp276 * _tmp978 - _tmp279 * _tmp667 - _tmp290 * _tmp667 -
                         _tmp291 * _tmp667 + _tmp292 * _tmp978 + _tmp293 * _tmp978 +
                         _tmp666 * _tmp760 + _tmp713;
  const Scalar _tmp980 = _tmp311 * _tmp979;
  const Scalar _tmp981 = _tmp433 * _tmp980;
  const Scalar _tmp982 = _tmp461 * _tmp979;
  const Scalar _tmp983 = _tmp454 * _tmp978;
  const Scalar _tmp984 = _tmp783 * _tmp800;
  const Scalar _tmp985 = _tmp778 - _tmp779 - _tmp780 + _tmp781;
  const Scalar _tmp986 = _tmp795 * _tmp911 + _tmp801 * _tmp985;
  const Scalar _tmp987 = _tmp770 * _tmp915 + _tmp786 * _tmp984 - _tmp789 * _tmp800 -
                         _tmp790 * _tmp800 + _tmp791 * _tmp984 - _tmp792 * _tmp800 +
                         _tmp793 * _tmp984 + _tmp986;
  const Scalar _tmp988 = _tmp415 * _tmp987;
  const Scalar _tmp989 = _tmp176 * _tmp984;
  const Scalar _tmp990 = _tmp170 * _tmp984;
  const Scalar _tmp991 = _tmp833 * _tmp987;
  const Scalar _tmp992 = _tmp800 * _tmp818;
  const Scalar _tmp993 = _tmp422 * _tmp987;
  const Scalar _tmp994 = _tmp453 * _tmp987;
  const Scalar _tmp995 = _tmp411 * _tmp985;
  const Scalar _tmp996 = -_tmp415 * _tmp995 + _tmp838 * _tmp911;
  const Scalar _tmp997 = -_tmp418 * _tmp991 + _tmp772 - _tmp821 * _tmp990 + _tmp824 * _tmp994 +
                         _tmp829 * _tmp988 - _tmp835 * _tmp993 - _tmp845 * _tmp992 -
                         _tmp846 * _tmp987 + _tmp849 * _tmp992 + _tmp850 * _tmp987 -
                         _tmp852 * _tmp987 + _tmp853 * _tmp992 - _tmp921 * _tmp989 +
                         _tmp924 * _tmp984 + _tmp996;
  const Scalar _tmp998 = _tmp439 * _tmp979;
  const Scalar _tmp999 = _tmp473 * _tmp979;
  const Scalar _tmp1000 = _tmp820 * _tmp984;
  const Scalar _tmp1001 = _tmp436 * _tmp987;
  const Scalar _tmp1002 = _tmp418 * _tmp995 + _tmp771 * _tmp911;
  const Scalar _tmp1003 = _tmp1000 * _tmp815 + _tmp1001 * _tmp827 + _tmp1002 - _tmp415 * _tmp991 -
                          _tmp418 * _tmp829 * _tmp987 - _tmp777 * _tmp993 - _tmp813 * _tmp994 -
                          _tmp815 * _tmp992 - _tmp821 * _tmp989 + _tmp823 * _tmp992 +
                          _tmp825 * _tmp987 - _tmp831 * _tmp984 + _tmp832 * _tmp992 +
                          _tmp836 * _tmp987 + _tmp951;
  const Scalar _tmp1004 = _tmp451 * _tmp667;
  const Scalar _tmp1005 = _tmp667 * _tmp722;
  const Scalar _tmp1006 = _tmp448 * _tmp979;
  const Scalar _tmp1007 = _tmp422 * _tmp995 - _tmp837 * _tmp911;
  const Scalar _tmp1008 = -_tmp1001 * _tmp824 + _tmp1007 - _tmp394 * _tmp991 - _tmp800 * _tmp858 -
                          _tmp829 * _tmp993 - _tmp835 * _tmp988 + _tmp860 * _tmp992 +
                          _tmp861 * _tmp987 + _tmp862 * _tmp984 - _tmp863 * _tmp984 +
                          _tmp865 * _tmp987 + _tmp866 * _tmp987 + _tmp867 * _tmp992 + _tmp873 -
                          _tmp945 * _tmp990;
  const Scalar _tmp1009 = -_tmp394 * _tmp995 - _tmp854 * _tmp911;
  const Scalar _tmp1010 = _tmp1000 * _tmp878 + _tmp1000 * _tmp881 - _tmp1001 * _tmp813 + _tmp1009 -
                          _tmp422 * _tmp991 + _tmp777 * _tmp988 - _tmp827 * _tmp994 + _tmp869 -
                          _tmp875 * _tmp992 - _tmp876 * _tmp987 + _tmp877 * _tmp987 -
                          _tmp878 * _tmp992 + _tmp879 * _tmp987 - _tmp881 * _tmp992 +
                          _tmp945 * _tmp989;
  const Scalar _tmp1011 = -_tmp1003 * _tmp479 - _tmp1004 * _tmp492 - _tmp1004 * _tmp498 -
                          _tmp1005 * _tmp454 - _tmp1006 * _tmp494 - _tmp1008 * _tmp502 +
                          _tmp1010 * _tmp428 + _tmp424 * _tmp999 - _tmp431 * _tmp982 +
                          _tmp443 * _tmp983 - _tmp446 * _tmp998 + _tmp454 * _tmp981 -
                          _tmp463 * _tmp980 - _tmp480 * _tmp997 + _tmp488 * _tmp978 +
                          _tmp491 * _tmp979 + _tmp497 * _tmp978 + _tmp731 + _tmp886;
  const Scalar _tmp1012 = _tmp1004 * _tmp216;
  const Scalar _tmp1013 = _tmp1003 * _tmp480 - _tmp1004 * _tmp514 + _tmp1005 * _tmp446 +
                          _tmp1008 * _tmp428 + _tmp1010 * _tmp502 + _tmp1012 * _tmp424 -
                          _tmp447 * _tmp980 - _tmp454 * _tmp998 + _tmp457 * _tmp980 -
                          _tmp479 * _tmp997 - _tmp494 * _tmp982 + _tmp510 * _tmp979 -
                          _tmp513 * _tmp979 - _tmp515 * _tmp978 + _tmp516 * _tmp978 -
                          _tmp517 * _tmp978 + _tmp672 * _tmp979 + _tmp727 + _tmp892;
  const Scalar _tmp1014 = -_tmp1003 * _tmp502 + _tmp1004 * _tmp455 - _tmp1005 * _tmp424 +
                          _tmp1006 * _tmp457 + _tmp1008 * _tmp479 + _tmp1010 * _tmp480 +
                          _tmp1012 * _tmp446 + _tmp424 * _tmp981 + _tmp428 * _tmp997 -
                          _tmp431 * _tmp980 - _tmp437 * _tmp998 + _tmp444 * _tmp978 -
                          _tmp449 * _tmp979 - _tmp454 * _tmp999 - _tmp460 * _tmp978 +
                          _tmp463 * _tmp982 - _tmp467 * _tmp983 + _tmp740 + _tmp890;
  const Scalar _tmp1015 = _tmp1003 * _tmp428 - _tmp1004 * _tmp521 + _tmp1004 * _tmp530 +
                          _tmp1005 * _tmp437 - _tmp1006 * _tmp463 - _tmp1008 * _tmp480 +
                          _tmp1010 * _tmp479 - _tmp424 * _tmp998 - _tmp437 * _tmp981 +
                          _tmp494 * _tmp980 + _tmp496 * _tmp983 + _tmp502 * _tmp997 +
                          _tmp522 * _tmp979 - _tmp525 * _tmp978 - _tmp526 * _tmp979 +
                          _tmp528 * _tmp979 - _tmp529 * _tmp978 + _tmp736 + _tmp943;
  const Scalar _tmp1016 =
      _tmp1011 * _x0[2] + _tmp1013 * _x0[0] + _tmp1014 * _x0[3] - _tmp1015 * _x0[1];
  const Scalar _tmp1017 =
      _tmp1011 * _x0[1] + _tmp1013 * _x0[3] - _tmp1014 * _x0[0] + _tmp1015 * _x0[2];
  const Scalar _tmp1018 =
      _tmp1011 * _x0[0] - _tmp1013 * _x0[2] + _tmp1014 * _x0[1] + _tmp1015 * _x0[3];
  const Scalar _tmp1019 =
      _tmp1011 * _x0[3] - _tmp1013 * _x0[1] - _tmp1014 * _x0[2] - _tmp1015 * _x0[0];
  const Scalar _tmp1020 = _tmp1016 * _y[2] + _tmp1017 * _y[1] + _tmp1018 * _y[0] + _tmp1019 * _y[3];
  const Scalar _tmp1021 = _tmp1020 * _tmp595;
  const Scalar _tmp1022 = _tmp1016 * _y[0] + _tmp1017 * _y[3] - _tmp1018 * _y[2] - _tmp1019 * _y[1];
  const Scalar _tmp1023 =
      -_tmp1016 * _y[1] + _tmp1017 * _y[2] + _tmp1018 * _y[3] - _tmp1019 * _y[0];
  const Scalar _tmp1024 = _tmp1020 * _tmp602;
  const Scalar _tmp1025 = _tmp1020 * _tmp597;
  const Scalar _tmp1026 = _tmp1020 * _tmp617;
  const Scalar _tmp1027 = _tmp1020 * _tmp614;
  const Scalar _tmp1028 = _tmp1016 * _y[3] - _tmp1017 * _y[0] + _tmp1018 * _y[1] - _tmp1019 * _y[2];
  const Scalar _tmp1029 = _tmp1022 * _tmp610;
  const Scalar _tmp1030 = _tmp1021 * _tmp605;
  const Scalar _tmp1031 = lambdas(0, 0) - lambdas(1, 0);
  const Scalar _tmp1032 = _tmp766 + _tmp767 + _tmp768 + _tmp769;
  const Scalar _tmp1033 = _tmp1032 * _tmp837;
  const Scalar _tmp1034 = -_tmp1033;
  const Scalar _tmp1035 = _tmp783 * _tmp985;
  const Scalar _tmp1036 = _tmp113 * _tmp386;
  const Scalar _tmp1037 = (Scalar(1) / Scalar(2)) * _tmp120;
  const Scalar _tmp1038 = (Scalar(1) / Scalar(2)) * _tmp121;
  const Scalar _tmp1039 = (Scalar(1) / Scalar(2)) * _tmp122;
  const Scalar _tmp1040 = (Scalar(1) / Scalar(2)) * _tmp123;
  const Scalar _tmp1041 = _tmp1037 - _tmp1038 + _tmp1039 - _tmp1040;
  const Scalar _tmp1042 = _tmp369 / (_tmp367 * std::sqrt(_tmp367));
  const Scalar _tmp1043 = _tmp1041 * _tmp1042;
  const Scalar _tmp1044 = _tmp14 * lambdas(2, 0);
  const Scalar _tmp1045 = ((((_tmp22 - _tmp365) > 0) - ((_tmp22 - _tmp365) < 0)) + 1) *
                          (((_tmp364) > 0) - ((_tmp364) < 0));
  const Scalar _tmp1046 = _tmp1044 * _tmp1045 * _tmp377;
  const Scalar _tmp1047 = _tmp1046 * _tmp366;
  const Scalar _tmp1048 = _tmp1043 * _tmp1047;
  const Scalar _tmp1049 = _tmp1044 * _tmp378;
  const Scalar _tmp1050 = _tmp376 / (_tmp373 * std::sqrt(_tmp373));
  const Scalar _tmp1051 = _tmp1049 * _tmp1050;
  const Scalar _tmp1052 = _tmp1051 * _tmp124;
  const Scalar _tmp1053 = _tmp1045 * _tmp116;
  const Scalar _tmp1054 = _tmp1053 * _tmp114;
  const Scalar _tmp1055 = _tmp1045 * _tmp125;
  const Scalar _tmp1056 = _tmp1053 * _tmp119;
  const Scalar _tmp1057 = _tmp370 / std::pow(_tmp367, Scalar(2));
  const Scalar _tmp1058 = _tmp1056 * _tmp1057;
  const Scalar _tmp1059 = _tmp1058 * _tmp366;
  const Scalar _tmp1060 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp1061 = (Scalar(1) / Scalar(2)) * _tmp10;
  const Scalar _tmp1062 = (Scalar(1) / Scalar(2)) * _tmp13;
  const Scalar _tmp1063 = (Scalar(1) / Scalar(2)) * _tmp11;
  const Scalar _tmp1064 = -_tmp1060 - _tmp1061 - _tmp1062 - _tmp1063;
  const Scalar _tmp1065 = 8 * _tmp115 * _tmp371;
  const Scalar _tmp1066 = _tmp1065 * _tmp124;
  const Scalar _tmp1067 = _tmp1057 * _tmp366;
  const Scalar _tmp1068 = _tmp1055 * _tmp1067;
  const Scalar _tmp1069 = _tmp1054 * _tmp1067;
  const Scalar _tmp1070 = (Scalar(1) / Scalar(2)) * _tmp4;
  const Scalar _tmp1071 = (Scalar(1) / Scalar(2)) * _tmp5;
  const Scalar _tmp1072 = (Scalar(1) / Scalar(2)) * _tmp6;
  const Scalar _tmp1073 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp1074 = _tmp1070 - _tmp1071 - _tmp1072 + _tmp1073;
  const Scalar _tmp1075 = _tmp1065 * _tmp113;
  const Scalar _tmp1076 = (Scalar(1) / Scalar(2)) * _tmp109;
  const Scalar _tmp1077 = (Scalar(1) / Scalar(2)) * _tmp110;
  const Scalar _tmp1078 = (Scalar(1) / Scalar(2)) * _tmp111;
  const Scalar _tmp1079 = (Scalar(1) / Scalar(2)) * _tmp112;
  const Scalar _tmp1080 = -_tmp1076 - _tmp1077 + _tmp1078 + _tmp1079;
  const Scalar _tmp1081 = _tmp1080 * _tmp8;
  const Scalar _tmp1082 = _tmp1065 * _tmp1081 + _tmp1074 * _tmp1075;
  const Scalar _tmp1083 = _tmp1041 * _tmp1059 + _tmp1041 * _tmp1068 + _tmp1041 * _tmp1069 -
                          _tmp1043 * _tmp1054 - _tmp1043 * _tmp1055 - _tmp1043 * _tmp1056 +
                          _tmp1064 * _tmp1066 + _tmp1082;
  const Scalar _tmp1084 = _tmp1083 * _tmp363;
  const Scalar _tmp1085 = _tmp1051 * _tmp113;
  const Scalar _tmp1086 = _tmp1085 * _tmp386;
  const Scalar _tmp1087 = _tmp124 * _tmp363;
  const Scalar _tmp1088 = _tmp1051 * _tmp8;
  const Scalar _tmp1089 = _tmp1083 * _tmp389;
  const Scalar _tmp1090 = (Scalar(1) / Scalar(4)) * _tmp377;
  const Scalar _tmp1091 = _tmp1090 * _tmp392;
  const Scalar _tmp1092 = (Scalar(1) / Scalar(2)) / _tmp373;
  const Scalar _tmp1093 = _tmp1092 * _tmp124;
  const Scalar _tmp1094 = _tmp1049 * _tmp1093;
  const Scalar _tmp1095 = _tmp1094 * _tmp417;
  const Scalar _tmp1096 = _tmp363 * _tmp380;
  const Scalar _tmp1097 = _tmp1064 * _tmp1096;
  const Scalar _tmp1098 = -_tmp1097;
  const Scalar _tmp1099 = _tmp389 * _tmp8;
  const Scalar _tmp1100 = _tmp1046 * _tmp368;
  const Scalar _tmp1101 = _tmp1099 * _tmp1100;
  const Scalar _tmp1102 = _tmp1041 * _tmp1100;
  const Scalar _tmp1103 = _tmp1092 * _tmp8;
  const Scalar _tmp1104 = _tmp1049 * _tmp420;
  const Scalar _tmp1105 = _tmp1083 * _tmp1104;
  const Scalar _tmp1106 = _tmp1087 * _tmp1100;
  const Scalar _tmp1107 = _tmp1092 * _tmp113;
  const Scalar _tmp1108 = _tmp1049 * _tmp1107;
  const Scalar _tmp1109 = _tmp1108 * _tmp414;
  const Scalar _tmp1110 = _tmp380 * _tmp386;
  const Scalar _tmp1111 = _tmp380 * _tmp389;
  const Scalar _tmp1112 = _tmp1074 * _tmp1110 + _tmp1080 * _tmp1111;
  const Scalar _tmp1113 = _tmp1036 * _tmp1048 - _tmp1036 * _tmp1102 - _tmp1041 * _tmp1101 +
                          _tmp1041 * _tmp1106 - _tmp1048 * _tmp1087 + _tmp1048 * _tmp1099 +
                          _tmp1052 * _tmp1084 - _tmp1083 * _tmp1086 - _tmp1083 * _tmp1091 -
                          _tmp1083 * _tmp1095 + _tmp1083 * _tmp1109 - _tmp1088 * _tmp1089 +
                          _tmp1098 + _tmp1103 * _tmp1105 + _tmp1112;
  const Scalar _tmp1114 = _tmp1094 * _tmp393;
  const Scalar _tmp1115 = _tmp386 * _tmp8;
  const Scalar _tmp1116 = _tmp1051 * _tmp1115;
  const Scalar _tmp1117 = _tmp1052 * _tmp392;
  const Scalar _tmp1118 = _tmp1049 * _tmp1103;
  const Scalar _tmp1119 = _tmp1118 * _tmp414;
  const Scalar _tmp1120 = _tmp124 * _tmp392;
  const Scalar _tmp1121 = _tmp113 * _tmp389;
  const Scalar _tmp1122 = _tmp1085 * _tmp389;
  const Scalar _tmp1123 = _tmp380 * _tmp392;
  const Scalar _tmp1124 = _tmp1064 * _tmp1123;
  const Scalar _tmp1125 = _tmp1090 * _tmp363;
  const Scalar _tmp1126 = _tmp1074 * _tmp1111 - _tmp1080 * _tmp1110;
  const Scalar _tmp1127 = -_tmp1048 * _tmp1115 + _tmp1048 * _tmp1120 + _tmp1048 * _tmp1121 +
                          _tmp1083 * _tmp1114 + _tmp1083 * _tmp1116 - _tmp1083 * _tmp1117 -
                          _tmp1083 * _tmp1119 - _tmp1083 * _tmp1122 - _tmp1083 * _tmp1125 +
                          _tmp1102 * _tmp1115 - _tmp1102 * _tmp1120 - _tmp1102 * _tmp1121 +
                          _tmp1105 * _tmp1107 + _tmp1124 + _tmp1126;
  const Scalar _tmp1128 = _tmp1064 * _tmp1111;
  const Scalar _tmp1129 = _tmp1085 * _tmp392;
  const Scalar _tmp1130 = _tmp124 * _tmp389;
  const Scalar _tmp1131 = _tmp1100 * _tmp1130;
  const Scalar _tmp1132 = _tmp113 * _tmp392;
  const Scalar _tmp1133 = _tmp363 * _tmp8;
  const Scalar _tmp1134 = _tmp1100 * _tmp392;
  const Scalar _tmp1135 = _tmp113 * _tmp1134;
  const Scalar _tmp1136 = _tmp1093 * _tmp1104;
  const Scalar _tmp1137 = _tmp1090 * _tmp386;
  const Scalar _tmp1138 = _tmp1108 * _tmp393;
  const Scalar _tmp1139 = _tmp1118 * _tmp417;
  const Scalar _tmp1140 = -_tmp1074 * _tmp1123 + _tmp1080 * _tmp1096;
  const Scalar _tmp1141 = -_tmp1041 * _tmp1131 + _tmp1041 * _tmp1135 + _tmp1048 * _tmp1130 -
                          _tmp1048 * _tmp1132 + _tmp1048 * _tmp1133 - _tmp1052 * _tmp1089 +
                          _tmp1083 * _tmp1129 + _tmp1083 * _tmp1136 - _tmp1083 * _tmp1137 -
                          _tmp1083 * _tmp1138 + _tmp1083 * _tmp1139 - _tmp1084 * _tmp1088 -
                          _tmp1102 * _tmp1133 + _tmp1128 + _tmp1140;
  const Scalar _tmp1142 = _tmp1035 * _tmp170;
  const Scalar _tmp1143 = _tmp1032 * _tmp795 + _tmp1035 * _tmp786 + _tmp1035 * _tmp791 +
                          _tmp1035 * _tmp793 - _tmp789 * _tmp985 - _tmp790 * _tmp985 -
                          _tmp792 * _tmp985 + _tmp808;
  const Scalar _tmp1144 = _tmp1143 * _tmp415;
  const Scalar _tmp1145 = _tmp1143 * _tmp824;
  const Scalar _tmp1146 = _tmp1143 * _tmp827;
  const Scalar _tmp1147 = _tmp818 * _tmp985;
  const Scalar _tmp1148 = _tmp1143 * _tmp422;
  const Scalar _tmp1149 = _tmp1064 * _tmp1110;
  const Scalar _tmp1150 = -_tmp1149;
  const Scalar _tmp1151 = _tmp392 * _tmp8;
  const Scalar _tmp1152 = _tmp1051 * _tmp421;
  const Scalar _tmp1153 = _tmp1108 * _tmp417;
  const Scalar _tmp1154 = _tmp113 * _tmp363;
  const Scalar _tmp1155 = _tmp1118 * _tmp393;
  const Scalar _tmp1156 = _tmp1090 * _tmp389;
  const Scalar _tmp1157 = _tmp1085 * _tmp363;
  const Scalar _tmp1158 = _tmp1094 * _tmp414;
  const Scalar _tmp1159 = _tmp1088 * _tmp392;
  const Scalar _tmp1160 = -_tmp1074 * _tmp1096 - _tmp1080 * _tmp1123;
  const Scalar _tmp1161 = -_tmp1048 * _tmp1151 - _tmp1048 * _tmp1154 - _tmp1048 * _tmp421 +
                          _tmp1083 * _tmp1152 - _tmp1083 * _tmp1153 - _tmp1083 * _tmp1155 -
                          _tmp1083 * _tmp1156 + _tmp1083 * _tmp1157 - _tmp1083 * _tmp1158 +
                          _tmp1083 * _tmp1159 + _tmp1102 * _tmp1151 + _tmp1102 * _tmp1154 +
                          _tmp1102 * _tmp421 + _tmp1150 + _tmp1160;
  const Scalar _tmp1162 = _tmp1034 + _tmp1035 * _tmp862 - _tmp1035 * _tmp863 + _tmp1113 * _tmp413 -
                          _tmp1127 * _tmp423 + _tmp1141 * _tmp412 - _tmp1142 * _tmp945 -
                          _tmp1143 * _tmp859 + _tmp1143 * _tmp861 + _tmp1143 * _tmp865 -
                          _tmp1144 * _tmp835 - _tmp1145 * _tmp436 + _tmp1146 * _tmp445 +
                          _tmp1147 * _tmp860 + _tmp1147 * _tmp867 - _tmp1148 * _tmp829 +
                          _tmp1161 * _tmp419 - _tmp858 * _tmp985 + _tmp870;
  const Scalar _tmp1163 = _tmp1032 * _tmp771;
  const Scalar _tmp1164 = _tmp1035 * _tmp820;
  const Scalar _tmp1165 = _tmp1143 * _tmp829;
  const Scalar _tmp1166 = _tmp1143 * _tmp813;
  const Scalar _tmp1167 = _tmp1035 * _tmp176;
  const Scalar _tmp1168 = -_tmp1035 * _tmp831 - _tmp1113 * _tmp412 + _tmp1127 * _tmp419 +
                          _tmp1141 * _tmp413 - _tmp1143 * _tmp834 + _tmp1143 * _tmp836 +
                          _tmp1145 * _tmp445 + _tmp1146 * _tmp436 - _tmp1147 * _tmp815 +
                          _tmp1147 * _tmp823 + _tmp1147 * _tmp832 - _tmp1148 * _tmp777 +
                          _tmp1161 * _tmp423 + _tmp1163 + _tmp1164 * _tmp815 - _tmp1165 * _tmp418 -
                          _tmp1166 * _tmp453 - _tmp1167 * _tmp821 + _tmp839;
  const Scalar _tmp1169 = _tmp1032 * _tmp838;
  const Scalar _tmp1170 = _tmp1035 * _tmp924 + _tmp1113 * _tmp423 + _tmp1127 * _tmp413 -
                          _tmp1141 * _tmp419 - _tmp1142 * _tmp821 - _tmp1143 * _tmp848 +
                          _tmp1143 * _tmp850 - _tmp1143 * _tmp852 + _tmp1145 * _tmp453 -
                          _tmp1146 * _tmp416 - _tmp1147 * _tmp845 + _tmp1147 * _tmp849 +
                          _tmp1147 * _tmp853 - _tmp1148 * _tmp835 + _tmp1161 * _tmp412 +
                          _tmp1165 * _tmp415 - _tmp1167 * _tmp921 + _tmp1169 + _tmp855;
  const Scalar _tmp1171 = _tmp1032 * _tmp854;
  const Scalar _tmp1172 = -_tmp1171;
  const Scalar _tmp1173 = _tmp1035 * _tmp950 - _tmp1113 * _tmp419 - _tmp1127 * _tmp412 -
                          _tmp1141 * _tmp423 + _tmp1143 * _tmp877 + _tmp1143 * _tmp879 -
                          _tmp1143 * _tmp880 + _tmp1144 * _tmp777 - _tmp1145 * _tmp416 -
                          _tmp1146 * _tmp453 - _tmp1147 * _tmp875 - _tmp1147 * _tmp878 -
                          _tmp1147 * _tmp881 + _tmp1161 * _tmp413 + _tmp1164 * _tmp878 -
                          _tmp1166 * _tmp436 + _tmp1167 * _tmp945 + _tmp1172 + _tmp882;
  const Scalar _tmp1174 =
      -_tmp1162 * _tmp480 + _tmp1168 * _tmp428 + _tmp1170 * _tmp502 + _tmp1173 * _tmp479;
  const Scalar _tmp1175 =
      -_tmp1162 * _tmp502 - _tmp1168 * _tmp479 - _tmp1170 * _tmp480 + _tmp1173 * _tmp428;
  const Scalar _tmp1176 =
      _tmp1162 * _tmp428 + _tmp1168 * _tmp480 - _tmp1170 * _tmp479 + _tmp1173 * _tmp502;
  const Scalar _tmp1177 =
      _tmp1162 * _tmp479 - _tmp1168 * _tmp502 + _tmp1170 * _tmp428 + _tmp1173 * _tmp480;
  const Scalar _tmp1178 =
      -_tmp1174 * _x0[1] + _tmp1175 * _x0[2] + _tmp1176 * _x0[0] + _tmp1177 * _x0[3];
  const Scalar _tmp1179 =
      _tmp1174 * _x0[2] + _tmp1175 * _x0[1] + _tmp1176 * _x0[3] - _tmp1177 * _x0[0];
  const Scalar _tmp1180 =
      -_tmp1174 * _x0[0] + _tmp1175 * _x0[3] - _tmp1176 * _x0[1] - _tmp1177 * _x0[2];
  const Scalar _tmp1181 =
      _tmp1174 * _x0[3] + _tmp1175 * _x0[0] - _tmp1176 * _x0[2] + _tmp1177 * _x0[1];
  const Scalar _tmp1182 = _tmp1178 * _y[2] + _tmp1179 * _y[1] + _tmp1180 * _y[3] + _tmp1181 * _y[0];
  const Scalar _tmp1183 = _tmp1182 * _tmp595;
  const Scalar _tmp1184 =
      -_tmp1178 * _y[1] + _tmp1179 * _y[2] - _tmp1180 * _y[0] + _tmp1181 * _y[3];
  const Scalar _tmp1185 = _tmp1178 * _y[3] - _tmp1179 * _y[0] - _tmp1180 * _y[2] + _tmp1181 * _y[1];
  const Scalar _tmp1186 = _tmp1182 * _tmp602;
  const Scalar _tmp1187 = _tmp1182 * _tmp617;
  const Scalar _tmp1188 = _tmp1178 * _y[0] + _tmp1179 * _y[3] - _tmp1180 * _y[1] - _tmp1181 * _y[2];
  const Scalar _tmp1189 = _tmp1182 * _tmp597;
  const Scalar _tmp1190 = _tmp1182 * _tmp614;
  const Scalar _tmp1191 = _tmp1188 * _tmp610;
  const Scalar _tmp1192 = _tmp806 * _tmp818;
  const Scalar _tmp1193 = _tmp783 * _tmp806;
  const Scalar _tmp1194 = _tmp1032 * _tmp801 + _tmp1193 * _tmp786 + _tmp1193 * _tmp791 +
                          _tmp1193 * _tmp793 - _tmp789 * _tmp806 - _tmp790 * _tmp806 -
                          _tmp792 * _tmp806 + _tmp917;
  const Scalar _tmp1195 = _tmp1194 * _tmp776;
  const Scalar _tmp1196 = _tmp1195 * _tmp170;
  const Scalar _tmp1197 = _tmp1193 * _tmp820;
  const Scalar _tmp1198 = _tmp807 * _tmp818;
  const Scalar _tmp1199 = -_tmp1070 + _tmp1071 + _tmp1072 - _tmp1073;
  const Scalar _tmp1200 = _tmp1042 * _tmp1055;
  const Scalar _tmp1201 = _tmp1199 * _tmp366;
  const Scalar _tmp1202 = _tmp1057 * _tmp1201;
  const Scalar _tmp1203 = _tmp1042 * _tmp1054;
  const Scalar _tmp1204 = _tmp1042 * _tmp1056;
  const Scalar _tmp1205 = _tmp1065 * _tmp8;
  const Scalar _tmp1206 = _tmp1076 + _tmp1077 - _tmp1078 - _tmp1079;
  const Scalar _tmp1207 = _tmp1041 * _tmp1075 + _tmp1066 * _tmp1206;
  const Scalar _tmp1208 = _tmp1054 * _tmp1202 + _tmp1055 * _tmp1202 + _tmp1058 * _tmp1201 +
                          _tmp1064 * _tmp1205 - _tmp1199 * _tmp1200 - _tmp1199 * _tmp1203 -
                          _tmp1199 * _tmp1204 + _tmp1207;
  const Scalar _tmp1209 = _tmp1104 * _tmp1107;
  const Scalar _tmp1210 = _tmp1046 * _tmp1201;
  const Scalar _tmp1211 = _tmp1042 * _tmp1210;
  const Scalar _tmp1212 = _tmp1100 * _tmp1199;
  const Scalar _tmp1213 = _tmp1042 * _tmp1121;
  const Scalar _tmp1214 = _tmp1208 * _tmp389;
  const Scalar _tmp1215 = _tmp1041 * _tmp380;
  const Scalar _tmp1216 = _tmp1123 * _tmp1206 + _tmp1215 * _tmp389;
  const Scalar _tmp1217 = -_tmp1085 * _tmp1214 + _tmp1114 * _tmp1208 - _tmp1115 * _tmp1211 +
                          _tmp1115 * _tmp1212 + _tmp1116 * _tmp1208 - _tmp1117 * _tmp1208 -
                          _tmp1119 * _tmp1208 + _tmp1120 * _tmp1211 - _tmp1120 * _tmp1212 -
                          _tmp1121 * _tmp1212 - _tmp1125 * _tmp1208 + _tmp1150 +
                          _tmp1208 * _tmp1209 + _tmp1210 * _tmp1213 + _tmp1216;
  const Scalar _tmp1218 = _tmp1085 * _tmp1208;
  const Scalar _tmp1219 = _tmp1088 * _tmp363;
  const Scalar _tmp1220 = _tmp1042 * _tmp1130;
  const Scalar _tmp1221 = _tmp1042 * _tmp1132;
  const Scalar _tmp1222 = -_tmp1041 * _tmp1123 + _tmp1111 * _tmp1206;
  const Scalar _tmp1223 = -_tmp1052 * _tmp1214 + _tmp1097 - _tmp1131 * _tmp1199 +
                          _tmp1133 * _tmp1211 - _tmp1133 * _tmp1212 + _tmp1135 * _tmp1199 +
                          _tmp1136 * _tmp1208 - _tmp1137 * _tmp1208 - _tmp1138 * _tmp1208 +
                          _tmp1139 * _tmp1208 - _tmp1208 * _tmp1219 + _tmp1210 * _tmp1220 -
                          _tmp1210 * _tmp1221 + _tmp1218 * _tmp392 + _tmp1222;
  const Scalar _tmp1224 = -_tmp1169;
  const Scalar _tmp1225 = _tmp1194 * _tmp436;
  const Scalar _tmp1226 = _tmp1194 * _tmp827;
  const Scalar _tmp1227 = _tmp1042 * _tmp1099;
  const Scalar _tmp1228 = _tmp1036 * _tmp1042;
  const Scalar _tmp1229 = _tmp1052 * _tmp363;
  const Scalar _tmp1230 = _tmp1103 * _tmp1104;
  const Scalar _tmp1231 = _tmp1041 * _tmp1110 - _tmp1096 * _tmp1206;
  const Scalar _tmp1232 = -_tmp1036 * _tmp1212 - _tmp1087 * _tmp1211 - _tmp1088 * _tmp1214 -
                          _tmp1091 * _tmp1208 - _tmp1095 * _tmp1208 - _tmp1101 * _tmp1199 +
                          _tmp1106 * _tmp1199 + _tmp1109 * _tmp1208 + _tmp1128 +
                          _tmp1208 * _tmp1229 + _tmp1208 * _tmp1230 + _tmp1210 * _tmp1227 +
                          _tmp1210 * _tmp1228 - _tmp1218 * _tmp386 + _tmp1231;
  const Scalar _tmp1233 = -_tmp1124;
  const Scalar _tmp1234 = _tmp1100 * _tmp1154;
  const Scalar _tmp1235 = _tmp1042 * _tmp1154;
  const Scalar _tmp1236 = _tmp1042 * _tmp1151;
  const Scalar _tmp1237 = -_tmp1110 * _tmp1206 - _tmp1215 * _tmp363;
  const Scalar _tmp1238 = _tmp1151 * _tmp1212 + _tmp1152 * _tmp1208 - _tmp1153 * _tmp1208 -
                          _tmp1155 * _tmp1208 - _tmp1156 * _tmp1208 + _tmp1157 * _tmp1208 -
                          _tmp1158 * _tmp1208 + _tmp1159 * _tmp1208 + _tmp1199 * _tmp1234 -
                          _tmp1210 * _tmp1235 - _tmp1210 * _tmp1236 - _tmp1211 * _tmp421 +
                          _tmp1212 * _tmp421 + _tmp1233 + _tmp1237;
  const Scalar _tmp1239 = _tmp1195 * _tmp176;
  const Scalar _tmp1240 = _tmp783 * _tmp807;
  const Scalar _tmp1241 = _tmp1240 * _tmp820;
  const Scalar _tmp1242 = -_tmp1192 * _tmp875 - _tmp1192 * _tmp878 - _tmp1194 * _tmp876 -
                          _tmp1194 * _tmp880 + _tmp1195 * _tmp878 + _tmp1196 * _tmp418 +
                          _tmp1197 * _tmp875 + _tmp1197 * _tmp878 - _tmp1198 * _tmp418 -
                          _tmp1217 * _tmp412 - _tmp1223 * _tmp423 + _tmp1224 - _tmp1225 * _tmp813 -
                          _tmp1226 * _tmp453 - _tmp1232 * _tmp419 + _tmp1238 * _tmp413 +
                          _tmp1239 * _tmp415 + _tmp1241 * _tmp418 + _tmp952;
  const Scalar _tmp1243 = _tmp1195 * _tmp159;
  const Scalar _tmp1244 = _tmp1163 - _tmp1192 * _tmp857 + _tmp1192 * _tmp867 + _tmp1193 * _tmp862 -
                          _tmp1193 * _tmp863 - _tmp1194 * _tmp859 + _tmp1194 * _tmp865 +
                          _tmp1195 * _tmp857 - _tmp1196 * _tmp415 + _tmp1198 * _tmp415 -
                          _tmp1217 * _tmp423 + _tmp1223 * _tmp412 - _tmp1225 * _tmp824 +
                          _tmp1226 * _tmp445 + _tmp1232 * _tmp413 + _tmp1238 * _tmp419 -
                          _tmp1240 * _tmp945 - _tmp1243 * _tmp422 + _tmp946;
  const Scalar _tmp1245 = _tmp1194 * _tmp453;
  const Scalar _tmp1246 = _tmp1172 - _tmp1192 * _tmp845 + _tmp1192 * _tmp849 - _tmp1194 * _tmp848 +
                          _tmp1194 * _tmp850 - _tmp1196 * _tmp422 + _tmp1197 * _tmp845 -
                          _tmp1197 * _tmp849 + _tmp1198 * _tmp422 + _tmp1217 * _tmp413 -
                          _tmp1223 * _tmp419 - _tmp1226 * _tmp416 + _tmp1232 * _tmp423 +
                          _tmp1238 * _tmp412 - _tmp1239 * _tmp394 - _tmp1240 * _tmp821 +
                          _tmp1243 * _tmp415 + _tmp1245 * _tmp824 + _tmp930;
  const Scalar _tmp1247 = _tmp1033 + _tmp1192 * _tmp823 + _tmp1192 * _tmp832 -
                          _tmp1193 * _tmp176 * _tmp821 - _tmp1193 * _tmp831 + _tmp1194 * _tmp825 -
                          _tmp1194 * _tmp834 + _tmp1195 * _tmp815 - _tmp1195 * _tmp823 -
                          _tmp1198 * _tmp394 + _tmp1217 * _tmp419 + _tmp1223 * _tmp413 +
                          _tmp1226 * _tmp436 - _tmp1232 * _tmp412 + _tmp1238 * _tmp423 -
                          _tmp1239 * _tmp422 + _tmp1241 * _tmp394 - _tmp1245 * _tmp813 + _tmp938;
  const Scalar _tmp1248 =
      _tmp1242 * _tmp502 + _tmp1244 * _tmp428 - _tmp1246 * _tmp479 + _tmp1247 * _tmp480;
  const Scalar _tmp1249 =
      _tmp1242 * _tmp480 + _tmp1244 * _tmp479 + _tmp1246 * _tmp428 - _tmp1247 * _tmp502;
  const Scalar _tmp1250 =
      _tmp1242 * _tmp428 - _tmp1244 * _tmp502 - _tmp1246 * _tmp480 - _tmp1247 * _tmp479;
  const Scalar _tmp1251 =
      _tmp1242 * _tmp479 - _tmp1244 * _tmp480 + _tmp1246 * _tmp502 + _tmp1247 * _tmp428;
  const Scalar _tmp1252 =
      _tmp1248 * _x0[3] - _tmp1249 * _x0[0] + _tmp1250 * _x0[1] + _tmp1251 * _x0[2];
  const Scalar _tmp1253 =
      -_tmp1248 * _x0[1] - _tmp1249 * _x0[2] + _tmp1250 * _x0[3] - _tmp1251 * _x0[0];
  const Scalar _tmp1254 =
      -_tmp1248 * _x0[2] + _tmp1249 * _x0[1] + _tmp1250 * _x0[0] + _tmp1251 * _x0[3];
  const Scalar _tmp1255 =
      _tmp1248 * _x0[0] + _tmp1249 * _x0[3] + _tmp1250 * _x0[2] - _tmp1251 * _x0[1];
  const Scalar _tmp1256 = _tmp1252 * _y[3] - _tmp1253 * _y[1] - _tmp1254 * _y[2] + _tmp1255 * _y[0];
  const Scalar _tmp1257 = _tmp1252 * _y[1] + _tmp1253 * _y[3] + _tmp1254 * _y[0] + _tmp1255 * _y[2];
  const Scalar _tmp1258 = _tmp1257 * _tmp617;
  const Scalar _tmp1259 = _tmp1257 * _tmp595;
  const Scalar _tmp1260 = _tmp1259 * _tmp605;
  const Scalar _tmp1261 = _tmp1257 * _tmp614;
  const Scalar _tmp1262 =
      -_tmp1252 * _y[0] - _tmp1253 * _y[2] + _tmp1254 * _y[1] + _tmp1255 * _y[3];
  const Scalar _tmp1263 = _tmp1262 * _tmp610;
  const Scalar _tmp1264 = _tmp1257 * _tmp602;
  const Scalar _tmp1265 = _tmp1259 * _tmp621;
  const Scalar _tmp1266 = _tmp1252 * _y[2] - _tmp1253 * _y[0] + _tmp1254 * _y[3] - _tmp1255 * _y[1];
  const Scalar _tmp1267 = _tmp586 * sqrt_info(0, 0);
  const Scalar _tmp1268 = _tmp1267 * _tmp587;
  const Scalar _tmp1269 = _tmp1256 * _tmp610;
  const Scalar _tmp1270 = _tmp1264 * _tmp587;
  const Scalar _tmp1271 = _tmp586 * _tmp587;
  const Scalar _tmp1272 = _tmp1259 * _tmp1271;
  const Scalar _tmp1273 = _tmp586 * sqrt_info(3, 0);
  const Scalar _tmp1274 = _tmp1259 * _tmp587;
  const Scalar _tmp1275 = _tmp783 * _tmp916;
  const Scalar _tmp1276 = _tmp1275 * _tmp820;
  const Scalar _tmp1277 = _tmp1032 * _tmp915 + _tmp1275 * _tmp786 + _tmp1275 * _tmp791 +
                          _tmp1275 * _tmp793 - _tmp789 * _tmp916 - _tmp790 * _tmp916 -
                          _tmp792 * _tmp916 + _tmp986;
  const Scalar _tmp1278 = _tmp1277 * _tmp774;
  const Scalar _tmp1279 = _tmp1278 * _tmp811;
  const Scalar _tmp1280 = _tmp818 * _tmp916;
  const Scalar _tmp1281 = _tmp1275 * _tmp821;
  const Scalar _tmp1282 = _tmp1080 * _tmp1100;
  const Scalar _tmp1283 = _tmp1042 * _tmp1080;
  const Scalar _tmp1284 = _tmp1047 * _tmp1283;
  const Scalar _tmp1285 = -_tmp1037 + _tmp1038 - _tmp1039 + _tmp1040;
  const Scalar _tmp1286 = _tmp1066 * _tmp1199 + _tmp1205 * _tmp1285;
  const Scalar _tmp1287 = -_tmp1054 * _tmp1283 - _tmp1055 * _tmp1283 - _tmp1056 * _tmp1283 +
                          _tmp1059 * _tmp1080 + _tmp1064 * _tmp1075 + _tmp1068 * _tmp1080 +
                          _tmp1069 * _tmp1080 + _tmp1286;
  const Scalar _tmp1288 = _tmp1287 * _tmp386;
  const Scalar _tmp1289 = _tmp1042 * _tmp1081;
  const Scalar _tmp1290 = _tmp1047 * _tmp1289;
  const Scalar _tmp1291 = _tmp1081 * _tmp1100;
  const Scalar _tmp1292 = -_tmp1110 * _tmp1285 + _tmp1123 * _tmp1199;
  const Scalar _tmp1293 = _tmp1088 * _tmp1288 + _tmp1114 * _tmp1287 - _tmp1117 * _tmp1287 -
                          _tmp1119 * _tmp1287 - _tmp1120 * _tmp1282 + _tmp1120 * _tmp1284 -
                          _tmp1121 * _tmp1282 + _tmp1121 * _tmp1284 - _tmp1122 * _tmp1287 -
                          _tmp1125 * _tmp1287 + _tmp1128 + _tmp1209 * _tmp1287 -
                          _tmp1290 * _tmp386 + _tmp1291 * _tmp386 + _tmp1292;
  const Scalar _tmp1294 = _tmp1047 * _tmp392;
  const Scalar _tmp1295 = _tmp1287 * _tmp363;
  const Scalar _tmp1296 = -_tmp1110 * _tmp1199 - _tmp1123 * _tmp1285;
  const Scalar _tmp1297 = _tmp1052 * _tmp1288 + _tmp1081 * _tmp1134 + _tmp1085 * _tmp1295 +
                          _tmp1098 - _tmp1153 * _tmp1287 + _tmp1154 * _tmp1282 -
                          _tmp1154 * _tmp1284 - _tmp1155 * _tmp1287 - _tmp1156 * _tmp1287 -
                          _tmp1158 * _tmp1287 + _tmp1159 * _tmp1287 + _tmp1282 * _tmp421 -
                          _tmp1284 * _tmp421 - _tmp1289 * _tmp1294 + _tmp1296;
  const Scalar _tmp1298 = _tmp1278 * _tmp775;
  const Scalar _tmp1299 = _tmp1298 * _tmp176;
  const Scalar _tmp1300 = _tmp1298 * _tmp159;
  const Scalar _tmp1301 = _tmp1287 * _tmp389;
  const Scalar _tmp1302 = -_tmp1096 * _tmp1199 + _tmp1111 * _tmp1285;
  const Scalar _tmp1303 = -_tmp1036 * _tmp1282 + _tmp1036 * _tmp1284 + _tmp1052 * _tmp1295 +
                          _tmp1080 * _tmp1106 - _tmp1085 * _tmp1288 - _tmp1087 * _tmp1284 -
                          _tmp1088 * _tmp1301 - _tmp1091 * _tmp1287 - _tmp1095 * _tmp1287 +
                          _tmp1109 * _tmp1287 + _tmp1149 + _tmp1230 * _tmp1287 +
                          _tmp1290 * _tmp389 - _tmp1291 * _tmp389 + _tmp1302;
  const Scalar _tmp1304 = _tmp1096 * _tmp1285 + _tmp1111 * _tmp1199;
  const Scalar _tmp1305 = -_tmp1052 * _tmp1301 - _tmp1080 * _tmp1131 + _tmp1080 * _tmp1135 -
                          _tmp1088 * _tmp1295 - _tmp1090 * _tmp1288 + _tmp1129 * _tmp1287 -
                          _tmp113 * _tmp1283 * _tmp1294 + _tmp1130 * _tmp1284 +
                          _tmp1136 * _tmp1287 - _tmp1138 * _tmp1287 + _tmp1139 * _tmp1287 +
                          _tmp1233 + _tmp1290 * _tmp363 - _tmp1291 * _tmp363 + _tmp1304;
  const Scalar _tmp1306 = _tmp1279 * _tmp453;
  const Scalar _tmp1307 = _tmp1279 * _tmp159;
  const Scalar _tmp1308 = _tmp1298 * _tmp170;
  const Scalar _tmp1309 = _tmp1163 + _tmp1276 * _tmp845 - _tmp1276 * _tmp849 - _tmp1277 * _tmp848 +
                          _tmp1279 * _tmp927 - _tmp1280 * _tmp845 + _tmp1280 * _tmp849 +
                          _tmp1280 * _tmp853 - _tmp1281 * _tmp170 + _tmp1293 * _tmp413 +
                          _tmp1297 * _tmp412 - _tmp1299 * _tmp394 + _tmp1300 * _tmp415 +
                          _tmp1303 * _tmp423 - _tmp1305 * _tmp419 + _tmp1306 * _tmp176 -
                          _tmp1307 * _tmp416 - _tmp1308 * _tmp422 + _tmp996;
  const Scalar _tmp1310 = _tmp1276 * _tmp415;
  const Scalar _tmp1311 = _tmp1007 + _tmp1171 + _tmp1275 * _tmp862 - _tmp1275 * _tmp863 -
                          _tmp1277 * _tmp859 + _tmp1279 * _tmp864 - _tmp1279 * _tmp944 +
                          _tmp1280 * _tmp860 + _tmp1280 * _tmp867 - _tmp1293 * _tmp423 +
                          _tmp1297 * _tmp419 + _tmp1298 * _tmp857 - _tmp1300 * _tmp422 +
                          _tmp1303 * _tmp413 + _tmp1305 * _tmp412 + _tmp1307 * _tmp445 -
                          _tmp1308 * _tmp415 - _tmp1310 * _tmp170 - _tmp858 * _tmp916;
  const Scalar _tmp1312 = _tmp1279 * _tmp176;
  const Scalar _tmp1313 = _tmp1009 + _tmp1034 + _tmp1276 * _tmp878 + _tmp1276 * _tmp881 -
                          _tmp1277 * _tmp880 - _tmp1279 * _tmp170 * _tmp436 - _tmp1280 * _tmp875 -
                          _tmp1280 * _tmp878 - _tmp1280 * _tmp881 - _tmp1293 * _tmp412 +
                          _tmp1297 * _tmp413 + _tmp1298 * _tmp878 + _tmp1299 * _tmp415 -
                          _tmp1303 * _tmp419 - _tmp1305 * _tmp423 - _tmp1307 * _tmp453 +
                          _tmp1308 * _tmp418 + _tmp1310 * _tmp176 - _tmp1312 * _tmp416;
  const Scalar _tmp1314 = _tmp1002 + _tmp1224 - _tmp1275 * _tmp831 + _tmp1276 * _tmp815 -
                          _tmp1277 * _tmp834 - _tmp1280 * _tmp815 + _tmp1280 * _tmp823 +
                          _tmp1280 * _tmp832 - _tmp1281 * _tmp176 + _tmp1293 * _tmp419 +
                          _tmp1297 * _tmp423 - _tmp1298 * _tmp823 - _tmp1299 * _tmp422 -
                          _tmp1303 * _tmp412 + _tmp1305 * _tmp413 - _tmp1306 * _tmp170 +
                          _tmp1307 * _tmp436 + _tmp1308 * _tmp394 + _tmp1312 * _tmp445;
  const Scalar _tmp1315 =
      -_tmp1309 * _tmp479 + _tmp1311 * _tmp428 + _tmp1313 * _tmp502 + _tmp1314 * _tmp480;
  const Scalar _tmp1316 =
      _tmp1309 * _tmp502 - _tmp1311 * _tmp480 + _tmp1313 * _tmp479 + _tmp1314 * _tmp428;
  const Scalar _tmp1317 =
      -_tmp1309 * _tmp480 - _tmp1311 * _tmp502 + _tmp1313 * _tmp428 - _tmp1314 * _tmp479;
  const Scalar _tmp1318 =
      _tmp1309 * _tmp428 + _tmp1311 * _tmp479 + _tmp1313 * _tmp480 - _tmp1314 * _tmp502;
  const Scalar _tmp1319 =
      _tmp1315 * _x0[3] + _tmp1316 * _x0[2] + _tmp1317 * _x0[1] - _tmp1318 * _x0[0];
  const Scalar _tmp1320 =
      -_tmp1315 * _x0[1] - _tmp1316 * _x0[0] + _tmp1317 * _x0[3] - _tmp1318 * _x0[2];
  const Scalar _tmp1321 =
      -_tmp1315 * _x0[2] + _tmp1316 * _x0[3] + _tmp1317 * _x0[0] + _tmp1318 * _x0[1];
  const Scalar _tmp1322 =
      _tmp1315 * _x0[0] - _tmp1316 * _x0[1] + _tmp1317 * _x0[2] + _tmp1318 * _x0[3];
  const Scalar _tmp1323 = _tmp1319 * _y[1] + _tmp1320 * _y[3] + _tmp1321 * _y[0] + _tmp1322 * _y[2];
  const Scalar _tmp1324 = _tmp1323 * _tmp617;
  const Scalar _tmp1325 = _tmp1323 * _tmp602;
  const Scalar _tmp1326 = _tmp1319 * _y[2] - _tmp1320 * _y[0] + _tmp1321 * _y[3] - _tmp1322 * _y[1];
  const Scalar _tmp1327 = _tmp1323 * _tmp614;
  const Scalar _tmp1328 =
      -_tmp1319 * _y[0] - _tmp1320 * _y[2] + _tmp1321 * _y[1] + _tmp1322 * _y[3];
  const Scalar _tmp1329 = _tmp1328 * _tmp610;
  const Scalar _tmp1330 = _tmp1323 * _tmp595;
  const Scalar _tmp1331 = _tmp1319 * _y[3] - _tmp1320 * _y[1] - _tmp1321 * _y[2] + _tmp1322 * _y[0];
  const Scalar _tmp1332 = _tmp1330 * _tmp605;
  const Scalar _tmp1333 = _tmp1271 * _tmp1330;
  const Scalar _tmp1334 = _tmp1330 * _tmp587;
  const Scalar _tmp1335 = lambdas(1, 0) - lambdas(2, 0);
  const Scalar _tmp1336 = _tmp1060 + _tmp1061 + _tmp1062 + _tmp1063;
  const Scalar _tmp1337 = _tmp1096 * _tmp1336;
  const Scalar _tmp1338 = -_tmp1337;
  const Scalar _tmp1339 = _tmp1042 * _tmp1285;
  const Scalar _tmp1340 = -_tmp1054 * _tmp1339 - _tmp1055 * _tmp1339 - _tmp1056 * _tmp1339 +
                          _tmp1059 * _tmp1285 + _tmp1066 * _tmp1336 + _tmp1068 * _tmp1285 +
                          _tmp1069 * _tmp1285 + _tmp1082;
  const Scalar _tmp1341 = _tmp1047 * _tmp1339;
  const Scalar _tmp1342 = _tmp1100 * _tmp1285;
  const Scalar _tmp1343 = (Scalar(1) / Scalar(2)) * _tmp21;
  const Scalar _tmp1344 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp1345 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp1346 = (Scalar(1) / Scalar(2)) * _tmp19;
  const Scalar _tmp1347 = -_tmp1343 - _tmp1344 - _tmp1345 - _tmp1346;
  const Scalar _tmp1348 = _tmp326 * _tmp347;
  const Scalar _tmp1349 = _tmp1348 * _tmp319;
  const Scalar _tmp1350 = _tmp1347 * _tmp1349;
  const Scalar _tmp1351 = -_tmp1350;
  const Scalar _tmp1352 = _tmp131 * _tmp49;
  const Scalar _tmp1353 = _tmp319 * _tmp325;
  const Scalar _tmp1354 = _tmp1352 * _tmp1353;
  const Scalar _tmp1355 = (Scalar(1) / Scalar(2)) * _tmp45;
  const Scalar _tmp1356 = (Scalar(1) / Scalar(2)) * _tmp46;
  const Scalar _tmp1357 = (Scalar(1) / Scalar(2)) * _tmp47;
  const Scalar _tmp1358 = (Scalar(1) / Scalar(2)) * _tmp48;
  const Scalar _tmp1359 = _tmp1355 - _tmp1356 - _tmp1357 + _tmp1358;
  const Scalar _tmp1360 = ((((_tmp22 - _tmp321) > 0) - ((_tmp22 - _tmp321) < 0)) + 1) *
                          (((_tmp320) > 0) - ((_tmp320) < 0));
  const Scalar _tmp1361 = _tmp322 * _tmp335 / std::pow(_tmp323, Scalar(2));
  const Scalar _tmp1362 = _tmp1361 * _tmp50;
  const Scalar _tmp1363 = _tmp1360 * _tmp1362;
  const Scalar _tmp1364 = _tmp1361 * _tmp44;
  const Scalar _tmp1365 = _tmp1360 * _tmp1364;
  const Scalar _tmp1366 = _tmp324 / (_tmp323 * std::sqrt(_tmp323));
  const Scalar _tmp1367 = _tmp1360 * _tmp1366;
  const Scalar _tmp1368 = _tmp1367 * _tmp50;
  const Scalar _tmp1369 = _tmp1360 * _tmp37;
  const Scalar _tmp1370 = _tmp1361 * _tmp1369;
  const Scalar _tmp1371 = _tmp1366 * _tmp1369;
  const Scalar _tmp1372 = _tmp1367 * _tmp44;
  const Scalar _tmp1373 = 8 * _tmp336 * _tmp34 * _tmp35;
  const Scalar _tmp1374 = _tmp1373 * _tmp49;
  const Scalar _tmp1375 = (Scalar(1) / Scalar(2)) * _tmp27;
  const Scalar _tmp1376 = (Scalar(1) / Scalar(2)) * _tmp28;
  const Scalar _tmp1377 = (Scalar(1) / Scalar(2)) * _tmp29;
  const Scalar _tmp1378 = (Scalar(1) / Scalar(2)) * _tmp30;
  const Scalar _tmp1379 = _tmp1375 - _tmp1376 + _tmp1377 - _tmp1378;
  const Scalar _tmp1380 = _tmp1373 * _tmp42;
  const Scalar _tmp1381 = (Scalar(1) / Scalar(2)) * _tmp38;
  const Scalar _tmp1382 = (Scalar(1) / Scalar(2)) * _tmp39;
  const Scalar _tmp1383 = (Scalar(1) / Scalar(2)) * _tmp40;
  const Scalar _tmp1384 = (Scalar(1) / Scalar(2)) * _tmp41;
  const Scalar _tmp1385 = -_tmp1381 - _tmp1382 + _tmp1383 + _tmp1384;
  const Scalar _tmp1386 = _tmp1373 * _tmp31;
  const Scalar _tmp1387 = _tmp1379 * _tmp1380 + _tmp1385 * _tmp1386;
  const Scalar _tmp1388 = _tmp1347 * _tmp1374 + _tmp1359 * _tmp1363 + _tmp1359 * _tmp1365 -
                          _tmp1359 * _tmp1368 + _tmp1359 * _tmp1370 - _tmp1359 * _tmp1371 -
                          _tmp1359 * _tmp1372 + _tmp1387;
  const Scalar _tmp1389 = std::pow(_tmp338, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp1390 = _tmp1388 * _tmp1389;
  const Scalar _tmp1391 = _tmp333 * _tmp341 * _tmp344;
  const Scalar _tmp1392 = _tmp1390 * _tmp1391;
  const Scalar _tmp1393 = _tmp138 * _tmp346;
  const Scalar _tmp1394 = _tmp1359 * _tmp1360;
  const Scalar _tmp1395 = _tmp1393 * _tmp1394;
  const Scalar _tmp1396 = _tmp334 * _tmp384;
  const Scalar _tmp1397 = Scalar(1.0) / (_tmp338);
  const Scalar _tmp1398 = _tmp1397 * _tmp356;
  const Scalar _tmp1399 = _tmp1398 * _tmp360;
  const Scalar _tmp1400 = _tmp1399 * _tmp319;
  const Scalar _tmp1401 = (Scalar(1) / Scalar(4)) * _tmp351;
  const Scalar _tmp1402 = _tmp325 * _tmp355;
  const Scalar _tmp1403 = _tmp131 * _tmp42;
  const Scalar _tmp1404 = _tmp1402 * _tmp1403;
  const Scalar _tmp1405 = _tmp1352 * _tmp346;
  const Scalar _tmp1406 = _tmp319 * _tmp334;
  const Scalar _tmp1407 = _tmp1405 * _tmp1406;
  const Scalar _tmp1408 = _tmp334 * _tmp355;
  const Scalar _tmp1409 = _tmp1403 * _tmp346;
  const Scalar _tmp1410 = _tmp1408 * _tmp1409;
  const Scalar _tmp1411 = _tmp1367 * _tmp322;
  const Scalar _tmp1412 = _tmp1411 * _tmp319;
  const Scalar _tmp1413 = _tmp1405 * _tmp1412;
  const Scalar _tmp1414 = _tmp1411 * _tmp384;
  const Scalar _tmp1415 = _tmp1359 * _tmp1393;
  const Scalar _tmp1416 = _tmp1388 * _tmp384;
  const Scalar _tmp1417 = _tmp1397 * _tmp382;
  const Scalar _tmp1418 = _tmp1417 * _tmp360;
  const Scalar _tmp1419 = _tmp325 * _tmp384;
  const Scalar _tmp1420 = _tmp138 * _tmp1419;
  const Scalar _tmp1421 = _tmp1388 * _tmp355;
  const Scalar _tmp1422 = _tmp1397 * _tmp327;
  const Scalar _tmp1423 = _tmp1422 * _tmp360;
  const Scalar _tmp1424 = _tmp1411 * _tmp355;
  const Scalar _tmp1425 = _tmp1409 * _tmp1424;
  const Scalar _tmp1426 = _tmp1348 * _tmp355;
  const Scalar _tmp1427 = _tmp326 * _tmp385;
  const Scalar _tmp1428 = -_tmp1379 * _tmp1426 - _tmp1385 * _tmp1427;
  const Scalar _tmp1429 = _tmp1351 + _tmp1354 * _tmp1392 - _tmp1359 * _tmp1413 -
                          _tmp1359 * _tmp1425 - _tmp1388 * _tmp1400 - _tmp1388 * _tmp1401 +
                          _tmp1392 * _tmp1404 + _tmp1392 * _tmp1420 + _tmp1394 * _tmp1407 +
                          _tmp1394 * _tmp1410 + _tmp1395 * _tmp1396 - _tmp1414 * _tmp1415 -
                          _tmp1416 * _tmp1418 - _tmp1421 * _tmp1423 + _tmp1428;
  const Scalar _tmp1430 = _tmp1347 * _tmp1427;
  const Scalar _tmp1431 = -_tmp1430;
  const Scalar _tmp1432 = _tmp351 * _tmp91;
  const Scalar _tmp1433 = _tmp1411 * _tmp1432;
  const Scalar _tmp1434 = _tmp1433 * _tmp42;
  const Scalar _tmp1435 = _tmp1418 * _tmp319;
  const Scalar _tmp1436 = _tmp1353 * _tmp138;
  const Scalar _tmp1437 = _tmp1359 * _tmp1405;
  const Scalar _tmp1438 = _tmp326 * _tmp350;
  const Scalar _tmp1439 = _tmp1438 * _tmp42;
  const Scalar _tmp1440 = (Scalar(1) / Scalar(2)) * _tmp388;
  const Scalar _tmp1441 = _tmp1388 * _tmp1440;
  const Scalar _tmp1442 = (Scalar(1) / Scalar(2)) * _tmp346;
  const Scalar _tmp1443 = _tmp1352 * _tmp1419;
  const Scalar _tmp1444 = _tmp1396 * _tmp1405;
  const Scalar _tmp1445 = _tmp1432 * _tmp334;
  const Scalar _tmp1446 = _tmp1360 * _tmp1445;
  const Scalar _tmp1447 = _tmp1446 * _tmp42;
  const Scalar _tmp1448 = _tmp1349 * _tmp1385 + _tmp1379 * _tmp353;
  const Scalar _tmp1449 = _tmp1359 * _tmp1434 - _tmp1359 * _tmp1447 + _tmp1388 * _tmp1435 -
                          _tmp1390 * _tmp1439 - _tmp1392 * _tmp1436 + _tmp1392 * _tmp1443 +
                          _tmp1394 * _tmp1444 - _tmp1395 * _tmp1406 - _tmp1399 * _tmp1416 +
                          _tmp1412 * _tmp1415 - _tmp1414 * _tmp1437 - _tmp1421 * _tmp1442 +
                          _tmp1422 * _tmp1441 + _tmp1431 + _tmp1448;
  const Scalar _tmp1450 = _tmp1340 * _tmp389;
  const Scalar _tmp1451 = _tmp1406 * _tmp1409;
  const Scalar _tmp1452 = _tmp1433 * _tmp31;
  const Scalar _tmp1453 = _tmp1423 * _tmp319;
  const Scalar _tmp1454 = _tmp1347 * _tmp1426;
  const Scalar _tmp1455 = _tmp1442 * _tmp384;
  const Scalar _tmp1456 = _tmp1445 * _tmp31;
  const Scalar _tmp1457 = _tmp1360 * _tmp1456;
  const Scalar _tmp1458 = _tmp1353 * _tmp1403;
  const Scalar _tmp1459 = _tmp1405 * _tmp1408;
  const Scalar _tmp1460 = _tmp1352 * _tmp1402;
  const Scalar _tmp1461 = _tmp350 * _tmp382;
  const Scalar _tmp1462 = _tmp1409 * _tmp1412;
  const Scalar _tmp1463 = -_tmp1349 * _tmp1379 + _tmp1385 * _tmp353;
  const Scalar _tmp1464 = _tmp1359 * _tmp1452 - _tmp1359 * _tmp1457 - _tmp1359 * _tmp1462 -
                          _tmp1388 * _tmp1453 - _tmp1388 * _tmp1455 - _tmp1390 * _tmp1461 +
                          _tmp1392 * _tmp1458 - _tmp1392 * _tmp1460 + _tmp1394 * _tmp1451 -
                          _tmp1394 * _tmp1459 + _tmp1399 * _tmp1421 + _tmp1417 * _tmp1441 +
                          _tmp1424 * _tmp1437 + _tmp1454 + _tmp1463;
  const Scalar _tmp1465 = _tmp1403 * _tmp1419;
  const Scalar _tmp1466 = _tmp1347 * _tmp353;
  const Scalar _tmp1467 = _tmp1442 * _tmp319;
  const Scalar _tmp1468 = _tmp1446 * _tmp49;
  const Scalar _tmp1469 = _tmp1409 * _tmp1414;
  const Scalar _tmp1470 = _tmp1433 * _tmp49;
  const Scalar _tmp1471 = _tmp1396 * _tmp1409;
  const Scalar _tmp1472 = _tmp138 * _tmp1402;
  const Scalar _tmp1473 = _tmp1438 * _tmp49;
  const Scalar _tmp1474 = _tmp1379 * _tmp1427 - _tmp1385 * _tmp1426;
  const Scalar _tmp1475 = -_tmp1359 * _tmp1468 + _tmp1359 * _tmp1469 + _tmp1359 * _tmp1470 -
                          _tmp1388 * _tmp1467 - _tmp1390 * _tmp1473 - _tmp1392 * _tmp1465 +
                          _tmp1392 * _tmp1472 - _tmp1394 * _tmp1471 + _tmp1395 * _tmp1408 +
                          _tmp1398 * _tmp1441 - _tmp1415 * _tmp1424 + _tmp1416 * _tmp1423 -
                          _tmp1418 * _tmp1421 + _tmp1466 + _tmp1474;
  const Scalar _tmp1476 =
      _tmp1036 * _tmp1341 - _tmp1036 * _tmp1342 - _tmp1086 * _tmp1340 - _tmp1087 * _tmp1341 +
      _tmp1087 * _tmp1342 - _tmp1088 * _tmp1450 - _tmp1091 * _tmp1340 - _tmp1095 * _tmp1340 +
      _tmp1099 * _tmp1341 - _tmp1099 * _tmp1342 + _tmp1109 * _tmp1340 + _tmp1112 +
      _tmp1229 * _tmp1340 + _tmp1230 * _tmp1340 + _tmp1338 + _tmp1429 * _tmp390 +
      _tmp1449 * _tmp391 - _tmp1464 * _tmp381 + _tmp1475 * _tmp387;
  const Scalar _tmp1477 = _tmp1111 * _tmp1336;
  const Scalar _tmp1478 = _tmp113 * _tmp1342;
  const Scalar _tmp1479 = -_tmp1052 * _tmp1450 + _tmp1129 * _tmp1340 + _tmp1130 * _tmp1341 -
                          _tmp1130 * _tmp1342 - _tmp1132 * _tmp1341 + _tmp1133 * _tmp1341 -
                          _tmp1133 * _tmp1342 + _tmp1136 * _tmp1340 - _tmp1137 * _tmp1340 -
                          _tmp1138 * _tmp1340 + _tmp1139 * _tmp1340 + _tmp1140 -
                          _tmp1219 * _tmp1340 + _tmp1429 * _tmp381 - _tmp1449 * _tmp387 +
                          _tmp1464 * _tmp390 + _tmp1475 * _tmp391 + _tmp1477 + _tmp1478 * _tmp392;
  const Scalar _tmp1480 = _tmp1110 * _tmp1336;
  const Scalar _tmp1481 = -_tmp1480;
  const Scalar _tmp1482 = _tmp1340 * _tmp393;
  const Scalar _tmp1483 = -_tmp1118 * _tmp1482 - _tmp1151 * _tmp1341 + _tmp1151 * _tmp1342 +
                          _tmp1152 * _tmp1340 - _tmp1153 * _tmp1340 - _tmp1154 * _tmp1341 +
                          _tmp1154 * _tmp1342 - _tmp1156 * _tmp1340 + _tmp1157 * _tmp1340 -
                          _tmp1158 * _tmp1340 + _tmp1159 * _tmp1340 + _tmp1160 -
                          _tmp1341 * _tmp421 + _tmp1342 * _tmp421 + _tmp1429 * _tmp391 -
                          _tmp1449 * _tmp390 - _tmp1464 * _tmp387 - _tmp1475 * _tmp381 + _tmp1481;
  const Scalar _tmp1484 = _tmp1123 * _tmp1336;
  const Scalar _tmp1485 = _tmp1094 * _tmp1482 - _tmp1115 * _tmp1341 + _tmp1115 * _tmp1342 +
                          _tmp1116 * _tmp1340 - _tmp1117 * _tmp1340 - _tmp1119 * _tmp1340 +
                          _tmp1120 * _tmp1341 - _tmp1120 * _tmp1342 + _tmp1121 * _tmp1341 -
                          _tmp1122 * _tmp1340 - _tmp1125 * _tmp1340 + _tmp1126 +
                          _tmp1209 * _tmp1340 + _tmp1429 * _tmp387 + _tmp1449 * _tmp381 +
                          _tmp1464 * _tmp391 - _tmp1475 * _tmp390 - _tmp1478 * _tmp389 + _tmp1484;
  const Scalar _tmp1486 =
      -_tmp1476 * _tmp419 - _tmp1479 * _tmp423 + _tmp1483 * _tmp413 - _tmp1485 * _tmp412;
  const Scalar _tmp1487 =
      -_tmp1476 * _tmp412 + _tmp1479 * _tmp413 + _tmp1483 * _tmp423 + _tmp1485 * _tmp419;
  const Scalar _tmp1488 =
      _tmp1476 * _tmp413 + _tmp1479 * _tmp412 + _tmp1483 * _tmp419 - _tmp1485 * _tmp423;
  const Scalar _tmp1489 =
      _tmp1476 * _tmp423 - _tmp1479 * _tmp419 + _tmp1483 * _tmp412 + _tmp1485 * _tmp413;
  const Scalar _tmp1490 =
      _tmp1486 * _tmp480 - _tmp1487 * _tmp502 + _tmp1488 * _tmp479 + _tmp1489 * _tmp428;
  const Scalar _tmp1491 =
      _tmp1486 * _tmp479 + _tmp1487 * _tmp428 - _tmp1488 * _tmp480 + _tmp1489 * _tmp502;
  const Scalar _tmp1492 =
      _tmp1486 * _tmp428 - _tmp1487 * _tmp479 - _tmp1488 * _tmp502 - _tmp1489 * _tmp480;
  const Scalar _tmp1493 =
      _tmp1486 * _tmp502 + _tmp1487 * _tmp480 + _tmp1488 * _tmp428 - _tmp1489 * _tmp479;
  const Scalar _tmp1494 =
      -_tmp1490 * _x0[0] + _tmp1491 * _x0[2] + _tmp1492 * _x0[1] + _tmp1493 * _x0[3];
  const Scalar _tmp1495 =
      _tmp1490 * _x0[3] - _tmp1491 * _x0[1] + _tmp1492 * _x0[2] + _tmp1493 * _x0[0];
  const Scalar _tmp1496 =
      _tmp1490 * _x0[1] + _tmp1491 * _x0[3] + _tmp1492 * _x0[0] - _tmp1493 * _x0[2];
  const Scalar _tmp1497 =
      -_tmp1490 * _x0[2] - _tmp1491 * _x0[0] + _tmp1492 * _x0[3] - _tmp1493 * _x0[1];
  const Scalar _tmp1498 = _tmp1494 * _y[1] + _tmp1495 * _y[2] + _tmp1496 * _y[0] + _tmp1497 * _y[3];
  const Scalar _tmp1499 = _tmp1498 * _tmp614;
  const Scalar _tmp1500 = _tmp1498 * _tmp617;
  const Scalar _tmp1501 = _tmp1498 * _tmp597;
  const Scalar _tmp1502 = _tmp1494 * _y[2] - _tmp1495 * _y[1] + _tmp1496 * _y[3] - _tmp1497 * _y[0];
  const Scalar _tmp1503 = _tmp1502 * _tmp610;
  const Scalar _tmp1504 = _tmp1498 * _tmp595;
  const Scalar _tmp1505 = _tmp1498 * _tmp602;
  const Scalar _tmp1506 = _tmp1494 * _y[3] + _tmp1495 * _y[0] - _tmp1496 * _y[2] - _tmp1497 * _y[1];
  const Scalar _tmp1507 =
      -_tmp1494 * _y[0] + _tmp1495 * _y[3] + _tmp1496 * _y[1] - _tmp1497 * _y[2];
  const Scalar _tmp1508 = _tmp1505 * _tmp587;
  const Scalar _tmp1509 = _tmp1506 * _tmp610;
  const Scalar _tmp1510 = _tmp1059 * _tmp1074 + _tmp1068 * _tmp1074 + _tmp1069 * _tmp1074 -
                          _tmp1074 * _tmp1200 - _tmp1074 * _tmp1203 - _tmp1074 * _tmp1204 +
                          _tmp1205 * _tmp1336 + _tmp1207;
  const Scalar _tmp1511 = _tmp1104 * _tmp1510;
  const Scalar _tmp1512 = _tmp1051 * _tmp1510;
  const Scalar _tmp1513 = _tmp1381 + _tmp1382 - _tmp1383 - _tmp1384;
  const Scalar _tmp1514 = _tmp1360 * _tmp1513;
  const Scalar _tmp1515 = -_tmp1375 + _tmp1376 - _tmp1377 + _tmp1378;
  const Scalar _tmp1516 = _tmp1359 * _tmp1386 + _tmp1374 * _tmp1515;
  const Scalar _tmp1517 = _tmp1347 * _tmp1380 + _tmp1362 * _tmp1514 + _tmp1364 * _tmp1514 -
                          _tmp1368 * _tmp1513 + _tmp1370 * _tmp1513 - _tmp1371 * _tmp1513 -
                          _tmp1372 * _tmp1513 + _tmp1516;
  const Scalar _tmp1518 = _tmp1399 * _tmp384;
  const Scalar _tmp1519 = _tmp1393 * _tmp1412;
  const Scalar _tmp1520 = _tmp1445 * _tmp42;
  const Scalar _tmp1521 = _tmp1389 * _tmp1517;
  const Scalar _tmp1522 = _tmp1422 * _tmp1440;
  const Scalar _tmp1523 = _tmp1442 * _tmp355;
  const Scalar _tmp1524 = _tmp1393 * _tmp1406;
  const Scalar _tmp1525 = _tmp1391 * _tmp1521;
  const Scalar _tmp1526 = _tmp1517 * _tmp319;
  const Scalar _tmp1527 = _tmp1396 * _tmp1514;
  const Scalar _tmp1528 = _tmp1414 * _tmp1513;
  const Scalar _tmp1529 = _tmp1349 * _tmp1359 - _tmp1427 * _tmp1515;
  const Scalar _tmp1530 = _tmp1405 * _tmp1527 - _tmp1405 * _tmp1528 + _tmp1418 * _tmp1526 +
                          _tmp1434 * _tmp1513 - _tmp1436 * _tmp1525 - _tmp1439 * _tmp1521 +
                          _tmp1443 * _tmp1525 + _tmp1466 + _tmp1513 * _tmp1519 -
                          _tmp1514 * _tmp1520 - _tmp1514 * _tmp1524 - _tmp1517 * _tmp1518 +
                          _tmp1517 * _tmp1522 - _tmp1517 * _tmp1523 + _tmp1529;
  const Scalar _tmp1531 = _tmp1047 * _tmp1074;
  const Scalar _tmp1532 = _tmp1042 * _tmp1531;
  const Scalar _tmp1533 = _tmp1074 * _tmp1100;
  const Scalar _tmp1534 = _tmp113 * _tmp1512;
  const Scalar _tmp1535 = -_tmp1454;
  const Scalar _tmp1536 = _tmp1423 * _tmp355;
  const Scalar _tmp1537 = _tmp1393 * _tmp1396;
  const Scalar _tmp1538 = _tmp1424 * _tmp1513;
  const Scalar _tmp1539 = _tmp1418 * _tmp384;
  const Scalar _tmp1540 = -_tmp1349 * _tmp1515 - _tmp1359 * _tmp1427;
  const Scalar _tmp1541 = _tmp1354 * _tmp1525 - _tmp1393 * _tmp1528 - _tmp1399 * _tmp1526 -
                          _tmp1401 * _tmp1517 + _tmp1404 * _tmp1525 + _tmp1407 * _tmp1514 -
                          _tmp1409 * _tmp1538 + _tmp1410 * _tmp1514 - _tmp1413 * _tmp1513 +
                          _tmp1420 * _tmp1525 + _tmp1514 * _tmp1537 - _tmp1517 * _tmp1536 -
                          _tmp1517 * _tmp1539 + _tmp1535 + _tmp1540;
  const Scalar _tmp1542 = _tmp1399 * _tmp355;
  const Scalar _tmp1543 = _tmp1417 * _tmp1440;
  const Scalar _tmp1544 = _tmp1359 * _tmp353 + _tmp1426 * _tmp1515;
  const Scalar _tmp1545 = _tmp1351 + _tmp1405 * _tmp1538 - _tmp1423 * _tmp1526 +
                          _tmp1451 * _tmp1514 + _tmp1452 * _tmp1513 - _tmp1455 * _tmp1517 -
                          _tmp1456 * _tmp1514 + _tmp1458 * _tmp1525 - _tmp1459 * _tmp1514 -
                          _tmp1460 * _tmp1525 - _tmp1461 * _tmp1521 - _tmp1462 * _tmp1513 +
                          _tmp1517 * _tmp1542 + _tmp1517 * _tmp1543 + _tmp1544;
  const Scalar _tmp1546 = _tmp1512 * _tmp363;
  const Scalar _tmp1547 = _tmp1418 * _tmp355;
  const Scalar _tmp1548 = _tmp1445 * _tmp49;
  const Scalar _tmp1549 = _tmp1398 * _tmp1440;
  const Scalar _tmp1550 = _tmp1393 * _tmp1408;
  const Scalar _tmp1551 = _tmp1423 * _tmp384;
  const Scalar _tmp1552 = -_tmp1359 * _tmp1426 + _tmp1515 * _tmp353;
  const Scalar _tmp1553 = -_tmp1393 * _tmp1538 - _tmp1409 * _tmp1527 + _tmp1430 -
                          _tmp1465 * _tmp1525 - _tmp1467 * _tmp1517 + _tmp1469 * _tmp1513 +
                          _tmp1470 * _tmp1513 + _tmp1472 * _tmp1525 - _tmp1473 * _tmp1521 -
                          _tmp1514 * _tmp1548 + _tmp1514 * _tmp1550 - _tmp1517 * _tmp1547 +
                          _tmp1517 * _tmp1549 + _tmp1517 * _tmp1551 + _tmp1552;
  const Scalar _tmp1554 = -_tmp1074 * _tmp1131 + _tmp1074 * _tmp1135 + _tmp1093 * _tmp1511 -
                          _tmp1130 * _tmp1512 + _tmp1133 * _tmp1532 - _tmp1133 * _tmp1533 -
                          _tmp1137 * _tmp1510 - _tmp1138 * _tmp1510 + _tmp1139 * _tmp1510 +
                          _tmp1220 * _tmp1531 - _tmp1221 * _tmp1531 + _tmp1222 + _tmp1337 -
                          _tmp1530 * _tmp387 + _tmp1534 * _tmp392 + _tmp1541 * _tmp381 +
                          _tmp1545 * _tmp390 - _tmp1546 * _tmp8 + _tmp1553 * _tmp391;
  const Scalar _tmp1555 = _tmp1107 * _tmp1511 + _tmp1114 * _tmp1510 + _tmp1115 * _tmp1512 -
                          _tmp1115 * _tmp1532 + _tmp1115 * _tmp1533 - _tmp1119 * _tmp1510 -
                          _tmp1120 * _tmp1512 + _tmp1120 * _tmp1532 - _tmp1120 * _tmp1533 -
                          _tmp1121 * _tmp1533 - _tmp1125 * _tmp1510 + _tmp1213 * _tmp1531 +
                          _tmp1216 + _tmp1481 + _tmp1530 * _tmp381 - _tmp1534 * _tmp389 +
                          _tmp1541 * _tmp387 + _tmp1545 * _tmp391 - _tmp1553 * _tmp390;
  const Scalar _tmp1556 = -_tmp1484;
  const Scalar _tmp1557 = _tmp1074 * _tmp1234 + _tmp113 * _tmp1546 + _tmp1151 * _tmp1512 +
                          _tmp1151 * _tmp1533 - _tmp1153 * _tmp1510 - _tmp1155 * _tmp1510 -
                          _tmp1156 * _tmp1510 - _tmp1158 * _tmp1510 - _tmp1235 * _tmp1531 -
                          _tmp1236 * _tmp1531 + _tmp1237 + _tmp1512 * _tmp421 - _tmp1530 * _tmp390 -
                          _tmp1532 * _tmp421 + _tmp1533 * _tmp421 + _tmp1541 * _tmp391 -
                          _tmp1545 * _tmp387 - _tmp1553 * _tmp381 + _tmp1556;
  const Scalar _tmp1558 = -_tmp1036 * _tmp1533 - _tmp1074 * _tmp1101 + _tmp1074 * _tmp1106 -
                          _tmp1087 * _tmp1532 - _tmp1091 * _tmp1510 - _tmp1095 * _tmp1510 -
                          _tmp1099 * _tmp1512 + _tmp1103 * _tmp1511 + _tmp1109 * _tmp1510 +
                          _tmp1227 * _tmp1531 + _tmp1228 * _tmp1531 + _tmp1231 +
                          _tmp124 * _tmp1546 + _tmp1477 + _tmp1530 * _tmp391 - _tmp1534 * _tmp386 +
                          _tmp1541 * _tmp390 - _tmp1545 * _tmp381 + _tmp1553 * _tmp387;
  const Scalar _tmp1559 =
      _tmp1554 * _tmp412 - _tmp1555 * _tmp423 + _tmp1557 * _tmp419 + _tmp1558 * _tmp413;
  const Scalar _tmp1560 =
      -_tmp1554 * _tmp419 + _tmp1555 * _tmp413 + _tmp1557 * _tmp412 + _tmp1558 * _tmp423;
  const Scalar _tmp1561 =
      _tmp1554 * _tmp413 + _tmp1555 * _tmp419 + _tmp1557 * _tmp423 - _tmp1558 * _tmp412;
  const Scalar _tmp1562 =
      -_tmp1554 * _tmp423 - _tmp1555 * _tmp412 + _tmp1557 * _tmp413 - _tmp1558 * _tmp419;
  const Scalar _tmp1563 =
      _tmp1559 * _tmp428 - _tmp1560 * _tmp479 + _tmp1561 * _tmp480 + _tmp1562 * _tmp502;
  const Scalar _tmp1564 =
      -_tmp1559 * _tmp502 - _tmp1560 * _tmp480 - _tmp1561 * _tmp479 + _tmp1562 * _tmp428;
  const Scalar _tmp1565 =
      -_tmp1559 * _tmp480 + _tmp1560 * _tmp502 + _tmp1561 * _tmp428 + _tmp1562 * _tmp479;
  const Scalar _tmp1566 =
      _tmp1559 * _tmp479 + _tmp1560 * _tmp428 - _tmp1561 * _tmp502 + _tmp1562 * _tmp480;
  const Scalar _tmp1567 =
      _tmp1563 * _x0[3] + _tmp1564 * _x0[1] + _tmp1565 * _x0[2] - _tmp1566 * _x0[0];
  const Scalar _tmp1568 =
      _tmp1563 * _x0[0] + _tmp1564 * _x0[2] - _tmp1565 * _x0[1] + _tmp1566 * _x0[3];
  const Scalar _tmp1569 =
      -_tmp1563 * _x0[2] + _tmp1564 * _x0[0] + _tmp1565 * _x0[3] + _tmp1566 * _x0[1];
  const Scalar _tmp1570 =
      -_tmp1563 * _x0[1] + _tmp1564 * _x0[3] - _tmp1565 * _x0[0] - _tmp1566 * _x0[2];
  const Scalar _tmp1571 = _tmp1567 * _y[1] + _tmp1568 * _y[2] + _tmp1569 * _y[0] + _tmp1570 * _y[3];
  const Scalar _tmp1572 = _tmp1571 * _tmp597;
  const Scalar _tmp1573 = _tmp1571 * _tmp614;
  const Scalar _tmp1574 = _tmp1567 * _y[2] - _tmp1568 * _y[1] + _tmp1569 * _y[3] - _tmp1570 * _y[0];
  const Scalar _tmp1575 = _tmp1571 * _tmp602;
  const Scalar _tmp1576 = _tmp1571 * _tmp595;
  const Scalar _tmp1577 = _tmp1567 * _y[3] + _tmp1568 * _y[0] - _tmp1569 * _y[2] - _tmp1570 * _y[1];
  const Scalar _tmp1578 = _tmp1571 * _tmp617;
  const Scalar _tmp1579 =
      -_tmp1567 * _y[0] + _tmp1568 * _y[3] + _tmp1569 * _y[1] - _tmp1570 * _y[2];
  const Scalar _tmp1580 = _tmp1577 * _tmp610;
  const Scalar _tmp1581 = _tmp1576 * _tmp605;
  const Scalar _tmp1582 = _tmp1100 * _tmp1206;
  const Scalar _tmp1583 = _tmp1360 * _tmp1379;
  const Scalar _tmp1584 = _tmp1369 * _tmp1379;
  const Scalar _tmp1585 = -_tmp1355 + _tmp1356 + _tmp1357 - _tmp1358;
  const Scalar _tmp1586 = _tmp1585 * _tmp42;
  const Scalar _tmp1587 = _tmp1373 * _tmp1586 + _tmp1374 * _tmp1513;
  const Scalar _tmp1588 = _tmp1347 * _tmp1386 + _tmp1361 * _tmp1584 + _tmp1362 * _tmp1583 +
                          _tmp1364 * _tmp1583 - _tmp1366 * _tmp1584 - _tmp1368 * _tmp1379 -
                          _tmp1372 * _tmp1379 + _tmp1587;
  const Scalar _tmp1589 = _tmp1442 * _tmp1588;
  const Scalar _tmp1590 = _tmp1389 * _tmp1588;
  const Scalar _tmp1591 = _tmp1391 * _tmp1590;
  const Scalar _tmp1592 = _tmp1408 * _tmp1583;
  const Scalar _tmp1593 = _tmp1393 * _tmp1424;
  const Scalar _tmp1594 = _tmp1427 * _tmp1585 + _tmp1513 * _tmp353;
  const Scalar _tmp1595 = _tmp1379 * _tmp1469 + _tmp1379 * _tmp1470 - _tmp1379 * _tmp1593 +
                          _tmp1393 * _tmp1592 - _tmp1465 * _tmp1591 - _tmp1471 * _tmp1583 +
                          _tmp1472 * _tmp1591 - _tmp1473 * _tmp1590 + _tmp1535 -
                          _tmp1547 * _tmp1588 - _tmp1548 * _tmp1583 + _tmp1549 * _tmp1588 +
                          _tmp1551 * _tmp1588 - _tmp1589 * _tmp319 + _tmp1594;
  const Scalar _tmp1596 = _tmp1042 * _tmp1206;
  const Scalar _tmp1597 = _tmp1047 * _tmp1596;
  const Scalar _tmp1598 = _tmp1588 * _tmp319;
  const Scalar _tmp1599 = _tmp1389 * _tmp1461;
  const Scalar _tmp1600 = _tmp1405 * _tmp1424;
  const Scalar _tmp1601 = -_tmp1349 * _tmp1585 + _tmp1426 * _tmp1513;
  const Scalar _tmp1602 = _tmp1379 * _tmp1452 - _tmp1379 * _tmp1462 + _tmp1379 * _tmp1600 -
                          _tmp1405 * _tmp1592 - _tmp1423 * _tmp1598 + _tmp1451 * _tmp1583 -
                          _tmp1456 * _tmp1583 + _tmp1458 * _tmp1591 - _tmp1460 * _tmp1591 +
                          _tmp1466 + _tmp1542 * _tmp1588 + _tmp1543 * _tmp1588 -
                          _tmp1588 * _tmp1599 - _tmp1589 * _tmp384 + _tmp1601;
  const Scalar _tmp1603 = -_tmp1054 * _tmp1596 - _tmp1055 * _tmp1596 - _tmp1056 * _tmp1596 +
                          _tmp1059 * _tmp1206 + _tmp1068 * _tmp1206 + _tmp1069 * _tmp1206 +
                          _tmp1075 * _tmp1336 + _tmp1286;
  const Scalar _tmp1604 = _tmp1049 * _tmp1603;
  const Scalar _tmp1605 = _tmp1050 * _tmp1604;
  const Scalar _tmp1606 = _tmp1605 * _tmp389;
  const Scalar _tmp1607 = _tmp1107 * _tmp1604;
  const Scalar _tmp1608 = _tmp1103 * _tmp1604;
  const Scalar _tmp1609 = _tmp1093 * _tmp1604;
  const Scalar _tmp1610 = _tmp1405 * _tmp1414;
  const Scalar _tmp1611 = -_tmp1427 * _tmp1513 + _tmp1585 * _tmp353;
  const Scalar _tmp1612 = _tmp1350 + _tmp1379 * _tmp1434 + _tmp1379 * _tmp1519 -
                          _tmp1379 * _tmp1610 + _tmp1418 * _tmp1598 - _tmp1436 * _tmp1591 -
                          _tmp1439 * _tmp1590 + _tmp1443 * _tmp1591 + _tmp1444 * _tmp1583 -
                          _tmp1518 * _tmp1588 - _tmp1520 * _tmp1583 + _tmp1522 * _tmp1588 -
                          _tmp1524 * _tmp1583 - _tmp1589 * _tmp355 + _tmp1611;
  const Scalar _tmp1613 = _tmp1393 * _tmp1414;
  const Scalar _tmp1614 = _tmp1585 * _tmp355;
  const Scalar _tmp1615 = -_tmp1348 * _tmp1614 - _tmp1349 * _tmp1513;
  const Scalar _tmp1616 = _tmp1354 * _tmp1591 - _tmp1379 * _tmp1413 - _tmp1379 * _tmp1425 -
                          _tmp1379 * _tmp1613 - _tmp1399 * _tmp1598 - _tmp1401 * _tmp1588 +
                          _tmp1404 * _tmp1591 + _tmp1407 * _tmp1583 + _tmp1409 * _tmp1592 +
                          _tmp1420 * _tmp1591 + _tmp1431 - _tmp1536 * _tmp1588 +
                          _tmp1537 * _tmp1583 - _tmp1539 * _tmp1588 + _tmp1615;
  const Scalar _tmp1617 = _tmp1115 * _tmp1582 - _tmp1115 * _tmp1597 + _tmp1115 * _tmp1605 -
                          _tmp1120 * _tmp1582 + _tmp1120 * _tmp1597 - _tmp1120 * _tmp1605 -
                          _tmp1121 * _tmp1582 + _tmp1121 * _tmp1597 - _tmp1125 * _tmp1603 -
                          _tmp113 * _tmp1606 + _tmp1292 + _tmp1477 - _tmp1595 * _tmp390 +
                          _tmp1602 * _tmp391 + _tmp1607 * _tmp420 - _tmp1608 * _tmp414 +
                          _tmp1609 * _tmp393 + _tmp1612 * _tmp381 + _tmp1616 * _tmp387;
  const Scalar _tmp1618 = _tmp1605 * _tmp392;
  const Scalar _tmp1619 = _tmp1605 * _tmp363;
  const Scalar _tmp1620 = _tmp113 * _tmp1618 + _tmp1130 * _tmp1597 - _tmp1131 * _tmp1206 -
                          _tmp1132 * _tmp1597 - _tmp1133 * _tmp1582 + _tmp1133 * _tmp1597 +
                          _tmp1135 * _tmp1206 - _tmp1137 * _tmp1603 - _tmp124 * _tmp1606 +
                          _tmp1304 + _tmp1556 + _tmp1595 * _tmp391 + _tmp1602 * _tmp390 -
                          _tmp1607 * _tmp393 + _tmp1608 * _tmp417 + _tmp1609 * _tmp420 -
                          _tmp1612 * _tmp387 + _tmp1616 * _tmp381 - _tmp1619 * _tmp8;
  const Scalar _tmp1621 = -_tmp1036 * _tmp1582 + _tmp1036 * _tmp1597 - _tmp1036 * _tmp1605 -
                          _tmp1087 * _tmp1597 - _tmp1091 * _tmp1603 - _tmp1099 * _tmp1582 +
                          _tmp1099 * _tmp1597 - _tmp1099 * _tmp1605 + _tmp1106 * _tmp1206 +
                          _tmp124 * _tmp1619 + _tmp1302 + _tmp1480 + _tmp1595 * _tmp387 -
                          _tmp1602 * _tmp381 + _tmp1607 * _tmp414 + _tmp1608 * _tmp420 -
                          _tmp1609 * _tmp417 + _tmp1612 * _tmp391 + _tmp1616 * _tmp390;
  const Scalar _tmp1622 = _tmp113 * _tmp1619 + _tmp1151 * _tmp1582 - _tmp1151 * _tmp1597 +
                          _tmp1154 * _tmp1582 - _tmp1154 * _tmp1597 - _tmp1156 * _tmp1603 +
                          _tmp1296 + _tmp1338 + _tmp1582 * _tmp421 - _tmp1595 * _tmp381 -
                          _tmp1597 * _tmp421 - _tmp1602 * _tmp387 + _tmp1605 * _tmp421 -
                          _tmp1607 * _tmp417 - _tmp1608 * _tmp393 - _tmp1609 * _tmp414 -
                          _tmp1612 * _tmp390 + _tmp1616 * _tmp391 + _tmp1618 * _tmp8;
  const Scalar _tmp1623 =
      _tmp1617 * _tmp419 + _tmp1620 * _tmp413 - _tmp1621 * _tmp412 + _tmp1622 * _tmp423;
  const Scalar _tmp1624 =
      _tmp1617 * _tmp413 - _tmp1620 * _tmp419 + _tmp1621 * _tmp423 + _tmp1622 * _tmp412;
  const Scalar _tmp1625 =
      -_tmp1617 * _tmp412 - _tmp1620 * _tmp423 - _tmp1621 * _tmp419 + _tmp1622 * _tmp413;
  const Scalar _tmp1626 =
      -_tmp1617 * _tmp423 + _tmp1620 * _tmp412 + _tmp1621 * _tmp413 + _tmp1622 * _tmp419;
  const Scalar _tmp1627 =
      -_tmp1623 * _tmp479 - _tmp1624 * _tmp480 + _tmp1625 * _tmp428 - _tmp1626 * _tmp502;
  const Scalar _tmp1628 =
      _tmp1623 * _tmp428 + _tmp1624 * _tmp502 + _tmp1625 * _tmp479 - _tmp1626 * _tmp480;
  const Scalar _tmp1629 =
      -_tmp1623 * _tmp502 + _tmp1624 * _tmp428 + _tmp1625 * _tmp480 + _tmp1626 * _tmp479;
  const Scalar _tmp1630 =
      _tmp1623 * _tmp480 - _tmp1624 * _tmp479 + _tmp1625 * _tmp502 + _tmp1626 * _tmp428;
  const Scalar _tmp1631 =
      _tmp1627 * _x0[3] - _tmp1628 * _x0[0] - _tmp1629 * _x0[2] - _tmp1630 * _x0[1];
  const Scalar _tmp1632 =
      _tmp1627 * _x0[0] + _tmp1628 * _x0[3] + _tmp1629 * _x0[1] - _tmp1630 * _x0[2];
  const Scalar _tmp1633 =
      _tmp1627 * _x0[1] + _tmp1628 * _x0[2] - _tmp1629 * _x0[0] + _tmp1630 * _x0[3];
  const Scalar _tmp1634 =
      _tmp1627 * _x0[2] - _tmp1628 * _x0[1] + _tmp1629 * _x0[3] + _tmp1630 * _x0[0];
  const Scalar _tmp1635 =
      _tmp610 * (-_tmp1631 * _y[2] + _tmp1632 * _y[1] - _tmp1633 * _y[0] + _tmp1634 * _y[3]);
  const Scalar _tmp1636 = _tmp1631 * _y[3] + _tmp1632 * _y[0] + _tmp1633 * _y[1] + _tmp1634 * _y[2];
  const Scalar _tmp1637 = _tmp1636 * _tmp602;
  const Scalar _tmp1638 = _tmp1637 * _tmp616;
  const Scalar _tmp1639 =
      -_tmp1631 * _y[1] - _tmp1632 * _y[2] + _tmp1633 * _y[3] + _tmp1634 * _y[0];
  const Scalar _tmp1640 = _tmp1636 * _tmp597;
  const Scalar _tmp1641 = _tmp1637 * _tmp604;
  const Scalar _tmp1642 = _tmp1637 * _tmp587;
  const Scalar _tmp1643 = _tmp1636 * _tmp595;
  const Scalar _tmp1644 =
      -_tmp1631 * _y[0] + _tmp1632 * _y[3] + _tmp1633 * _y[2] - _tmp1634 * _y[1];
  const Scalar _tmp1645 = _tmp1644 * _tmp610;
  const Scalar _tmp1646 = _tmp1639 * _tmp610;
  const Scalar _tmp1647 = _tmp616 * sqrt_info(2, 2);
  const Scalar _tmp1648 = _tmp1643 * _tmp605;
  const Scalar _tmp1649 = _tmp604 * sqrt_info(4, 1);
  const Scalar _tmp1650 = lambdas(2, 0) - lambdas(3, 0);
  const Scalar _tmp1651 = (Scalar(1) / Scalar(2)) * _tmp55;
  const Scalar _tmp1652 = (Scalar(1) / Scalar(2)) * _tmp59;
  const Scalar _tmp1653 = (Scalar(1) / Scalar(2)) * _tmp56;
  const Scalar _tmp1654 = (Scalar(1) / Scalar(2)) * _tmp57;
  const Scalar _tmp1655 = -_tmp1651 - _tmp1652 - _tmp1653 - _tmp1654;
  const Scalar _tmp1656 = _tmp348 * _tmp354;
  const Scalar _tmp1657 = _tmp1655 * _tmp1656;
  const Scalar _tmp1658 = -_tmp1657;
  const Scalar _tmp1659 = _tmp1360 * _tmp1585;
  const Scalar _tmp1660 = _tmp1343 + _tmp1344 + _tmp1345 + _tmp1346;
  const Scalar _tmp1661 = _tmp1362 * _tmp1659 + _tmp1364 * _tmp1659 - _tmp1368 * _tmp1585 +
                          _tmp1370 * _tmp1585 - _tmp1371 * _tmp1585 - _tmp1372 * _tmp1585 +
                          _tmp1374 * _tmp1660 + _tmp1387;
  const Scalar _tmp1662 = _tmp1389 * _tmp1661;
  const Scalar _tmp1663 = _tmp1391 * _tmp1662;
  const Scalar _tmp1664 = (Scalar(1) / Scalar(2)) * _tmp80;
  const Scalar _tmp1665 = (Scalar(1) / Scalar(2)) * _tmp81;
  const Scalar _tmp1666 = (Scalar(1) / Scalar(2)) * _tmp82;
  const Scalar _tmp1667 = (Scalar(1) / Scalar(2)) * _tmp83;
  const Scalar _tmp1668 = -_tmp1664 - _tmp1665 + _tmp1666 + _tmp1667;
  const Scalar _tmp1669 = _tmp317 / (_tmp316 * std::sqrt(_tmp316));
  const Scalar _tmp1670 = _tmp1668 * _tmp1669;
  const Scalar _tmp1671 = ((((_tmp22 - _tmp314) > 0) - ((_tmp22 - _tmp314) < 0)) + 1) *
                          (((_tmp313) > 0) - ((_tmp313) < 0));
  const Scalar _tmp1672 = _tmp1671 * _tmp360;
  const Scalar _tmp1673 = _tmp1672 * _tmp315;
  const Scalar _tmp1674 = _tmp1673 * _tmp98;
  const Scalar _tmp1675 = _tmp1411 * _tmp1614;
  const Scalar _tmp1676 = _tmp1671 * _tmp79;
  const Scalar _tmp1677 = _tmp1669 * _tmp1676;
  const Scalar _tmp1678 = _tmp1671 * _tmp73;
  const Scalar _tmp1679 = _tmp1669 * _tmp1678;
  const Scalar _tmp1680 = 8 * _tmp330 * _tmp70 * _tmp71;
  const Scalar _tmp1681 = _tmp1680 * _tmp84;
  const Scalar _tmp1682 = _tmp1671 * _tmp85;
  const Scalar _tmp1683 = _tmp315 * _tmp329 / std::pow(_tmp316, Scalar(2));
  const Scalar _tmp1684 = _tmp1682 * _tmp1683;
  const Scalar _tmp1685 = _tmp1678 * _tmp1683;
  const Scalar _tmp1686 = _tmp1676 * _tmp1683;
  const Scalar _tmp1687 = _tmp1669 * _tmp1682;
  const Scalar _tmp1688 = (Scalar(1) / Scalar(2)) * _tmp64;
  const Scalar _tmp1689 = (Scalar(1) / Scalar(2)) * _tmp65;
  const Scalar _tmp1690 = (Scalar(1) / Scalar(2)) * _tmp66;
  const Scalar _tmp1691 = (Scalar(1) / Scalar(2)) * _tmp67;
  const Scalar _tmp1692 = -_tmp1688 + _tmp1689 - _tmp1690 + _tmp1691;
  const Scalar _tmp1693 = _tmp1680 * _tmp78;
  const Scalar _tmp1694 = (Scalar(1) / Scalar(2)) * _tmp74;
  const Scalar _tmp1695 = (Scalar(1) / Scalar(2)) * _tmp75;
  const Scalar _tmp1696 = (Scalar(1) / Scalar(2)) * _tmp76;
  const Scalar _tmp1697 = (Scalar(1) / Scalar(2)) * _tmp77;
  const Scalar _tmp1698 = _tmp1694 - _tmp1695 - _tmp1696 + _tmp1697;
  const Scalar _tmp1699 = _tmp1680 * _tmp68;
  const Scalar _tmp1700 = _tmp1692 * _tmp1693 + _tmp1698 * _tmp1699;
  const Scalar _tmp1701 = _tmp1655 * _tmp1681 - _tmp1668 * _tmp1677 - _tmp1668 * _tmp1679 +
                          _tmp1668 * _tmp1684 + _tmp1668 * _tmp1685 + _tmp1668 * _tmp1686 -
                          _tmp1668 * _tmp1687 + _tmp1700;
  const Scalar _tmp1702 = Scalar(1.0) / (_tmp331);
  const Scalar _tmp1703 = _tmp1702 * _tmp352;
  const Scalar _tmp1704 = _tmp1703 * _tmp355;
  const Scalar _tmp1705 = _tmp104 * _tmp1704;
  const Scalar _tmp1706 = _tmp1426 * _tmp1660;
  const Scalar _tmp1707 = _tmp131 * _tmp346;
  const Scalar _tmp1708 = _tmp1586 * _tmp1707;
  const Scalar _tmp1709 = _tmp1671 * _tmp325;
  const Scalar _tmp1710 = _tmp1709 * _tmp315;
  const Scalar _tmp1711 = _tmp101 * _tmp1710;
  const Scalar _tmp1712 = _tmp1409 * _tmp1711;
  const Scalar _tmp1713 = _tmp1709 * _tmp328;
  const Scalar _tmp1714 = _tmp1713 * _tmp90;
  const Scalar _tmp1715 = _tmp1405 * _tmp1714;
  const Scalar _tmp1716 = _tmp101 * _tmp1713;
  const Scalar _tmp1717 = _tmp1409 * _tmp1716;
  const Scalar _tmp1718 = _tmp1360 * _tmp1707;
  const Scalar _tmp1719 = _tmp1586 * _tmp1718;
  const Scalar _tmp1720 = _tmp1440 * _tmp1702;
  const Scalar _tmp1721 = _tmp1701 * _tmp1720;
  const Scalar _tmp1722 = std::pow(_tmp331, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp1723 = _tmp1722 * _tmp359;
  const Scalar _tmp1724 = _tmp1723 * _tmp354;
  const Scalar _tmp1725 = _tmp1724 * _tmp78;
  const Scalar _tmp1726 = _tmp1722 * _tmp345;
  const Scalar _tmp1727 = _tmp1701 * _tmp1726;
  const Scalar _tmp1728 = _tmp1672 * _tmp328;
  const Scalar _tmp1729 = _tmp1728 * _tmp98;
  const Scalar _tmp1730 = _tmp1442 * _tmp382;
  const Scalar _tmp1731 = _tmp1405 * _tmp1710;
  const Scalar _tmp1732 = _tmp1731 * _tmp90;
  const Scalar _tmp1733 = _tmp1703 * _tmp92;
  const Scalar _tmp1734 = _tmp1733 * _tmp319;
  const Scalar _tmp1735 = _tmp354 * _tmp357;
  const Scalar _tmp1736 = _tmp1692 * _tmp362 + _tmp1698 * _tmp1735;
  const Scalar _tmp1737 =
      _tmp1405 * _tmp1675 + _tmp1406 * _tmp1719 - _tmp1412 * _tmp1708 + _tmp1452 * _tmp1585 -
      _tmp1453 * _tmp1661 - _tmp1455 * _tmp1661 - _tmp1456 * _tmp1659 + _tmp1458 * _tmp1663 +
      _tmp1458 * _tmp1727 - _tmp1459 * _tmp1659 - _tmp1460 * _tmp1663 - _tmp1460 * _tmp1727 +
      _tmp1463 + _tmp1542 * _tmp1661 + _tmp1543 * _tmp1661 - _tmp1599 * _tmp1661 + _tmp1658 -
      _tmp1668 * _tmp1715 + _tmp1668 * _tmp1717 - _tmp1668 * _tmp1729 + _tmp1670 * _tmp1674 -
      _tmp1670 * _tmp1712 + _tmp1670 * _tmp1732 + _tmp1701 * _tmp1705 - _tmp1701 * _tmp1725 -
      _tmp1701 * _tmp1730 - _tmp1701 * _tmp1734 + _tmp1706 + _tmp1721 * _tmp384 + _tmp1736;
  const Scalar _tmp1738 = _tmp1704 * _tmp99;
  const Scalar _tmp1739 = _tmp1409 * _tmp1710;
  const Scalar _tmp1740 = _tmp1739 * _tmp98;
  const Scalar _tmp1741 = _tmp1713 * _tmp98;
  const Scalar _tmp1742 = _tmp1409 * _tmp1741;
  const Scalar _tmp1743 = _tmp1733 * _tmp384;
  const Scalar _tmp1744 = _tmp1393 * _tmp1710;
  const Scalar _tmp1745 = _tmp1744 * _tmp90;
  const Scalar _tmp1746 = _tmp101 * _tmp1673;
  const Scalar _tmp1747 = _tmp1393 * _tmp1668;
  const Scalar _tmp1748 = _tmp1723 * _tmp319;
  const Scalar _tmp1749 = _tmp1442 * _tmp356;
  const Scalar _tmp1750 = _tmp101 * _tmp1728;
  const Scalar _tmp1751 = _tmp354 * _tmp383;
  const Scalar _tmp1752 = _tmp1656 * _tmp1692 - _tmp1698 * _tmp1751;
  const Scalar _tmp1753 = _tmp1655 * _tmp362 + _tmp1660 * _tmp353;
  const Scalar _tmp1754 =
      -_tmp1393 * _tmp1675 - _tmp1396 * _tmp1719 + _tmp1414 * _tmp1708 - _tmp1465 * _tmp1663 -
      _tmp1465 * _tmp1727 - _tmp1467 * _tmp1661 + _tmp1470 * _tmp1585 + _tmp1472 * _tmp1663 +
      _tmp1472 * _tmp1727 - _tmp1473 * _tmp1662 + _tmp1474 - _tmp1547 * _tmp1661 -
      _tmp1548 * _tmp1659 + _tmp1549 * _tmp1661 + _tmp1550 * _tmp1659 + _tmp1551 * _tmp1661 -
      _tmp1668 * _tmp1742 - _tmp1668 * _tmp1750 + _tmp1670 * _tmp1740 - _tmp1670 * _tmp1745 +
      _tmp1670 * _tmp1746 - _tmp1701 * _tmp1738 + _tmp1701 * _tmp1743 - _tmp1701 * _tmp1748 -
      _tmp1701 * _tmp1749 + _tmp1714 * _tmp1747 + _tmp1721 * _tmp319 + _tmp1752 + _tmp1753;
  const Scalar _tmp1755 = _tmp1427 * _tmp1660;
  const Scalar _tmp1756 = -_tmp1755;
  const Scalar _tmp1757 = _tmp1442 * _tmp327;
  const Scalar _tmp1758 = _tmp1673 * _tmp90;
  const Scalar _tmp1759 = _tmp1405 * _tmp1741;
  const Scalar _tmp1760 = _tmp1724 * _tmp68;
  const Scalar _tmp1761 = _tmp104 * _tmp1703;
  const Scalar _tmp1762 = _tmp1761 * _tmp384;
  const Scalar _tmp1763 = _tmp1393 * _tmp1711;
  const Scalar _tmp1764 = _tmp1703 * _tmp99;
  const Scalar _tmp1765 = _tmp1764 * _tmp319;
  const Scalar _tmp1766 = _tmp1731 * _tmp98;
  const Scalar _tmp1767 = _tmp1728 * _tmp90;
  const Scalar _tmp1768 = _tmp1655 * _tmp1751;
  const Scalar _tmp1769 = -_tmp1692 * _tmp1735 + _tmp1698 * _tmp362;
  const Scalar _tmp1770 =
      _tmp1433 * _tmp1586 + _tmp1435 * _tmp1661 - _tmp1436 * _tmp1663 - _tmp1436 * _tmp1727 -
      _tmp1439 * _tmp1662 + _tmp1443 * _tmp1663 + _tmp1443 * _tmp1727 + _tmp1444 * _tmp1659 -
      _tmp1446 * _tmp1586 + _tmp1448 - _tmp1518 * _tmp1661 + _tmp1519 * _tmp1585 +
      _tmp1522 * _tmp1661 - _tmp1523 * _tmp1661 - _tmp1524 * _tmp1659 - _tmp1585 * _tmp1610 +
      _tmp1668 * _tmp1759 - _tmp1668 * _tmp1767 + _tmp1670 * _tmp1758 + _tmp1670 * _tmp1763 -
      _tmp1670 * _tmp1766 - _tmp1701 * _tmp1757 - _tmp1701 * _tmp1760 - _tmp1701 * _tmp1762 +
      _tmp1701 * _tmp1765 - _tmp1716 * _tmp1747 + _tmp1721 * _tmp355 + _tmp1756 + _tmp1768 +
      _tmp1769;
  const Scalar _tmp1771 = _tmp1655 * _tmp1735;
  const Scalar _tmp1772 = -_tmp1771;
  const Scalar _tmp1773 = (Scalar(1) / Scalar(4)) * _tmp360;
  const Scalar _tmp1774 = _tmp1764 * _tmp384;
  const Scalar _tmp1775 = _tmp1733 * _tmp355;
  const Scalar _tmp1776 = _tmp1761 * _tmp319;
  const Scalar _tmp1777 = _tmp1409 * _tmp1713;
  const Scalar _tmp1778 = _tmp1777 * _tmp90;
  const Scalar _tmp1779 = _tmp1349 * _tmp1660;
  const Scalar _tmp1780 = -_tmp1779;
  const Scalar _tmp1781 = _tmp1739 * _tmp90;
  const Scalar _tmp1782 = _tmp1744 * _tmp98;
  const Scalar _tmp1783 = _tmp1405 * _tmp1716;
  const Scalar _tmp1784 = _tmp1405 * _tmp1711;
  const Scalar _tmp1785 = -_tmp1656 * _tmp1698 - _tmp1692 * _tmp1751;
  const Scalar _tmp1786 =
      _tmp1354 * _tmp1663 + _tmp1354 * _tmp1727 - _tmp1400 * _tmp1661 - _tmp1401 * _tmp1661 +
      _tmp1404 * _tmp1663 + _tmp1404 * _tmp1727 + _tmp1407 * _tmp1659 + _tmp1408 * _tmp1719 -
      _tmp1413 * _tmp1585 + _tmp1420 * _tmp1663 + _tmp1420 * _tmp1727 - _tmp1424 * _tmp1708 +
      _tmp1428 - _tmp1536 * _tmp1661 + _tmp1537 * _tmp1659 - _tmp1539 * _tmp1661 -
      _tmp1585 * _tmp1613 + _tmp1668 * _tmp1778 + _tmp1668 * _tmp1783 - _tmp1670 * _tmp1781 -
      _tmp1670 * _tmp1782 - _tmp1670 * _tmp1784 - _tmp1701 * _tmp1773 - _tmp1701 * _tmp1774 -
      _tmp1701 * _tmp1775 - _tmp1701 * _tmp1776 + _tmp1741 * _tmp1747 + _tmp1772 + _tmp1780 +
      _tmp1785;
  const Scalar _tmp1787 =
      -_tmp1737 * _tmp387 - _tmp1754 * _tmp381 - _tmp1770 * _tmp390 + _tmp1786 * _tmp391;
  const Scalar _tmp1788 =
      _tmp1737 * _tmp391 - _tmp1754 * _tmp390 + _tmp1770 * _tmp381 + _tmp1786 * _tmp387;
  const Scalar _tmp1789 =
      _tmp1737 * _tmp390 + _tmp1754 * _tmp391 - _tmp1770 * _tmp387 + _tmp1786 * _tmp381;
  const Scalar _tmp1790 =
      -_tmp1737 * _tmp381 + _tmp1754 * _tmp387 + _tmp1770 * _tmp391 + _tmp1786 * _tmp390;
  const Scalar _tmp1791 =
      _tmp1787 * _tmp419 - _tmp1788 * _tmp423 + _tmp1789 * _tmp412 + _tmp1790 * _tmp413;
  const Scalar _tmp1792 =
      _tmp1787 * _tmp413 - _tmp1788 * _tmp412 - _tmp1789 * _tmp423 - _tmp1790 * _tmp419;
  const Scalar _tmp1793 =
      _tmp1787 * _tmp423 + _tmp1788 * _tmp419 + _tmp1789 * _tmp413 - _tmp1790 * _tmp412;
  const Scalar _tmp1794 =
      _tmp1787 * _tmp412 + _tmp1788 * _tmp413 - _tmp1789 * _tmp419 + _tmp1790 * _tmp423;
  const Scalar _tmp1795 =
      _tmp1791 * _tmp428 + _tmp1792 * _tmp502 + _tmp1793 * _tmp480 - _tmp1794 * _tmp479;
  const Scalar _tmp1796 =
      -_tmp1791 * _tmp480 + _tmp1792 * _tmp479 + _tmp1793 * _tmp428 + _tmp1794 * _tmp502;
  const Scalar _tmp1797 =
      _tmp1791 * _tmp479 + _tmp1792 * _tmp480 - _tmp1793 * _tmp502 + _tmp1794 * _tmp428;
  const Scalar _tmp1798 =
      -_tmp1791 * _tmp502 + _tmp1792 * _tmp428 - _tmp1793 * _tmp479 - _tmp1794 * _tmp480;
  const Scalar _tmp1799 =
      -_tmp1795 * _x0[1] - _tmp1796 * _x0[0] - _tmp1797 * _x0[2] + _tmp1798 * _x0[3];
  const Scalar _tmp1800 =
      _tmp1795 * _x0[3] + _tmp1796 * _x0[2] - _tmp1797 * _x0[0] + _tmp1798 * _x0[1];
  const Scalar _tmp1801 =
      -_tmp1795 * _x0[2] + _tmp1796 * _x0[3] + _tmp1797 * _x0[1] + _tmp1798 * _x0[0];
  const Scalar _tmp1802 =
      _tmp1795 * _x0[0] - _tmp1796 * _x0[1] + _tmp1797 * _x0[3] + _tmp1798 * _x0[2];
  const Scalar _tmp1803 = std::fabs(_tmp584);
  const Scalar _tmp1804 = std::min<Scalar>(_tmp1803, _tmp22);
  const Scalar _tmp1805 = 1 - std::pow(_tmp1804, Scalar(2));
  const Scalar _tmp1806 = std::acos(_tmp1804);
  const Scalar _tmp1807 = _tmp1806 / std::sqrt(_tmp1805);
  const Scalar _tmp1808 = _tmp1807 * _tmp586;
  const Scalar _tmp1809 = 2 * _tmp1808;
  const Scalar _tmp1810 =
      _tmp1809 * (-_tmp1799 * _y[2] - _tmp1800 * _y[0] + _tmp1801 * _y[1] + _tmp1802 * _y[3]);
  const Scalar _tmp1811 = _tmp1799 * _y[3] + _tmp1800 * _y[1] + _tmp1801 * _y[0] + _tmp1802 * _y[2];
  const Scalar _tmp1812 = _tmp585 * ((((-_tmp1803 + _tmp22) > 0) - ((-_tmp1803 + _tmp22) < 0)) + 1);
  const Scalar _tmp1813 = _tmp1812 / _tmp1805;
  const Scalar _tmp1814 = _tmp1811 * _tmp1813;
  const Scalar _tmp1815 = _tmp1804 * _tmp1806 * _tmp1812 / (_tmp1805 * std::sqrt(_tmp1805));
  const Scalar _tmp1816 = _tmp1811 * _tmp1815;
  const Scalar _tmp1817 = _tmp3 * _tmp586;
  const Scalar _tmp1818 =
      -_tmp1799 * _y[0] + _tmp1800 * _y[2] + _tmp1801 * _y[3] - _tmp1802 * _y[1];
  const Scalar _tmp1819 = _tmp1807 * _tmp1818;
  const Scalar _tmp1820 =
      _tmp1808 * (-_tmp1799 * _y[1] + _tmp1800 * _y[3] - _tmp1801 * _y[2] + _tmp1802 * _y[0]);
  const Scalar _tmp1821 = _tmp1271 * _tmp1814;
  const Scalar _tmp1822 = _tmp1271 * _tmp1816;
  const Scalar _tmp1823 = _tmp1809 * _tmp1818;
  const Scalar _tmp1824 = 2 * _tmp1820;
  const Scalar _tmp1825 = _tmp1814 * _tmp587;
  const Scalar _tmp1826 = _tmp1816 * _tmp587;
  const Scalar _tmp1827 = 2 * _tmp651;
  const Scalar _tmp1828 = _tmp1688 - _tmp1689 + _tmp1690 - _tmp1691;
  const Scalar _tmp1829 = -_tmp1694 + _tmp1695 + _tmp1696 - _tmp1697;
  const Scalar _tmp1830 = _tmp1668 * _tmp1693 + _tmp1681 * _tmp1829;
  const Scalar _tmp1831 = _tmp1655 * _tmp1699 - _tmp1677 * _tmp1828 - _tmp1679 * _tmp1828 +
                          _tmp1684 * _tmp1828 + _tmp1685 * _tmp1828 + _tmp1686 * _tmp1828 -
                          _tmp1687 * _tmp1828 + _tmp1830;
  const Scalar _tmp1832 = _tmp1726 * _tmp1831;
  const Scalar _tmp1833 = _tmp1405 * _tmp1828;
  const Scalar _tmp1834 = _tmp1669 * _tmp1833;
  const Scalar _tmp1835 = _tmp1360 * _tmp1385;
  const Scalar _tmp1836 = _tmp1362 * _tmp1835 + _tmp1364 * _tmp1835 - _tmp1368 * _tmp1385 +
                          _tmp1370 * _tmp1385 - _tmp1371 * _tmp1385 - _tmp1372 * _tmp1385 +
                          _tmp1380 * _tmp1660 + _tmp1516;
  const Scalar _tmp1837 = _tmp1389 * _tmp1836;
  const Scalar _tmp1838 = _tmp1391 * _tmp1837;
  const Scalar _tmp1839 = _tmp1828 * _tmp90;
  const Scalar _tmp1840 = _tmp1669 * _tmp1839;
  const Scalar _tmp1841 = -_tmp1706;
  const Scalar _tmp1842 = _tmp1393 * _tmp1741;
  const Scalar _tmp1843 = _tmp1669 * _tmp1828;
  const Scalar _tmp1844 = _tmp1385 * _tmp1424;
  const Scalar _tmp1845 = _tmp1417 * _tmp1836;
  const Scalar _tmp1846 = _tmp1845 * _tmp360;
  const Scalar _tmp1847 = -_tmp1668 * _tmp1751 - _tmp1735 * _tmp1829;
  const Scalar _tmp1848 =
      _tmp1354 * _tmp1832 + _tmp1354 * _tmp1838 - _tmp1385 * _tmp1413 - _tmp1385 * _tmp1613 -
      _tmp1400 * _tmp1836 - _tmp1401 * _tmp1836 + _tmp1404 * _tmp1832 + _tmp1404 * _tmp1838 +
      _tmp1407 * _tmp1835 - _tmp1409 * _tmp1844 + _tmp1410 * _tmp1835 + _tmp1420 * _tmp1832 +
      _tmp1420 * _tmp1838 - _tmp1536 * _tmp1836 + _tmp1537 * _tmp1835 + _tmp1540 + _tmp1658 -
      _tmp1711 * _tmp1834 + _tmp1716 * _tmp1833 - _tmp1739 * _tmp1840 - _tmp1773 * _tmp1831 -
      _tmp1774 * _tmp1831 - _tmp1775 * _tmp1831 - _tmp1776 * _tmp1831 + _tmp1777 * _tmp1839 -
      _tmp1782 * _tmp1843 + _tmp1828 * _tmp1842 + _tmp1841 - _tmp1846 * _tmp384 + _tmp1847;
  const Scalar _tmp1849 = _tmp1442 * _tmp1831;
  const Scalar _tmp1850 = _tmp1713 * _tmp1839;
  const Scalar _tmp1851 = _tmp1669 * _tmp1673;
  const Scalar _tmp1852 = _tmp1851 * _tmp98;
  const Scalar _tmp1853 = _tmp1720 * _tmp1831;
  const Scalar _tmp1854 = -_tmp1656 * _tmp1829 + _tmp1668 * _tmp362;
  const Scalar _tmp1855 =
      _tmp1385 * _tmp1452 - _tmp1385 * _tmp1462 + _tmp1405 * _tmp1844 - _tmp1405 * _tmp1850 +
      _tmp1440 * _tmp1845 + _tmp1451 * _tmp1835 - _tmp1453 * _tmp1836 - _tmp1455 * _tmp1836 -
      _tmp1456 * _tmp1835 + _tmp1458 * _tmp1832 + _tmp1458 * _tmp1838 - _tmp1459 * _tmp1835 -
      _tmp1460 * _tmp1832 - _tmp1460 * _tmp1838 + _tmp1542 * _tmp1836 + _tmp1544 -
      _tmp1599 * _tmp1836 + _tmp1705 * _tmp1831 - _tmp1712 * _tmp1843 + _tmp1717 * _tmp1828 -
      _tmp1725 * _tmp1831 - _tmp1729 * _tmp1828 + _tmp1731 * _tmp1840 - _tmp1734 * _tmp1831 +
      _tmp1771 + _tmp1780 + _tmp1828 * _tmp1852 - _tmp1849 * _tmp382 + _tmp1853 * _tmp384 +
      _tmp1854;
  const Scalar _tmp1856 = _tmp1393 * _tmp1716;
  const Scalar _tmp1857 = -_tmp1668 * _tmp1735 + _tmp1751 * _tmp1829;
  const Scalar _tmp1858 =
      _tmp1385 * _tmp1434 + _tmp1385 * _tmp1519 - _tmp1385 * _tmp1610 - _tmp1436 * _tmp1832 -
      _tmp1436 * _tmp1838 - _tmp1439 * _tmp1837 + _tmp1443 * _tmp1832 + _tmp1443 * _tmp1838 +
      _tmp1444 * _tmp1835 - _tmp1518 * _tmp1836 - _tmp1520 * _tmp1835 + _tmp1522 * _tmp1836 -
      _tmp1523 * _tmp1836 - _tmp1524 * _tmp1835 + _tmp1529 - _tmp1710 * _tmp1834 * _tmp98 -
      _tmp1728 * _tmp1839 + _tmp1741 * _tmp1833 + _tmp1753 - _tmp1760 * _tmp1831 -
      _tmp1762 * _tmp1831 + _tmp1763 * _tmp1843 + _tmp1765 * _tmp1831 - _tmp1828 * _tmp1856 +
      _tmp1839 * _tmp1851 + _tmp1846 * _tmp319 - _tmp1849 * _tmp327 + _tmp1853 * _tmp355 + _tmp1857;
  const Scalar _tmp1859 = -_tmp1768;
  const Scalar _tmp1860 = _tmp101 * _tmp1851;
  const Scalar _tmp1861 = _tmp1656 * _tmp1668 + _tmp1829 * _tmp362;
  const Scalar _tmp1862 =
      _tmp1385 * _tmp1469 + _tmp1385 * _tmp1470 - _tmp1393 * _tmp1844 + _tmp1393 * _tmp1850 -
      _tmp1465 * _tmp1832 - _tmp1465 * _tmp1838 - _tmp1467 * _tmp1836 - _tmp1471 * _tmp1835 +
      _tmp1472 * _tmp1832 + _tmp1472 * _tmp1838 - _tmp1473 * _tmp1837 - _tmp1548 * _tmp1835 +
      _tmp1549 * _tmp1836 + _tmp1550 * _tmp1835 + _tmp1551 * _tmp1836 + _tmp1552 -
      _tmp1738 * _tmp1831 + _tmp1740 * _tmp1843 - _tmp1742 * _tmp1828 + _tmp1743 * _tmp1831 -
      _tmp1744 * _tmp1840 - _tmp1748 * _tmp1831 - _tmp1750 * _tmp1828 + _tmp1755 +
      _tmp1828 * _tmp1860 - _tmp1846 * _tmp355 - _tmp1849 * _tmp356 + _tmp1853 * _tmp319 +
      _tmp1859 + _tmp1861;
  const Scalar _tmp1863 =
      _tmp1848 * _tmp387 + _tmp1855 * _tmp391 + _tmp1858 * _tmp381 - _tmp1862 * _tmp390;
  const Scalar _tmp1864 =
      _tmp1848 * _tmp390 - _tmp1855 * _tmp381 + _tmp1858 * _tmp391 + _tmp1862 * _tmp387;
  const Scalar _tmp1865 =
      _tmp1848 * _tmp391 - _tmp1855 * _tmp387 - _tmp1858 * _tmp390 - _tmp1862 * _tmp381;
  const Scalar _tmp1866 =
      _tmp1848 * _tmp381 + _tmp1855 * _tmp390 - _tmp1858 * _tmp387 + _tmp1862 * _tmp391;
  const Scalar _tmp1867 =
      _tmp1863 * _tmp413 + _tmp1864 * _tmp423 + _tmp1865 * _tmp412 - _tmp1866 * _tmp419;
  const Scalar _tmp1868 =
      -_tmp1863 * _tmp412 - _tmp1864 * _tmp419 + _tmp1865 * _tmp413 - _tmp1866 * _tmp423;
  const Scalar _tmp1869 =
      -_tmp1863 * _tmp423 + _tmp1864 * _tmp413 + _tmp1865 * _tmp419 + _tmp1866 * _tmp412;
  const Scalar _tmp1870 =
      _tmp1863 * _tmp419 - _tmp1864 * _tmp412 + _tmp1865 * _tmp423 + _tmp1866 * _tmp413;
  const Scalar _tmp1871 =
      _tmp1867 * _tmp428 + _tmp1868 * _tmp480 + _tmp1869 * _tmp479 - _tmp1870 * _tmp502;
  const Scalar _tmp1872 =
      -_tmp1867 * _tmp480 + _tmp1868 * _tmp428 - _tmp1869 * _tmp502 - _tmp1870 * _tmp479;
  const Scalar _tmp1873 =
      _tmp1867 * _tmp502 + _tmp1868 * _tmp479 - _tmp1869 * _tmp480 + _tmp1870 * _tmp428;
  const Scalar _tmp1874 =
      -_tmp1867 * _tmp479 + _tmp1868 * _tmp502 + _tmp1869 * _tmp428 + _tmp1870 * _tmp480;
  const Scalar _tmp1875 =
      _tmp1871 * _x0[3] + _tmp1872 * _x0[2] - _tmp1873 * _x0[1] + _tmp1874 * _x0[0];
  const Scalar _tmp1876 =
      -_tmp1871 * _x0[0] + _tmp1872 * _x0[1] + _tmp1873 * _x0[2] + _tmp1874 * _x0[3];
  const Scalar _tmp1877 =
      -_tmp1871 * _x0[2] + _tmp1872 * _x0[3] - _tmp1873 * _x0[0] - _tmp1874 * _x0[1];
  const Scalar _tmp1878 =
      _tmp1871 * _x0[1] + _tmp1872 * _x0[0] + _tmp1873 * _x0[3] - _tmp1874 * _x0[2];
  const Scalar _tmp1879 = _tmp1875 * _y[2] + _tmp1876 * _y[1] + _tmp1877 * _y[3] + _tmp1878 * _y[0];
  const Scalar _tmp1880 = _tmp1815 * _tmp1879;
  const Scalar _tmp1881 =
      _tmp1807 * (-_tmp1875 * _y[1] + _tmp1876 * _y[2] - _tmp1877 * _y[0] + _tmp1878 * _y[3]);
  const Scalar _tmp1882 = _tmp1813 * _tmp1879;
  const Scalar _tmp1883 =
      _tmp1809 * (_tmp1875 * _y[3] - _tmp1876 * _y[0] - _tmp1877 * _y[2] + _tmp1878 * _y[1]);
  const Scalar _tmp1884 = _tmp1875 * _y[0] + _tmp1876 * _y[3] - _tmp1877 * _y[1] - _tmp1878 * _y[2];
  const Scalar _tmp1885 = _tmp1808 * _tmp1884;
  const Scalar _tmp1886 = _tmp1271 * _tmp1880;
  const Scalar _tmp1887 = 2 * _tmp1881;
  const Scalar _tmp1888 = _tmp1887 * _tmp586;
  const Scalar _tmp1889 = _tmp1271 * _tmp1882;
  const Scalar _tmp1890 = _tmp1809 * _tmp1884;
  const Scalar _tmp1891 = _tmp1880 * _tmp587;
  const Scalar _tmp1892 = _tmp1882 * _tmp587;
  const Scalar _tmp1893 = _tmp1669 * _tmp1698;
  const Scalar _tmp1894 = _tmp1664 + _tmp1665 - _tmp1666 - _tmp1667;
  const Scalar _tmp1895 = _tmp1681 * _tmp1828 + _tmp1699 * _tmp1894;
  const Scalar _tmp1896 = _tmp1655 * _tmp1693 - _tmp1676 * _tmp1893 - _tmp1678 * _tmp1893 -
                          _tmp1682 * _tmp1893 + _tmp1684 * _tmp1698 + _tmp1685 * _tmp1698 +
                          _tmp1686 * _tmp1698 + _tmp1895;
  const Scalar _tmp1897 = _tmp1363 * _tmp1515 + _tmp1365 * _tmp1515 - _tmp1368 * _tmp1515 +
                          _tmp1370 * _tmp1515 - _tmp1371 * _tmp1515 - _tmp1372 * _tmp1515 +
                          _tmp1386 * _tmp1660 + _tmp1587;
  const Scalar _tmp1898 = _tmp1897 * _tmp384;
  const Scalar _tmp1899 = _tmp1726 * _tmp1896;
  const Scalar _tmp1900 = _tmp1515 * _tmp42;
  const Scalar _tmp1901 = _tmp1707 * _tmp1900;
  const Scalar _tmp1902 = _tmp1718 * _tmp1900;
  const Scalar _tmp1903 = _tmp1389 * _tmp1897;
  const Scalar _tmp1904 = _tmp1391 * _tmp1903;
  const Scalar _tmp1905 = _tmp1360 * _tmp1515;
  const Scalar _tmp1906 = _tmp1711 * _tmp1893;
  const Scalar _tmp1907 = _tmp1828 * _tmp354;
  const Scalar _tmp1908 = -_tmp1656 * _tmp1894 - _tmp1907 * _tmp357;
  const Scalar _tmp1909 =
      _tmp1354 * _tmp1899 + _tmp1354 * _tmp1904 - _tmp1400 * _tmp1897 - _tmp1401 * _tmp1897 +
      _tmp1404 * _tmp1899 + _tmp1404 * _tmp1904 - _tmp1405 * _tmp1906 + _tmp1407 * _tmp1905 +
      _tmp1408 * _tmp1902 - _tmp1413 * _tmp1515 - _tmp1418 * _tmp1898 + _tmp1420 * _tmp1899 +
      _tmp1420 * _tmp1904 - _tmp1424 * _tmp1901 - _tmp1515 * _tmp1613 - _tmp1536 * _tmp1897 +
      _tmp1537 * _tmp1905 + _tmp1615 + _tmp1698 * _tmp1778 + _tmp1698 * _tmp1783 +
      _tmp1698 * _tmp1842 + _tmp1756 - _tmp1773 * _tmp1896 - _tmp1774 * _tmp1896 -
      _tmp1775 * _tmp1896 - _tmp1776 * _tmp1896 - _tmp1781 * _tmp1893 - _tmp1782 * _tmp1893 +
      _tmp1859 + _tmp1908;
  const Scalar _tmp1910 = _tmp1720 * _tmp319;
  const Scalar _tmp1911 = _tmp1673 * _tmp1893;
  const Scalar _tmp1912 = _tmp1393 * _tmp1714;
  const Scalar _tmp1913 = _tmp1442 * _tmp1896;
  const Scalar _tmp1914 = _tmp1704 * _tmp1896;
  const Scalar _tmp1915 = -_tmp1751 * _tmp1894 + _tmp1907 * _tmp361;
  const Scalar _tmp1916 =
      _tmp101 * _tmp1911 - _tmp1396 * _tmp1902 + _tmp1414 * _tmp1901 + _tmp1423 * _tmp1898 -
      _tmp1465 * _tmp1899 - _tmp1465 * _tmp1904 - _tmp1467 * _tmp1897 - _tmp1468 * _tmp1515 +
      _tmp1470 * _tmp1515 + _tmp1472 * _tmp1899 + _tmp1472 * _tmp1904 - _tmp1473 * _tmp1903 -
      _tmp1515 * _tmp1593 - _tmp1547 * _tmp1897 + _tmp1549 * _tmp1897 + _tmp1550 * _tmp1905 +
      _tmp1594 + _tmp1657 - _tmp1698 * _tmp1742 - _tmp1698 * _tmp1750 + _tmp1698 * _tmp1912 +
      _tmp1740 * _tmp1893 + _tmp1743 * _tmp1896 - _tmp1745 * _tmp1893 - _tmp1748 * _tmp1896 +
      _tmp1841 + _tmp1896 * _tmp1910 - _tmp1913 * _tmp356 - _tmp1914 * _tmp99 + _tmp1915;
  const Scalar _tmp1917 = _tmp1720 * _tmp384;
  const Scalar _tmp1918 = _tmp1735 * _tmp1894 - _tmp1907 * _tmp348;
  const Scalar _tmp1919 =
      _tmp104 * _tmp1914 + _tmp1406 * _tmp1902 - _tmp1409 * _tmp1906 - _tmp1412 * _tmp1901 +
      _tmp1452 * _tmp1515 - _tmp1453 * _tmp1897 - _tmp1455 * _tmp1897 - _tmp1457 * _tmp1515 +
      _tmp1458 * _tmp1899 + _tmp1458 * _tmp1904 - _tmp1459 * _tmp1905 - _tmp1460 * _tmp1899 -
      _tmp1460 * _tmp1904 - _tmp1461 * _tmp1903 + _tmp1515 * _tmp1600 + _tmp1542 * _tmp1897 +
      _tmp1543 * _tmp1897 + _tmp1601 - _tmp1698 * _tmp1715 + _tmp1698 * _tmp1717 -
      _tmp1698 * _tmp1729 - _tmp1725 * _tmp1896 + _tmp1732 * _tmp1893 - _tmp1734 * _tmp1896 +
      _tmp1753 + _tmp1896 * _tmp1917 + _tmp1911 * _tmp98 - _tmp1913 * _tmp382 + _tmp1918;
  const Scalar _tmp1920 = _tmp1720 * _tmp355;
  const Scalar _tmp1921 = _tmp1894 * _tmp362 + _tmp1907 * _tmp383;
  const Scalar _tmp1922 =
      _tmp1393 * _tmp1906 - _tmp1399 * _tmp1898 + _tmp1433 * _tmp1900 + _tmp1435 * _tmp1897 -
      _tmp1436 * _tmp1899 - _tmp1436 * _tmp1904 - _tmp1439 * _tmp1903 + _tmp1443 * _tmp1899 +
      _tmp1443 * _tmp1904 + _tmp1444 * _tmp1905 - _tmp1447 * _tmp1515 + _tmp1515 * _tmp1519 -
      _tmp1515 * _tmp1610 + _tmp1522 * _tmp1897 - _tmp1523 * _tmp1897 - _tmp1524 * _tmp1905 +
      _tmp1611 + _tmp1698 * _tmp1759 - _tmp1698 * _tmp1767 - _tmp1698 * _tmp1856 -
      _tmp1760 * _tmp1896 - _tmp1762 * _tmp1896 + _tmp1765 * _tmp1896 - _tmp1766 * _tmp1893 +
      _tmp1772 + _tmp1779 + _tmp1896 * _tmp1920 + _tmp1911 * _tmp90 - _tmp1913 * _tmp327 + _tmp1921;
  const Scalar _tmp1923 =
      _tmp1909 * _tmp387 - _tmp1916 * _tmp390 + _tmp1919 * _tmp391 + _tmp1922 * _tmp381;
  const Scalar _tmp1924 =
      _tmp1909 * _tmp391 - _tmp1916 * _tmp381 - _tmp1919 * _tmp387 - _tmp1922 * _tmp390;
  const Scalar _tmp1925 =
      _tmp1909 * _tmp381 + _tmp1916 * _tmp391 + _tmp1919 * _tmp390 - _tmp1922 * _tmp387;
  const Scalar _tmp1926 =
      _tmp1909 * _tmp390 + _tmp1916 * _tmp387 - _tmp1919 * _tmp381 + _tmp1922 * _tmp391;
  const Scalar _tmp1927 =
      _tmp1923 * _tmp413 + _tmp1924 * _tmp412 - _tmp1925 * _tmp419 + _tmp1926 * _tmp423;
  const Scalar _tmp1928 =
      -_tmp1923 * _tmp423 + _tmp1924 * _tmp419 + _tmp1925 * _tmp412 + _tmp1926 * _tmp413;
  const Scalar _tmp1929 =
      -_tmp1923 * _tmp412 + _tmp1924 * _tmp413 - _tmp1925 * _tmp423 - _tmp1926 * _tmp419;
  const Scalar _tmp1930 =
      _tmp1923 * _tmp419 + _tmp1924 * _tmp423 + _tmp1925 * _tmp413 - _tmp1926 * _tmp412;
  const Scalar _tmp1931 =
      _tmp1927 * _tmp428 + _tmp1928 * _tmp479 + _tmp1929 * _tmp480 - _tmp1930 * _tmp502;
  const Scalar _tmp1932 =
      _tmp1927 * _tmp502 - _tmp1928 * _tmp480 + _tmp1929 * _tmp479 + _tmp1930 * _tmp428;
  const Scalar _tmp1933 =
      -_tmp1927 * _tmp480 - _tmp1928 * _tmp502 + _tmp1929 * _tmp428 - _tmp1930 * _tmp479;
  const Scalar _tmp1934 =
      -_tmp1927 * _tmp479 + _tmp1928 * _tmp428 + _tmp1929 * _tmp502 + _tmp1930 * _tmp480;
  const Scalar _tmp1935 =
      -_tmp1931 * _x0[2] - _tmp1932 * _x0[0] + _tmp1933 * _x0[3] - _tmp1934 * _x0[1];
  const Scalar _tmp1936 =
      _tmp1931 * _x0[1] + _tmp1932 * _x0[3] + _tmp1933 * _x0[0] - _tmp1934 * _x0[2];
  const Scalar _tmp1937 =
      -_tmp1931 * _x0[0] + _tmp1932 * _x0[2] + _tmp1933 * _x0[1] + _tmp1934 * _x0[3];
  const Scalar _tmp1938 =
      _tmp1931 * _x0[3] - _tmp1932 * _x0[1] + _tmp1933 * _x0[2] + _tmp1934 * _x0[0];
  const Scalar _tmp1939 = _tmp1935 * _y[3] + _tmp1936 * _y[0] + _tmp1937 * _y[1] + _tmp1938 * _y[2];
  const Scalar _tmp1940 = _tmp1813 * _tmp1939;
  const Scalar _tmp1941 =
      _tmp1809 * (-_tmp1935 * _y[2] + _tmp1936 * _y[1] - _tmp1937 * _y[0] + _tmp1938 * _y[3]);
  const Scalar _tmp1942 = _tmp1815 * _tmp1939;
  const Scalar _tmp1943 =
      -_tmp1935 * _y[0] + _tmp1936 * _y[3] + _tmp1937 * _y[2] - _tmp1938 * _y[1];
  const Scalar _tmp1944 = _tmp1807 * _tmp1943;
  const Scalar _tmp1945 =
      -_tmp1935 * _y[1] - _tmp1936 * _y[2] + _tmp1937 * _y[3] + _tmp1938 * _y[0];
  const Scalar _tmp1946 = _tmp1808 * _tmp1945;
  const Scalar _tmp1947 = _tmp1271 * _tmp1940;
  const Scalar _tmp1948 = _tmp1271 * _tmp1942;
  const Scalar _tmp1949 = _tmp1809 * _tmp1943;
  const Scalar _tmp1950 = _tmp1940 * _tmp621;
  const Scalar _tmp1951 = _tmp1809 * _tmp1945;
  const Scalar _tmp1952 = _tmp1940 * _tmp587;
  const Scalar _tmp1953 = _tmp1942 * _tmp587;
  const Scalar _tmp1954 = lambdas(3, 0) - lambdas(4, 0);
  const Scalar _tmp1955 = _tmp1669 * _tmp1894;
  const Scalar _tmp1956 = _tmp1651 + _tmp1652 + _tmp1653 + _tmp1654;
  const Scalar _tmp1957 = -_tmp1676 * _tmp1955 - _tmp1678 * _tmp1955 + _tmp1681 * _tmp1956 -
                          _tmp1682 * _tmp1955 + _tmp1684 * _tmp1894 + _tmp1685 * _tmp1894 +
                          _tmp1686 * _tmp1894 + _tmp1700;
  const Scalar _tmp1958 = _tmp1957 * _tmp355;
  const Scalar _tmp1959 = _tmp1711 * _tmp1955;
  const Scalar _tmp1960 = _tmp1957 * _tmp319;
  const Scalar _tmp1961 = _tmp1726 * _tmp325;
  const Scalar _tmp1962 = _tmp1352 * _tmp1961;
  const Scalar _tmp1963 = _tmp1403 * _tmp1961;
  const Scalar _tmp1964 = _tmp1726 * _tmp1957;
  const Scalar _tmp1965 = _tmp1735 * _tmp1956;
  const Scalar _tmp1966 = -_tmp1965;
  const Scalar _tmp1967 = -_tmp1405 * _tmp1959 + _tmp1420 * _tmp1964 - _tmp1733 * _tmp1958 -
                          _tmp1773 * _tmp1957 - _tmp1774 * _tmp1957 - _tmp1776 * _tmp1957 +
                          _tmp1778 * _tmp1894 - _tmp1781 * _tmp1955 - _tmp1782 * _tmp1955 +
                          _tmp1783 * _tmp1894 + _tmp1785 + _tmp1842 * _tmp1894 +
                          _tmp1958 * _tmp1963 + _tmp1960 * _tmp1962 + _tmp1966;
  const Scalar _tmp1968 = _tmp1656 * _tmp1956;
  const Scalar _tmp1969 = -_tmp1968;
  const Scalar _tmp1970 = _tmp1720 * _tmp1957;
  const Scalar _tmp1971 = _tmp1728 * _tmp1894;
  const Scalar _tmp1972 = -_tmp1409 * _tmp1959 + _tmp1674 * _tmp1955 - _tmp1715 * _tmp1894 +
                          _tmp1717 * _tmp1894 - _tmp1725 * _tmp1957 - _tmp1730 * _tmp1957 +
                          _tmp1732 * _tmp1955 - _tmp1733 * _tmp1960 + _tmp1736 +
                          _tmp1761 * _tmp1958 - _tmp1958 * _tmp1962 + _tmp1960 * _tmp1963 +
                          _tmp1969 + _tmp1970 * _tmp384 - _tmp1971 * _tmp98;
  const Scalar _tmp1973 = _tmp138 * _tmp1961;
  const Scalar _tmp1974 = _tmp1751 * _tmp1956;
  const Scalar _tmp1975 = _tmp1393 * _tmp1959 + _tmp1443 * _tmp1964 - _tmp1757 * _tmp1957 +
                          _tmp1758 * _tmp1955 + _tmp1759 * _tmp1894 - _tmp1760 * _tmp1957 -
                          _tmp1762 * _tmp1957 + _tmp1764 * _tmp1960 - _tmp1766 * _tmp1955 +
                          _tmp1769 - _tmp1856 * _tmp1894 - _tmp1960 * _tmp1973 +
                          _tmp1970 * _tmp355 - _tmp1971 * _tmp90 + _tmp1974;
  const Scalar _tmp1976 = _tmp1956 * _tmp362;
  const Scalar _tmp1977 = -_tmp1465 * _tmp1964 + _tmp1740 * _tmp1955 - _tmp1742 * _tmp1894 +
                          _tmp1743 * _tmp1957 - _tmp1745 * _tmp1955 + _tmp1746 * _tmp1955 -
                          _tmp1748 * _tmp1957 - _tmp1749 * _tmp1957 - _tmp1750 * _tmp1894 +
                          _tmp1752 - _tmp1764 * _tmp1958 + _tmp1894 * _tmp1912 +
                          _tmp1958 * _tmp1973 + _tmp1970 * _tmp319 + _tmp1976;
  const Scalar _tmp1978 =
      _tmp1967 * _tmp381 + _tmp1972 * _tmp390 - _tmp1975 * _tmp387 + _tmp1977 * _tmp391;
  const Scalar _tmp1979 =
      _tmp1967 * _tmp390 - _tmp1972 * _tmp381 + _tmp1975 * _tmp391 + _tmp1977 * _tmp387;
  const Scalar _tmp1980 =
      _tmp1967 * _tmp387 + _tmp1972 * _tmp391 + _tmp1975 * _tmp381 - _tmp1977 * _tmp390;
  const Scalar _tmp1981 =
      _tmp1967 * _tmp391 - _tmp1972 * _tmp387 - _tmp1975 * _tmp390 - _tmp1977 * _tmp381;
  const Scalar _tmp1982 =
      -_tmp1978 * _tmp419 + _tmp1979 * _tmp423 + _tmp1980 * _tmp413 + _tmp1981 * _tmp412;
  const Scalar _tmp1983 =
      -_tmp1978 * _tmp423 - _tmp1979 * _tmp419 - _tmp1980 * _tmp412 + _tmp1981 * _tmp413;
  const Scalar _tmp1984 =
      _tmp1978 * _tmp412 + _tmp1979 * _tmp413 - _tmp1980 * _tmp423 + _tmp1981 * _tmp419;
  const Scalar _tmp1985 =
      _tmp1978 * _tmp413 - _tmp1979 * _tmp412 + _tmp1980 * _tmp419 + _tmp1981 * _tmp423;
  const Scalar _tmp1986 =
      _tmp1982 * _tmp502 + _tmp1983 * _tmp479 - _tmp1984 * _tmp480 + _tmp1985 * _tmp428;
  const Scalar _tmp1987 =
      -_tmp1982 * _tmp480 + _tmp1983 * _tmp428 - _tmp1984 * _tmp502 - _tmp1985 * _tmp479;
  const Scalar _tmp1988 =
      -_tmp1982 * _tmp479 + _tmp1983 * _tmp502 + _tmp1984 * _tmp428 + _tmp1985 * _tmp480;
  const Scalar _tmp1989 =
      _tmp1982 * _tmp428 + _tmp1983 * _tmp480 + _tmp1984 * _tmp479 - _tmp1985 * _tmp502;
  const Scalar _tmp1990 =
      _tmp1986 * _x0[2] + _tmp1987 * _x0[1] + _tmp1988 * _x0[3] - _tmp1989 * _x0[0];
  const Scalar _tmp1991 =
      -_tmp1986 * _x0[1] + _tmp1987 * _x0[2] + _tmp1988 * _x0[0] + _tmp1989 * _x0[3];
  const Scalar _tmp1992 =
      _tmp1986 * _x0[3] + _tmp1987 * _x0[0] - _tmp1988 * _x0[2] + _tmp1989 * _x0[1];
  const Scalar _tmp1993 =
      -_tmp1986 * _x0[0] + _tmp1987 * _x0[3] - _tmp1988 * _x0[1] - _tmp1989 * _x0[2];
  const Scalar _tmp1994 =
      -_tmp1990 * _y[1] - _tmp1991 * _y[2] - _tmp1992 * _y[0] - _tmp1993 * _y[3];
  const Scalar _tmp1995 = (((-_tmp576 + _tmp583) > 0) - ((-_tmp576 + _tmp583) < 0));
  const Scalar _tmp1996 = _tmp1995 * _tmp601;
  const Scalar _tmp1997 = _tmp1994 * _tmp1996;
  const Scalar _tmp1998 = _tmp1990 * _y[3] + _tmp1991 * _y[0] - _tmp1992 * _y[2] - _tmp1993 * _y[1];
  const Scalar _tmp1999 = _tmp1997 * _tmp616;
  const Scalar _tmp2000 = _tmp1995 * _tmp594;
  const Scalar _tmp2001 = _tmp1994 * _tmp2000;
  const Scalar _tmp2002 = _tmp1997 * _tmp604;
  const Scalar _tmp2003 =
      _tmp610 * (_tmp1990 * _y[2] - _tmp1991 * _y[1] + _tmp1992 * _y[3] - _tmp1993 * _y[0]);
  const Scalar _tmp2004 = _tmp2000 * _tmp587;
  const Scalar _tmp2005 = _tmp1994 * _tmp2004;
  const Scalar _tmp2006 =
      -_tmp1990 * _y[0] + _tmp1991 * _y[3] + _tmp1992 * _y[1] - _tmp1993 * _y[2];
  const Scalar _tmp2007 = _tmp2005 * _tmp586;
  const Scalar _tmp2008 = _tmp1998 * _tmp610;
  const Scalar _tmp2009 = _tmp1669 * _tmp1692;
  const Scalar _tmp2010 = _tmp1682 * _tmp1692;
  const Scalar _tmp2011 = -_tmp1669 * _tmp2010 - _tmp1676 * _tmp2009 - _tmp1678 * _tmp2009 +
                          _tmp1683 * _tmp2010 + _tmp1685 * _tmp1692 + _tmp1686 * _tmp1692 +
                          _tmp1699 * _tmp1956 + _tmp1830;
  const Scalar _tmp2012 = _tmp1720 * _tmp2011;
  const Scalar _tmp2013 = _tmp2011 * _tmp319;
  const Scalar _tmp2014 = _tmp1405 * _tmp1692;
  const Scalar _tmp2015 = _tmp1726 * _tmp2011;
  const Scalar _tmp2016 = _tmp1409 * _tmp2009;
  const Scalar _tmp2017 = -_tmp1460 * _tmp2015 + _tmp1674 * _tmp2009 + _tmp1692 * _tmp1717 -
                          _tmp1692 * _tmp1729 + _tmp1705 * _tmp2011 - _tmp1711 * _tmp2016 -
                          _tmp1714 * _tmp2014 - _tmp1725 * _tmp2011 - _tmp1730 * _tmp2011 +
                          _tmp1732 * _tmp2009 - _tmp1733 * _tmp2013 + _tmp1854 +
                          _tmp1963 * _tmp2013 + _tmp1965 + _tmp2012 * _tmp384;
  const Scalar _tmp2018 = _tmp1711 * _tmp2009;
  const Scalar _tmp2019 = _tmp1393 * _tmp2018 + _tmp1443 * _tmp2015 - _tmp1692 * _tmp1767 -
                          _tmp1692 * _tmp1856 + _tmp1741 * _tmp2014 - _tmp1757 * _tmp2011 +
                          _tmp1758 * _tmp2009 - _tmp1760 * _tmp2011 - _tmp1762 * _tmp2011 +
                          _tmp1764 * _tmp2013 - _tmp1766 * _tmp2009 + _tmp1857 -
                          _tmp1973 * _tmp2013 + _tmp1976 + _tmp2012 * _tmp355;
  const Scalar _tmp2020 = _tmp1710 * _tmp2016;
  const Scalar _tmp2021 = _tmp1404 * _tmp2015 - _tmp1405 * _tmp2018 + _tmp1420 * _tmp2015 +
                          _tmp1692 * _tmp1778 + _tmp1692 * _tmp1842 + _tmp1716 * _tmp2014 -
                          _tmp1761 * _tmp2013 - _tmp1773 * _tmp2011 - _tmp1774 * _tmp2011 -
                          _tmp1775 * _tmp2011 - _tmp1782 * _tmp2009 + _tmp1847 +
                          _tmp1962 * _tmp2013 + _tmp1969 - _tmp2020 * _tmp90;
  const Scalar _tmp2022 = -_tmp1974;
  const Scalar _tmp2023 = -_tmp1465 * _tmp2015 + _tmp1472 * _tmp2015 - _tmp1692 * _tmp1742 -
                          _tmp1692 * _tmp1750 + _tmp1692 * _tmp1912 + _tmp1720 * _tmp2013 -
                          _tmp1723 * _tmp2013 - _tmp1738 * _tmp2011 + _tmp1743 * _tmp2011 -
                          _tmp1745 * _tmp2009 + _tmp1746 * _tmp2009 - _tmp1749 * _tmp2011 +
                          _tmp1861 + _tmp2020 * _tmp98 + _tmp2022;
  const Scalar _tmp2024 =
      _tmp2017 * _tmp390 - _tmp2019 * _tmp387 + _tmp2021 * _tmp381 + _tmp2023 * _tmp391;
  const Scalar _tmp2025 =
      -_tmp2017 * _tmp381 + _tmp2019 * _tmp391 + _tmp2021 * _tmp390 + _tmp2023 * _tmp387;
  const Scalar _tmp2026 =
      -_tmp2017 * _tmp387 - _tmp2019 * _tmp390 + _tmp2021 * _tmp391 - _tmp2023 * _tmp381;
  const Scalar _tmp2027 =
      _tmp2017 * _tmp391 + _tmp2019 * _tmp381 + _tmp2021 * _tmp387 - _tmp2023 * _tmp390;
  const Scalar _tmp2028 =
      _tmp2024 * _tmp412 + _tmp2025 * _tmp413 + _tmp2026 * _tmp419 - _tmp2027 * _tmp423;
  const Scalar _tmp2029 =
      _tmp2024 * _tmp413 - _tmp2025 * _tmp412 + _tmp2026 * _tmp423 + _tmp2027 * _tmp419;
  const Scalar _tmp2030 =
      -_tmp2024 * _tmp423 - _tmp2025 * _tmp419 + _tmp2026 * _tmp413 - _tmp2027 * _tmp412;
  const Scalar _tmp2031 =
      -_tmp2024 * _tmp419 + _tmp2025 * _tmp423 + _tmp2026 * _tmp412 + _tmp2027 * _tmp413;
  const Scalar _tmp2032 =
      _tmp2028 * _tmp479 - _tmp2029 * _tmp502 + _tmp2030 * _tmp480 + _tmp2031 * _tmp428;
  const Scalar _tmp2033 =
      -_tmp2028 * _tmp480 + _tmp2029 * _tmp428 + _tmp2030 * _tmp479 + _tmp2031 * _tmp502;
  const Scalar _tmp2034 =
      _tmp2028 * _tmp428 + _tmp2029 * _tmp480 + _tmp2030 * _tmp502 - _tmp2031 * _tmp479;
  const Scalar _tmp2035 =
      -_tmp2028 * _tmp502 - _tmp2029 * _tmp479 + _tmp2030 * _tmp428 - _tmp2031 * _tmp480;
  const Scalar _tmp2036 =
      _tmp2032 * _x0[3] - _tmp2033 * _x0[1] + _tmp2034 * _x0[0] + _tmp2035 * _x0[2];
  const Scalar _tmp2037 =
      -_tmp2032 * _x0[2] - _tmp2033 * _x0[0] - _tmp2034 * _x0[1] + _tmp2035 * _x0[3];
  const Scalar _tmp2038 =
      _tmp2032 * _x0[1] + _tmp2033 * _x0[3] - _tmp2034 * _x0[2] + _tmp2035 * _x0[0];
  const Scalar _tmp2039 =
      -_tmp2032 * _x0[0] + _tmp2033 * _x0[2] + _tmp2034 * _x0[3] + _tmp2035 * _x0[1];
  const Scalar _tmp2040 =
      -_tmp2036 * _y[2] - _tmp2037 * _y[3] - _tmp2038 * _y[0] - _tmp2039 * _y[1];
  const Scalar _tmp2041 = _tmp2004 * _tmp2040;
  const Scalar _tmp2042 = _tmp2041 * _tmp586;
  const Scalar _tmp2043 = _tmp1996 * _tmp2040;
  const Scalar _tmp2044 = _tmp2043 * _tmp604;
  const Scalar _tmp2045 = _tmp2000 * _tmp2040;
  const Scalar _tmp2046 = _tmp2036 * _y[3] - _tmp2037 * _y[2] + _tmp2038 * _y[1] - _tmp2039 * _y[0];
  const Scalar _tmp2047 =
      -_tmp2036 * _y[1] - _tmp2037 * _y[0] + _tmp2038 * _y[3] + _tmp2039 * _y[2];
  const Scalar _tmp2048 = _tmp2036 * _y[0] - _tmp2037 * _y[1] - _tmp2038 * _y[2] + _tmp2039 * _y[3];
  const Scalar _tmp2049 = _tmp2043 * _tmp616;
  const Scalar _tmp2050 = -_tmp1677 * _tmp1829 - _tmp1679 * _tmp1829 + _tmp1684 * _tmp1829 +
                          _tmp1685 * _tmp1829 + _tmp1686 * _tmp1829 - _tmp1687 * _tmp1829 +
                          _tmp1693 * _tmp1956 + _tmp1895;
  const Scalar _tmp2051 = _tmp2050 * _tmp384;
  const Scalar _tmp2052 = _tmp1669 * _tmp1829;
  const Scalar _tmp2053 = _tmp1726 * _tmp2050;
  const Scalar _tmp2054 = _tmp2050 * _tmp319;
  const Scalar _tmp2055 = _tmp1404 * _tmp2053 - _tmp1764 * _tmp2051 - _tmp1773 * _tmp2050 -
                          _tmp1775 * _tmp2050 - _tmp1776 * _tmp2050 + _tmp1778 * _tmp1829 -
                          _tmp1781 * _tmp2052 - _tmp1782 * _tmp2052 + _tmp1783 * _tmp1829 -
                          _tmp1784 * _tmp2052 + _tmp1829 * _tmp1842 + _tmp1908 +
                          _tmp1962 * _tmp2054 + _tmp1973 * _tmp2051 + _tmp2022;
  const Scalar _tmp2056 = _tmp1961 * _tmp2051;
  const Scalar _tmp2057 = _tmp2052 * _tmp98;
  const Scalar _tmp2058 = _tmp1352 * _tmp2056 - _tmp1731 * _tmp2057 - _tmp1757 * _tmp2050 +
                          _tmp1758 * _tmp2052 + _tmp1759 * _tmp1829 - _tmp1760 * _tmp2050 -
                          _tmp1761 * _tmp2051 + _tmp1763 * _tmp2052 + _tmp1764 * _tmp2054 -
                          _tmp1767 * _tmp1829 - _tmp1829 * _tmp1856 + _tmp1920 * _tmp2050 +
                          _tmp1921 + _tmp1966 - _tmp1973 * _tmp2054;
  const Scalar _tmp2059 = -_tmp1460 * _tmp2053 + _tmp1705 * _tmp2050 - _tmp1712 * _tmp2052 -
                          _tmp1715 * _tmp1829 + _tmp1717 * _tmp1829 - _tmp1725 * _tmp2050 -
                          _tmp1729 * _tmp1829 - _tmp1730 * _tmp2050 + _tmp1732 * _tmp2052 -
                          _tmp1733 * _tmp2054 + _tmp1829 * _tmp1852 + _tmp1917 * _tmp2050 +
                          _tmp1918 + _tmp1963 * _tmp2054 + _tmp1976;
  const Scalar _tmp2060 = -_tmp1403 * _tmp2056 + _tmp1472 * _tmp2053 + _tmp1733 * _tmp2051 -
                          _tmp1738 * _tmp2050 + _tmp1739 * _tmp2057 - _tmp1742 * _tmp1829 -
                          _tmp1745 * _tmp2052 - _tmp1748 * _tmp2050 - _tmp1749 * _tmp2050 -
                          _tmp1750 * _tmp1829 + _tmp1829 * _tmp1860 + _tmp1829 * _tmp1912 +
                          _tmp1910 * _tmp2050 + _tmp1915 + _tmp1968;
  const Scalar _tmp2061 =
      _tmp2055 * _tmp381 - _tmp2058 * _tmp387 + _tmp2059 * _tmp390 + _tmp2060 * _tmp391;
  const Scalar _tmp2062 =
      _tmp2055 * _tmp387 + _tmp2058 * _tmp381 + _tmp2059 * _tmp391 - _tmp2060 * _tmp390;
  const Scalar _tmp2063 =
      _tmp2055 * _tmp391 - _tmp2058 * _tmp390 - _tmp2059 * _tmp387 - _tmp2060 * _tmp381;
  const Scalar _tmp2064 =
      _tmp2055 * _tmp390 + _tmp2058 * _tmp391 - _tmp2059 * _tmp381 + _tmp2060 * _tmp387;
  const Scalar _tmp2065 =
      -_tmp2061 * _tmp419 + _tmp2062 * _tmp413 + _tmp2063 * _tmp412 + _tmp2064 * _tmp423;
  const Scalar _tmp2066 =
      _tmp2061 * _tmp412 - _tmp2062 * _tmp423 + _tmp2063 * _tmp419 + _tmp2064 * _tmp413;
  const Scalar _tmp2067 =
      _tmp2061 * _tmp413 + _tmp2062 * _tmp419 + _tmp2063 * _tmp423 - _tmp2064 * _tmp412;
  const Scalar _tmp2068 =
      -_tmp2061 * _tmp423 - _tmp2062 * _tmp412 + _tmp2063 * _tmp413 - _tmp2064 * _tmp419;
  const Scalar _tmp2069 =
      _tmp2065 * _tmp502 - _tmp2066 * _tmp480 + _tmp2067 * _tmp428 + _tmp2068 * _tmp479;
  const Scalar _tmp2070 =
      -_tmp2065 * _tmp479 + _tmp2066 * _tmp428 + _tmp2067 * _tmp480 + _tmp2068 * _tmp502;
  const Scalar _tmp2071 =
      _tmp2065 * _tmp428 + _tmp2066 * _tmp479 - _tmp2067 * _tmp502 + _tmp2068 * _tmp480;
  const Scalar _tmp2072 =
      -_tmp2065 * _tmp480 - _tmp2066 * _tmp502 - _tmp2067 * _tmp479 + _tmp2068 * _tmp428;
  const Scalar _tmp2073 =
      -_tmp2069 * _x0[0] - _tmp2070 * _x0[1] - _tmp2071 * _x0[2] + _tmp2072 * _x0[3];
  const Scalar _tmp2074 =
      -_tmp2069 * _x0[1] + _tmp2070 * _x0[0] + _tmp2071 * _x0[3] + _tmp2072 * _x0[2];
  const Scalar _tmp2075 =
      _tmp2069 * _x0[2] + _tmp2070 * _x0[3] - _tmp2071 * _x0[0] + _tmp2072 * _x0[1];
  const Scalar _tmp2076 =
      _tmp2069 * _x0[3] - _tmp2070 * _x0[2] + _tmp2071 * _x0[1] + _tmp2072 * _x0[0];
  const Scalar _tmp2077 =
      -_tmp2073 * _y[0] - _tmp2074 * _y[1] + _tmp2075 * _y[2] + _tmp2076 * _y[3];
  const Scalar _tmp2078 = _tmp2077 * _tmp610;
  const Scalar _tmp2079 =
      -_tmp2073 * _y[3] - _tmp2074 * _y[2] - _tmp2075 * _y[1] - _tmp2076 * _y[0];
  const Scalar _tmp2080 = _tmp1996 * _tmp2079;
  const Scalar _tmp2081 = _tmp2080 * _tmp604;
  const Scalar _tmp2082 = _tmp2080 * _tmp616;
  const Scalar _tmp2083 = _tmp2000 * _tmp2079;
  const Scalar _tmp2084 = _tmp2083 * _tmp605;
  const Scalar _tmp2085 = _tmp2083 * _tmp587;
  const Scalar _tmp2086 =
      -_tmp2073 * _y[2] + _tmp2074 * _y[3] - _tmp2075 * _y[0] + _tmp2076 * _y[1];
  const Scalar _tmp2087 = _tmp2086 * _tmp610;
  const Scalar _tmp2088 =
      -_tmp2073 * _y[1] + _tmp2074 * _y[0] + _tmp2075 * _y[3] - _tmp2076 * _y[2];
  const Scalar _tmp2089 = _tmp2080 * _tmp587;
  const Scalar _tmp2090 = _tmp2085 * _tmp586;
  const Scalar _tmp2091 = _tmp2088 * _tmp610;

  // Output terms (7)
  Eigen::Matrix<Scalar, 6, 1> _res;

  _res(0, 0) = _tmp0 * sqrt_info(0, 4) + _tmp1 * sqrt_info(0, 3) + _tmp2 * sqrt_info(0, 5) +
               _tmp253 * _tmp3 + _tmp255 * sqrt_info(0, 2) + _tmp256 * _tmp258;
  _res(1, 0) = _tmp0 * sqrt_info(1, 4) + _tmp1 * sqrt_info(1, 3) + _tmp2 * sqrt_info(1, 5) +
               _tmp255 * sqrt_info(1, 2) + _tmp258 * _tmp260 + _tmp259 * sqrt_info(1, 0);
  _res(2, 0) = _tmp0 * sqrt_info(2, 4) + _tmp1 * sqrt_info(2, 3) + _tmp2 * sqrt_info(2, 5) +
               _tmp255 * sqrt_info(2, 2) + _tmp259 * sqrt_info(2, 0) + _tmp261 * sqrt_info(2, 1);
  _res(3, 0) = _tmp0 * sqrt_info(3, 4) + _tmp1 * sqrt_info(3, 3) + _tmp2 * sqrt_info(3, 5) +
               _tmp255 * sqrt_info(3, 2) + _tmp259 * sqrt_info(3, 0) + _tmp261 * sqrt_info(3, 1);
  _res(4, 0) = _tmp0 * sqrt_info(4, 4) + _tmp1 * sqrt_info(4, 3) + _tmp2 * sqrt_info(4, 5) +
               _tmp255 * sqrt_info(4, 2) + _tmp259 * sqrt_info(4, 0) + _tmp261 * sqrt_info(4, 1);
  _res(5, 0) = _tmp0 * sqrt_info(5, 4) + _tmp1 * sqrt_info(5, 3) + _tmp2 * sqrt_info(5, 5) +
               _tmp255 * sqrt_info(5, 2) + _tmp259 * sqrt_info(5, 0) + _tmp261 * sqrt_info(5, 1);

  if (res_D_x0 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x0{res_D_x0};

    _res_D_x0(0, 0) = -_tmp598 * sqrt_info(0, 0) + _tmp599 * _tmp603 - _tmp606 * _tmp607 -
                      _tmp607 * _tmp622 + _tmp608 * _tmp611 + _tmp612 * _tmp613 +
                      _tmp615 * sqrt_info(0, 1) + _tmp618 * sqrt_info(0, 2) + _tmp619 * _tmp620;
    _res_D_x0(1, 0) = _tmp574 * _tmp627 - _tmp598 * sqrt_info(1, 0) + _tmp603 * _tmp623 -
                      _tmp607 * _tmp624 - _tmp607 * _tmp629 + _tmp608 * _tmp625 +
                      _tmp612 * _tmp626 + _tmp618 * sqrt_info(1, 2) + _tmp619 * _tmp628;
    _res_D_x0(2, 0) = -_tmp574 * _tmp630 + _tmp603 * _tmp631 - _tmp607 * _tmp632 -
                      _tmp607 * _tmp636 + _tmp608 * _tmp633 + _tmp612 * _tmp634 +
                      _tmp615 * sqrt_info(2, 1) + _tmp618 * sqrt_info(2, 2) + _tmp619 * _tmp635;
    _res_D_x0(3, 0) = -_tmp574 * _tmp643 + _tmp587 * _tmp602 * _tmp637 - _tmp597 * _tmp637 -
                      _tmp607 * _tmp638 + _tmp608 * _tmp639 + _tmp612 * _tmp640 +
                      _tmp615 * sqrt_info(3, 1) + _tmp618 * sqrt_info(3, 2) + _tmp619 * _tmp641;
    _res_D_x0(4, 0) = -_tmp574 * _tmp644 + _tmp603 * _tmp645 - _tmp607 * _tmp646 -
                      _tmp607 * _tmp650 + _tmp608 * _tmp647 + _tmp612 * _tmp648 +
                      _tmp615 * sqrt_info(4, 1) + _tmp618 * sqrt_info(4, 2) + _tmp619 * _tmp649;
    _res_D_x0(5, 0) = -_tmp574 * _tmp652 + _tmp574 * _tmp657 + _tmp603 * _tmp653 -
                      _tmp607 * _tmp654 - _tmp607 * _tmp659 + _tmp608 * _tmp655 +
                      _tmp612 * _tmp656 + _tmp615 * sqrt_info(5, 1) + _tmp619 * _tmp658;
    _res_D_x0(0, 1) = _tmp256 * _tmp701 + _tmp599 * _tmp699 + _tmp620 * _tmp707 -
                      _tmp622 * _tmp698 - _tmp700 * sqrt_info(0, 0) + _tmp703 * sqrt_info(0, 2) -
                      _tmp704 * sqrt_info(0, 1) + _tmp705 * sqrt_info(0, 2) +
                      _tmp706 * sqrt_info(0, 1);
    _res_D_x0(1, 1) = _tmp260 * _tmp701 + _tmp623 * _tmp699 - _tmp624 * _tmp698 +
                      _tmp625 * _tmp702 + _tmp628 * _tmp707 - _tmp629 * _tmp698 -
                      _tmp700 * sqrt_info(1, 0) + _tmp705 * sqrt_info(1, 2) +
                      _tmp706 * sqrt_info(1, 1);
    _res_D_x0(2, 1) = -_tmp630 * _tmp697 + _tmp631 * _tmp699 - _tmp632 * _tmp698 +
                      _tmp633 * _tmp702 + _tmp635 * _tmp707 - _tmp636 * _tmp698 +
                      _tmp705 * sqrt_info(2, 2) + _tmp706 * sqrt_info(2, 1) +
                      _tmp708 * sqrt_info(2, 1);
    _res_D_x0(3, 1) = _tmp641 * _tmp707 - _tmp643 * _tmp697 - _tmp697 * _tmp710 +
                      _tmp699 * _tmp709 + _tmp703 * sqrt_info(3, 2) - _tmp704 * sqrt_info(3, 1) +
                      _tmp705 * sqrt_info(3, 2) + _tmp706 * sqrt_info(3, 1) +
                      _tmp708 * sqrt_info(3, 1);
    _res_D_x0(4, 1) = _tmp645 * _tmp699 + _tmp647 * _tmp702 + _tmp649 * _tmp707 -
                      _tmp650 * _tmp698 - _tmp700 * sqrt_info(4, 0) - _tmp704 * sqrt_info(4, 1) +
                      _tmp705 * sqrt_info(4, 2) + _tmp706 * sqrt_info(4, 1) +
                      _tmp708 * sqrt_info(4, 1);
    _res_D_x0(5, 1) = -_tmp652 * _tmp697 + _tmp653 * _tmp699 - _tmp654 * _tmp698 +
                      _tmp657 * _tmp697 + _tmp658 * _tmp707 - _tmp659 * _tmp698 +
                      _tmp703 * sqrt_info(5, 2) + _tmp706 * sqrt_info(5, 1) +
                      _tmp708 * sqrt_info(5, 1);
    _res_D_x0(0, 2) = _tmp599 * _tmp755 - _tmp606 * _tmp752 + _tmp613 * _tmp748 +
                      _tmp620 * _tmp750 - _tmp622 * _tmp752 + _tmp747 * sqrt_info(0, 2) -
                      _tmp749 * sqrt_info(0, 0) + _tmp751 * sqrt_info(0, 1) +
                      _tmp754 * sqrt_info(0, 2);
    _res_D_x0(1, 2) = _tmp623 * _tmp755 - _tmp624 * _tmp752 + _tmp625 * _tmp753 +
                      _tmp627 * _tmp746 + _tmp628 * _tmp750 - _tmp629 * _tmp752 +
                      _tmp747 * sqrt_info(1, 2) - _tmp749 * sqrt_info(1, 0) +
                      _tmp756 * sqrt_info(1, 1);
    _res_D_x0(2, 2) = _tmp631 * _tmp755 - _tmp632 * _tmp752 + _tmp633 * _tmp753 +
                      _tmp635 * _tmp750 - _tmp636 * _tmp752 + _tmp747 * sqrt_info(2, 2) -
                      _tmp749 * sqrt_info(2, 0) + _tmp751 * sqrt_info(2, 1) +
                      _tmp756 * sqrt_info(2, 1);
    _res_D_x0(3, 2) = -_tmp638 * _tmp752 + _tmp641 * _tmp750 - _tmp643 * _tmp746 +
                      _tmp709 * _tmp755 - _tmp710 * _tmp746 + _tmp747 * sqrt_info(3, 2) +
                      _tmp751 * sqrt_info(3, 1) + _tmp754 * sqrt_info(3, 2) +
                      _tmp756 * sqrt_info(3, 1);
    _res_D_x0(4, 2) = _tmp645 * _tmp755 - _tmp646 * _tmp752 + _tmp647 * _tmp753 +
                      _tmp649 * _tmp750 - _tmp650 * _tmp752 + _tmp747 * sqrt_info(4, 2) -
                      _tmp749 * sqrt_info(4, 0) + _tmp751 * sqrt_info(4, 1) +
                      _tmp756 * sqrt_info(4, 1);
    _res_D_x0(5, 2) = -_tmp652 * _tmp746 + _tmp653 * _tmp755 - _tmp654 * _tmp752 +
                      _tmp657 * _tmp746 + _tmp658 * _tmp750 - _tmp659 * _tmp752 +
                      _tmp751 * sqrt_info(5, 1) + _tmp754 * sqrt_info(5, 2) +
                      _tmp756 * sqrt_info(5, 1);
    _res_D_x0(0, 3) = _tmp757 * sqrt_info(0, 3);
    _res_D_x0(1, 3) = _tmp757 * sqrt_info(1, 3);
    _res_D_x0(2, 3) = _tmp757 * sqrt_info(2, 3);
    _res_D_x0(3, 3) = _tmp757 * sqrt_info(3, 3);
    _res_D_x0(4, 3) = _tmp757 * sqrt_info(4, 3);
    _res_D_x0(5, 3) = _tmp757 * sqrt_info(5, 3);
    _res_D_x0(0, 4) = _tmp757 * sqrt_info(0, 4);
    _res_D_x0(1, 4) = _tmp757 * sqrt_info(1, 4);
    _res_D_x0(2, 4) = _tmp757 * sqrt_info(2, 4);
    _res_D_x0(3, 4) = _tmp757 * sqrt_info(3, 4);
    _res_D_x0(4, 4) = _tmp757 * sqrt_info(4, 4);
    _res_D_x0(5, 4) = _tmp757 * sqrt_info(5, 4);
    _res_D_x0(0, 5) = _tmp757 * sqrt_info(0, 5);
    _res_D_x0(1, 5) = _tmp757 * sqrt_info(1, 5);
    _res_D_x0(2, 5) = _tmp757 * sqrt_info(2, 5);
    _res_D_x0(3, 5) = _tmp757 * sqrt_info(3, 5);
    _res_D_x0(4, 5) = _tmp757 * sqrt_info(4, 5);
    _res_D_x0(5, 5) = _tmp757 * sqrt_info(5, 5);
  }

  if (res_D_x1 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x1{res_D_x1};

    _res_D_x1(0, 0) = _tmp599 * _tmp902 - _tmp606 * _tmp900 + _tmp611 * _tmp907 +
                      _tmp613 * _tmp906 - _tmp622 * _tmp900 - _tmp901 * sqrt_info(0, 0) +
                      _tmp903 * sqrt_info(0, 2) + _tmp905 * sqrt_info(0, 0) +
                      _tmp908 * sqrt_info(0, 1);
    _res_D_x1(1, 0) = _tmp623 * _tmp902 - _tmp624 * _tmp900 + _tmp625 * _tmp907 +
                      _tmp627 * _tmp899 + _tmp628 * _tmp904 - _tmp629 * _tmp900 -
                      _tmp901 * sqrt_info(1, 0) + _tmp903 * sqrt_info(1, 2) +
                      _tmp909 * sqrt_info(1, 1);
    _res_D_x1(2, 0) = _tmp631 * _tmp902 - _tmp632 * _tmp900 + _tmp633 * _tmp907 +
                      _tmp635 * _tmp904 - _tmp636 * _tmp900 - _tmp901 * sqrt_info(2, 0) +
                      _tmp903 * sqrt_info(2, 2) + _tmp908 * sqrt_info(2, 1) +
                      _tmp909 * sqrt_info(2, 1);
    _res_D_x1(3, 0) = _tmp639 * _tmp907 - _tmp643 * _tmp899 + _tmp709 * _tmp902 -
                      _tmp901 * sqrt_info(3, 0) + _tmp903 * sqrt_info(3, 2) +
                      _tmp905 * sqrt_info(3, 0) + _tmp908 * sqrt_info(3, 1) +
                      _tmp909 * sqrt_info(3, 1) - _tmp910 * sqrt_info(3, 1);
    _res_D_x1(4, 0) = _tmp645 * _tmp902 + _tmp647 * _tmp907 - _tmp650 * _tmp900 -
                      _tmp901 * sqrt_info(4, 0) + _tmp903 * sqrt_info(4, 2) +
                      _tmp905 * sqrt_info(4, 0) + _tmp908 * sqrt_info(4, 1) +
                      _tmp909 * sqrt_info(4, 1) - _tmp910 * sqrt_info(4, 1);
    _res_D_x1(5, 0) = -_tmp652 * _tmp899 + _tmp653 * _tmp902 - _tmp654 * _tmp900 +
                      _tmp655 * _tmp907 + _tmp657 * _tmp899 - _tmp659 * _tmp900 +
                      _tmp905 * sqrt_info(5, 0) + _tmp908 * sqrt_info(5, 1) +
                      _tmp909 * sqrt_info(5, 1);
    _res_D_x1(0, 1) = _tmp599 * _tmp969 - _tmp606 * _tmp970 + _tmp613 * _tmp971 -
                      _tmp622 * _tmp970 + _tmp967 * sqrt_info(0, 2) + _tmp973 * sqrt_info(0, 0) -
                      _tmp974 * sqrt_info(0, 0) + _tmp975 * sqrt_info(0, 2) +
                      _tmp976 * sqrt_info(0, 1);
    _res_D_x1(1, 1) = _tmp623 * _tmp969 - _tmp624 * _tmp970 + _tmp625 * _tmp966 +
                      _tmp627 * _tmp968 + _tmp628 * _tmp972 - _tmp629 * _tmp970 -
                      _tmp974 * sqrt_info(1, 0) + _tmp975 * sqrt_info(1, 2) +
                      _tmp977 * sqrt_info(1, 1);
    _res_D_x1(2, 1) = -_tmp630 * _tmp968 + _tmp631 * _tmp969 - _tmp632 * _tmp970 +
                      _tmp633 * _tmp966 + _tmp635 * _tmp972 - _tmp636 * _tmp970 +
                      _tmp975 * sqrt_info(2, 2) + _tmp976 * sqrt_info(2, 1) +
                      _tmp977 * sqrt_info(2, 1);
    _res_D_x1(3, 1) = -_tmp638 * _tmp970 - _tmp643 * _tmp968 + _tmp709 * _tmp969 -
                      _tmp710 * _tmp968 + _tmp967 * sqrt_info(3, 2) + _tmp973 * sqrt_info(3, 0) +
                      _tmp975 * sqrt_info(3, 2) + _tmp976 * sqrt_info(3, 1) +
                      _tmp977 * sqrt_info(3, 1);
    _res_D_x1(4, 1) = _tmp645 * _tmp969 - _tmp646 * _tmp970 + _tmp647 * _tmp966 -
                      _tmp650 * _tmp970 + _tmp973 * sqrt_info(4, 0) - _tmp974 * sqrt_info(4, 0) +
                      _tmp975 * sqrt_info(4, 2) + _tmp976 * sqrt_info(4, 1) +
                      _tmp977 * sqrt_info(4, 1);
    _res_D_x1(5, 1) = -_tmp652 * _tmp968 + _tmp653 * _tmp969 - _tmp654 * _tmp970 +
                      _tmp657 * _tmp968 - _tmp659 * _tmp970 + _tmp967 * sqrt_info(5, 2) +
                      _tmp973 * sqrt_info(5, 0) + _tmp976 * sqrt_info(5, 1) +
                      _tmp977 * sqrt_info(5, 1);
    _res_D_x1(0, 2) = -_tmp1021 * _tmp606 - _tmp1021 * _tmp622 + _tmp1022 * _tmp613 +
                      _tmp1023 * _tmp620 + _tmp1024 * _tmp599 - _tmp1025 * sqrt_info(0, 0) +
                      _tmp1026 * sqrt_info(0, 2) + _tmp1027 * sqrt_info(0, 1) + _tmp1028 * _tmp611;
    _res_D_x1(1, 2) = _tmp1020 * _tmp627 - _tmp1021 * _tmp624 - _tmp1021 * _tmp629 +
                      _tmp1023 * _tmp628 + _tmp1024 * _tmp623 - _tmp1025 * sqrt_info(1, 0) +
                      _tmp1026 * sqrt_info(1, 2) + _tmp1028 * _tmp625 + _tmp1029 * sqrt_info(1, 1);
    _res_D_x1(2, 2) = -_tmp1021 * _tmp632 - _tmp1021 * _tmp636 + _tmp1023 * _tmp635 +
                      _tmp1024 * _tmp631 - _tmp1025 * sqrt_info(2, 0) + _tmp1026 * sqrt_info(2, 2) +
                      _tmp1027 * sqrt_info(2, 1) + _tmp1028 * _tmp633 + _tmp1029 * sqrt_info(2, 1);
    _res_D_x1(3, 2) = -_tmp1020 * _tmp643 - _tmp1020 * _tmp710 + _tmp1023 * _tmp641 +
                      _tmp1024 * _tmp709 + _tmp1026 * sqrt_info(3, 2) + _tmp1027 * sqrt_info(3, 1) +
                      _tmp1028 * _tmp639 + _tmp1029 * sqrt_info(3, 1) - _tmp1030 * sqrt_info(3, 1);
    _res_D_x1(4, 2) = -_tmp1021 * _tmp650 + _tmp1023 * _tmp649 + _tmp1024 * _tmp645 -
                      _tmp1025 * sqrt_info(4, 0) + _tmp1026 * sqrt_info(4, 2) +
                      _tmp1027 * sqrt_info(4, 1) + _tmp1028 * _tmp647 + _tmp1029 * sqrt_info(4, 1) -
                      _tmp1030 * sqrt_info(4, 1);
    _res_D_x1(5, 2) = -_tmp1020 * _tmp652 + _tmp1020 * _tmp657 - _tmp1021 * _tmp654 -
                      _tmp1021 * _tmp659 + _tmp1023 * _tmp658 + _tmp1024 * _tmp653 +
                      _tmp1027 * sqrt_info(5, 1) + _tmp1028 * _tmp655 + _tmp1029 * sqrt_info(5, 1);
    _res_D_x1(0, 3) = _tmp1031 * sqrt_info(0, 3);
    _res_D_x1(1, 3) = _tmp1031 * sqrt_info(1, 3);
    _res_D_x1(2, 3) = _tmp1031 * sqrt_info(2, 3);
    _res_D_x1(3, 3) = _tmp1031 * sqrt_info(3, 3);
    _res_D_x1(4, 3) = _tmp1031 * sqrt_info(4, 3);
    _res_D_x1(5, 3) = _tmp1031 * sqrt_info(5, 3);
    _res_D_x1(0, 4) = _tmp1031 * sqrt_info(0, 4);
    _res_D_x1(1, 4) = _tmp1031 * sqrt_info(1, 4);
    _res_D_x1(2, 4) = _tmp1031 * sqrt_info(2, 4);
    _res_D_x1(3, 4) = _tmp1031 * sqrt_info(3, 4);
    _res_D_x1(4, 4) = _tmp1031 * sqrt_info(4, 4);
    _res_D_x1(5, 4) = _tmp1031 * sqrt_info(5, 4);
    _res_D_x1(0, 5) = _tmp1031 * sqrt_info(0, 5);
    _res_D_x1(1, 5) = _tmp1031 * sqrt_info(1, 5);
    _res_D_x1(2, 5) = _tmp1031 * sqrt_info(2, 5);
    _res_D_x1(3, 5) = _tmp1031 * sqrt_info(3, 5);
    _res_D_x1(4, 5) = _tmp1031 * sqrt_info(4, 5);
    _res_D_x1(5, 5) = _tmp1031 * sqrt_info(5, 5);
  }

  if (res_D_x2 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x2{res_D_x2};

    _res_D_x2(0, 0) = -_tmp1183 * _tmp606 - _tmp1183 * _tmp622 + _tmp1184 * _tmp620 +
                      _tmp1185 * _tmp611 + _tmp1186 * _tmp599 + _tmp1187 * sqrt_info(0, 2) +
                      _tmp1188 * _tmp613 - _tmp1189 * sqrt_info(0, 0) + _tmp1190 * sqrt_info(0, 1);
    _res_D_x2(1, 0) = _tmp1182 * _tmp627 - _tmp1183 * _tmp624 - _tmp1183 * _tmp629 +
                      _tmp1184 * _tmp628 + _tmp1185 * _tmp625 + _tmp1186 * _tmp623 +
                      _tmp1187 * sqrt_info(1, 2) + _tmp1188 * _tmp626 - _tmp1189 * sqrt_info(1, 0);
    _res_D_x2(2, 0) = -_tmp1182 * _tmp630 - _tmp1183 * _tmp632 - _tmp1183 * _tmp636 +
                      _tmp1184 * _tmp635 + _tmp1185 * _tmp633 + _tmp1186 * _tmp631 +
                      _tmp1187 * sqrt_info(2, 2) + _tmp1188 * _tmp634 + _tmp1190 * sqrt_info(2, 1);
    _res_D_x2(3, 0) = -_tmp1182 * _tmp643 - _tmp1182 * _tmp710 - _tmp1183 * _tmp638 +
                      _tmp1184 * _tmp641 + _tmp1185 * _tmp639 + _tmp1186 * _tmp709 +
                      _tmp1187 * sqrt_info(3, 2) + _tmp1190 * sqrt_info(3, 1) +
                      _tmp1191 * sqrt_info(3, 1);
    _res_D_x2(4, 0) = -_tmp1182 * _tmp644 - _tmp1183 * _tmp646 - _tmp1183 * _tmp650 +
                      _tmp1184 * _tmp649 + _tmp1185 * _tmp647 + _tmp1186 * _tmp645 +
                      _tmp1187 * sqrt_info(4, 2) + _tmp1190 * sqrt_info(4, 1) +
                      _tmp1191 * sqrt_info(4, 1);
    _res_D_x2(5, 0) = -_tmp1182 * _tmp652 + _tmp1182 * _tmp657 - _tmp1183 * _tmp654 -
                      _tmp1183 * _tmp659 + _tmp1184 * _tmp658 + _tmp1185 * _tmp655 +
                      _tmp1186 * _tmp653 + _tmp1188 * _tmp656 + _tmp1190 * sqrt_info(5, 1);
    _res_D_x2(0, 1) = _tmp1256 * _tmp613 + _tmp1258 * sqrt_info(0, 2) - _tmp1259 * _tmp1268 -
                      _tmp1260 * sqrt_info(0, 1) + _tmp1261 * sqrt_info(0, 1) +
                      _tmp1263 * sqrt_info(0, 2) + _tmp1264 * _tmp599 - _tmp1265 * sqrt_info(0, 2) +
                      _tmp1266 * _tmp620;
    _res_D_x2(1, 1) = _tmp1258 * sqrt_info(1, 2) - _tmp1259 * _tmp624 - _tmp1259 * _tmp629 +
                      _tmp1261 * sqrt_info(1, 1) + _tmp1262 * _tmp625 + _tmp1266 * _tmp628 +
                      _tmp1269 * sqrt_info(1, 1) + _tmp1270 * sqrt_info(1, 0) -
                      _tmp1272 * sqrt_info(1, 0);
    _res_D_x2(2, 1) = _tmp1258 * sqrt_info(2, 2) - _tmp1259 * _tmp632 + _tmp1261 * sqrt_info(2, 1) +
                      _tmp1263 * sqrt_info(2, 2) + _tmp1264 * _tmp631 - _tmp1265 * sqrt_info(2, 2) +
                      _tmp1266 * _tmp635 + _tmp1269 * sqrt_info(2, 1) - _tmp1272 * sqrt_info(2, 0);
    _res_D_x2(3, 1) = _tmp1258 * sqrt_info(3, 2) - _tmp1259 * _tmp642 - _tmp1260 * sqrt_info(3, 1) +
                      _tmp1261 * sqrt_info(3, 1) + _tmp1263 * sqrt_info(3, 2) + _tmp1266 * _tmp641 +
                      _tmp1269 * sqrt_info(3, 1) + _tmp1270 * sqrt_info(3, 0) - _tmp1273 * _tmp1274;
    _res_D_x2(4, 1) = _tmp1258 * sqrt_info(4, 2) - _tmp1260 * sqrt_info(4, 1) +
                      _tmp1261 * sqrt_info(4, 1) + _tmp1263 * sqrt_info(4, 2) + _tmp1264 * _tmp645 -
                      _tmp1265 * sqrt_info(4, 2) + _tmp1266 * _tmp649 + _tmp1269 * sqrt_info(4, 1) -
                      _tmp1272 * sqrt_info(4, 0);
    _res_D_x2(5, 1) = _tmp1257 * _tmp657 - _tmp1259 * _tmp654 - _tmp1259 * _tmp659 +
                      _tmp1261 * sqrt_info(5, 1) + _tmp1263 * sqrt_info(5, 2) + _tmp1264 * _tmp653 +
                      _tmp1266 * _tmp658 + _tmp1269 * sqrt_info(5, 1) - _tmp1274 * _tmp651;
    _res_D_x2(0, 2) = -_tmp1268 * _tmp1330 + _tmp1324 * sqrt_info(0, 2) + _tmp1325 * _tmp599 +
                      _tmp1326 * _tmp620 + _tmp1327 * sqrt_info(0, 1) + _tmp1329 * sqrt_info(0, 2) -
                      _tmp1330 * _tmp622 + _tmp1331 * _tmp613 - _tmp1332 * sqrt_info(0, 1);
    _res_D_x2(1, 2) = _tmp1323 * _tmp627 + _tmp1324 * sqrt_info(1, 2) + _tmp1325 * _tmp623 +
                      _tmp1326 * _tmp628 + _tmp1328 * _tmp625 - _tmp1330 * _tmp629 +
                      _tmp1331 * _tmp626 - _tmp1332 * sqrt_info(1, 1) - _tmp1333 * sqrt_info(1, 0);
    _res_D_x2(2, 2) = _tmp1324 * sqrt_info(2, 2) + _tmp1325 * _tmp631 + _tmp1326 * _tmp635 +
                      _tmp1327 * sqrt_info(2, 1) + _tmp1328 * _tmp633 - _tmp1330 * _tmp636 +
                      _tmp1331 * _tmp634 - _tmp1332 * sqrt_info(2, 1) - _tmp1333 * sqrt_info(2, 0);
    _res_D_x2(3, 2) = -_tmp1273 * _tmp1334 + _tmp1324 * sqrt_info(3, 2) + _tmp1325 * _tmp709 +
                      _tmp1326 * _tmp641 + _tmp1327 * sqrt_info(3, 1) + _tmp1329 * sqrt_info(3, 2) -
                      _tmp1330 * _tmp642 + _tmp1331 * _tmp640 - _tmp1332 * sqrt_info(3, 1);
    _res_D_x2(4, 2) = _tmp1324 * sqrt_info(4, 2) + _tmp1325 * _tmp645 + _tmp1326 * _tmp649 +
                      _tmp1327 * sqrt_info(4, 1) + _tmp1329 * sqrt_info(4, 2) - _tmp1330 * _tmp650 +
                      _tmp1331 * _tmp648 - _tmp1332 * sqrt_info(4, 1) - _tmp1333 * sqrt_info(4, 0);
    _res_D_x2(5, 2) = _tmp1323 * _tmp657 + _tmp1325 * _tmp653 + _tmp1326 * _tmp658 +
                      _tmp1327 * sqrt_info(5, 1) + _tmp1329 * sqrt_info(5, 2) - _tmp1330 * _tmp659 +
                      _tmp1331 * _tmp656 - _tmp1332 * sqrt_info(5, 1) - _tmp1334 * _tmp651;
    _res_D_x2(0, 3) = _tmp1335 * sqrt_info(0, 3);
    _res_D_x2(1, 3) = _tmp1335 * sqrt_info(1, 3);
    _res_D_x2(2, 3) = _tmp1335 * sqrt_info(2, 3);
    _res_D_x2(3, 3) = _tmp1335 * sqrt_info(3, 3);
    _res_D_x2(4, 3) = _tmp1335 * sqrt_info(4, 3);
    _res_D_x2(5, 3) = _tmp1335 * sqrt_info(5, 3);
    _res_D_x2(0, 4) = _tmp1335 * sqrt_info(0, 4);
    _res_D_x2(1, 4) = _tmp1335 * sqrt_info(1, 4);
    _res_D_x2(2, 4) = _tmp1335 * sqrt_info(2, 4);
    _res_D_x2(3, 4) = _tmp1335 * sqrt_info(3, 4);
    _res_D_x2(4, 4) = _tmp1335 * sqrt_info(4, 4);
    _res_D_x2(5, 4) = _tmp1335 * sqrt_info(5, 4);
    _res_D_x2(0, 5) = _tmp1335 * sqrt_info(0, 5);
    _res_D_x2(1, 5) = _tmp1335 * sqrt_info(1, 5);
    _res_D_x2(2, 5) = _tmp1335 * sqrt_info(2, 5);
    _res_D_x2(3, 5) = _tmp1335 * sqrt_info(3, 5);
    _res_D_x2(4, 5) = _tmp1335 * sqrt_info(4, 5);
    _res_D_x2(5, 5) = _tmp1335 * sqrt_info(5, 5);
  }

  if (res_D_x3 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x3{res_D_x3};

    _res_D_x3(0, 0) = _tmp1499 * sqrt_info(0, 1) + _tmp1500 * sqrt_info(0, 2) -
                      _tmp1501 * sqrt_info(0, 0) + _tmp1503 * sqrt_info(0, 0) - _tmp1504 * _tmp606 -
                      _tmp1504 * _tmp622 + _tmp1505 * _tmp599 + _tmp1506 * _tmp613 +
                      _tmp1507 * _tmp611;
    _res_D_x3(1, 0) = _tmp1498 * _tmp627 + _tmp1500 * sqrt_info(1, 2) - _tmp1501 * sqrt_info(1, 0) +
                      _tmp1502 * _tmp628 - _tmp1504 * _tmp624 - _tmp1504 * _tmp629 +
                      _tmp1507 * _tmp625 + _tmp1508 * sqrt_info(1, 0) + _tmp1509 * sqrt_info(1, 1);
    _res_D_x3(2, 0) = _tmp1499 * sqrt_info(2, 1) + _tmp1500 * sqrt_info(2, 2) -
                      _tmp1501 * sqrt_info(2, 0) + _tmp1502 * _tmp635 - _tmp1504 * _tmp632 -
                      _tmp1504 * _tmp636 + _tmp1505 * _tmp631 + _tmp1507 * _tmp633 +
                      _tmp1509 * sqrt_info(2, 1);
    _res_D_x3(3, 0) = -_tmp1498 * _tmp643 + _tmp1499 * sqrt_info(3, 1) +
                      _tmp1500 * sqrt_info(3, 2) - _tmp1501 * sqrt_info(3, 0) +
                      _tmp1503 * sqrt_info(3, 0) - _tmp1504 * _tmp638 + _tmp1507 * _tmp639 +
                      _tmp1508 * sqrt_info(3, 0) + _tmp1509 * sqrt_info(3, 1);
    _res_D_x3(4, 0) = _tmp1499 * sqrt_info(4, 1) + _tmp1500 * sqrt_info(4, 2) -
                      _tmp1501 * sqrt_info(4, 0) + _tmp1503 * sqrt_info(4, 0) - _tmp1504 * _tmp646 -
                      _tmp1504 * _tmp650 + _tmp1505 * _tmp645 + _tmp1507 * _tmp647 +
                      _tmp1509 * sqrt_info(4, 1);
    _res_D_x3(5, 0) = -_tmp1498 * _tmp652 + _tmp1498 * _tmp657 + _tmp1499 * sqrt_info(5, 1) +
                      _tmp1503 * sqrt_info(5, 0) - _tmp1504 * _tmp654 - _tmp1504 * _tmp659 +
                      _tmp1507 * _tmp655 + _tmp1508 * sqrt_info(5, 0) + _tmp1509 * sqrt_info(5, 1);
    _res_D_x3(0, 1) = -_tmp1572 * sqrt_info(0, 0) + _tmp1573 * sqrt_info(0, 1) +
                      _tmp1574 * _tmp620 + _tmp1575 * _tmp599 - _tmp1576 * _tmp606 -
                      _tmp1576 * _tmp622 + _tmp1577 * _tmp613 + _tmp1578 * sqrt_info(0, 2) +
                      _tmp1579 * _tmp611;
    _res_D_x3(1, 1) = _tmp1571 * _tmp627 - _tmp1572 * sqrt_info(1, 0) + _tmp1574 * _tmp628 +
                      _tmp1575 * _tmp623 - _tmp1576 * _tmp624 - _tmp1576 * _tmp629 +
                      _tmp1578 * sqrt_info(1, 2) + _tmp1579 * _tmp625 + _tmp1580 * sqrt_info(1, 1);
    _res_D_x3(2, 1) = -_tmp1572 * sqrt_info(2, 0) + _tmp1573 * sqrt_info(2, 1) +
                      _tmp1574 * _tmp635 + _tmp1575 * _tmp631 - _tmp1576 * _tmp632 -
                      _tmp1576 * _tmp636 + _tmp1578 * sqrt_info(2, 2) + _tmp1579 * _tmp633 +
                      _tmp1580 * sqrt_info(2, 1);
    _res_D_x3(3, 1) = -_tmp1571 * _tmp643 - _tmp1572 * sqrt_info(3, 0) +
                      _tmp1573 * sqrt_info(3, 1) + _tmp1574 * _tmp641 + _tmp1575 * _tmp709 +
                      _tmp1578 * sqrt_info(3, 2) + _tmp1579 * _tmp639 + _tmp1580 * sqrt_info(3, 1) -
                      _tmp1581 * sqrt_info(3, 1);
    _res_D_x3(4, 1) = -_tmp1572 * sqrt_info(4, 0) + _tmp1573 * sqrt_info(4, 1) +
                      _tmp1574 * _tmp649 + _tmp1575 * _tmp645 - _tmp1576 * _tmp650 +
                      _tmp1578 * sqrt_info(4, 2) + _tmp1579 * _tmp647 + _tmp1580 * sqrt_info(4, 1) -
                      _tmp1581 * sqrt_info(4, 1);
    _res_D_x3(5, 1) = -_tmp1571 * _tmp652 + _tmp1571 * _tmp657 + _tmp1573 * sqrt_info(5, 1) +
                      _tmp1574 * _tmp658 + _tmp1575 * _tmp653 - _tmp1576 * _tmp654 -
                      _tmp1576 * _tmp659 + _tmp1579 * _tmp655 + _tmp1580 * sqrt_info(5, 1);
    _res_D_x3(0, 2) = _tmp1635 * sqrt_info(0, 2) + _tmp1638 * sqrt_info(0, 2) + _tmp1639 * _tmp613 -
                      _tmp1640 * sqrt_info(0, 0) + _tmp1641 * sqrt_info(0, 1) +
                      _tmp1642 * sqrt_info(0, 0) - _tmp1643 * _tmp606 - _tmp1643 * _tmp622 +
                      _tmp1645 * sqrt_info(0, 0);
    _res_D_x3(1, 2) = _tmp1635 * sqrt_info(1, 2) + _tmp1638 * sqrt_info(1, 2) -
                      _tmp1640 * sqrt_info(1, 0) + _tmp1641 * sqrt_info(1, 1) +
                      _tmp1642 * sqrt_info(1, 0) - _tmp1643 * _tmp624 - _tmp1643 * _tmp629 +
                      _tmp1644 * _tmp628 + _tmp1646 * sqrt_info(1, 1);
    _res_D_x3(2, 2) = _tmp1635 * sqrt_info(2, 2) - _tmp1636 * _tmp630 + _tmp1637 * _tmp1647 +
                      _tmp1641 * sqrt_info(2, 1) + _tmp1642 * sqrt_info(2, 0) - _tmp1643 * _tmp632 -
                      _tmp1643 * _tmp636 + _tmp1644 * _tmp635 + _tmp1646 * sqrt_info(2, 1);
    _res_D_x3(3, 2) = _tmp1635 * sqrt_info(3, 2) - _tmp1636 * _tmp643 - _tmp1636 * _tmp710 +
                      _tmp1638 * sqrt_info(3, 2) + _tmp1641 * sqrt_info(3, 1) +
                      _tmp1642 * sqrt_info(3, 0) + _tmp1645 * sqrt_info(3, 0) +
                      _tmp1646 * sqrt_info(3, 1) - _tmp1648 * sqrt_info(3, 1);
    _res_D_x3(4, 2) = _tmp1635 * sqrt_info(4, 2) + _tmp1637 * _tmp1649 + _tmp1637 * _tmp645 +
                      _tmp1638 * sqrt_info(4, 2) - _tmp1640 * sqrt_info(4, 0) - _tmp1643 * _tmp650 +
                      _tmp1645 * sqrt_info(4, 0) + _tmp1646 * sqrt_info(4, 1) -
                      _tmp1648 * sqrt_info(4, 1);
    _res_D_x3(5, 2) = _tmp1635 * sqrt_info(5, 2) - _tmp1636 * _tmp652 + _tmp1638 * sqrt_info(5, 2) +
                      _tmp1641 * sqrt_info(5, 1) + _tmp1642 * sqrt_info(5, 0) - _tmp1643 * _tmp654 -
                      _tmp1643 * _tmp659 + _tmp1645 * sqrt_info(5, 0) + _tmp1646 * sqrt_info(5, 1);
    _res_D_x3(0, 3) = _tmp1650 * sqrt_info(0, 3);
    _res_D_x3(1, 3) = _tmp1650 * sqrt_info(1, 3);
    _res_D_x3(2, 3) = _tmp1650 * sqrt_info(2, 3);
    _res_D_x3(3, 3) = _tmp1650 * sqrt_info(3, 3);
    _res_D_x3(4, 3) = _tmp1650 * sqrt_info(4, 3);
    _res_D_x3(5, 3) = _tmp1650 * sqrt_info(5, 3);
    _res_D_x3(0, 4) = _tmp1650 * sqrt_info(0, 4);
    _res_D_x3(1, 4) = _tmp1650 * sqrt_info(1, 4);
    _res_D_x3(2, 4) = _tmp1650 * sqrt_info(2, 4);
    _res_D_x3(3, 4) = _tmp1650 * sqrt_info(3, 4);
    _res_D_x3(4, 4) = _tmp1650 * sqrt_info(4, 4);
    _res_D_x3(5, 4) = _tmp1650 * sqrt_info(5, 4);
    _res_D_x3(0, 5) = _tmp1650 * sqrt_info(0, 5);
    _res_D_x3(1, 5) = _tmp1650 * sqrt_info(1, 5);
    _res_D_x3(2, 5) = _tmp1650 * sqrt_info(2, 5);
    _res_D_x3(3, 5) = _tmp1650 * sqrt_info(3, 5);
    _res_D_x3(4, 5) = _tmp1650 * sqrt_info(4, 5);
    _res_D_x3(5, 5) = _tmp1650 * sqrt_info(5, 5);
  }

  if (res_D_x4 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x4{res_D_x4};

    _res_D_x4(0, 0) = -_tmp1268 * _tmp1814 + _tmp1268 * _tmp1816 + _tmp1810 * sqrt_info(0, 2) -
                      _tmp1814 * _tmp606 - _tmp1814 * _tmp622 + _tmp1816 * _tmp606 +
                      _tmp1816 * _tmp622 + _tmp1817 * _tmp1819 + _tmp1820 * _tmp256;
    _res_D_x4(1, 0) = _tmp1810 * sqrt_info(1, 2) - _tmp1814 * _tmp624 - _tmp1814 * _tmp629 +
                      _tmp1816 * _tmp624 + _tmp1816 * _tmp629 + _tmp1820 * _tmp260 -
                      _tmp1821 * sqrt_info(1, 0) + _tmp1822 * sqrt_info(1, 0) +
                      _tmp1823 * sqrt_info(1, 0);
    _res_D_x4(2, 0) = _tmp1810 * sqrt_info(2, 2) - _tmp1814 * _tmp632 - _tmp1814 * _tmp636 +
                      _tmp1816 * _tmp632 + _tmp1816 * _tmp636 - _tmp1821 * sqrt_info(2, 0) +
                      _tmp1822 * sqrt_info(2, 0) + _tmp1823 * sqrt_info(2, 0) +
                      _tmp1824 * sqrt_info(2, 1);
    _res_D_x4(3, 0) = -_tmp1273 * _tmp1825 + _tmp1273 * _tmp1826 + _tmp1810 * sqrt_info(3, 2) -
                      _tmp1814 * _tmp638 - _tmp1814 * _tmp642 + _tmp1816 * _tmp638 +
                      _tmp1816 * _tmp642 + _tmp1823 * sqrt_info(3, 0) + _tmp1824 * sqrt_info(3, 1);
    _res_D_x4(4, 0) = _tmp1810 * sqrt_info(4, 2) - _tmp1814 * _tmp646 - _tmp1814 * _tmp650 +
                      _tmp1816 * _tmp646 + _tmp1816 * _tmp650 - _tmp1821 * sqrt_info(4, 0) +
                      _tmp1822 * sqrt_info(4, 0) + _tmp1823 * sqrt_info(4, 0) +
                      _tmp1824 * sqrt_info(4, 1);
    _res_D_x4(5, 0) = _tmp1810 * sqrt_info(5, 2) - _tmp1814 * _tmp654 - _tmp1814 * _tmp659 +
                      _tmp1816 * _tmp654 + _tmp1816 * _tmp659 + _tmp1819 * _tmp1827 +
                      _tmp1824 * sqrt_info(5, 1) - _tmp1825 * _tmp651 + _tmp1826 * _tmp651;
    _res_D_x4(0, 1) = _tmp1268 * _tmp1880 - _tmp1268 * _tmp1882 + _tmp1817 * _tmp1881 +
                      _tmp1880 * _tmp606 + _tmp1880 * _tmp622 - _tmp1882 * _tmp606 -
                      _tmp1882 * _tmp622 + _tmp1883 * sqrt_info(0, 2) + _tmp1885 * _tmp256;
    _res_D_x4(1, 1) = _tmp1880 * _tmp624 + _tmp1880 * _tmp629 - _tmp1882 * _tmp624 -
                      _tmp1882 * _tmp629 + _tmp1883 * sqrt_info(1, 2) + _tmp1885 * _tmp260 +
                      _tmp1886 * sqrt_info(1, 0) + _tmp1888 * sqrt_info(1, 0) -
                      _tmp1889 * sqrt_info(1, 0);
    _res_D_x4(2, 1) = _tmp1880 * _tmp632 + _tmp1880 * _tmp636 - _tmp1882 * _tmp632 -
                      _tmp1882 * _tmp636 + _tmp1883 * sqrt_info(2, 2) + _tmp1886 * sqrt_info(2, 0) +
                      _tmp1888 * sqrt_info(2, 0) - _tmp1889 * sqrt_info(2, 0) +
                      _tmp1890 * sqrt_info(2, 1);
    _res_D_x4(3, 1) = _tmp1273 * _tmp1891 - _tmp1273 * _tmp1892 + _tmp1880 * _tmp638 +
                      _tmp1880 * _tmp642 - _tmp1882 * _tmp638 - _tmp1882 * _tmp642 +
                      _tmp1883 * sqrt_info(3, 2) + _tmp1888 * sqrt_info(3, 0) +
                      _tmp1890 * sqrt_info(3, 1);
    _res_D_x4(4, 1) = _tmp1880 * _tmp646 + _tmp1880 * _tmp650 - _tmp1882 * _tmp646 -
                      _tmp1882 * _tmp650 + _tmp1883 * sqrt_info(4, 2) + _tmp1886 * sqrt_info(4, 0) +
                      _tmp1888 * sqrt_info(4, 0) - _tmp1889 * sqrt_info(4, 0) +
                      _tmp1890 * sqrt_info(4, 1);
    _res_D_x4(5, 1) = _tmp1880 * _tmp654 + _tmp1880 * _tmp659 - _tmp1882 * _tmp654 -
                      _tmp1882 * _tmp659 + _tmp1883 * sqrt_info(5, 2) + _tmp1887 * _tmp651 +
                      _tmp1890 * sqrt_info(5, 1) + _tmp1891 * _tmp651 - _tmp1892 * _tmp651;
    _res_D_x4(0, 2) = -_tmp1268 * _tmp1940 + _tmp1268 * _tmp1942 + _tmp1817 * _tmp1944 -
                      _tmp1940 * _tmp606 - _tmp1940 * _tmp622 + _tmp1941 * sqrt_info(0, 2) +
                      _tmp1942 * _tmp606 + _tmp1942 * _tmp622 + _tmp1946 * _tmp256;
    _res_D_x4(1, 2) = -_tmp1940 * _tmp624 - _tmp1940 * _tmp629 + _tmp1941 * sqrt_info(1, 2) +
                      _tmp1942 * _tmp624 + _tmp1942 * _tmp629 + _tmp1946 * _tmp260 -
                      _tmp1947 * sqrt_info(1, 0) + _tmp1948 * sqrt_info(1, 0) +
                      _tmp1949 * sqrt_info(1, 0);
    _res_D_x4(2, 2) = -_tmp1940 * _tmp632 + _tmp1941 * sqrt_info(2, 2) + _tmp1942 * _tmp632 +
                      _tmp1942 * _tmp636 - _tmp1947 * sqrt_info(2, 0) + _tmp1948 * sqrt_info(2, 0) +
                      _tmp1949 * sqrt_info(2, 0) - _tmp1950 * sqrt_info(2, 2) +
                      _tmp1951 * sqrt_info(2, 1);
    _res_D_x4(3, 2) = -_tmp1273 * _tmp1952 + _tmp1273 * _tmp1953 - _tmp1940 * _tmp638 -
                      _tmp1940 * _tmp642 + _tmp1941 * sqrt_info(3, 2) + _tmp1942 * _tmp638 +
                      _tmp1942 * _tmp642 + _tmp1949 * sqrt_info(3, 0) + _tmp1951 * sqrt_info(3, 1);
    _res_D_x4(4, 2) = -_tmp1940 * _tmp646 + _tmp1941 * sqrt_info(4, 2) + _tmp1942 * _tmp646 +
                      _tmp1942 * _tmp650 - _tmp1947 * sqrt_info(4, 0) + _tmp1948 * sqrt_info(4, 0) +
                      _tmp1949 * sqrt_info(4, 0) - _tmp1950 * sqrt_info(4, 2) +
                      _tmp1951 * sqrt_info(4, 1);
    _res_D_x4(5, 2) = _tmp1827 * _tmp1944 - _tmp1940 * _tmp654 - _tmp1940 * _tmp659 +
                      _tmp1941 * sqrt_info(5, 2) + _tmp1942 * _tmp654 + _tmp1942 * _tmp659 +
                      _tmp1951 * sqrt_info(5, 1) - _tmp1952 * _tmp651 + _tmp1953 * _tmp651;
    _res_D_x4(0, 3) = _tmp1954 * sqrt_info(0, 3);
    _res_D_x4(1, 3) = _tmp1954 * sqrt_info(1, 3);
    _res_D_x4(2, 3) = _tmp1954 * sqrt_info(2, 3);
    _res_D_x4(3, 3) = _tmp1954 * sqrt_info(3, 3);
    _res_D_x4(4, 3) = _tmp1954 * sqrt_info(4, 3);
    _res_D_x4(5, 3) = _tmp1954 * sqrt_info(5, 3);
    _res_D_x4(0, 4) = _tmp1954 * sqrt_info(0, 4);
    _res_D_x4(1, 4) = _tmp1954 * sqrt_info(1, 4);
    _res_D_x4(2, 4) = _tmp1954 * sqrt_info(2, 4);
    _res_D_x4(3, 4) = _tmp1954 * sqrt_info(3, 4);
    _res_D_x4(4, 4) = _tmp1954 * sqrt_info(4, 4);
    _res_D_x4(5, 4) = _tmp1954 * sqrt_info(5, 4);
    _res_D_x4(0, 5) = _tmp1954 * sqrt_info(0, 5);
    _res_D_x4(1, 5) = _tmp1954 * sqrt_info(1, 5);
    _res_D_x4(2, 5) = _tmp1954 * sqrt_info(2, 5);
    _res_D_x4(3, 5) = _tmp1954 * sqrt_info(3, 5);
    _res_D_x4(4, 5) = _tmp1954 * sqrt_info(4, 5);
    _res_D_x4(5, 5) = _tmp1954 * sqrt_info(5, 5);
  }

  if (res_D_x5 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x5{res_D_x5};

    _res_D_x5(0, 0) = -_tmp1267 * _tmp2005 + _tmp1997 * _tmp599 + _tmp1998 * _tmp613 +
                      _tmp1999 * sqrt_info(0, 2) - _tmp2001 * _tmp606 - _tmp2001 * _tmp622 +
                      _tmp2002 * sqrt_info(0, 1) + _tmp2003 * sqrt_info(0, 0) + _tmp2006 * _tmp611;
    _res_D_x5(1, 0) = _tmp1997 * _tmp623 + _tmp1998 * _tmp626 + _tmp1999 * sqrt_info(1, 2) -
                      _tmp2001 * _tmp624 - _tmp2001 * _tmp629 + _tmp2002 * sqrt_info(1, 1) +
                      _tmp2003 * sqrt_info(1, 0) + _tmp2006 * _tmp625 - _tmp2007 * sqrt_info(1, 0);
    _res_D_x5(2, 0) = _tmp1647 * _tmp1997 + _tmp1997 * _tmp631 + _tmp1998 * _tmp634 -
                      _tmp2001 * _tmp632 - _tmp2001 * _tmp636 + _tmp2002 * sqrt_info(2, 1) +
                      _tmp2003 * sqrt_info(2, 0) + _tmp2006 * _tmp633 - _tmp2007 * sqrt_info(2, 0);
    _res_D_x5(3, 0) = -_tmp1273 * _tmp2005 + _tmp1997 * _tmp709 + _tmp1999 * sqrt_info(3, 2) -
                      _tmp2001 * _tmp638 - _tmp2001 * _tmp642 + _tmp2002 * sqrt_info(3, 1) +
                      _tmp2003 * sqrt_info(3, 0) + _tmp2006 * _tmp639 + _tmp2008 * sqrt_info(3, 1);
    _res_D_x5(4, 0) = _tmp1649 * _tmp1997 + _tmp1997 * _tmp645 + _tmp1999 * sqrt_info(4, 2) -
                      _tmp2001 * _tmp646 - _tmp2001 * _tmp650 + _tmp2003 * sqrt_info(4, 0) +
                      _tmp2006 * _tmp647 - _tmp2007 * sqrt_info(4, 0) + _tmp2008 * sqrt_info(4, 1);
    _res_D_x5(5, 0) = _tmp1997 * _tmp653 + _tmp1998 * _tmp656 + _tmp1999 * sqrt_info(5, 2) -
                      _tmp2001 * _tmp654 - _tmp2001 * _tmp659 + _tmp2002 * sqrt_info(5, 1) +
                      _tmp2003 * sqrt_info(5, 0) - _tmp2005 * _tmp651 + _tmp2006 * _tmp655;
    _res_D_x5(0, 1) = -_tmp2042 * sqrt_info(0, 0) + _tmp2043 * _tmp599 +
                      _tmp2044 * sqrt_info(0, 1) - _tmp2045 * _tmp606 - _tmp2045 * _tmp622 +
                      _tmp2046 * _tmp611 + _tmp2047 * _tmp620 + _tmp2048 * _tmp613 +
                      _tmp2049 * sqrt_info(0, 2);
    _res_D_x5(1, 1) = -_tmp2042 * sqrt_info(1, 0) + _tmp2043 * _tmp623 +
                      _tmp2044 * sqrt_info(1, 1) - _tmp2045 * _tmp624 - _tmp2045 * _tmp629 +
                      _tmp2046 * _tmp625 + _tmp2047 * _tmp628 + _tmp2048 * _tmp626 +
                      _tmp2049 * sqrt_info(1, 2);
    _res_D_x5(2, 1) = _tmp1647 * _tmp2043 - _tmp2042 * sqrt_info(2, 0) + _tmp2043 * _tmp631 +
                      _tmp2044 * sqrt_info(2, 1) - _tmp2045 * _tmp632 - _tmp2045 * _tmp636 +
                      _tmp2046 * _tmp633 + _tmp2047 * _tmp635 + _tmp2048 * _tmp634;
    _res_D_x5(3, 1) = -_tmp1273 * _tmp2041 + _tmp2043 * _tmp709 + _tmp2044 * sqrt_info(3, 1) -
                      _tmp2045 * _tmp638 - _tmp2045 * _tmp642 + _tmp2046 * _tmp639 +
                      _tmp2047 * _tmp641 + _tmp2048 * _tmp640 + _tmp2049 * sqrt_info(3, 2);
    _res_D_x5(4, 1) = _tmp1649 * _tmp2043 - _tmp2042 * sqrt_info(4, 0) + _tmp2043 * _tmp645 -
                      _tmp2045 * _tmp646 - _tmp2045 * _tmp650 + _tmp2046 * _tmp647 +
                      _tmp2047 * _tmp649 + _tmp2048 * _tmp648 + _tmp2049 * sqrt_info(4, 2);
    _res_D_x5(5, 1) = -_tmp2041 * _tmp651 + _tmp2043 * _tmp653 + _tmp2044 * sqrt_info(5, 1) -
                      _tmp2045 * _tmp654 - _tmp2045 * _tmp659 + _tmp2046 * _tmp655 +
                      _tmp2047 * _tmp658 + _tmp2048 * _tmp656 + _tmp2049 * sqrt_info(5, 2);
    _res_D_x5(0, 2) = -_tmp1267 * _tmp2085 + _tmp2078 * sqrt_info(0, 0) + _tmp2080 * _tmp599 +
                      _tmp2081 * sqrt_info(0, 1) + _tmp2082 * sqrt_info(0, 2) - _tmp2083 * _tmp622 -
                      _tmp2084 * sqrt_info(0, 1) + _tmp2087 * sqrt_info(0, 2) + _tmp2088 * _tmp613;
    _res_D_x5(1, 2) = _tmp2077 * _tmp628 + _tmp2081 * sqrt_info(1, 1) + _tmp2082 * sqrt_info(1, 2) -
                      _tmp2083 * _tmp624 - _tmp2083 * _tmp629 + _tmp2086 * _tmp625 +
                      _tmp2088 * _tmp626 + _tmp2089 * sqrt_info(1, 0) - _tmp2090 * sqrt_info(1, 0);
    _res_D_x5(2, 2) = _tmp1647 * _tmp2080 + _tmp2077 * _tmp635 + _tmp2081 * sqrt_info(2, 1) -
                      _tmp2083 * _tmp632 - _tmp2083 * _tmp636 + _tmp2086 * _tmp633 +
                      _tmp2089 * sqrt_info(2, 0) - _tmp2090 * sqrt_info(2, 0) +
                      _tmp2091 * sqrt_info(2, 1);
    _res_D_x5(3, 2) = -_tmp1273 * _tmp2085 + _tmp2078 * sqrt_info(3, 0) +
                      _tmp2081 * sqrt_info(3, 1) + _tmp2082 * sqrt_info(3, 2) - _tmp2083 * _tmp642 -
                      _tmp2084 * sqrt_info(3, 1) + _tmp2087 * sqrt_info(3, 2) +
                      _tmp2089 * sqrt_info(3, 0) + _tmp2091 * sqrt_info(3, 1);
    _res_D_x5(4, 2) = _tmp1649 * _tmp2080 + _tmp2078 * sqrt_info(4, 0) + _tmp2080 * _tmp645 +
                      _tmp2082 * sqrt_info(4, 2) - _tmp2083 * _tmp650 - _tmp2084 * sqrt_info(4, 1) +
                      _tmp2087 * sqrt_info(4, 2) - _tmp2090 * sqrt_info(4, 0) +
                      _tmp2091 * sqrt_info(4, 1);
    _res_D_x5(5, 2) = _tmp2078 * sqrt_info(5, 0) + _tmp2081 * sqrt_info(5, 1) +
                      _tmp2082 * sqrt_info(5, 2) - _tmp2083 * _tmp659 - _tmp2084 * sqrt_info(5, 1) -
                      _tmp2085 * _tmp651 + _tmp2087 * sqrt_info(5, 2) + _tmp2088 * _tmp656 +
                      _tmp2089 * sqrt_info(5, 0);
    _res_D_x5(0, 3) = lambdas(4, 0) * sqrt_info(0, 3);
    _res_D_x5(1, 3) = lambdas(4, 0) * sqrt_info(1, 3);
    _res_D_x5(2, 3) = lambdas(4, 0) * sqrt_info(2, 3);
    _res_D_x5(3, 3) = lambdas(4, 0) * sqrt_info(3, 3);
    _res_D_x5(4, 3) = lambdas(4, 0) * sqrt_info(4, 3);
    _res_D_x5(5, 3) = lambdas(4, 0) * sqrt_info(5, 3);
    _res_D_x5(0, 4) = lambdas(4, 0) * sqrt_info(0, 4);
    _res_D_x5(1, 4) = lambdas(4, 0) * sqrt_info(1, 4);
    _res_D_x5(2, 4) = lambdas(4, 0) * sqrt_info(2, 4);
    _res_D_x5(3, 4) = lambdas(4, 0) * sqrt_info(3, 4);
    _res_D_x5(4, 4) = lambdas(4, 0) * sqrt_info(4, 4);
    _res_D_x5(5, 4) = lambdas(4, 0) * sqrt_info(5, 4);
    _res_D_x5(0, 5) = lambdas(4, 0) * sqrt_info(0, 5);
    _res_D_x5(1, 5) = lambdas(4, 0) * sqrt_info(1, 5);
    _res_D_x5(2, 5) = lambdas(4, 0) * sqrt_info(2, 5);
    _res_D_x5(3, 5) = lambdas(4, 0) * sqrt_info(3, 5);
    _res_D_x5(4, 5) = lambdas(4, 0) * sqrt_info(4, 5);
    _res_D_x5(5, 5) = lambdas(4, 0) * sqrt_info(5, 5);
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_hyperion
