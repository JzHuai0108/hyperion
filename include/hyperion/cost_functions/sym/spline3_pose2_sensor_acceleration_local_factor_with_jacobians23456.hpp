// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose2.h>

namespace sym_hyperion {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline3_pose2_sensor_acceleration_factor
 *
 * Args:
 *     dt: Scalar
 *     lambdas: Matrix33
 *     x0: Pose2
 *     x1: Pose2
 *     x2: Pose2
 *     x3: Pose2
 *     x_T_s: Pose2
 *     acceleration: Matrix31
 *     sqrt_info: Matrix33
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix31
 *     res_D_x0: (3x3) jacobian of res (3) wrt arg x0 (3)
 *     res_D_x1: (3x3) jacobian of res (3) wrt arg x1 (3)
 *     res_D_x2: (3x3) jacobian of res (3) wrt arg x2 (3)
 *     res_D_x3: (3x3) jacobian of res (3) wrt arg x3 (3)
 *     res_D_x_T_s: (3x3) jacobian of res (3) wrt arg x_T_s (3)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 3, 1> Spline3Pose2SensorAccelerationLocalFactorWithJacobians23456(
    const Scalar dt, const Eigen::Matrix<Scalar, 3, 3>& lambdas, const sym::Pose2<Scalar>& x0,
    const sym::Pose2<Scalar>& x1, const sym::Pose2<Scalar>& x2, const sym::Pose2<Scalar>& x3,
    const sym::Pose2<Scalar>& x_T_s, const Eigen::Matrix<Scalar, 3, 1>& acceleration,
    const Eigen::Matrix<Scalar, 3, 3>& sqrt_info, const Scalar epsilon,
    Scalar* const res_D_x0 = nullptr, Scalar* const res_D_x1 = nullptr,
    Scalar* const res_D_x2 = nullptr, Scalar* const res_D_x3 = nullptr,
    Scalar* const res_D_x_T_s = nullptr) {
  // Total ops: 674

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x3 = x3.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x_T_s = x_T_s.Data();

  // Intermediate terms (208)
  const Scalar _tmp0 = _x0[1] * _x1[0];
  const Scalar _tmp1 = _x0[0] * _x1[1];
  const Scalar _tmp2 = -_tmp0 + _tmp1;
  const Scalar _tmp3 = _x0[1] * _x1[1];
  const Scalar _tmp4 = _x0[0] * _x1[0];
  const Scalar _tmp5 = _tmp3 + _tmp4;
  const Scalar _tmp6 = _tmp5 + epsilon * ((((_tmp5) > 0) - ((_tmp5) < 0)) + Scalar(0.5));
  const Scalar _tmp7 = std::atan2(_tmp2, _tmp6);
  const Scalar _tmp8 = _tmp7 * lambdas(0, 0);
  const Scalar _tmp9 = std::cos(_tmp8);
  const Scalar _tmp10 = _tmp9 * _x0[0];
  const Scalar _tmp11 = std::sin(_tmp8);
  const Scalar _tmp12 = _tmp11 * _x0[1];
  const Scalar _tmp13 = _tmp10 - _tmp12;
  const Scalar _tmp14 = _x1[0] * _x2[1];
  const Scalar _tmp15 = _x1[1] * _x2[0];
  const Scalar _tmp16 = _tmp14 - _tmp15;
  const Scalar _tmp17 = _x1[0] * _x2[0];
  const Scalar _tmp18 = _x1[1] * _x2[1];
  const Scalar _tmp19 = _tmp17 + _tmp18;
  const Scalar _tmp20 = _tmp19 + epsilon * ((((_tmp19) > 0) - ((_tmp19) < 0)) + Scalar(0.5));
  const Scalar _tmp21 = std::atan2(_tmp16, _tmp20);
  const Scalar _tmp22 = _tmp21 * lambdas(1, 0);
  const Scalar _tmp23 = std::sin(_tmp22);
  const Scalar _tmp24 = _tmp13 * _tmp23;
  const Scalar _tmp25 = _tmp11 * _x0[0];
  const Scalar _tmp26 = _tmp9 * _x0[1];
  const Scalar _tmp27 = _tmp25 + _tmp26;
  const Scalar _tmp28 = std::cos(_tmp22);
  const Scalar _tmp29 = _tmp27 * _tmp28;
  const Scalar _tmp30 = _tmp24 + _tmp29;
  const Scalar _tmp31 = _x2[1] * _x3[0];
  const Scalar _tmp32 = _x2[0] * _x3[1];
  const Scalar _tmp33 = -_tmp31 + _tmp32;
  const Scalar _tmp34 = _x2[0] * _x3[0];
  const Scalar _tmp35 = _x2[1] * _x3[1];
  const Scalar _tmp36 = _tmp34 + _tmp35;
  const Scalar _tmp37 = _tmp36 + epsilon * ((((_tmp36) > 0) - ((_tmp36) < 0)) + Scalar(0.5));
  const Scalar _tmp38 = std::atan2(_tmp33, _tmp37);
  const Scalar _tmp39 = _tmp38 * lambdas(2, 0);
  const Scalar _tmp40 = std::cos(_tmp39);
  const Scalar _tmp41 = _tmp30 * _tmp40;
  const Scalar _tmp42 = _tmp13 * _tmp28;
  const Scalar _tmp43 = _tmp23 * _tmp27;
  const Scalar _tmp44 = _tmp42 - _tmp43;
  const Scalar _tmp45 = std::sin(_tmp39);
  const Scalar _tmp46 = _tmp44 * _tmp45;
  const Scalar _tmp47 = _tmp41 + _tmp46;
  const Scalar _tmp48 = -_x2[2] + _x3[2];
  const Scalar _tmp49 = -_x1[2] + _x2[2];
  const Scalar _tmp50 = -_x0[2] + _x1[2];
  const Scalar _tmp51 = _tmp48 * lambdas(2, 2) + _tmp49 * lambdas(1, 2) + _tmp50 * lambdas(0, 2);
  const Scalar _tmp52 = _tmp30 * _tmp45;
  const Scalar _tmp53 = _tmp40 * _tmp44;
  const Scalar _tmp54 = -_tmp52 + _tmp53;
  const Scalar _tmp55 = -_x2[3] + _x3[3];
  const Scalar _tmp56 = -_x1[3] + _x2[3];
  const Scalar _tmp57 = -_x0[3] + _x1[3];
  const Scalar _tmp58 = _tmp55 * lambdas(2, 2) + _tmp56 * lambdas(1, 2) + _tmp57 * lambdas(0, 2);
  const Scalar _tmp59 = _tmp48 * lambdas(2, 1) + _tmp49 * lambdas(1, 1) + _tmp50 * lambdas(0, 1);
  const Scalar _tmp60 = _tmp55 * lambdas(2, 1) + _tmp56 * lambdas(1, 1) + _tmp57 * lambdas(0, 1);
  const Scalar _tmp61 = _tmp47 * _tmp60 + _tmp54 * _tmp59;
  const Scalar _tmp62 = _tmp21 * lambdas(1, 1) + _tmp38 * lambdas(2, 1) + _tmp7 * lambdas(0, 1);
  const Scalar _tmp63 = -_tmp47 * _tmp51 + _tmp54 * _tmp58 - _tmp61 * _tmp62;
  const Scalar _tmp64 = std::pow(dt, Scalar(-2));
  const Scalar _tmp65 = _tmp64 * _x_T_s[1];
  const Scalar _tmp66 = _tmp63 * _tmp65;
  const Scalar _tmp67 = _x_T_s[0] * _x_T_s[3] - _x_T_s[1] * _x_T_s[2];
  const Scalar _tmp68 =
      _tmp64 * (_tmp21 * lambdas(1, 2) + _tmp38 * lambdas(2, 2) + _tmp7 * lambdas(0, 2));
  const Scalar _tmp69 = _tmp67 * _tmp68;
  const Scalar _tmp70 = -_tmp47 * _tmp59 + _tmp54 * _tmp60;
  const Scalar _tmp71 = _tmp47 * _tmp58 + _tmp51 * _tmp54 + _tmp62 * _tmp70;
  const Scalar _tmp72 = _tmp64 * _x_T_s[0];
  const Scalar _tmp73 = _tmp71 * _tmp72;
  const Scalar _tmp74 = _tmp66 - _tmp69 + _tmp73 - acceleration(1, 0);
  const Scalar _tmp75 = _x_T_s[1] * _x_T_s[3];
  const Scalar _tmp76 = _x_T_s[0] * _x_T_s[2];
  const Scalar _tmp77 = _tmp75 + _tmp76;
  const Scalar _tmp78 = _tmp63 * _tmp72 - _tmp65 * _tmp71;
  const Scalar _tmp79 = _tmp68 * _tmp77 + _tmp78 - acceleration(2, 0);
  const Scalar _tmp80 = _tmp68 - acceleration(0, 0);
  const Scalar _tmp81 = std::pow(_tmp2, Scalar(2));
  const Scalar _tmp82 = std::pow(_tmp6, Scalar(2));
  const Scalar _tmp83 = Scalar(1.0) / (_tmp82);
  const Scalar _tmp84 = Scalar(1.0) / (_tmp6);
  const Scalar _tmp85 = _tmp82 / (_tmp81 + _tmp82);
  const Scalar _tmp86 = _tmp85 * (-_tmp81 * _tmp83 + _tmp84 * (-_tmp3 - _tmp4));
  const Scalar _tmp87 = _tmp86 * lambdas(0, 1);
  const Scalar _tmp88 = _tmp86 * lambdas(0, 0);
  const Scalar _tmp89 = -_tmp25 * _tmp88 - _tmp25 - _tmp26 * _tmp88 - _tmp26;
  const Scalar _tmp90 = _tmp10 * _tmp88 - _tmp12 * _tmp88 + _tmp13;
  const Scalar _tmp91 = -_tmp23 * _tmp90 + _tmp28 * _tmp89;
  const Scalar _tmp92 = _tmp23 * _tmp89 + _tmp28 * _tmp90;
  const Scalar _tmp93 = _tmp40 * _tmp92 + _tmp45 * _tmp91;
  const Scalar _tmp94 = _tmp40 * _tmp91 - _tmp45 * _tmp92;
  const Scalar _tmp95 = _tmp51 * _tmp94 + _tmp58 * _tmp93 +
                        _tmp62 * (-_tmp59 * _tmp93 + _tmp60 * _tmp94) + _tmp70 * _tmp87;
  const Scalar _tmp96 = -_tmp51 * _tmp93 + _tmp58 * _tmp94 - _tmp61 * _tmp87 -
                        _tmp62 * (_tmp59 * _tmp94 + _tmp60 * _tmp93);
  const Scalar _tmp97 = _tmp86 * lambdas(0, 2);
  const Scalar _tmp98 = _tmp64 * _tmp97;
  const Scalar _tmp99 = -_tmp65 * _tmp95 + _tmp72 * _tmp96 + _tmp77 * _tmp98;
  const Scalar _tmp100 = _tmp65 * _tmp96 - _tmp67 * _tmp98 + _tmp72 * _tmp95;
  const Scalar _tmp101 = _tmp64 * sqrt_info(1, 0);
  const Scalar _tmp102 = _tmp47 * _tmp62;
  const Scalar _tmp103 = _tmp102 * lambdas(0, 1) - _tmp54 * lambdas(0, 2);
  const Scalar _tmp104 = _tmp103 * _tmp65;
  const Scalar _tmp105 = _tmp54 * _tmp62;
  const Scalar _tmp106 = _tmp105 * lambdas(0, 1);
  const Scalar _tmp107 = _tmp47 * lambdas(0, 2);
  const Scalar _tmp108 = _tmp106 + _tmp107;
  const Scalar _tmp109 = -_tmp104 + _tmp108 * _tmp72;
  const Scalar _tmp110 = _tmp103 * _tmp72;
  const Scalar _tmp111 = _tmp108 * _tmp65 + _tmp110;
  const Scalar _tmp112 = -_tmp106 - _tmp107;
  const Scalar _tmp113 = _tmp104 + _tmp112 * _tmp72;
  const Scalar _tmp114 = _tmp110 - _tmp112 * _tmp65;
  const Scalar _tmp115 = _tmp85 * (-_tmp2 * _tmp83 * (_tmp0 - _tmp1) + _tmp5 * _tmp84);
  const Scalar _tmp116 = std::pow(_tmp16, Scalar(2));
  const Scalar _tmp117 = std::pow(_tmp20, Scalar(2));
  const Scalar _tmp118 = Scalar(1.0) / (_tmp117);
  const Scalar _tmp119 = Scalar(1.0) / (_tmp20);
  const Scalar _tmp120 = _tmp117 / (_tmp116 + _tmp117);
  const Scalar _tmp121 = _tmp120 * (-_tmp116 * _tmp118 + _tmp119 * (-_tmp17 - _tmp18));
  const Scalar _tmp122 = _tmp64 * (_tmp115 * lambdas(0, 2) + _tmp121 * lambdas(1, 2));
  const Scalar _tmp123 = _tmp115 * lambdas(0, 1) + _tmp121 * lambdas(1, 1);
  const Scalar _tmp124 = _tmp121 * lambdas(1, 0);
  const Scalar _tmp125 = _tmp115 * lambdas(0, 0);
  const Scalar _tmp126 = _tmp10 * _tmp125 - _tmp12 * _tmp125;
  const Scalar _tmp127 = -_tmp125 * _tmp25 - _tmp125 * _tmp26;
  const Scalar _tmp128 = _tmp124 * _tmp42 - _tmp124 * _tmp43 + _tmp126 * _tmp28 + _tmp127 * _tmp23;
  const Scalar _tmp129 = -_tmp124 * _tmp24 - _tmp124 * _tmp29 - _tmp126 * _tmp23 + _tmp127 * _tmp28;
  const Scalar _tmp130 = _tmp128 * _tmp40 + _tmp129 * _tmp45;
  const Scalar _tmp131 = -_tmp128 * _tmp45 + _tmp129 * _tmp40;
  const Scalar _tmp132 = -_tmp123 * _tmp61 - _tmp130 * _tmp51 + _tmp131 * _tmp58 -
                         _tmp62 * (_tmp130 * _tmp60 + _tmp131 * _tmp59);
  const Scalar _tmp133 = _tmp123 * _tmp70 + _tmp130 * _tmp58 + _tmp131 * _tmp51 +
                         _tmp62 * (-_tmp130 * _tmp59 + _tmp131 * _tmp60);
  const Scalar _tmp134 = _tmp122 * _tmp77 + _tmp132 * _tmp72 - _tmp133 * _tmp65;
  const Scalar _tmp135 = -_tmp122 * _tmp67 + _tmp132 * _tmp65 + _tmp133 * _tmp72;
  const Scalar _tmp136 = lambdas(0, 2) - lambdas(1, 2);
  const Scalar _tmp137 = lambdas(0, 1) - lambdas(1, 1);
  const Scalar _tmp138 = -_tmp102 * _tmp137 + _tmp136 * _tmp54;
  const Scalar _tmp139 = _tmp138 * _tmp65;
  const Scalar _tmp140 = _tmp136 * _tmp47;
  const Scalar _tmp141 = _tmp105 * _tmp137;
  const Scalar _tmp142 = -_tmp140 - _tmp141;
  const Scalar _tmp143 = -_tmp139 + _tmp142 * _tmp72;
  const Scalar _tmp144 = _tmp138 * _tmp72;
  const Scalar _tmp145 = _tmp142 * _tmp65 + _tmp144;
  const Scalar _tmp146 = _tmp140 + _tmp141;
  const Scalar _tmp147 = _tmp139 + _tmp146 * _tmp72;
  const Scalar _tmp148 = _tmp144 - _tmp146 * _tmp65;
  const Scalar _tmp149 = std::pow(_tmp33, Scalar(2));
  const Scalar _tmp150 = std::pow(_tmp37, Scalar(2));
  const Scalar _tmp151 = Scalar(1.0) / (_tmp150);
  const Scalar _tmp152 = Scalar(1.0) / (_tmp37);
  const Scalar _tmp153 = _tmp150 / (_tmp149 + _tmp150);
  const Scalar _tmp154 = _tmp153 * (-_tmp149 * _tmp151 + _tmp152 * (-_tmp34 - _tmp35));
  const Scalar _tmp155 = _tmp120 * (-_tmp118 * _tmp16 * (-_tmp14 + _tmp15) + _tmp119 * _tmp19);
  const Scalar _tmp156 = _tmp64 * (_tmp154 * lambdas(2, 2) + _tmp155 * lambdas(1, 2));
  const Scalar _tmp157 = _tmp154 * lambdas(2, 1) + _tmp155 * lambdas(1, 1);
  const Scalar _tmp158 = _tmp155 * lambdas(1, 0);
  const Scalar _tmp159 = _tmp158 * _tmp42 - _tmp158 * _tmp43;
  const Scalar _tmp160 = _tmp41 * lambdas(2, 0);
  const Scalar _tmp161 = -_tmp158 * _tmp24 - _tmp158 * _tmp29;
  const Scalar _tmp162 = _tmp154 * lambdas(2, 0);
  const Scalar _tmp163 =
      -_tmp154 * _tmp160 - _tmp159 * _tmp45 + _tmp161 * _tmp40 - _tmp162 * _tmp46;
  const Scalar _tmp164 = _tmp159 * _tmp40 + _tmp161 * _tmp45 - _tmp162 * _tmp52 + _tmp162 * _tmp53;
  const Scalar _tmp165 = -_tmp157 * _tmp61 + _tmp163 * _tmp58 - _tmp164 * _tmp51 -
                         _tmp62 * (_tmp163 * _tmp59 + _tmp164 * _tmp60);
  const Scalar _tmp166 = _tmp157 * _tmp70 + _tmp163 * _tmp51 + _tmp164 * _tmp58 +
                         _tmp62 * (_tmp163 * _tmp60 - _tmp164 * _tmp59);
  const Scalar _tmp167 = _tmp156 * _tmp77 + _tmp165 * _tmp72 - _tmp166 * _tmp65;
  const Scalar _tmp168 = -_tmp156 * _tmp67 + _tmp165 * _tmp65 + _tmp166 * _tmp72;
  const Scalar _tmp169 = lambdas(1, 2) - lambdas(2, 2);
  const Scalar _tmp170 = lambdas(1, 1) - lambdas(2, 1);
  const Scalar _tmp171 = -_tmp102 * _tmp170 + _tmp169 * _tmp54;
  const Scalar _tmp172 = _tmp171 * _tmp65;
  const Scalar _tmp173 = _tmp169 * _tmp47;
  const Scalar _tmp174 = _tmp105 * _tmp170;
  const Scalar _tmp175 = -_tmp173 - _tmp174;
  const Scalar _tmp176 = -_tmp172 + _tmp175 * _tmp72;
  const Scalar _tmp177 = _tmp171 * _tmp72;
  const Scalar _tmp178 = _tmp175 * _tmp65 + _tmp177;
  const Scalar _tmp179 = _tmp173 + _tmp174;
  const Scalar _tmp180 = _tmp172 + _tmp179 * _tmp72;
  const Scalar _tmp181 = _tmp177 - _tmp179 * _tmp65;
  const Scalar _tmp182 = _tmp153 * (-_tmp151 * _tmp33 * (_tmp31 - _tmp32) + _tmp152 * _tmp36);
  const Scalar _tmp183 = _tmp182 * lambdas(2, 2);
  const Scalar _tmp184 = _tmp183 * _tmp64;
  const Scalar _tmp185 = _tmp182 * lambdas(2, 0);
  const Scalar _tmp186 = -_tmp185 * _tmp52 + _tmp185 * _tmp53;
  const Scalar _tmp187 = -_tmp160 * _tmp182 - _tmp185 * _tmp46;
  const Scalar _tmp188 = _tmp182 * lambdas(2, 1);
  const Scalar _tmp189 = -_tmp186 * _tmp51 + _tmp187 * _tmp58 - _tmp188 * _tmp61 -
                         _tmp62 * (_tmp186 * _tmp60 + _tmp187 * _tmp59);
  const Scalar _tmp190 = _tmp186 * _tmp58 + _tmp187 * _tmp51 + _tmp188 * _tmp70 +
                         _tmp62 * (-_tmp186 * _tmp59 + _tmp187 * _tmp60);
  const Scalar _tmp191 = -_tmp184 * _tmp67 + _tmp189 * _tmp65 + _tmp190 * _tmp72;
  const Scalar _tmp192 = _tmp184 * _tmp77 + _tmp189 * _tmp72 - _tmp190 * _tmp65;
  const Scalar _tmp193 = -_tmp102 * lambdas(2, 1) + _tmp54 * lambdas(2, 2);
  const Scalar _tmp194 = _tmp193 * _tmp72;
  const Scalar _tmp195 = _tmp105 * lambdas(2, 1);
  const Scalar _tmp196 = _tmp47 * lambdas(2, 2);
  const Scalar _tmp197 = -_tmp195 - _tmp196;
  const Scalar _tmp198 = _tmp194 + _tmp197 * _tmp65;
  const Scalar _tmp199 = _tmp193 * _tmp65;
  const Scalar _tmp200 = _tmp197 * _tmp72 - _tmp199;
  const Scalar _tmp201 = _tmp195 + _tmp196;
  const Scalar _tmp202 = _tmp199 + _tmp201 * _tmp72;
  const Scalar _tmp203 = _tmp194 - _tmp201 * _tmp65;
  const Scalar _tmp204 = -_tmp66 + _tmp69 - _tmp73;
  const Scalar _tmp205 = -_tmp68 * (-_tmp75 - _tmp76) + _tmp78;
  const Scalar _tmp206 = _tmp68 * _x_T_s[0];
  const Scalar _tmp207 = _tmp68 * _x_T_s[1];

  // Output terms (6)
  Eigen::Matrix<Scalar, 3, 1> _res;

  _res(0, 0) = _tmp74 * sqrt_info(0, 1) + _tmp79 * sqrt_info(0, 2) + _tmp80 * sqrt_info(0, 0);
  _res(1, 0) = _tmp74 * sqrt_info(1, 1) + _tmp79 * sqrt_info(1, 2) + _tmp80 * sqrt_info(1, 0);
  _res(2, 0) = _tmp74 * sqrt_info(2, 1) + _tmp79 * sqrt_info(2, 2) + _tmp80 * sqrt_info(2, 0);

  if (res_D_x0 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 3>> _res_D_x0{res_D_x0};

    _res_D_x0(0, 0) =
        _tmp100 * sqrt_info(0, 1) + _tmp98 * sqrt_info(0, 0) + _tmp99 * sqrt_info(0, 2);
    _res_D_x0(1, 0) = _tmp100 * sqrt_info(1, 1) + _tmp101 * _tmp97 + _tmp99 * sqrt_info(1, 2);
    _res_D_x0(2, 0) =
        _tmp100 * sqrt_info(2, 1) + _tmp98 * sqrt_info(2, 0) + _tmp99 * sqrt_info(2, 2);
    _res_D_x0(0, 1) = _tmp109 * sqrt_info(0, 2) + _tmp111 * sqrt_info(0, 1);
    _res_D_x0(1, 1) = _tmp109 * sqrt_info(1, 2) + _tmp111 * sqrt_info(1, 1);
    _res_D_x0(2, 1) = _tmp109 * sqrt_info(2, 2) + _tmp111 * sqrt_info(2, 1);
    _res_D_x0(0, 2) = _tmp113 * sqrt_info(0, 1) + _tmp114 * sqrt_info(0, 2);
    _res_D_x0(1, 2) = _tmp113 * sqrt_info(1, 1) + _tmp114 * sqrt_info(1, 2);
    _res_D_x0(2, 2) = _tmp113 * sqrt_info(2, 1) + _tmp114 * sqrt_info(2, 2);
  }

  if (res_D_x1 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 3>> _res_D_x1{res_D_x1};

    _res_D_x1(0, 0) =
        _tmp122 * sqrt_info(0, 0) + _tmp134 * sqrt_info(0, 2) + _tmp135 * sqrt_info(0, 1);
    _res_D_x1(1, 0) =
        _tmp122 * sqrt_info(1, 0) + _tmp134 * sqrt_info(1, 2) + _tmp135 * sqrt_info(1, 1);
    _res_D_x1(2, 0) =
        _tmp122 * sqrt_info(2, 0) + _tmp134 * sqrt_info(2, 2) + _tmp135 * sqrt_info(2, 1);
    _res_D_x1(0, 1) = _tmp143 * sqrt_info(0, 2) + _tmp145 * sqrt_info(0, 1);
    _res_D_x1(1, 1) = _tmp143 * sqrt_info(1, 2) + _tmp145 * sqrt_info(1, 1);
    _res_D_x1(2, 1) = _tmp143 * sqrt_info(2, 2) + _tmp145 * sqrt_info(2, 1);
    _res_D_x1(0, 2) = _tmp147 * sqrt_info(0, 1) + _tmp148 * sqrt_info(0, 2);
    _res_D_x1(1, 2) = _tmp147 * sqrt_info(1, 1) + _tmp148 * sqrt_info(1, 2);
    _res_D_x1(2, 2) = _tmp147 * sqrt_info(2, 1) + _tmp148 * sqrt_info(2, 2);
  }

  if (res_D_x2 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 3>> _res_D_x2{res_D_x2};

    _res_D_x2(0, 0) =
        _tmp156 * sqrt_info(0, 0) + _tmp167 * sqrt_info(0, 2) + _tmp168 * sqrt_info(0, 1);
    _res_D_x2(1, 0) =
        _tmp156 * sqrt_info(1, 0) + _tmp167 * sqrt_info(1, 2) + _tmp168 * sqrt_info(1, 1);
    _res_D_x2(2, 0) =
        _tmp156 * sqrt_info(2, 0) + _tmp167 * sqrt_info(2, 2) + _tmp168 * sqrt_info(2, 1);
    _res_D_x2(0, 1) = _tmp176 * sqrt_info(0, 2) + _tmp178 * sqrt_info(0, 1);
    _res_D_x2(1, 1) = _tmp176 * sqrt_info(1, 2) + _tmp178 * sqrt_info(1, 1);
    _res_D_x2(2, 1) = _tmp176 * sqrt_info(2, 2) + _tmp178 * sqrt_info(2, 1);
    _res_D_x2(0, 2) = _tmp180 * sqrt_info(0, 1) + _tmp181 * sqrt_info(0, 2);
    _res_D_x2(1, 2) = _tmp180 * sqrt_info(1, 1) + _tmp181 * sqrt_info(1, 2);
    _res_D_x2(2, 2) = _tmp180 * sqrt_info(2, 1) + _tmp181 * sqrt_info(2, 2);
  }

  if (res_D_x3 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 3>> _res_D_x3{res_D_x3};

    _res_D_x3(0, 0) =
        _tmp184 * sqrt_info(0, 0) + _tmp191 * sqrt_info(0, 1) + _tmp192 * sqrt_info(0, 2);
    _res_D_x3(1, 0) = _tmp101 * _tmp183 + _tmp191 * sqrt_info(1, 1) + _tmp192 * sqrt_info(1, 2);
    _res_D_x3(2, 0) =
        _tmp184 * sqrt_info(2, 0) + _tmp191 * sqrt_info(2, 1) + _tmp192 * sqrt_info(2, 2);
    _res_D_x3(0, 1) = _tmp198 * sqrt_info(0, 1) + _tmp200 * sqrt_info(0, 2);
    _res_D_x3(1, 1) = _tmp198 * sqrt_info(1, 1) + _tmp200 * sqrt_info(1, 2);
    _res_D_x3(2, 1) = _tmp198 * sqrt_info(2, 1) + _tmp200 * sqrt_info(2, 2);
    _res_D_x3(0, 2) = _tmp202 * sqrt_info(0, 1) + _tmp203 * sqrt_info(0, 2);
    _res_D_x3(1, 2) = _tmp202 * sqrt_info(1, 1) + _tmp203 * sqrt_info(1, 2);
    _res_D_x3(2, 2) = _tmp202 * sqrt_info(2, 1) + _tmp203 * sqrt_info(2, 2);
  }

  if (res_D_x_T_s != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 3>> _res_D_x_T_s{res_D_x_T_s};

    _res_D_x_T_s(0, 0) = _tmp204 * sqrt_info(0, 2) + _tmp205 * sqrt_info(0, 1);
    _res_D_x_T_s(1, 0) = _tmp204 * sqrt_info(1, 2) + _tmp205 * sqrt_info(1, 1);
    _res_D_x_T_s(2, 0) = _tmp204 * sqrt_info(2, 2) + _tmp205 * sqrt_info(2, 1);
    _res_D_x_T_s(0, 1) = _tmp206 * sqrt_info(0, 2) + _tmp207 * sqrt_info(0, 1);
    _res_D_x_T_s(1, 1) = _tmp206 * sqrt_info(1, 2) + _tmp207 * sqrt_info(1, 1);
    _res_D_x_T_s(2, 1) = _tmp206 * sqrt_info(2, 2) + _tmp207 * sqrt_info(2, 1);
    _res_D_x_T_s(0, 2) = -_tmp206 * sqrt_info(0, 1) + _tmp207 * sqrt_info(0, 2);
    _res_D_x_T_s(1, 2) = -_tmp206 * sqrt_info(1, 1) + _tmp207 * sqrt_info(1, 2);
    _res_D_x_T_s(2, 2) = -_tmp206 * sqrt_info(2, 1) + _tmp207 * sqrt_info(2, 2);
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_hyperion
