// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>

namespace sym_hyperion {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: pose3_r3_sensor_between_factor
 *
 * Args:
 *     x: Pose3
 *     x_T_s: Pose3
 *     s_T_y: Matrix31
 *     y: Pose3
 *     sqrt_info: Matrix33
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix31
 *     res_D_x: (3x6) jacobian of res (3) wrt arg x (6)
 *     res_D_x_T_s: (3x6) jacobian of res (3) wrt arg x_T_s (6)
 *     res_D_y: (3x6) jacobian of res (3) wrt arg y (6)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 3, 1> Pose3R3SensorBetweenFactorWithJacobians013(
    const sym::Pose3<Scalar>& x, const sym::Pose3<Scalar>& x_T_s,
    const Eigen::Matrix<Scalar, 3, 1>& s_T_y, const sym::Pose3<Scalar>& y,
    const Eigen::Matrix<Scalar, 3, 3>& sqrt_info, const Scalar epsilon,
    Scalar* const res_D_x = nullptr, Scalar* const res_D_x_T_s = nullptr,
    Scalar* const res_D_y = nullptr) {
  // Total ops: 1047

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x = x.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x_T_s = x_T_s.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y = y.Data();

  // Intermediate terms (335)
  const Scalar _tmp0 = _x[3] * _x_T_s[2];
  const Scalar _tmp1 = _x[2] * _x_T_s[3];
  const Scalar _tmp2 = _x[1] * _x_T_s[0];
  const Scalar _tmp3 = _x[0] * _x_T_s[1];
  const Scalar _tmp4 = _tmp0 + _tmp1 - _tmp2 + _tmp3;
  const Scalar _tmp5 = 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _x[3] * _x_T_s[0];
  const Scalar _tmp8 = _x[2] * _x_T_s[1];
  const Scalar _tmp9 = _x[1] * _x_T_s[2];
  const Scalar _tmp10 = _x[0] * _x_T_s[3];
  const Scalar _tmp11 = _tmp10 + _tmp7 - _tmp8 + _tmp9;
  const Scalar _tmp12 = 2 * std::pow(_tmp11, Scalar(2));
  const Scalar _tmp13 = 1 - _tmp12;
  const Scalar _tmp14 = _tmp13 + _tmp6;
  const Scalar _tmp15 = _x[3] * _x_T_s[1];
  const Scalar _tmp16 = _x[2] * _x_T_s[0];
  const Scalar _tmp17 = _x[1] * _x_T_s[3];
  const Scalar _tmp18 = _x[0] * _x_T_s[2];
  const Scalar _tmp19 = _tmp15 + _tmp16 + _tmp17 - _tmp18;
  const Scalar _tmp20 = 2 * _tmp19;
  const Scalar _tmp21 = _tmp20 * _tmp4;
  const Scalar _tmp22 = _x[3] * _x_T_s[3];
  const Scalar _tmp23 = _x[2] * _x_T_s[2];
  const Scalar _tmp24 = _x[1] * _x_T_s[1];
  const Scalar _tmp25 = _x[0] * _x_T_s[0];
  const Scalar _tmp26 = _tmp22 - _tmp23 - _tmp24 - _tmp25;
  const Scalar _tmp27 = 2 * _tmp26;
  const Scalar _tmp28 = _tmp11 * _tmp27;
  const Scalar _tmp29 = _tmp21 + _tmp28;
  const Scalar _tmp30 = 2 * _x[2];
  const Scalar _tmp31 = _tmp30 * _x[0];
  const Scalar _tmp32 = 2 * _x[1] * _x[3];
  const Scalar _tmp33 = -_tmp32;
  const Scalar _tmp34 = _tmp31 + _tmp33;
  const Scalar _tmp35 = 2 * _x[0];
  const Scalar _tmp36 = _tmp35 * _x[3];
  const Scalar _tmp37 = _tmp30 * _x[1];
  const Scalar _tmp38 = _tmp36 + _tmp37;
  const Scalar _tmp39 = std::pow(_x[0], Scalar(2));
  const Scalar _tmp40 = -2 * _tmp39;
  const Scalar _tmp41 = std::pow(_x[1], Scalar(2));
  const Scalar _tmp42 = 1 - 2 * _tmp41;
  const Scalar _tmp43 = _tmp40 + _tmp42;
  const Scalar _tmp44 = _tmp34 * _x_T_s[4] + _tmp38 * _x_T_s[5] + _tmp43 * _x_T_s[6] + _x[6];
  const Scalar _tmp45 = _tmp35 * _x[1];
  const Scalar _tmp46 = _tmp30 * _x[3];
  const Scalar _tmp47 = _tmp45 + _tmp46;
  const Scalar _tmp48 = -_tmp36;
  const Scalar _tmp49 = _tmp37 + _tmp48;
  const Scalar _tmp50 = std::pow(_x[2], Scalar(2));
  const Scalar _tmp51 = -2 * _tmp50;
  const Scalar _tmp52 = _tmp40 + _tmp51 + 1;
  const Scalar _tmp53 = _tmp47 * _x_T_s[4] + _tmp49 * _x_T_s[6] + _tmp52 * _x_T_s[5] + _x[5];
  const Scalar _tmp54 = _tmp11 * _tmp20;
  const Scalar _tmp55 = 2 * _tmp4;
  const Scalar _tmp56 = _tmp26 * _tmp55;
  const Scalar _tmp57 = -_tmp56;
  const Scalar _tmp58 = _tmp54 + _tmp57;
  const Scalar _tmp59 = -_tmp46;
  const Scalar _tmp60 = _tmp45 + _tmp59;
  const Scalar _tmp61 = _tmp31 + _tmp32;
  const Scalar _tmp62 = _tmp42 + _tmp51;
  const Scalar _tmp63 = _tmp60 * _x_T_s[5] + _tmp61 * _x_T_s[6] + _tmp62 * _x_T_s[4] + _x[4];
  const Scalar _tmp64 = -_tmp14 * _tmp53 + _tmp14 * _y[5] - _tmp29 * _tmp44 + _tmp29 * _y[6] -
                        _tmp58 * _tmp63 + _tmp58 * _y[4] - s_T_y(1, 0);
  const Scalar _tmp65 = 2 * std::pow(_tmp19, Scalar(2));
  const Scalar _tmp66 = -_tmp65;
  const Scalar _tmp67 = _tmp6 + _tmp66 + 1;
  const Scalar _tmp68 = _tmp11 * _tmp55;
  const Scalar _tmp69 = _tmp20 * _tmp26;
  const Scalar _tmp70 = -_tmp69;
  const Scalar _tmp71 = _tmp68 + _tmp70;
  const Scalar _tmp72 = _tmp54 + _tmp56;
  const Scalar _tmp73 = -_tmp44 * _tmp71 - _tmp53 * _tmp72 - _tmp63 * _tmp67 + _tmp67 * _y[4] +
                        _tmp71 * _y[6] + _tmp72 * _y[5] - s_T_y(0, 0);
  const Scalar _tmp74 = _tmp13 + _tmp66;
  const Scalar _tmp75 = _tmp68 + _tmp69;
  const Scalar _tmp76 = -_tmp28;
  const Scalar _tmp77 = _tmp21 + _tmp76;
  const Scalar _tmp78 = -_tmp44 * _tmp74 - _tmp53 * _tmp77 - _tmp63 * _tmp75 + _tmp74 * _y[6] +
                        _tmp75 * _y[4] + _tmp77 * _y[5] - s_T_y(2, 0);
  const Scalar _tmp79 = -_tmp45;
  const Scalar _tmp80 = _tmp61 * _x_T_s[5] + _x_T_s[6] * (_tmp46 + _tmp79);
  const Scalar _tmp81 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp82 = -_tmp81;
  const Scalar _tmp83 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp84 = (Scalar(1) / Scalar(2)) * _tmp8;
  const Scalar _tmp85 = -_tmp84;
  const Scalar _tmp86 = (Scalar(1) / Scalar(2)) * _tmp10;
  const Scalar _tmp87 = -_tmp86;
  const Scalar _tmp88 = _tmp85 + _tmp87;
  const Scalar _tmp89 = _tmp82 + _tmp83 + _tmp88;
  const Scalar _tmp90 = _tmp55 * _tmp89;
  const Scalar _tmp91 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp92 = -_tmp91;
  const Scalar _tmp93 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp94 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp95 = -_tmp94;
  const Scalar _tmp96 = (Scalar(1) / Scalar(2)) * _tmp16;
  const Scalar _tmp97 = -_tmp96;
  const Scalar _tmp98 = _tmp95 + _tmp97;
  const Scalar _tmp99 = _tmp92 + _tmp93 + _tmp98;
  const Scalar _tmp100 = _tmp27 * _tmp99;
  const Scalar _tmp101 = (Scalar(1) / Scalar(2)) * _tmp23;
  const Scalar _tmp102 = (Scalar(1) / Scalar(2)) * _tmp24;
  const Scalar _tmp103 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp104 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp105 = _tmp103 - _tmp104;
  const Scalar _tmp106 = _tmp101 + _tmp102 + _tmp105;
  const Scalar _tmp107 = 2 * _tmp106;
  const Scalar _tmp108 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp109 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp110 = -_tmp109;
  const Scalar _tmp111 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp112 = -_tmp111;
  const Scalar _tmp113 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp114 = -_tmp113;
  const Scalar _tmp115 = _tmp112 + _tmp114;
  const Scalar _tmp116 = _tmp108 + _tmp110 + _tmp115;
  const Scalar _tmp117 = 2 * _tmp11;
  const Scalar _tmp118 = _tmp107 * _tmp19 + _tmp116 * _tmp117;
  const Scalar _tmp119 = _tmp100 + _tmp118 + _tmp90;
  const Scalar _tmp120 = 4 * _tmp19;
  const Scalar _tmp121 = -_tmp116 * _tmp120;
  const Scalar _tmp122 = 4 * _tmp4;
  const Scalar _tmp123 = -_tmp122 * _tmp99;
  const Scalar _tmp124 = _tmp121 + _tmp123;
  const Scalar _tmp125 = std::pow(_x[3], Scalar(2));
  const Scalar _tmp126 = -_tmp125;
  const Scalar _tmp127 = -_tmp41;
  const Scalar _tmp128 = _tmp49 * _x_T_s[5] + _x_T_s[6] * (_tmp126 + _tmp127 + _tmp39 + _tmp50);
  const Scalar _tmp129 = _tmp125 + _tmp127;
  const Scalar _tmp130 = -_tmp39;
  const Scalar _tmp131 = _tmp130 + _tmp50;
  const Scalar _tmp132 = -_tmp37;
  const Scalar _tmp133 = _x_T_s[5] * (_tmp129 + _tmp131) + _x_T_s[6] * (_tmp132 + _tmp48);
  const Scalar _tmp134 = _tmp20 * _tmp89;
  const Scalar _tmp135 = _tmp116 * _tmp27;
  const Scalar _tmp136 = _tmp107 * _tmp4 + _tmp117 * _tmp99;
  const Scalar _tmp137 = -_tmp134 - _tmp135 + _tmp136;
  const Scalar _tmp138 = -_tmp119 * _tmp53 + _tmp119 * _y[5] - _tmp124 * _tmp63 + _tmp124 * _y[4] -
                         _tmp128 * _tmp72 - _tmp133 * _tmp71 - _tmp137 * _tmp44 + _tmp137 * _y[6] -
                         _tmp67 * _tmp80;
  const Scalar _tmp139 = -_tmp100 + _tmp118 - _tmp90;
  const Scalar _tmp140 = _tmp117 * _tmp89;
  const Scalar _tmp141 = _tmp107 * _tmp26;
  const Scalar _tmp142 = _tmp116 * _tmp55 + _tmp20 * _tmp99;
  const Scalar _tmp143 = _tmp140 + _tmp141 + _tmp142;
  const Scalar _tmp144 = 4 * _tmp11;
  const Scalar _tmp145 = -_tmp106 * _tmp144;
  const Scalar _tmp146 = _tmp123 + _tmp145;
  const Scalar _tmp147 = -_tmp128 * _tmp14 - _tmp133 * _tmp29 - _tmp139 * _tmp63 + _tmp139 * _y[4] -
                         _tmp143 * _tmp44 + _tmp143 * _y[6] - _tmp146 * _tmp53 + _tmp146 * _y[5] -
                         _tmp58 * _tmp80;
  const Scalar _tmp148 = _tmp121 + _tmp145;
  const Scalar _tmp149 = -_tmp140 - _tmp141 + _tmp142;
  const Scalar _tmp150 = _tmp134 + _tmp135 + _tmp136;
  const Scalar _tmp151 = -_tmp128 * _tmp77 - _tmp133 * _tmp74 - _tmp148 * _tmp44 + _tmp148 * _y[6] -
                         _tmp149 * _tmp53 + _tmp149 * _y[5] - _tmp150 * _tmp63 + _tmp150 * _y[4] -
                         _tmp75 * _tmp80;
  const Scalar _tmp152 = _tmp47 * _x_T_s[6] + _x_T_s[4] * (_tmp132 + _tmp36);
  const Scalar _tmp153 = _tmp95 + _tmp96;
  const Scalar _tmp154 = -_tmp93;
  const Scalar _tmp155 = _tmp154 + _tmp92;
  const Scalar _tmp156 = _tmp153 + _tmp155;
  const Scalar _tmp157 = _tmp117 * _tmp156;
  const Scalar _tmp158 = _tmp112 + _tmp113;
  const Scalar _tmp159 = -_tmp108;
  const Scalar _tmp160 = _tmp110 + _tmp159;
  const Scalar _tmp161 = _tmp158 + _tmp160;
  const Scalar _tmp162 = _tmp161 * _tmp27;
  const Scalar _tmp163 = _tmp85 + _tmp86;
  const Scalar _tmp164 = -_tmp83;
  const Scalar _tmp165 = _tmp164 + _tmp82;
  const Scalar _tmp166 = _tmp163 + _tmp165;
  const Scalar _tmp167 = -_tmp102;
  const Scalar _tmp168 = _tmp103 + _tmp104;
  const Scalar _tmp169 = _tmp101 + _tmp167 + _tmp168;
  const Scalar _tmp170 = _tmp166 * _tmp20 + _tmp169 * _tmp55;
  const Scalar _tmp171 = _tmp157 + _tmp162 + _tmp170;
  const Scalar _tmp172 = _tmp156 * _tmp55;
  const Scalar _tmp173 = _tmp166 * _tmp27;
  const Scalar _tmp174 = _tmp117 * _tmp169 + _tmp161 * _tmp20;
  const Scalar _tmp175 = -_tmp172 - _tmp173 + _tmp174;
  const Scalar _tmp176 = -_tmp31;
  const Scalar _tmp177 = -_tmp50;
  const Scalar _tmp178 = _tmp177 + _tmp39;
  const Scalar _tmp179 = _x_T_s[4] * (_tmp176 + _tmp33) + _x_T_s[6] * (_tmp129 + _tmp178);
  const Scalar _tmp180 = _tmp126 + _tmp41;
  const Scalar _tmp181 = _tmp34 * _x_T_s[6] + _x_T_s[4] * (_tmp178 + _tmp180);
  const Scalar _tmp182 = -_tmp122 * _tmp166;
  const Scalar _tmp183 = -_tmp144 * _tmp161;
  const Scalar _tmp184 = _tmp182 + _tmp183;
  const Scalar _tmp185 = -_tmp14 * _tmp152 - _tmp171 * _tmp44 + _tmp171 * _y[6] - _tmp175 * _tmp63 +
                         _tmp175 * _y[4] - _tmp179 * _tmp58 - _tmp181 * _tmp29 - _tmp184 * _tmp53 +
                         _tmp184 * _y[5];
  const Scalar _tmp186 = -_tmp120 * _tmp169;
  const Scalar _tmp187 = _tmp182 + _tmp186;
  const Scalar _tmp188 = _tmp156 * _tmp20;
  const Scalar _tmp189 = _tmp169 * _tmp27;
  const Scalar _tmp190 = _tmp117 * _tmp166 + _tmp161 * _tmp55;
  const Scalar _tmp191 = -_tmp188 - _tmp189 + _tmp190;
  const Scalar _tmp192 = _tmp172 + _tmp173 + _tmp174;
  const Scalar _tmp193 = -_tmp152 * _tmp72 - _tmp179 * _tmp67 - _tmp181 * _tmp71 -
                         _tmp187 * _tmp63 + _tmp187 * _y[4] - _tmp191 * _tmp44 + _tmp191 * _y[6] -
                         _tmp192 * _tmp53 + _tmp192 * _y[5];
  const Scalar _tmp194 = _tmp183 + _tmp186;
  const Scalar _tmp195 = -_tmp157 - _tmp162 + _tmp170;
  const Scalar _tmp196 = _tmp188 + _tmp189 + _tmp190;
  const Scalar _tmp197 = -_tmp152 * _tmp77 - _tmp179 * _tmp75 - _tmp181 * _tmp74 -
                         _tmp194 * _tmp44 + _tmp194 * _y[6] - _tmp195 * _tmp53 + _tmp195 * _y[5] -
                         _tmp196 * _tmp63 + _tmp196 * _y[4];
  const Scalar _tmp198 = _tmp109 + _tmp115 + _tmp159;
  const Scalar _tmp199 = _tmp117 * _tmp198;
  const Scalar _tmp200 = _tmp154 + _tmp91 + _tmp98;
  const Scalar _tmp201 = _tmp200 * _tmp27;
  const Scalar _tmp202 = -_tmp101;
  const Scalar _tmp203 = _tmp102 + _tmp168 + _tmp202;
  const Scalar _tmp204 = _tmp164 + _tmp81 + _tmp88;
  const Scalar _tmp205 = _tmp20 * _tmp203 + _tmp204 * _tmp55;
  const Scalar _tmp206 = -_tmp199 - _tmp201 + _tmp205;
  const Scalar _tmp207 = -_tmp120 * _tmp204;
  const Scalar _tmp208 = -_tmp144 * _tmp200;
  const Scalar _tmp209 = _tmp207 + _tmp208;
  const Scalar _tmp210 = _tmp38 * _x_T_s[4] + _x_T_s[5] * (_tmp176 + _tmp32);
  const Scalar _tmp211 = _tmp198 * _tmp20;
  const Scalar _tmp212 = _tmp204 * _tmp27;
  const Scalar _tmp213 = _tmp117 * _tmp203 + _tmp200 * _tmp55;
  const Scalar _tmp214 = _tmp211 + _tmp212 + _tmp213;
  const Scalar _tmp215 =
      _x_T_s[4] * (_tmp125 + _tmp130 + _tmp177 + _tmp41) + _x_T_s[5] * (_tmp59 + _tmp79);
  const Scalar _tmp216 = _tmp60 * _x_T_s[4] + _x_T_s[5] * (_tmp131 + _tmp180);
  const Scalar _tmp217 = -_tmp206 * _tmp53 + _tmp206 * _y[5] - _tmp209 * _tmp44 + _tmp209 * _y[6] -
                         _tmp210 * _tmp74 - _tmp214 * _tmp63 + _tmp214 * _y[4] - _tmp215 * _tmp77 -
                         _tmp216 * _tmp75;
  const Scalar _tmp218 = _tmp199 + _tmp201 + _tmp205;
  const Scalar _tmp219 = _tmp198 * _tmp55;
  const Scalar _tmp220 = _tmp203 * _tmp27;
  const Scalar _tmp221 = _tmp117 * _tmp204 + _tmp20 * _tmp200;
  const Scalar _tmp222 = -_tmp219 - _tmp220 + _tmp221;
  const Scalar _tmp223 = -_tmp122 * _tmp203;
  const Scalar _tmp224 = _tmp208 + _tmp223;
  const Scalar _tmp225 = -_tmp14 * _tmp215 - _tmp210 * _tmp29 - _tmp216 * _tmp58 -
                         _tmp218 * _tmp44 + _tmp218 * _y[6] - _tmp222 * _tmp63 + _tmp222 * _y[4] -
                         _tmp224 * _tmp53 + _tmp224 * _y[5];
  const Scalar _tmp226 = _tmp207 + _tmp223;
  const Scalar _tmp227 = _tmp219 + _tmp220 + _tmp221;
  const Scalar _tmp228 = -_tmp211 - _tmp212 + _tmp213;
  const Scalar _tmp229 = -_tmp210 * _tmp71 - _tmp215 * _tmp72 - _tmp216 * _tmp67 -
                         _tmp226 * _tmp63 + _tmp226 * _y[4] - _tmp227 * _tmp53 + _tmp227 * _y[5] -
                         _tmp228 * _tmp44 + _tmp228 * _y[6];
  const Scalar _tmp230 = -_tmp54;
  const Scalar _tmp231 = _tmp230 + _tmp56;
  const Scalar _tmp232 = -_tmp68;
  const Scalar _tmp233 = _tmp232 + _tmp70;
  const Scalar _tmp234 = _tmp65 - 1;
  const Scalar _tmp235 = _tmp234 + _tmp5;
  const Scalar _tmp236 = _tmp230 + _tmp57;
  const Scalar _tmp237 = -_tmp21;
  const Scalar _tmp238 = _tmp237 + _tmp28;
  const Scalar _tmp239 = _tmp12 + _tmp5 - 1;
  const Scalar _tmp240 = _tmp237 + _tmp76;
  const Scalar _tmp241 = _tmp232 + _tmp69;
  const Scalar _tmp242 = _tmp12 + _tmp234;
  const Scalar _tmp243 = _tmp105 + _tmp167 + _tmp202;
  const Scalar _tmp244 = _tmp20 * _tmp243;
  const Scalar _tmp245 = _tmp165 + _tmp84 + _tmp87;
  const Scalar _tmp246 = 2 * _tmp245;
  const Scalar _tmp247 = _tmp246 * _tmp4;
  const Scalar _tmp248 = _tmp108 + _tmp109 + _tmp158;
  const Scalar _tmp249 = _tmp117 * _tmp248;
  const Scalar _tmp250 = _tmp155 + _tmp94 + _tmp97;
  const Scalar _tmp251 = _tmp250 * _tmp27;
  const Scalar _tmp252 = _tmp244 - _tmp247 + _tmp249 - _tmp251;
  const Scalar _tmp253 = _tmp20 * _tmp250;
  const Scalar _tmp254 = _tmp248 * _tmp55 + _tmp253;
  const Scalar _tmp255 = _tmp11 * _tmp246;
  const Scalar _tmp256 = _tmp243 * _tmp27;
  const Scalar _tmp257 = _tmp255 + _tmp256;
  const Scalar _tmp258 = _tmp254 + _tmp257;
  const Scalar _tmp259 = -_tmp122 * _tmp250;
  const Scalar _tmp260 = -_tmp144 * _tmp243;
  const Scalar _tmp261 = _tmp259 + _tmp260;
  const Scalar _tmp262 = -_tmp252 * _tmp63 + _tmp252 * _y[4] - _tmp258 * _tmp44 + _tmp258 * _y[6] -
                         _tmp261 * _tmp53 + _tmp261 * _y[5];
  const Scalar _tmp263 = _tmp244 + _tmp247;
  const Scalar _tmp264 = _tmp249 + _tmp251 + _tmp263;
  const Scalar _tmp265 = -_tmp120 * _tmp248;
  const Scalar _tmp266 = _tmp259 + _tmp265;
  const Scalar _tmp267 = _tmp20 * _tmp245;
  const Scalar _tmp268 = _tmp248 * _tmp27;
  const Scalar _tmp269 = _tmp243 * _tmp55;
  const Scalar _tmp270 = _tmp117 * _tmp250;
  const Scalar _tmp271 = _tmp269 + _tmp270;
  const Scalar _tmp272 = -_tmp267 - _tmp268 + _tmp271;
  const Scalar _tmp273 = -_tmp264 * _tmp53 + _tmp264 * _y[5] - _tmp266 * _tmp63 + _tmp266 * _y[4] -
                         _tmp272 * _tmp44 + _tmp272 * _y[6];
  const Scalar _tmp274 = _tmp260 + _tmp265;
  const Scalar _tmp275 = -_tmp256;
  const Scalar _tmp276 = _tmp254 - _tmp255 + _tmp275;
  const Scalar _tmp277 = _tmp267 + _tmp268 + _tmp271;
  const Scalar _tmp278 = -_tmp274 * _tmp44 + _tmp274 * _y[6] - _tmp276 * _tmp53 + _tmp276 * _y[5] -
                         _tmp277 * _tmp63 + _tmp277 * _y[4];
  const Scalar _tmp279 = -_tmp120 * _tmp243;
  const Scalar _tmp280 = _tmp111 + _tmp114 + _tmp160;
  const Scalar _tmp281 = -_tmp144 * _tmp280;
  const Scalar _tmp282 = _tmp279 + _tmp281;
  const Scalar _tmp283 = _tmp280 * _tmp55;
  const Scalar _tmp284 = _tmp163 + _tmp81 + _tmp83;
  const Scalar _tmp285 = _tmp117 * _tmp284 + _tmp283;
  const Scalar _tmp286 = _tmp253 + _tmp256 + _tmp285;
  const Scalar _tmp287 = _tmp27 * _tmp280;
  const Scalar _tmp288 = _tmp20 * _tmp284 + _tmp269;
  const Scalar _tmp289 = -_tmp270 - _tmp287 + _tmp288;
  const Scalar _tmp290 = -_tmp282 * _tmp44 + _tmp282 * _y[6] - _tmp286 * _tmp63 + _tmp286 * _y[4] -
                         _tmp289 * _tmp53 + _tmp289 * _y[5];
  const Scalar _tmp291 = -_tmp122 * _tmp284;
  const Scalar _tmp292 = _tmp281 + _tmp291;
  const Scalar _tmp293 = _tmp250 * _tmp55;
  const Scalar _tmp294 = _tmp27 * _tmp284;
  const Scalar _tmp295 = _tmp20 * _tmp280;
  const Scalar _tmp296 = _tmp117 * _tmp243;
  const Scalar _tmp297 = _tmp295 + _tmp296;
  const Scalar _tmp298 = -_tmp293 - _tmp294 + _tmp297;
  const Scalar _tmp299 = _tmp270 + _tmp287 + _tmp288;
  const Scalar _tmp300 = -_tmp292 * _tmp53 + _tmp292 * _y[5] - _tmp298 * _tmp63 + _tmp298 * _y[4] -
                         _tmp299 * _tmp44 + _tmp299 * _y[6];
  const Scalar _tmp301 = _tmp279 + _tmp291;
  const Scalar _tmp302 = -_tmp253 + _tmp275 + _tmp285;
  const Scalar _tmp303 = _tmp293 + _tmp294 + _tmp297;
  const Scalar _tmp304 = -_tmp301 * _tmp63 + _tmp301 * _y[4] - _tmp302 * _tmp44 + _tmp302 * _y[6] -
                         _tmp303 * _tmp53 + _tmp303 * _y[5];
  const Scalar _tmp305 = _tmp117 * _tmp280;
  const Scalar _tmp306 = _tmp153 + _tmp91 + _tmp93;
  const Scalar _tmp307 = _tmp27 * _tmp306;
  const Scalar _tmp308 = _tmp263 + _tmp305 + _tmp307;
  const Scalar _tmp309 = -_tmp122 * _tmp243;
  const Scalar _tmp310 = -_tmp144 * _tmp306;
  const Scalar _tmp311 = _tmp309 + _tmp310;
  const Scalar _tmp312 = _tmp20 * _tmp306;
  const Scalar _tmp313 = _tmp255 + _tmp275 - _tmp283 + _tmp312;
  const Scalar _tmp314 = -_tmp308 * _tmp44 + _tmp308 * _y[6] - _tmp311 * _tmp53 + _tmp311 * _y[5] -
                         _tmp313 * _tmp63 + _tmp313 * _y[4];
  const Scalar _tmp315 = -_tmp120 * _tmp245;
  const Scalar _tmp316 = _tmp309 + _tmp315;
  const Scalar _tmp317 = _tmp257 + _tmp283 + _tmp312;
  const Scalar _tmp318 = _tmp306 * _tmp55;
  const Scalar _tmp319 = _tmp246 * _tmp26;
  const Scalar _tmp320 = -_tmp295 + _tmp296 + _tmp318 - _tmp319;
  const Scalar _tmp321 = -_tmp316 * _tmp63 + _tmp316 * _y[4] - _tmp317 * _tmp53 + _tmp317 * _y[5] -
                         _tmp320 * _tmp44 + _tmp320 * _y[6];
  const Scalar _tmp322 = _tmp263 - _tmp305 - _tmp307;
  const Scalar _tmp323 = _tmp310 + _tmp315;
  const Scalar _tmp324 = _tmp297 + _tmp318 + _tmp319;
  const Scalar _tmp325 = -_tmp322 * _tmp53 + _tmp322 * _y[5] - _tmp323 * _tmp44 + _tmp323 * _y[6] -
                         _tmp324 * _tmp63 + _tmp324 * _y[4];
  const Scalar _tmp326 = -_tmp14 * _tmp47 - _tmp29 * _tmp34 - _tmp58 * _tmp62;
  const Scalar _tmp327 = -_tmp34 * _tmp71 - _tmp47 * _tmp72 - _tmp62 * _tmp67;
  const Scalar _tmp328 = -_tmp34 * _tmp74 - _tmp47 * _tmp77 - _tmp62 * _tmp75;
  const Scalar _tmp329 = -_tmp38 * _tmp74 - _tmp52 * _tmp77 - _tmp60 * _tmp75;
  const Scalar _tmp330 = -_tmp14 * _tmp52 - _tmp29 * _tmp38 - _tmp58 * _tmp60;
  const Scalar _tmp331 = -_tmp38 * _tmp71 - _tmp52 * _tmp72 - _tmp60 * _tmp67;
  const Scalar _tmp332 = -_tmp14 * _tmp49 - _tmp29 * _tmp43 - _tmp58 * _tmp61;
  const Scalar _tmp333 = -_tmp43 * _tmp71 - _tmp49 * _tmp72 - _tmp61 * _tmp67;
  const Scalar _tmp334 = -_tmp43 * _tmp74 - _tmp49 * _tmp77 - _tmp61 * _tmp75;

  // Output terms (4)
  Eigen::Matrix<Scalar, 3, 1> _res;

  _res(0, 0) = _tmp64 * sqrt_info(0, 1) + _tmp73 * sqrt_info(0, 0) + _tmp78 * sqrt_info(0, 2);
  _res(1, 0) = _tmp64 * sqrt_info(1, 1) + _tmp73 * sqrt_info(1, 0) + _tmp78 * sqrt_info(1, 2);
  _res(2, 0) = _tmp64 * sqrt_info(2, 1) + _tmp73 * sqrt_info(2, 0) + _tmp78 * sqrt_info(2, 2);

  if (res_D_x != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 6>> _res_D_x{res_D_x};

    _res_D_x(0, 0) =
        _tmp138 * sqrt_info(0, 0) + _tmp147 * sqrt_info(0, 1) + _tmp151 * sqrt_info(0, 2);
    _res_D_x(1, 0) =
        _tmp138 * sqrt_info(1, 0) + _tmp147 * sqrt_info(1, 1) + _tmp151 * sqrt_info(1, 2);
    _res_D_x(2, 0) =
        _tmp138 * sqrt_info(2, 0) + _tmp147 * sqrt_info(2, 1) + _tmp151 * sqrt_info(2, 2);
    _res_D_x(0, 1) =
        _tmp185 * sqrt_info(0, 1) + _tmp193 * sqrt_info(0, 0) + _tmp197 * sqrt_info(0, 2);
    _res_D_x(1, 1) =
        _tmp185 * sqrt_info(1, 1) + _tmp193 * sqrt_info(1, 0) + _tmp197 * sqrt_info(1, 2);
    _res_D_x(2, 1) =
        _tmp185 * sqrt_info(2, 1) + _tmp193 * sqrt_info(2, 0) + _tmp197 * sqrt_info(2, 2);
    _res_D_x(0, 2) =
        _tmp217 * sqrt_info(0, 2) + _tmp225 * sqrt_info(0, 1) + _tmp229 * sqrt_info(0, 0);
    _res_D_x(1, 2) =
        _tmp217 * sqrt_info(1, 2) + _tmp225 * sqrt_info(1, 1) + _tmp229 * sqrt_info(1, 0);
    _res_D_x(2, 2) =
        _tmp217 * sqrt_info(2, 2) + _tmp225 * sqrt_info(2, 1) + _tmp229 * sqrt_info(2, 0);
    _res_D_x(0, 3) =
        _tmp231 * sqrt_info(0, 1) + _tmp233 * sqrt_info(0, 2) + _tmp235 * sqrt_info(0, 0);
    _res_D_x(1, 3) =
        _tmp231 * sqrt_info(1, 1) + _tmp233 * sqrt_info(1, 2) + _tmp235 * sqrt_info(1, 0);
    _res_D_x(2, 3) =
        _tmp231 * sqrt_info(2, 1) + _tmp233 * sqrt_info(2, 2) + _tmp235 * sqrt_info(2, 0);
    _res_D_x(0, 4) =
        _tmp236 * sqrt_info(0, 0) + _tmp238 * sqrt_info(0, 2) + _tmp239 * sqrt_info(0, 1);
    _res_D_x(1, 4) =
        _tmp236 * sqrt_info(1, 0) + _tmp238 * sqrt_info(1, 2) + _tmp239 * sqrt_info(1, 1);
    _res_D_x(2, 4) =
        _tmp236 * sqrt_info(2, 0) + _tmp238 * sqrt_info(2, 2) + _tmp239 * sqrt_info(2, 1);
    _res_D_x(0, 5) =
        _tmp240 * sqrt_info(0, 1) + _tmp241 * sqrt_info(0, 0) + _tmp242 * sqrt_info(0, 2);
    _res_D_x(1, 5) =
        _tmp240 * sqrt_info(1, 1) + _tmp241 * sqrt_info(1, 0) + _tmp242 * sqrt_info(1, 2);
    _res_D_x(2, 5) =
        _tmp240 * sqrt_info(2, 1) + _tmp241 * sqrt_info(2, 0) + _tmp242 * sqrt_info(2, 2);
  }

  if (res_D_x_T_s != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 6>> _res_D_x_T_s{res_D_x_T_s};

    _res_D_x_T_s(0, 0) =
        _tmp262 * sqrt_info(0, 1) + _tmp273 * sqrt_info(0, 0) + _tmp278 * sqrt_info(0, 2);
    _res_D_x_T_s(1, 0) =
        _tmp262 * sqrt_info(1, 1) + _tmp273 * sqrt_info(1, 0) + _tmp278 * sqrt_info(1, 2);
    _res_D_x_T_s(2, 0) =
        _tmp262 * sqrt_info(2, 1) + _tmp273 * sqrt_info(2, 0) + _tmp278 * sqrt_info(2, 2);
    _res_D_x_T_s(0, 1) =
        _tmp290 * sqrt_info(0, 2) + _tmp300 * sqrt_info(0, 1) + _tmp304 * sqrt_info(0, 0);
    _res_D_x_T_s(1, 1) =
        _tmp290 * sqrt_info(1, 2) + _tmp300 * sqrt_info(1, 1) + _tmp304 * sqrt_info(1, 0);
    _res_D_x_T_s(2, 1) =
        _tmp290 * sqrt_info(2, 2) + _tmp300 * sqrt_info(2, 1) + _tmp304 * sqrt_info(2, 0);
    _res_D_x_T_s(0, 2) =
        _tmp314 * sqrt_info(0, 1) + _tmp321 * sqrt_info(0, 0) + _tmp325 * sqrt_info(0, 2);
    _res_D_x_T_s(1, 2) =
        _tmp314 * sqrt_info(1, 1) + _tmp321 * sqrt_info(1, 0) + _tmp325 * sqrt_info(1, 2);
    _res_D_x_T_s(2, 2) =
        _tmp314 * sqrt_info(2, 1) + _tmp321 * sqrt_info(2, 0) + _tmp325 * sqrt_info(2, 2);
    _res_D_x_T_s(0, 3) =
        _tmp326 * sqrt_info(0, 1) + _tmp327 * sqrt_info(0, 0) + _tmp328 * sqrt_info(0, 2);
    _res_D_x_T_s(1, 3) =
        _tmp326 * sqrt_info(1, 1) + _tmp327 * sqrt_info(1, 0) + _tmp328 * sqrt_info(1, 2);
    _res_D_x_T_s(2, 3) =
        _tmp326 * sqrt_info(2, 1) + _tmp327 * sqrt_info(2, 0) + _tmp328 * sqrt_info(2, 2);
    _res_D_x_T_s(0, 4) =
        _tmp329 * sqrt_info(0, 2) + _tmp330 * sqrt_info(0, 1) + _tmp331 * sqrt_info(0, 0);
    _res_D_x_T_s(1, 4) =
        _tmp329 * sqrt_info(1, 2) + _tmp330 * sqrt_info(1, 1) + _tmp331 * sqrt_info(1, 0);
    _res_D_x_T_s(2, 4) =
        _tmp329 * sqrt_info(2, 2) + _tmp330 * sqrt_info(2, 1) + _tmp331 * sqrt_info(2, 0);
    _res_D_x_T_s(0, 5) =
        _tmp332 * sqrt_info(0, 1) + _tmp333 * sqrt_info(0, 0) + _tmp334 * sqrt_info(0, 2);
    _res_D_x_T_s(1, 5) =
        _tmp332 * sqrt_info(1, 1) + _tmp333 * sqrt_info(1, 0) + _tmp334 * sqrt_info(1, 2);
    _res_D_x_T_s(2, 5) =
        _tmp332 * sqrt_info(2, 1) + _tmp333 * sqrt_info(2, 0) + _tmp334 * sqrt_info(2, 2);
  }

  if (res_D_y != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 6>> _res_D_y{res_D_y};

    _res_D_y(0, 0) = 0;
    _res_D_y(1, 0) = 0;
    _res_D_y(2, 0) = 0;
    _res_D_y(0, 1) = 0;
    _res_D_y(1, 1) = 0;
    _res_D_y(2, 1) = 0;
    _res_D_y(0, 2) = 0;
    _res_D_y(1, 2) = 0;
    _res_D_y(2, 2) = 0;
    _res_D_y(0, 3) = _tmp58 * sqrt_info(0, 1) + _tmp67 * sqrt_info(0, 0) + _tmp75 * sqrt_info(0, 2);
    _res_D_y(1, 3) = _tmp58 * sqrt_info(1, 1) + _tmp67 * sqrt_info(1, 0) + _tmp75 * sqrt_info(1, 2);
    _res_D_y(2, 3) = _tmp58 * sqrt_info(2, 1) + _tmp67 * sqrt_info(2, 0) + _tmp75 * sqrt_info(2, 2);
    _res_D_y(0, 4) = _tmp14 * sqrt_info(0, 1) + _tmp72 * sqrt_info(0, 0) + _tmp77 * sqrt_info(0, 2);
    _res_D_y(1, 4) = _tmp14 * sqrt_info(1, 1) + _tmp72 * sqrt_info(1, 0) + _tmp77 * sqrt_info(1, 2);
    _res_D_y(2, 4) = _tmp14 * sqrt_info(2, 1) + _tmp72 * sqrt_info(2, 0) + _tmp77 * sqrt_info(2, 2);
    _res_D_y(0, 5) = _tmp29 * sqrt_info(0, 1) + _tmp71 * sqrt_info(0, 0) + _tmp74 * sqrt_info(0, 2);
    _res_D_y(1, 5) = _tmp29 * sqrt_info(1, 1) + _tmp71 * sqrt_info(1, 0) + _tmp74 * sqrt_info(1, 2);
    _res_D_y(2, 5) = _tmp29 * sqrt_info(2, 1) + _tmp71 * sqrt_info(2, 0) + _tmp74 * sqrt_info(2, 2);
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_hyperion
