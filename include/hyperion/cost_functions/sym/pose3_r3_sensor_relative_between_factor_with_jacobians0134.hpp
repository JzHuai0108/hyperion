// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>

namespace sym_hyperion {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: pose3_r3_sensor_relative_between_factor
 *
 * Args:
 *     x: Pose3
 *     x_T_a: Pose3
 *     a_T_b: Matrix31
 *     y: Pose3
 *     y_T_b: Pose3
 *     sqrt_info: Matrix33
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix31
 *     res_D_x: (3x6) jacobian of res (3) wrt arg x (6)
 *     res_D_x_T_a: (3x6) jacobian of res (3) wrt arg x_T_a (6)
 *     res_D_y: (3x6) jacobian of res (3) wrt arg y (6)
 *     res_D_y_T_b: (3x6) jacobian of res (3) wrt arg y_T_b (6)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 3, 1> Pose3R3SensorRelativeBetweenFactorWithJacobians0134(
    const sym::Pose3<Scalar>& x, const sym::Pose3<Scalar>& x_T_a,
    const Eigen::Matrix<Scalar, 3, 1>& a_T_b, const sym::Pose3<Scalar>& y,
    const sym::Pose3<Scalar>& y_T_b, const Eigen::Matrix<Scalar, 3, 3>& sqrt_info,
    const Scalar epsilon, Scalar* const res_D_x = nullptr, Scalar* const res_D_x_T_a = nullptr,
    Scalar* const res_D_y = nullptr, Scalar* const res_D_y_T_b = nullptr) {
  // Total ops: 1329

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x = x.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x_T_a = x_T_a.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y = y.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y_T_b = y_T_b.Data();

  // Intermediate terms (401)
  const Scalar _tmp0 = _x[3] * _x_T_a[1];
  const Scalar _tmp1 = _x[2] * _x_T_a[0];
  const Scalar _tmp2 = _x[0] * _x_T_a[2];
  const Scalar _tmp3 = _x[1] * _x_T_a[3];
  const Scalar _tmp4 = _tmp0 + _tmp1 - _tmp2 + _tmp3;
  const Scalar _tmp5 = 2 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = _x[3] * _x_T_a[0];
  const Scalar _tmp8 = _x[2] * _x_T_a[1];
  const Scalar _tmp9 = _x[0] * _x_T_a[3];
  const Scalar _tmp10 = _x[1] * _x_T_a[2];
  const Scalar _tmp11 = _tmp10 + _tmp7 - _tmp8 + _tmp9;
  const Scalar _tmp12 = 2 * std::pow(_tmp11, Scalar(2));
  const Scalar _tmp13 = 1 - _tmp12;
  const Scalar _tmp14 = _tmp13 + _tmp6;
  const Scalar _tmp15 = 2 * _y[3];
  const Scalar _tmp16 = _tmp15 * _y[1];
  const Scalar _tmp17 = -_tmp16;
  const Scalar _tmp18 = 2 * _y[0];
  const Scalar _tmp19 = _tmp18 * _y[2];
  const Scalar _tmp20 = _tmp17 + _tmp19;
  const Scalar _tmp21 = 2 * _y[1] * _y[2];
  const Scalar _tmp22 = _tmp18 * _y[3];
  const Scalar _tmp23 = _tmp21 + _tmp22;
  const Scalar _tmp24 = std::pow(_y[1], Scalar(2));
  const Scalar _tmp25 = -2 * _tmp24;
  const Scalar _tmp26 = std::pow(_y[0], Scalar(2));
  const Scalar _tmp27 = -2 * _tmp26;
  const Scalar _tmp28 = _tmp25 + _tmp27 + 1;
  const Scalar _tmp29 = _tmp20 * _y_T_b[4] + _tmp23 * _y_T_b[5] + _tmp28 * _y_T_b[6] + _y[6];
  const Scalar _tmp30 = _tmp16 + _tmp19;
  const Scalar _tmp31 = std::pow(_y[2], Scalar(2));
  const Scalar _tmp32 = 1 - 2 * _tmp31;
  const Scalar _tmp33 = _tmp25 + _tmp32;
  const Scalar _tmp34 = _tmp15 * _y[2];
  const Scalar _tmp35 = -_tmp34;
  const Scalar _tmp36 = _tmp18 * _y[1];
  const Scalar _tmp37 = _tmp35 + _tmp36;
  const Scalar _tmp38 = _tmp30 * _y_T_b[6] + _tmp33 * _y_T_b[4] + _tmp37 * _y_T_b[5] + _y[4];
  const Scalar _tmp39 = _x[3] * _x_T_a[2];
  const Scalar _tmp40 = _x[2] * _x_T_a[3];
  const Scalar _tmp41 = _x[0] * _x_T_a[1];
  const Scalar _tmp42 = _x[1] * _x_T_a[0];
  const Scalar _tmp43 = _tmp39 + _tmp40 + _tmp41 - _tmp42;
  const Scalar _tmp44 = 2 * _tmp43;
  const Scalar _tmp45 = _tmp11 * _tmp44;
  const Scalar _tmp46 = _x[3] * _x_T_a[3];
  const Scalar _tmp47 = _x[2] * _x_T_a[2];
  const Scalar _tmp48 = _x[0] * _x_T_a[0];
  const Scalar _tmp49 = _x[1] * _x_T_a[1];
  const Scalar _tmp50 = _tmp46 - _tmp47 - _tmp48 - _tmp49;
  const Scalar _tmp51 = 2 * _tmp4;
  const Scalar _tmp52 = _tmp50 * _tmp51;
  const Scalar _tmp53 = _tmp45 + _tmp52;
  const Scalar _tmp54 = -_tmp22;
  const Scalar _tmp55 = _tmp21 + _tmp54;
  const Scalar _tmp56 = _tmp27 + _tmp32;
  const Scalar _tmp57 = _tmp34 + _tmp36;
  const Scalar _tmp58 = _tmp55 * _y_T_b[6] + _tmp56 * _y_T_b[5] + _tmp57 * _y_T_b[4] + _y[5];
  const Scalar _tmp59 = _tmp4 * _tmp44;
  const Scalar _tmp60 = 2 * _tmp11;
  const Scalar _tmp61 = _tmp50 * _tmp60;
  const Scalar _tmp62 = -_tmp61;
  const Scalar _tmp63 = _tmp59 + _tmp62;
  const Scalar _tmp64 = 2 * _x[2];
  const Scalar _tmp65 = _tmp64 * _x[0];
  const Scalar _tmp66 = 2 * _x[1];
  const Scalar _tmp67 = _tmp66 * _x[3];
  const Scalar _tmp68 = -_tmp67;
  const Scalar _tmp69 = _tmp65 + _tmp68;
  const Scalar _tmp70 = 2 * _x[0] * _x[3];
  const Scalar _tmp71 = _tmp66 * _x[2];
  const Scalar _tmp72 = _tmp70 + _tmp71;
  const Scalar _tmp73 = std::pow(_x[1], Scalar(2));
  const Scalar _tmp74 = -2 * _tmp73;
  const Scalar _tmp75 = std::pow(_x[0], Scalar(2));
  const Scalar _tmp76 = 1 - 2 * _tmp75;
  const Scalar _tmp77 = _tmp74 + _tmp76;
  const Scalar _tmp78 = _tmp69 * _x_T_a[4] + _tmp72 * _x_T_a[5] + _tmp77 * _x_T_a[6] + _x[6];
  const Scalar _tmp79 = _tmp66 * _x[0];
  const Scalar _tmp80 = _tmp64 * _x[3];
  const Scalar _tmp81 = -_tmp80;
  const Scalar _tmp82 = _tmp79 + _tmp81;
  const Scalar _tmp83 = _tmp65 + _tmp67;
  const Scalar _tmp84 = std::pow(_x[2], Scalar(2));
  const Scalar _tmp85 = -2 * _tmp84;
  const Scalar _tmp86 = _tmp74 + _tmp85 + 1;
  const Scalar _tmp87 = _tmp82 * _x_T_a[5] + _tmp83 * _x_T_a[6] + _tmp86 * _x_T_a[4] + _x[4];
  const Scalar _tmp88 = _tmp79 + _tmp80;
  const Scalar _tmp89 = -_tmp70;
  const Scalar _tmp90 = _tmp71 + _tmp89;
  const Scalar _tmp91 = _tmp76 + _tmp85;
  const Scalar _tmp92 = _tmp88 * _x_T_a[4] + _tmp90 * _x_T_a[6] + _tmp91 * _x_T_a[5] + _x[5];
  const Scalar _tmp93 = _tmp14 * _tmp29 - _tmp14 * _tmp78 + _tmp38 * _tmp53 - _tmp53 * _tmp87 +
                        _tmp58 * _tmp63 - _tmp63 * _tmp92 - a_T_b(2, 0);
  const Scalar _tmp94 = -_tmp52;
  const Scalar _tmp95 = _tmp45 + _tmp94;
  const Scalar _tmp96 = 2 * std::pow(_tmp43, Scalar(2));
  const Scalar _tmp97 = -_tmp96;
  const Scalar _tmp98 = _tmp6 + _tmp97 + 1;
  const Scalar _tmp99 = _tmp11 * _tmp51;
  const Scalar _tmp100 = _tmp44 * _tmp50;
  const Scalar _tmp101 = _tmp100 + _tmp99;
  const Scalar _tmp102 = _tmp101 * _tmp58 - _tmp101 * _tmp92 + _tmp29 * _tmp95 + _tmp38 * _tmp98 -
                         _tmp78 * _tmp95 - _tmp87 * _tmp98 - a_T_b(0, 0);
  const Scalar _tmp103 = _tmp59 + _tmp61;
  const Scalar _tmp104 = -_tmp100;
  const Scalar _tmp105 = _tmp104 + _tmp99;
  const Scalar _tmp106 = _tmp13 + _tmp97;
  const Scalar _tmp107 = _tmp103 * _tmp29 - _tmp103 * _tmp78 + _tmp105 * _tmp38 - _tmp105 * _tmp87 +
                         _tmp106 * _tmp58 - _tmp106 * _tmp92 - a_T_b(1, 0);
  const Scalar _tmp108 = std::pow(_x[3], Scalar(2));
  const Scalar _tmp109 = -_tmp108;
  const Scalar _tmp110 = -_tmp73;
  const Scalar _tmp111 = _tmp90 * _x_T_a[5] + _x_T_a[6] * (_tmp109 + _tmp110 + _tmp75 + _tmp84);
  const Scalar _tmp112 = (Scalar(1) / Scalar(2)) * _tmp48;
  const Scalar _tmp113 = -_tmp112;
  const Scalar _tmp114 = (Scalar(1) / Scalar(2)) * _tmp49;
  const Scalar _tmp115 = (Scalar(1) / Scalar(2)) * _tmp46;
  const Scalar _tmp116 = (Scalar(1) / Scalar(2)) * _tmp47;
  const Scalar _tmp117 = _tmp115 + _tmp116;
  const Scalar _tmp118 = _tmp113 + _tmp114 + _tmp117;
  const Scalar _tmp119 = 4 * _tmp11;
  const Scalar _tmp120 = -_tmp118 * _tmp119;
  const Scalar _tmp121 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp122 = -_tmp121;
  const Scalar _tmp123 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp124 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp125 = -_tmp124;
  const Scalar _tmp126 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp127 = -_tmp126;
  const Scalar _tmp128 = _tmp125 + _tmp127;
  const Scalar _tmp129 = _tmp122 + _tmp123 + _tmp128;
  const Scalar _tmp130 = 4 * _tmp43;
  const Scalar _tmp131 = -_tmp129 * _tmp130;
  const Scalar _tmp132 = _tmp120 + _tmp131;
  const Scalar _tmp133 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp134 = -_tmp133;
  const Scalar _tmp135 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp136 = -_tmp135;
  const Scalar _tmp137 = _tmp134 + _tmp136;
  const Scalar _tmp138 = (Scalar(1) / Scalar(2)) * _tmp8;
  const Scalar _tmp139 = -_tmp138;
  const Scalar _tmp140 = (Scalar(1) / Scalar(2)) * _tmp10;
  const Scalar _tmp141 = _tmp139 + _tmp140;
  const Scalar _tmp142 = _tmp137 + _tmp141;
  const Scalar _tmp143 = _tmp142 * _tmp44;
  const Scalar _tmp144 = 2 * _tmp50;
  const Scalar _tmp145 = _tmp129 * _tmp144;
  const Scalar _tmp146 = (Scalar(1) / Scalar(2)) * _tmp39;
  const Scalar _tmp147 = -_tmp146;
  const Scalar _tmp148 = (Scalar(1) / Scalar(2)) * _tmp40;
  const Scalar _tmp149 = (Scalar(1) / Scalar(2)) * _tmp41;
  const Scalar _tmp150 = -_tmp149;
  const Scalar _tmp151 = (Scalar(1) / Scalar(2)) * _tmp42;
  const Scalar _tmp152 = -_tmp151;
  const Scalar _tmp153 = _tmp150 + _tmp152;
  const Scalar _tmp154 = _tmp147 + _tmp148 + _tmp153;
  const Scalar _tmp155 = _tmp118 * _tmp51 + _tmp154 * _tmp60;
  const Scalar _tmp156 = -_tmp143 - _tmp145 + _tmp155;
  const Scalar _tmp157 = _tmp142 * _tmp60;
  const Scalar _tmp158 = _tmp118 * _tmp144;
  const Scalar _tmp159 = _tmp129 * _tmp51 + _tmp154 * _tmp44;
  const Scalar _tmp160 = _tmp157 + _tmp158 + _tmp159;
  const Scalar _tmp161 = -_tmp79;
  const Scalar _tmp162 = _tmp83 * _x_T_a[5] + _x_T_a[6] * (_tmp161 + _tmp80);
  const Scalar _tmp163 = -_tmp75;
  const Scalar _tmp164 = _tmp163 + _tmp84;
  const Scalar _tmp165 = _tmp108 + _tmp110;
  const Scalar _tmp166 = -_tmp71;
  const Scalar _tmp167 = _x_T_a[5] * (_tmp164 + _tmp165) + _x_T_a[6] * (_tmp166 + _tmp89);
  const Scalar _tmp168 = -_tmp103 * _tmp167 - _tmp105 * _tmp162 - _tmp106 * _tmp111 +
                         _tmp132 * _tmp58 - _tmp132 * _tmp92 + _tmp156 * _tmp38 - _tmp156 * _tmp87 +
                         _tmp160 * _tmp29 - _tmp160 * _tmp78;
  const Scalar _tmp169 = _tmp142 * _tmp51;
  const Scalar _tmp170 = _tmp144 * _tmp154;
  const Scalar _tmp171 = _tmp118 * _tmp44 + _tmp129 * _tmp60;
  const Scalar _tmp172 = -_tmp169 - _tmp170 + _tmp171;
  const Scalar _tmp173 = 4 * _tmp4;
  const Scalar _tmp174 = -_tmp154 * _tmp173;
  const Scalar _tmp175 = _tmp131 + _tmp174;
  const Scalar _tmp176 = _tmp143 + _tmp145 + _tmp155;
  const Scalar _tmp177 = -_tmp101 * _tmp111 - _tmp162 * _tmp98 - _tmp167 * _tmp95 +
                         _tmp172 * _tmp29 - _tmp172 * _tmp78 + _tmp175 * _tmp38 - _tmp175 * _tmp87 +
                         _tmp176 * _tmp58 - _tmp176 * _tmp92;
  const Scalar _tmp178 = _tmp169 + _tmp170 + _tmp171;
  const Scalar _tmp179 = _tmp120 + _tmp174;
  const Scalar _tmp180 = -_tmp157 - _tmp158 + _tmp159;
  const Scalar _tmp181 = -_tmp111 * _tmp63 - _tmp14 * _tmp167 - _tmp162 * _tmp53 +
                         _tmp178 * _tmp38 - _tmp178 * _tmp87 + _tmp179 * _tmp29 - _tmp179 * _tmp78 +
                         _tmp180 * _tmp58 - _tmp180 * _tmp92;
  const Scalar _tmp182 = _tmp88 * _x_T_a[6] + _x_T_a[4] * (_tmp166 + _tmp70);
  const Scalar _tmp183 = _tmp109 + _tmp73;
  const Scalar _tmp184 = -_tmp84;
  const Scalar _tmp185 = _tmp184 + _tmp75;
  const Scalar _tmp186 = _tmp69 * _x_T_a[6] + _x_T_a[4] * (_tmp183 + _tmp185);
  const Scalar _tmp187 = -_tmp123;
  const Scalar _tmp188 = _tmp121 + _tmp128 + _tmp187;
  const Scalar _tmp189 = _tmp188 * _tmp51;
  const Scalar _tmp190 = -_tmp114;
  const Scalar _tmp191 = _tmp112 + _tmp117 + _tmp190;
  const Scalar _tmp192 = _tmp144 * _tmp191;
  const Scalar _tmp193 = -_tmp140;
  const Scalar _tmp194 = _tmp139 + _tmp193;
  const Scalar _tmp195 = _tmp134 + _tmp135 + _tmp194;
  const Scalar _tmp196 = -_tmp148;
  const Scalar _tmp197 = _tmp146 + _tmp153 + _tmp196;
  const Scalar _tmp198 = _tmp195 * _tmp60 + _tmp197 * _tmp44;
  const Scalar _tmp199 = _tmp189 + _tmp192 + _tmp198;
  const Scalar _tmp200 = -_tmp119 * _tmp197;
  const Scalar _tmp201 = -_tmp173 * _tmp191;
  const Scalar _tmp202 = _tmp200 + _tmp201;
  const Scalar _tmp203 = -_tmp65;
  const Scalar _tmp204 = _x_T_a[4] * (_tmp203 + _tmp68) + _x_T_a[6] * (_tmp165 + _tmp185);
  const Scalar _tmp205 = _tmp188 * _tmp60;
  const Scalar _tmp206 = _tmp144 * _tmp197;
  const Scalar _tmp207 = _tmp191 * _tmp44 + _tmp195 * _tmp51;
  const Scalar _tmp208 = -_tmp205 - _tmp206 + _tmp207;
  const Scalar _tmp209 = -_tmp14 * _tmp186 - _tmp182 * _tmp63 + _tmp199 * _tmp38 -
                         _tmp199 * _tmp87 + _tmp202 * _tmp29 - _tmp202 * _tmp78 - _tmp204 * _tmp53 +
                         _tmp208 * _tmp58 - _tmp208 * _tmp92;
  const Scalar _tmp210 = -_tmp189 - _tmp192 + _tmp198;
  const Scalar _tmp211 = -_tmp130 * _tmp195;
  const Scalar _tmp212 = _tmp201 + _tmp211;
  const Scalar _tmp213 = _tmp188 * _tmp44;
  const Scalar _tmp214 = _tmp144 * _tmp195;
  const Scalar _tmp215 = _tmp191 * _tmp60 + _tmp197 * _tmp51;
  const Scalar _tmp216 = _tmp213 + _tmp214 + _tmp215;
  const Scalar _tmp217 = -_tmp101 * _tmp182 - _tmp186 * _tmp95 - _tmp204 * _tmp98 +
                         _tmp210 * _tmp29 - _tmp210 * _tmp78 + _tmp212 * _tmp38 - _tmp212 * _tmp87 +
                         _tmp216 * _tmp58 - _tmp216 * _tmp92;
  const Scalar _tmp218 = _tmp200 + _tmp211;
  const Scalar _tmp219 = -_tmp213 - _tmp214 + _tmp215;
  const Scalar _tmp220 = _tmp205 + _tmp206 + _tmp207;
  const Scalar _tmp221 = -_tmp103 * _tmp186 - _tmp105 * _tmp204 - _tmp106 * _tmp182 +
                         _tmp218 * _tmp58 - _tmp218 * _tmp92 + _tmp219 * _tmp38 - _tmp219 * _tmp87 +
                         _tmp220 * _tmp29 - _tmp220 * _tmp78;
  const Scalar _tmp222 = _tmp125 + _tmp126;
  const Scalar _tmp223 = _tmp122 + _tmp187;
  const Scalar _tmp224 = _tmp222 + _tmp223;
  const Scalar _tmp225 = -_tmp119 * _tmp224;
  const Scalar _tmp226 = _tmp115 - _tmp116;
  const Scalar _tmp227 = _tmp112 + _tmp114 + _tmp226;
  const Scalar _tmp228 = -_tmp130 * _tmp227;
  const Scalar _tmp229 = _tmp225 + _tmp228;
  const Scalar _tmp230 =
      _x_T_a[4] * (_tmp108 + _tmp163 + _tmp184 + _tmp73) + _x_T_a[5] * (_tmp161 + _tmp81);
  const Scalar _tmp231 = _tmp149 + _tmp152;
  const Scalar _tmp232 = _tmp147 + _tmp196;
  const Scalar _tmp233 = _tmp231 + _tmp232;
  const Scalar _tmp234 = _tmp233 * _tmp44;
  const Scalar _tmp235 = _tmp144 * _tmp227;
  const Scalar _tmp236 = _tmp133 + _tmp136 + _tmp194;
  const Scalar _tmp237 = _tmp224 * _tmp51 + _tmp236 * _tmp60;
  const Scalar _tmp238 = -_tmp234 - _tmp235 + _tmp237;
  const Scalar _tmp239 = _tmp233 * _tmp60;
  const Scalar _tmp240 = _tmp144 * _tmp224;
  const Scalar _tmp241 = _tmp227 * _tmp51 + _tmp236 * _tmp44;
  const Scalar _tmp242 = _tmp239 + _tmp240 + _tmp241;
  const Scalar _tmp243 = _tmp82 * _x_T_a[4] + _x_T_a[5] * (_tmp164 + _tmp183);
  const Scalar _tmp244 = _tmp72 * _x_T_a[4] + _x_T_a[5] * (_tmp203 + _tmp67);
  const Scalar _tmp245 = -_tmp103 * _tmp244 - _tmp105 * _tmp243 - _tmp106 * _tmp230 +
                         _tmp229 * _tmp58 - _tmp229 * _tmp92 + _tmp238 * _tmp38 - _tmp238 * _tmp87 +
                         _tmp242 * _tmp29 - _tmp242 * _tmp78;
  const Scalar _tmp246 = _tmp233 * _tmp51;
  const Scalar _tmp247 = _tmp144 * _tmp236;
  const Scalar _tmp248 = _tmp224 * _tmp44 + _tmp227 * _tmp60;
  const Scalar _tmp249 = _tmp246 + _tmp247 + _tmp248;
  const Scalar _tmp250 = -_tmp173 * _tmp236;
  const Scalar _tmp251 = _tmp225 + _tmp250;
  const Scalar _tmp252 = -_tmp239 - _tmp240 + _tmp241;
  const Scalar _tmp253 = -_tmp14 * _tmp244 - _tmp230 * _tmp63 - _tmp243 * _tmp53 +
                         _tmp249 * _tmp38 - _tmp249 * _tmp87 + _tmp251 * _tmp29 - _tmp251 * _tmp78 +
                         _tmp252 * _tmp58 - _tmp252 * _tmp92;
  const Scalar _tmp254 = -_tmp246 - _tmp247 + _tmp248;
  const Scalar _tmp255 = _tmp228 + _tmp250;
  const Scalar _tmp256 = _tmp234 + _tmp235 + _tmp237;
  const Scalar _tmp257 = -_tmp101 * _tmp230 - _tmp243 * _tmp98 - _tmp244 * _tmp95 +
                         _tmp254 * _tmp29 - _tmp254 * _tmp78 + _tmp255 * _tmp38 - _tmp255 * _tmp87 +
                         _tmp256 * _tmp58 - _tmp256 * _tmp92;
  const Scalar _tmp258 = -_tmp99;
  const Scalar _tmp259 = _tmp100 + _tmp258;
  const Scalar _tmp260 = -_tmp45;
  const Scalar _tmp261 = _tmp260 + _tmp94;
  const Scalar _tmp262 = _tmp5 + _tmp96 - 1;
  const Scalar _tmp263 = -_tmp59;
  const Scalar _tmp264 = _tmp263 + _tmp61;
  const Scalar _tmp265 = _tmp104 + _tmp258;
  const Scalar _tmp266 = _tmp12 - 1;
  const Scalar _tmp267 = _tmp266 + _tmp96;
  const Scalar _tmp268 = _tmp263 + _tmp62;
  const Scalar _tmp269 = _tmp260 + _tmp52;
  const Scalar _tmp270 = _tmp266 + _tmp5;
  const Scalar _tmp271 = _tmp137 + _tmp138 + _tmp193;
  const Scalar _tmp272 = _tmp271 * _tmp51;
  const Scalar _tmp273 = _tmp146 + _tmp148 + _tmp231;
  const Scalar _tmp274 = _tmp144 * _tmp273;
  const Scalar _tmp275 = _tmp113 + _tmp190 + _tmp226;
  const Scalar _tmp276 = _tmp275 * _tmp44;
  const Scalar _tmp277 = _tmp124 + _tmp127 + _tmp223;
  const Scalar _tmp278 = _tmp277 * _tmp60;
  const Scalar _tmp279 = _tmp276 + _tmp278;
  const Scalar _tmp280 = _tmp272 + _tmp274 + _tmp279;
  const Scalar _tmp281 = -_tmp119 * _tmp275;
  const Scalar _tmp282 = -_tmp173 * _tmp273;
  const Scalar _tmp283 = _tmp281 + _tmp282;
  const Scalar _tmp284 = _tmp271 * _tmp60;
  const Scalar _tmp285 = _tmp273 * _tmp44;
  const Scalar _tmp286 = _tmp277 * _tmp51;
  const Scalar _tmp287 = _tmp144 * _tmp275;
  const Scalar _tmp288 = -_tmp287;
  const Scalar _tmp289 = -_tmp284 + _tmp285 + _tmp286 + _tmp288;
  const Scalar _tmp290 = _tmp280 * _tmp38 - _tmp280 * _tmp87 + _tmp283 * _tmp29 - _tmp283 * _tmp78 +
                         _tmp289 * _tmp58 - _tmp289 * _tmp92;
  const Scalar _tmp291 = -_tmp272 - _tmp274 + _tmp279;
  const Scalar _tmp292 = -_tmp130 * _tmp277;
  const Scalar _tmp293 = _tmp282 + _tmp292;
  const Scalar _tmp294 = _tmp273 * _tmp60;
  const Scalar _tmp295 = _tmp144 * _tmp277;
  const Scalar _tmp296 = _tmp271 * _tmp44;
  const Scalar _tmp297 = _tmp275 * _tmp51;
  const Scalar _tmp298 = _tmp296 + _tmp297;
  const Scalar _tmp299 = _tmp294 + _tmp295 + _tmp298;
  const Scalar _tmp300 = _tmp29 * _tmp291 - _tmp291 * _tmp78 + _tmp293 * _tmp38 - _tmp293 * _tmp87 +
                         _tmp299 * _tmp58 - _tmp299 * _tmp92;
  const Scalar _tmp301 = _tmp281 + _tmp292;
  const Scalar _tmp302 = _tmp294 - _tmp295 - _tmp296 + _tmp297;
  const Scalar _tmp303 = _tmp286 + _tmp287;
  const Scalar _tmp304 = _tmp284 + _tmp285 + _tmp303;
  const Scalar _tmp305 = _tmp29 * _tmp304 + _tmp301 * _tmp58 - _tmp301 * _tmp92 + _tmp302 * _tmp38 -
                         _tmp302 * _tmp87 - _tmp304 * _tmp78;
  const Scalar _tmp306 = _tmp150 + _tmp151 + _tmp232;
  const Scalar _tmp307 = -_tmp119 * _tmp306;
  const Scalar _tmp308 = _tmp133 + _tmp135 + _tmp141;
  const Scalar _tmp309 = -_tmp130 * _tmp308;
  const Scalar _tmp310 = _tmp307 + _tmp309;
  const Scalar _tmp311 = _tmp277 * _tmp44;
  const Scalar _tmp312 = _tmp144 * _tmp308;
  const Scalar _tmp313 = _tmp275 * _tmp60;
  const Scalar _tmp314 = _tmp306 * _tmp51;
  const Scalar _tmp315 = _tmp313 + _tmp314;
  const Scalar _tmp316 = -_tmp311 - _tmp312 + _tmp315;
  const Scalar _tmp317 = _tmp144 * _tmp306;
  const Scalar _tmp318 = _tmp276 + _tmp308 * _tmp51;
  const Scalar _tmp319 = _tmp278 + _tmp317 + _tmp318;
  const Scalar _tmp320 = _tmp29 * _tmp319 + _tmp310 * _tmp58 - _tmp310 * _tmp92 + _tmp316 * _tmp38 -
                         _tmp316 * _tmp87 - _tmp319 * _tmp78;
  const Scalar _tmp321 = _tmp306 * _tmp44;
  const Scalar _tmp322 = _tmp308 * _tmp60 + _tmp321;
  const Scalar _tmp323 = -_tmp286 + _tmp288 + _tmp322;
  const Scalar _tmp324 = -_tmp173 * _tmp275;
  const Scalar _tmp325 = _tmp309 + _tmp324;
  const Scalar _tmp326 = _tmp311 + _tmp312 + _tmp315;
  const Scalar _tmp327 = _tmp29 * _tmp323 - _tmp323 * _tmp78 + _tmp325 * _tmp38 - _tmp325 * _tmp87 +
                         _tmp326 * _tmp58 - _tmp326 * _tmp92;
  const Scalar _tmp328 = _tmp303 + _tmp322;
  const Scalar _tmp329 = _tmp307 + _tmp324;
  const Scalar _tmp330 = -_tmp278 - _tmp317 + _tmp318;
  const Scalar _tmp331 = _tmp29 * _tmp329 + _tmp328 * _tmp38 - _tmp328 * _tmp87 - _tmp329 * _tmp78 +
                         _tmp330 * _tmp58 - _tmp330 * _tmp92;
  const Scalar _tmp332 = _tmp121 + _tmp123 + _tmp222;
  const Scalar _tmp333 = _tmp332 * _tmp44;
  const Scalar _tmp334 = _tmp144 * _tmp271;
  const Scalar _tmp335 = _tmp313 - _tmp314 + _tmp333 - _tmp334;
  const Scalar _tmp336 = -_tmp130 * _tmp275;
  const Scalar _tmp337 = -_tmp173 * _tmp271;
  const Scalar _tmp338 = _tmp336 + _tmp337;
  const Scalar _tmp339 = _tmp284 + _tmp332 * _tmp51;
  const Scalar _tmp340 = _tmp287 + _tmp321 + _tmp339;
  const Scalar _tmp341 = _tmp29 * _tmp335 - _tmp335 * _tmp78 + _tmp338 * _tmp38 - _tmp338 * _tmp87 +
                         _tmp340 * _tmp58 - _tmp340 * _tmp92;
  const Scalar _tmp342 = _tmp315 + _tmp333 + _tmp334;
  const Scalar _tmp343 = -_tmp119 * _tmp332;
  const Scalar _tmp344 = _tmp337 + _tmp343;
  const Scalar _tmp345 = _tmp306 * _tmp60;
  const Scalar _tmp346 = _tmp144 * _tmp332;
  const Scalar _tmp347 = _tmp298 - _tmp345 - _tmp346;
  const Scalar _tmp348 = _tmp29 * _tmp344 + _tmp342 * _tmp38 - _tmp342 * _tmp87 - _tmp344 * _tmp78 +
                         _tmp347 * _tmp58 - _tmp347 * _tmp92;
  const Scalar _tmp349 = _tmp336 + _tmp343;
  const Scalar _tmp350 = _tmp288 - _tmp321 + _tmp339;
  const Scalar _tmp351 = _tmp298 + _tmp345 + _tmp346;
  const Scalar _tmp352 = _tmp29 * _tmp351 + _tmp349 * _tmp58 - _tmp349 * _tmp92 + _tmp350 * _tmp38 -
                         _tmp350 * _tmp87 - _tmp351 * _tmp78;
  const Scalar _tmp353 = -_tmp14 * _tmp69 - _tmp53 * _tmp86 - _tmp63 * _tmp88;
  const Scalar _tmp354 = -_tmp103 * _tmp69 - _tmp105 * _tmp86 - _tmp106 * _tmp88;
  const Scalar _tmp355 = -_tmp101 * _tmp88 - _tmp69 * _tmp95 - _tmp86 * _tmp98;
  const Scalar _tmp356 = -_tmp101 * _tmp91 - _tmp72 * _tmp95 - _tmp82 * _tmp98;
  const Scalar _tmp357 = -_tmp103 * _tmp72 - _tmp105 * _tmp82 - _tmp106 * _tmp91;
  const Scalar _tmp358 = -_tmp14 * _tmp72 - _tmp53 * _tmp82 - _tmp63 * _tmp91;
  const Scalar _tmp359 = -_tmp14 * _tmp77 - _tmp53 * _tmp83 - _tmp63 * _tmp90;
  const Scalar _tmp360 = -_tmp101 * _tmp90 - _tmp77 * _tmp95 - _tmp83 * _tmp98;
  const Scalar _tmp361 = -_tmp103 * _tmp77 - _tmp105 * _tmp83 - _tmp106 * _tmp90;
  const Scalar _tmp362 = -_tmp21;
  const Scalar _tmp363 = -_tmp24;
  const Scalar _tmp364 = _tmp31 + _tmp363;
  const Scalar _tmp365 = -_tmp26;
  const Scalar _tmp366 = std::pow(_y[3], Scalar(2));
  const Scalar _tmp367 = _tmp365 + _tmp366;
  const Scalar _tmp368 = _y_T_b[5] * (_tmp364 + _tmp367) + _y_T_b[6] * (_tmp362 + _tmp54);
  const Scalar _tmp369 = -_tmp36;
  const Scalar _tmp370 = _tmp30 * _y_T_b[5] + _y_T_b[6] * (_tmp34 + _tmp369);
  const Scalar _tmp371 = -_tmp366;
  const Scalar _tmp372 = _tmp26 + _tmp371;
  const Scalar _tmp373 = _tmp55 * _y_T_b[5] + _y_T_b[6] * (_tmp364 + _tmp372);
  const Scalar _tmp374 = _tmp14 * _tmp368 + _tmp370 * _tmp53 + _tmp373 * _tmp63;
  const Scalar _tmp375 = _tmp103 * _tmp368 + _tmp105 * _tmp370 + _tmp106 * _tmp373;
  const Scalar _tmp376 = _tmp101 * _tmp373 + _tmp368 * _tmp95 + _tmp370 * _tmp98;
  const Scalar _tmp377 = -_tmp19;
  const Scalar _tmp378 = -_tmp31;
  const Scalar _tmp379 =
      _y_T_b[4] * (_tmp17 + _tmp377) + _y_T_b[6] * (_tmp26 + _tmp363 + _tmp366 + _tmp378);
  const Scalar _tmp380 = _tmp24 + _tmp378;
  const Scalar _tmp381 = _tmp20 * _y_T_b[6] + _y_T_b[4] * (_tmp372 + _tmp380);
  const Scalar _tmp382 = _tmp57 * _y_T_b[6] + _y_T_b[4] * (_tmp22 + _tmp362);
  const Scalar _tmp383 = _tmp14 * _tmp381 + _tmp379 * _tmp53 + _tmp382 * _tmp63;
  const Scalar _tmp384 = _tmp101 * _tmp382 + _tmp379 * _tmp98 + _tmp381 * _tmp95;
  const Scalar _tmp385 = _tmp103 * _tmp381 + _tmp105 * _tmp379 + _tmp106 * _tmp382;
  const Scalar _tmp386 = _tmp37 * _y_T_b[4] + _y_T_b[5] * (_tmp24 + _tmp31 + _tmp365 + _tmp371);
  const Scalar _tmp387 = _y_T_b[4] * (_tmp367 + _tmp380) + _y_T_b[5] * (_tmp35 + _tmp369);
  const Scalar _tmp388 = _tmp23 * _y_T_b[4] + _y_T_b[5] * (_tmp16 + _tmp377);
  const Scalar _tmp389 = _tmp103 * _tmp388 + _tmp105 * _tmp386 + _tmp106 * _tmp387;
  const Scalar _tmp390 = _tmp101 * _tmp387 + _tmp386 * _tmp98 + _tmp388 * _tmp95;
  const Scalar _tmp391 = _tmp14 * _tmp388 + _tmp386 * _tmp53 + _tmp387 * _tmp63;
  const Scalar _tmp392 = _tmp103 * _tmp20 + _tmp105 * _tmp33 + _tmp106 * _tmp57;
  const Scalar _tmp393 = _tmp101 * _tmp57 + _tmp20 * _tmp95 + _tmp33 * _tmp98;
  const Scalar _tmp394 = _tmp14 * _tmp20 + _tmp33 * _tmp53 + _tmp57 * _tmp63;
  const Scalar _tmp395 = _tmp14 * _tmp23 + _tmp37 * _tmp53 + _tmp56 * _tmp63;
  const Scalar _tmp396 = _tmp103 * _tmp23 + _tmp105 * _tmp37 + _tmp106 * _tmp56;
  const Scalar _tmp397 = _tmp101 * _tmp56 + _tmp23 * _tmp95 + _tmp37 * _tmp98;
  const Scalar _tmp398 = _tmp101 * _tmp55 + _tmp28 * _tmp95 + _tmp30 * _tmp98;
  const Scalar _tmp399 = _tmp103 * _tmp28 + _tmp105 * _tmp30 + _tmp106 * _tmp55;
  const Scalar _tmp400 = _tmp14 * _tmp28 + _tmp30 * _tmp53 + _tmp55 * _tmp63;

  // Output terms (5)
  Eigen::Matrix<Scalar, 3, 1> _res;

  _res(0, 0) = _tmp102 * sqrt_info(0, 0) + _tmp107 * sqrt_info(0, 1) + _tmp93 * sqrt_info(0, 2);
  _res(1, 0) = _tmp102 * sqrt_info(1, 0) + _tmp107 * sqrt_info(1, 1) + _tmp93 * sqrt_info(1, 2);
  _res(2, 0) = _tmp102 * sqrt_info(2, 0) + _tmp107 * sqrt_info(2, 1) + _tmp93 * sqrt_info(2, 2);

  if (res_D_x != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 6>> _res_D_x{res_D_x};

    _res_D_x(0, 0) =
        _tmp168 * sqrt_info(0, 1) + _tmp177 * sqrt_info(0, 0) + _tmp181 * sqrt_info(0, 2);
    _res_D_x(1, 0) =
        _tmp168 * sqrt_info(1, 1) + _tmp177 * sqrt_info(1, 0) + _tmp181 * sqrt_info(1, 2);
    _res_D_x(2, 0) =
        _tmp168 * sqrt_info(2, 1) + _tmp177 * sqrt_info(2, 0) + _tmp181 * sqrt_info(2, 2);
    _res_D_x(0, 1) =
        _tmp209 * sqrt_info(0, 2) + _tmp217 * sqrt_info(0, 0) + _tmp221 * sqrt_info(0, 1);
    _res_D_x(1, 1) =
        _tmp209 * sqrt_info(1, 2) + _tmp217 * sqrt_info(1, 0) + _tmp221 * sqrt_info(1, 1);
    _res_D_x(2, 1) =
        _tmp209 * sqrt_info(2, 2) + _tmp217 * sqrt_info(2, 0) + _tmp221 * sqrt_info(2, 1);
    _res_D_x(0, 2) =
        _tmp245 * sqrt_info(0, 1) + _tmp253 * sqrt_info(0, 2) + _tmp257 * sqrt_info(0, 0);
    _res_D_x(1, 2) =
        _tmp245 * sqrt_info(1, 1) + _tmp253 * sqrt_info(1, 2) + _tmp257 * sqrt_info(1, 0);
    _res_D_x(2, 2) =
        _tmp245 * sqrt_info(2, 1) + _tmp253 * sqrt_info(2, 2) + _tmp257 * sqrt_info(2, 0);
    _res_D_x(0, 3) =
        _tmp259 * sqrt_info(0, 1) + _tmp261 * sqrt_info(0, 2) + _tmp262 * sqrt_info(0, 0);
    _res_D_x(1, 3) =
        _tmp259 * sqrt_info(1, 1) + _tmp261 * sqrt_info(1, 2) + _tmp262 * sqrt_info(1, 0);
    _res_D_x(2, 3) =
        _tmp259 * sqrt_info(2, 1) + _tmp261 * sqrt_info(2, 2) + _tmp262 * sqrt_info(2, 0);
    _res_D_x(0, 4) =
        _tmp264 * sqrt_info(0, 2) + _tmp265 * sqrt_info(0, 0) + _tmp267 * sqrt_info(0, 1);
    _res_D_x(1, 4) =
        _tmp264 * sqrt_info(1, 2) + _tmp265 * sqrt_info(1, 0) + _tmp267 * sqrt_info(1, 1);
    _res_D_x(2, 4) =
        _tmp264 * sqrt_info(2, 2) + _tmp265 * sqrt_info(2, 0) + _tmp267 * sqrt_info(2, 1);
    _res_D_x(0, 5) =
        _tmp268 * sqrt_info(0, 1) + _tmp269 * sqrt_info(0, 0) + _tmp270 * sqrt_info(0, 2);
    _res_D_x(1, 5) =
        _tmp268 * sqrt_info(1, 1) + _tmp269 * sqrt_info(1, 0) + _tmp270 * sqrt_info(1, 2);
    _res_D_x(2, 5) =
        _tmp268 * sqrt_info(2, 1) + _tmp269 * sqrt_info(2, 0) + _tmp270 * sqrt_info(2, 2);
  }

  if (res_D_x_T_a != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 6>> _res_D_x_T_a{res_D_x_T_a};

    _res_D_x_T_a(0, 0) =
        _tmp290 * sqrt_info(0, 2) + _tmp300 * sqrt_info(0, 0) + _tmp305 * sqrt_info(0, 1);
    _res_D_x_T_a(1, 0) =
        _tmp290 * sqrt_info(1, 2) + _tmp300 * sqrt_info(1, 0) + _tmp305 * sqrt_info(1, 1);
    _res_D_x_T_a(2, 0) =
        _tmp290 * sqrt_info(2, 2) + _tmp300 * sqrt_info(2, 0) + _tmp305 * sqrt_info(2, 1);
    _res_D_x_T_a(0, 1) =
        _tmp320 * sqrt_info(0, 1) + _tmp327 * sqrt_info(0, 0) + _tmp331 * sqrt_info(0, 2);
    _res_D_x_T_a(1, 1) =
        _tmp320 * sqrt_info(1, 1) + _tmp327 * sqrt_info(1, 0) + _tmp331 * sqrt_info(1, 2);
    _res_D_x_T_a(2, 1) =
        _tmp320 * sqrt_info(2, 1) + _tmp327 * sqrt_info(2, 0) + _tmp331 * sqrt_info(2, 2);
    _res_D_x_T_a(0, 2) =
        _tmp341 * sqrt_info(0, 0) + _tmp348 * sqrt_info(0, 2) + _tmp352 * sqrt_info(0, 1);
    _res_D_x_T_a(1, 2) =
        _tmp341 * sqrt_info(1, 0) + _tmp348 * sqrt_info(1, 2) + _tmp352 * sqrt_info(1, 1);
    _res_D_x_T_a(2, 2) =
        _tmp341 * sqrt_info(2, 0) + _tmp348 * sqrt_info(2, 2) + _tmp352 * sqrt_info(2, 1);
    _res_D_x_T_a(0, 3) =
        _tmp353 * sqrt_info(0, 2) + _tmp354 * sqrt_info(0, 1) + _tmp355 * sqrt_info(0, 0);
    _res_D_x_T_a(1, 3) =
        _tmp353 * sqrt_info(1, 2) + _tmp354 * sqrt_info(1, 1) + _tmp355 * sqrt_info(1, 0);
    _res_D_x_T_a(2, 3) =
        _tmp353 * sqrt_info(2, 2) + _tmp354 * sqrt_info(2, 1) + _tmp355 * sqrt_info(2, 0);
    _res_D_x_T_a(0, 4) =
        _tmp356 * sqrt_info(0, 0) + _tmp357 * sqrt_info(0, 1) + _tmp358 * sqrt_info(0, 2);
    _res_D_x_T_a(1, 4) =
        _tmp356 * sqrt_info(1, 0) + _tmp357 * sqrt_info(1, 1) + _tmp358 * sqrt_info(1, 2);
    _res_D_x_T_a(2, 4) =
        _tmp356 * sqrt_info(2, 0) + _tmp357 * sqrt_info(2, 1) + _tmp358 * sqrt_info(2, 2);
    _res_D_x_T_a(0, 5) =
        _tmp359 * sqrt_info(0, 2) + _tmp360 * sqrt_info(0, 0) + _tmp361 * sqrt_info(0, 1);
    _res_D_x_T_a(1, 5) =
        _tmp359 * sqrt_info(1, 2) + _tmp360 * sqrt_info(1, 0) + _tmp361 * sqrt_info(1, 1);
    _res_D_x_T_a(2, 5) =
        _tmp359 * sqrt_info(2, 2) + _tmp360 * sqrt_info(2, 0) + _tmp361 * sqrt_info(2, 1);
  }

  if (res_D_y != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 6>> _res_D_y{res_D_y};

    _res_D_y(0, 0) =
        _tmp374 * sqrt_info(0, 2) + _tmp375 * sqrt_info(0, 1) + _tmp376 * sqrt_info(0, 0);
    _res_D_y(1, 0) =
        _tmp374 * sqrt_info(1, 2) + _tmp375 * sqrt_info(1, 1) + _tmp376 * sqrt_info(1, 0);
    _res_D_y(2, 0) =
        _tmp374 * sqrt_info(2, 2) + _tmp375 * sqrt_info(2, 1) + _tmp376 * sqrt_info(2, 0);
    _res_D_y(0, 1) =
        _tmp383 * sqrt_info(0, 2) + _tmp384 * sqrt_info(0, 0) + _tmp385 * sqrt_info(0, 1);
    _res_D_y(1, 1) =
        _tmp383 * sqrt_info(1, 2) + _tmp384 * sqrt_info(1, 0) + _tmp385 * sqrt_info(1, 1);
    _res_D_y(2, 1) =
        _tmp383 * sqrt_info(2, 2) + _tmp384 * sqrt_info(2, 0) + _tmp385 * sqrt_info(2, 1);
    _res_D_y(0, 2) =
        _tmp389 * sqrt_info(0, 1) + _tmp390 * sqrt_info(0, 0) + _tmp391 * sqrt_info(0, 2);
    _res_D_y(1, 2) =
        _tmp389 * sqrt_info(1, 1) + _tmp390 * sqrt_info(1, 0) + _tmp391 * sqrt_info(1, 2);
    _res_D_y(2, 2) =
        _tmp389 * sqrt_info(2, 1) + _tmp390 * sqrt_info(2, 0) + _tmp391 * sqrt_info(2, 2);
    _res_D_y(0, 3) =
        _tmp105 * sqrt_info(0, 1) + _tmp53 * sqrt_info(0, 2) + _tmp98 * sqrt_info(0, 0);
    _res_D_y(1, 3) =
        _tmp105 * sqrt_info(1, 1) + _tmp53 * sqrt_info(1, 2) + _tmp98 * sqrt_info(1, 0);
    _res_D_y(2, 3) =
        _tmp105 * sqrt_info(2, 1) + _tmp53 * sqrt_info(2, 2) + _tmp98 * sqrt_info(2, 0);
    _res_D_y(0, 4) =
        _tmp101 * sqrt_info(0, 0) + _tmp106 * sqrt_info(0, 1) + _tmp63 * sqrt_info(0, 2);
    _res_D_y(1, 4) =
        _tmp101 * sqrt_info(1, 0) + _tmp106 * sqrt_info(1, 1) + _tmp63 * sqrt_info(1, 2);
    _res_D_y(2, 4) =
        _tmp101 * sqrt_info(2, 0) + _tmp106 * sqrt_info(2, 1) + _tmp63 * sqrt_info(2, 2);
    _res_D_y(0, 5) =
        _tmp103 * sqrt_info(0, 1) + _tmp14 * sqrt_info(0, 2) + _tmp95 * sqrt_info(0, 0);
    _res_D_y(1, 5) =
        _tmp103 * sqrt_info(1, 1) + _tmp14 * sqrt_info(1, 2) + _tmp95 * sqrt_info(1, 0);
    _res_D_y(2, 5) =
        _tmp103 * sqrt_info(2, 1) + _tmp14 * sqrt_info(2, 2) + _tmp95 * sqrt_info(2, 0);
  }

  if (res_D_y_T_b != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 3, 6>> _res_D_y_T_b{res_D_y_T_b};

    _res_D_y_T_b(0, 0) = 0;
    _res_D_y_T_b(1, 0) = 0;
    _res_D_y_T_b(2, 0) = 0;
    _res_D_y_T_b(0, 1) = 0;
    _res_D_y_T_b(1, 1) = 0;
    _res_D_y_T_b(2, 1) = 0;
    _res_D_y_T_b(0, 2) = 0;
    _res_D_y_T_b(1, 2) = 0;
    _res_D_y_T_b(2, 2) = 0;
    _res_D_y_T_b(0, 3) =
        _tmp392 * sqrt_info(0, 1) + _tmp393 * sqrt_info(0, 0) + _tmp394 * sqrt_info(0, 2);
    _res_D_y_T_b(1, 3) =
        _tmp392 * sqrt_info(1, 1) + _tmp393 * sqrt_info(1, 0) + _tmp394 * sqrt_info(1, 2);
    _res_D_y_T_b(2, 3) =
        _tmp392 * sqrt_info(2, 1) + _tmp393 * sqrt_info(2, 0) + _tmp394 * sqrt_info(2, 2);
    _res_D_y_T_b(0, 4) =
        _tmp395 * sqrt_info(0, 2) + _tmp396 * sqrt_info(0, 1) + _tmp397 * sqrt_info(0, 0);
    _res_D_y_T_b(1, 4) =
        _tmp395 * sqrt_info(1, 2) + _tmp396 * sqrt_info(1, 1) + _tmp397 * sqrt_info(1, 0);
    _res_D_y_T_b(2, 4) =
        _tmp395 * sqrt_info(2, 2) + _tmp396 * sqrt_info(2, 1) + _tmp397 * sqrt_info(2, 0);
    _res_D_y_T_b(0, 5) =
        _tmp398 * sqrt_info(0, 0) + _tmp399 * sqrt_info(0, 1) + _tmp400 * sqrt_info(0, 2);
    _res_D_y_T_b(1, 5) =
        _tmp398 * sqrt_info(1, 0) + _tmp399 * sqrt_info(1, 1) + _tmp400 * sqrt_info(1, 2);
    _res_D_y_T_b(2, 5) =
        _tmp398 * sqrt_info(2, 0) + _tmp399 * sqrt_info(2, 1) + _tmp400 * sqrt_info(2, 2);
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_hyperion
