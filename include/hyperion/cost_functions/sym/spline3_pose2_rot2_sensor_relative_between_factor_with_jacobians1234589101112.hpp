// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose2.h>
#include <sym/rot2.h>

namespace sym_hyperion {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline3_pose2_rot2_sensor_relative_between_factor
 *
 * Args:
 *     lambdas_x: Matrix31
 *     x0: Pose2
 *     x1: Pose2
 *     x2: Pose2
 *     x3: Pose2
 *     x_T_a: Pose2
 *     a_T_b: Rot2
 *     lambdas_y: Matrix31
 *     y0: Pose2
 *     y1: Pose2
 *     y2: Pose2
 *     y3: Pose2
 *     y_T_b: Pose2
 *     sqrt_info: Matrix11
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix11
 *     res_D_x0: (1x3) jacobian of res (1) wrt arg x0 (3)
 *     res_D_x1: (1x3) jacobian of res (1) wrt arg x1 (3)
 *     res_D_x2: (1x3) jacobian of res (1) wrt arg x2 (3)
 *     res_D_x3: (1x3) jacobian of res (1) wrt arg x3 (3)
 *     res_D_x_T_a: (1x3) jacobian of res (1) wrt arg x_T_a (3)
 *     res_D_y0: (1x3) jacobian of res (1) wrt arg y0 (3)
 *     res_D_y1: (1x3) jacobian of res (1) wrt arg y1 (3)
 *     res_D_y2: (1x3) jacobian of res (1) wrt arg y2 (3)
 *     res_D_y3: (1x3) jacobian of res (1) wrt arg y3 (3)
 *     res_D_y_T_b: (1x3) jacobian of res (1) wrt arg y_T_b (3)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 1, 1> Spline3Pose2Rot2SensorRelativeBetweenFactorWithJacobians1234589101112(
    const Eigen::Matrix<Scalar, 3, 1>& lambdas_x, const sym::Pose2<Scalar>& x0,
    const sym::Pose2<Scalar>& x1, const sym::Pose2<Scalar>& x2, const sym::Pose2<Scalar>& x3,
    const sym::Pose2<Scalar>& x_T_a, const sym::Rot2<Scalar>& a_T_b,
    const Eigen::Matrix<Scalar, 3, 1>& lambdas_y, const sym::Pose2<Scalar>& y0,
    const sym::Pose2<Scalar>& y1, const sym::Pose2<Scalar>& y2, const sym::Pose2<Scalar>& y3,
    const sym::Pose2<Scalar>& y_T_b, const Eigen::Matrix<Scalar, 1, 1>& sqrt_info,
    const Scalar epsilon, Scalar* const res_D_x0 = nullptr, Scalar* const res_D_x1 = nullptr,
    Scalar* const res_D_x2 = nullptr, Scalar* const res_D_x3 = nullptr,
    Scalar* const res_D_x_T_a = nullptr, Scalar* const res_D_y0 = nullptr,
    Scalar* const res_D_y1 = nullptr, Scalar* const res_D_y2 = nullptr,
    Scalar* const res_D_y3 = nullptr, Scalar* const res_D_y_T_b = nullptr) {
  // Total ops: 657

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x3 = x3.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x_T_a = x_T_a.Data();
  const Eigen::Matrix<Scalar, 2, 1>& _a_T_b = a_T_b.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _y0 = y0.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _y1 = y1.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _y2 = y2.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _y3 = y3.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _y_T_b = y_T_b.Data();

  // Intermediate terms (236)
  const Scalar _tmp0 = _x2[1] * _x3[0];
  const Scalar _tmp1 = _x2[0] * _x3[1];
  const Scalar _tmp2 = -_tmp0 + _tmp1;
  const Scalar _tmp3 = _x2[0] * _x3[0];
  const Scalar _tmp4 = _x2[1] * _x3[1];
  const Scalar _tmp5 = _tmp3 + _tmp4;
  const Scalar _tmp6 = _tmp5 + epsilon * ((((_tmp5) > 0) - ((_tmp5) < 0)) + Scalar(0.5));
  const Scalar _tmp7 = lambdas_x(2, 0) * std::atan2(_tmp2, _tmp6);
  const Scalar _tmp8 = std::cos(_tmp7);
  const Scalar _tmp9 = _x1[0] * _x2[1];
  const Scalar _tmp10 = _x1[1] * _x2[0];
  const Scalar _tmp11 = -_tmp10 + _tmp9;
  const Scalar _tmp12 = _x1[0] * _x2[0];
  const Scalar _tmp13 = _x1[1] * _x2[1];
  const Scalar _tmp14 = _tmp12 + _tmp13;
  const Scalar _tmp15 = _tmp14 + epsilon * ((((_tmp14) > 0) - ((_tmp14) < 0)) + Scalar(0.5));
  const Scalar _tmp16 = lambdas_x(1, 0) * std::atan2(_tmp11, _tmp15);
  const Scalar _tmp17 = std::cos(_tmp16);
  const Scalar _tmp18 = _tmp17 * _tmp8;
  const Scalar _tmp19 = std::sin(_tmp7);
  const Scalar _tmp20 = std::sin(_tmp16);
  const Scalar _tmp21 = _tmp19 * _tmp20;
  const Scalar _tmp22 = _tmp18 - _tmp21;
  const Scalar _tmp23 = _x0[1] * _x1[0];
  const Scalar _tmp24 = _x0[0] * _x1[1];
  const Scalar _tmp25 = -_tmp23 + _tmp24;
  const Scalar _tmp26 = _x0[1] * _x1[1];
  const Scalar _tmp27 = _x0[0] * _x1[0];
  const Scalar _tmp28 = _tmp26 + _tmp27;
  const Scalar _tmp29 = _tmp28 + epsilon * ((((_tmp28) > 0) - ((_tmp28) < 0)) + Scalar(0.5));
  const Scalar _tmp30 = lambdas_x(0, 0) * std::atan2(_tmp25, _tmp29);
  const Scalar _tmp31 = std::cos(_tmp30);
  const Scalar _tmp32 = _tmp22 * _tmp31;
  const Scalar _tmp33 = _tmp20 * _tmp8;
  const Scalar _tmp34 = _tmp17 * _tmp19;
  const Scalar _tmp35 = _tmp33 + _tmp34;
  const Scalar _tmp36 = std::sin(_tmp30);
  const Scalar _tmp37 = _tmp35 * _tmp36;
  const Scalar _tmp38 = _tmp32 - _tmp37;
  const Scalar _tmp39 = _tmp38 * _x0[1];
  const Scalar _tmp40 = _tmp22 * _tmp36;
  const Scalar _tmp41 = _tmp31 * _tmp35;
  const Scalar _tmp42 = _tmp40 + _tmp41;
  const Scalar _tmp43 = _tmp42 * _x0[0];
  const Scalar _tmp44 = _tmp39 + _tmp43;
  const Scalar _tmp45 = _tmp44 * _x_T_a[0];
  const Scalar _tmp46 = _tmp38 * _x0[0] - _tmp42 * _x0[1];
  const Scalar _tmp47 = _tmp46 * _x_T_a[1];
  const Scalar _tmp48 = _tmp45 + _tmp47;
  const Scalar _tmp49 = _y1[0] * _y2[1];
  const Scalar _tmp50 = _y1[1] * _y2[0];
  const Scalar _tmp51 = _tmp49 - _tmp50;
  const Scalar _tmp52 = _y1[0] * _y2[0];
  const Scalar _tmp53 = _y1[1] * _y2[1];
  const Scalar _tmp54 = _tmp52 + _tmp53;
  const Scalar _tmp55 = _tmp54 + epsilon * ((((_tmp54) > 0) - ((_tmp54) < 0)) + Scalar(0.5));
  const Scalar _tmp56 = lambdas_y(1, 0) * std::atan2(_tmp51, _tmp55);
  const Scalar _tmp57 = std::sin(_tmp56);
  const Scalar _tmp58 = _y2[0] * _y3[1];
  const Scalar _tmp59 = _y2[1] * _y3[0];
  const Scalar _tmp60 = _tmp58 - _tmp59;
  const Scalar _tmp61 = _y2[1] * _y3[1];
  const Scalar _tmp62 = _y2[0] * _y3[0];
  const Scalar _tmp63 = _tmp61 + _tmp62;
  const Scalar _tmp64 = _tmp63 + epsilon * ((((_tmp63) > 0) - ((_tmp63) < 0)) + Scalar(0.5));
  const Scalar _tmp65 = lambdas_y(2, 0) * std::atan2(_tmp60, _tmp64);
  const Scalar _tmp66 = std::cos(_tmp65);
  const Scalar _tmp67 = _tmp57 * _tmp66;
  const Scalar _tmp68 = std::cos(_tmp56);
  const Scalar _tmp69 = std::sin(_tmp65);
  const Scalar _tmp70 = _tmp68 * _tmp69;
  const Scalar _tmp71 = _tmp67 + _tmp70;
  const Scalar _tmp72 = _y0[1] * _y1[0];
  const Scalar _tmp73 = _y0[0] * _y1[1];
  const Scalar _tmp74 = -_tmp72 + _tmp73;
  const Scalar _tmp75 = _y0[0] * _y1[0];
  const Scalar _tmp76 = _y0[1] * _y1[1];
  const Scalar _tmp77 = _tmp75 + _tmp76;
  const Scalar _tmp78 = _tmp77 + epsilon * ((((_tmp77) > 0) - ((_tmp77) < 0)) + Scalar(0.5));
  const Scalar _tmp79 = lambdas_y(0, 0) * std::atan2(_tmp74, _tmp78);
  const Scalar _tmp80 = std::sin(_tmp79);
  const Scalar _tmp81 = _tmp71 * _tmp80;
  const Scalar _tmp82 = _tmp57 * _tmp69;
  const Scalar _tmp83 = _tmp66 * _tmp68;
  const Scalar _tmp84 = -_tmp82 + _tmp83;
  const Scalar _tmp85 = std::cos(_tmp79);
  const Scalar _tmp86 = _tmp84 * _tmp85;
  const Scalar _tmp87 = -_tmp81 + _tmp86;
  const Scalar _tmp88 = _tmp87 * _y0[1];
  const Scalar _tmp89 = _tmp71 * _tmp85;
  const Scalar _tmp90 = _tmp80 * _tmp84;
  const Scalar _tmp91 = _tmp89 + _tmp90;
  const Scalar _tmp92 = _tmp91 * _y0[0];
  const Scalar _tmp93 = _tmp88 + _tmp92;
  const Scalar _tmp94 = _tmp87 * _y0[0] - _tmp91 * _y0[1];
  const Scalar _tmp95 = -_tmp93 * _y_T_b[1] + _tmp94 * _y_T_b[0];
  const Scalar _tmp96 = _tmp48 * _tmp95;
  const Scalar _tmp97 = -_tmp44 * _x_T_a[1] + _tmp46 * _x_T_a[0];
  const Scalar _tmp98 = _tmp93 * _y_T_b[0];
  const Scalar _tmp99 = _tmp94 * _y_T_b[1];
  const Scalar _tmp100 = _tmp98 + _tmp99;
  const Scalar _tmp101 = _tmp100 * _tmp97;
  const Scalar _tmp102 = _tmp101 - _tmp96;
  const Scalar _tmp103 = _tmp95 * _tmp97;
  const Scalar _tmp104 = _tmp100 * _tmp48 + _tmp103;
  const Scalar _tmp105 = _a_T_b[0] * _tmp102 - _a_T_b[1] * _tmp104;
  const Scalar _tmp106 = _a_T_b[0] * _tmp104 + _a_T_b[1] * _tmp102;
  const Scalar _tmp107 = _tmp106 + epsilon * ((((_tmp106) > 0) - ((_tmp106) < 0)) + Scalar(0.5));
  const Scalar _tmp108 = std::pow(_tmp25, Scalar(2));
  const Scalar _tmp109 = std::pow(_tmp29, Scalar(2));
  const Scalar _tmp110 = Scalar(1.0) / (_tmp109);
  const Scalar _tmp111 = Scalar(1.0) / (_tmp29);
  const Scalar _tmp112 = _tmp109 * lambdas_x(0, 0) / (_tmp108 + _tmp109);
  const Scalar _tmp113 = _tmp112 * (-_tmp108 * _tmp110 + _tmp111 * (-_tmp26 - _tmp27));
  const Scalar _tmp114 = -_tmp113 * _tmp40 - _tmp113 * _tmp41;
  const Scalar _tmp115 = _tmp113 * _tmp32 - _tmp113 * _tmp37;
  const Scalar _tmp116 = _tmp114 * _x0[1] + _tmp115 * _x0[0] + _tmp46;
  const Scalar _tmp117 = _tmp114 * _x0[0] - _tmp115 * _x0[1] - _tmp39 - _tmp43;
  const Scalar _tmp118 = _tmp116 * _x_T_a[0] + _tmp117 * _x_T_a[1];
  const Scalar _tmp119 = -_tmp116 * _x_T_a[1] + _tmp117 * _x_T_a[0];
  const Scalar _tmp120 = _tmp100 * _tmp118 + _tmp119 * _tmp95;
  const Scalar _tmp121 = _tmp100 * _tmp119 - _tmp118 * _tmp95;
  const Scalar _tmp122 = std::pow(_tmp107, Scalar(2));
  const Scalar _tmp123 = _tmp105 / _tmp122;
  const Scalar _tmp124 = Scalar(1.0) / (_tmp107);
  const Scalar _tmp125 = _tmp122 * sqrt_info(0, 0) / (std::pow(_tmp105, Scalar(2)) + _tmp122);
  const Scalar _tmp126 = std::pow(_tmp11, Scalar(2));
  const Scalar _tmp127 = std::pow(_tmp15, Scalar(2));
  const Scalar _tmp128 = Scalar(1.0) / (_tmp127);
  const Scalar _tmp129 = Scalar(1.0) / (_tmp15);
  const Scalar _tmp130 = _tmp127 * lambdas_x(1, 0) / (_tmp126 + _tmp127);
  const Scalar _tmp131 = _tmp130 * (-_tmp126 * _tmp128 + _tmp129 * (-_tmp12 - _tmp13));
  const Scalar _tmp132 = -_tmp131 * _tmp33 - _tmp131 * _tmp34;
  const Scalar _tmp133 = _tmp112 * (-_tmp110 * _tmp25 * (_tmp23 - _tmp24) + _tmp111 * _tmp28);
  const Scalar _tmp134 = _tmp131 * _tmp18 - _tmp131 * _tmp21;
  const Scalar _tmp135 = _tmp132 * _tmp36 + _tmp133 * _tmp32 - _tmp133 * _tmp37 + _tmp134 * _tmp31;
  const Scalar _tmp136 = _tmp132 * _tmp31 - _tmp133 * _tmp40 - _tmp133 * _tmp41 - _tmp134 * _tmp36;
  const Scalar _tmp137 = _tmp135 * _x0[0] + _tmp136 * _x0[1];
  const Scalar _tmp138 = -_tmp135 * _x0[1] + _tmp136 * _x0[0];
  const Scalar _tmp139 = -_tmp137 * _x_T_a[1] + _tmp138 * _x_T_a[0];
  const Scalar _tmp140 = _tmp137 * _x_T_a[0] + _tmp138 * _x_T_a[1];
  const Scalar _tmp141 = _tmp100 * _tmp140 + _tmp139 * _tmp95;
  const Scalar _tmp142 = _tmp100 * _tmp139 - _tmp140 * _tmp95;
  const Scalar _tmp143 = _tmp130 * (-_tmp11 * _tmp128 * (_tmp10 - _tmp9) + _tmp129 * _tmp14);
  const Scalar _tmp144 = std::pow(_tmp2, Scalar(2));
  const Scalar _tmp145 = std::pow(_tmp6, Scalar(2));
  const Scalar _tmp146 = Scalar(1.0) / (_tmp145);
  const Scalar _tmp147 = Scalar(1.0) / (_tmp6);
  const Scalar _tmp148 = _tmp145 * lambdas_x(2, 0) / (_tmp144 + _tmp145);
  const Scalar _tmp149 = _tmp148 * (-_tmp144 * _tmp146 + _tmp147 * (-_tmp3 - _tmp4));
  const Scalar _tmp150 = -_tmp143 * _tmp33 - _tmp143 * _tmp34 - _tmp149 * _tmp33 - _tmp149 * _tmp34;
  const Scalar _tmp151 = _tmp143 * _tmp18 - _tmp143 * _tmp21 + _tmp149 * _tmp18 - _tmp149 * _tmp21;
  const Scalar _tmp152 = _tmp150 * _tmp31 - _tmp151 * _tmp36;
  const Scalar _tmp153 = _tmp150 * _tmp36 + _tmp151 * _tmp31;
  const Scalar _tmp154 = _tmp152 * _x0[0] - _tmp153 * _x0[1];
  const Scalar _tmp155 = _tmp152 * _x0[1] + _tmp153 * _x0[0];
  const Scalar _tmp156 = _tmp154 * _x_T_a[0] - _tmp155 * _x_T_a[1];
  const Scalar _tmp157 = _tmp154 * _x_T_a[1] + _tmp155 * _x_T_a[0];
  const Scalar _tmp158 = _tmp100 * _tmp157 + _tmp156 * _tmp95;
  const Scalar _tmp159 = _tmp100 * _tmp156 - _tmp157 * _tmp95;
  const Scalar _tmp160 = _tmp148 * (-_tmp146 * _tmp2 * (_tmp0 - _tmp1) + _tmp147 * _tmp5);
  const Scalar _tmp161 = _tmp160 * _tmp18 - _tmp160 * _tmp21;
  const Scalar _tmp162 = -_tmp160 * _tmp33 - _tmp160 * _tmp34;
  const Scalar _tmp163 = -_tmp161 * _tmp36 + _tmp162 * _tmp31;
  const Scalar _tmp164 = _tmp161 * _tmp31 + _tmp162 * _tmp36;
  const Scalar _tmp165 = _tmp163 * _x0[0] - _tmp164 * _x0[1];
  const Scalar _tmp166 = _tmp163 * _x0[1] + _tmp164 * _x0[0];
  const Scalar _tmp167 = _tmp165 * _x_T_a[1] + _tmp166 * _x_T_a[0];
  const Scalar _tmp168 = _tmp165 * _x_T_a[0] - _tmp166 * _x_T_a[1];
  const Scalar _tmp169 = _tmp100 * _tmp167 + _tmp168 * _tmp95;
  const Scalar _tmp170 = _tmp100 * _tmp168 - _tmp167 * _tmp95;
  const Scalar _tmp171 = -_tmp45 - _tmp47;
  const Scalar _tmp172 = _tmp100 * _tmp171 - _tmp103;
  const Scalar _tmp173 = _tmp101 + _tmp171 * _tmp95;
  const Scalar _tmp174 = std::pow(_tmp74, Scalar(2));
  const Scalar _tmp175 = std::pow(_tmp78, Scalar(2));
  const Scalar _tmp176 = Scalar(1.0) / (_tmp175);
  const Scalar _tmp177 = Scalar(1.0) / (_tmp78);
  const Scalar _tmp178 = _tmp175 * lambdas_y(0, 0) / (_tmp174 + _tmp175);
  const Scalar _tmp179 = _tmp178 * (-_tmp174 * _tmp176 + _tmp177 * (-_tmp75 - _tmp76));
  const Scalar _tmp180 = -_tmp179 * _tmp89 - _tmp179 * _tmp90;
  const Scalar _tmp181 = -_tmp179 * _tmp81 + _tmp179 * _tmp86;
  const Scalar _tmp182 = _tmp180 * _y0[0] - _tmp181 * _y0[1] - _tmp88 - _tmp92;
  const Scalar _tmp183 = _tmp180 * _y0[1] + _tmp181 * _y0[0] + _tmp94;
  const Scalar _tmp184 = _tmp182 * _y_T_b[0] - _tmp183 * _y_T_b[1];
  const Scalar _tmp185 = _tmp182 * _y_T_b[1] + _tmp183 * _y_T_b[0];
  const Scalar _tmp186 = -_tmp184 * _tmp48 + _tmp185 * _tmp97;
  const Scalar _tmp187 = _tmp184 * _tmp97 + _tmp185 * _tmp48;
  const Scalar _tmp188 = Scalar(1.0) / (_tmp55);
  const Scalar _tmp189 = std::pow(_tmp51, Scalar(2));
  const Scalar _tmp190 = std::pow(_tmp55, Scalar(2));
  const Scalar _tmp191 = Scalar(1.0) / (_tmp190);
  const Scalar _tmp192 = _tmp190 * lambdas_y(1, 0) / (_tmp189 + _tmp190);
  const Scalar _tmp193 = _tmp192 * (_tmp188 * (-_tmp52 - _tmp53) - _tmp189 * _tmp191);
  const Scalar _tmp194 = -_tmp193 * _tmp67 - _tmp193 * _tmp70;
  const Scalar _tmp195 = -_tmp193 * _tmp82 + _tmp193 * _tmp83;
  const Scalar _tmp196 = _tmp178 * (-_tmp176 * _tmp74 * (_tmp72 - _tmp73) + _tmp177 * _tmp77);
  const Scalar _tmp197 = _tmp194 * _tmp80 + _tmp195 * _tmp85 - _tmp196 * _tmp81 + _tmp196 * _tmp86;
  const Scalar _tmp198 = _tmp194 * _tmp85 - _tmp195 * _tmp80 - _tmp196 * _tmp89 - _tmp196 * _tmp90;
  const Scalar _tmp199 = -_tmp197 * _y0[1] + _tmp198 * _y0[0];
  const Scalar _tmp200 = _tmp197 * _y0[0] + _tmp198 * _y0[1];
  const Scalar _tmp201 = _tmp199 * _y_T_b[1] + _tmp200 * _y_T_b[0];
  const Scalar _tmp202 = _tmp199 * _y_T_b[0] - _tmp200 * _y_T_b[1];
  const Scalar _tmp203 = _tmp201 * _tmp97 - _tmp202 * _tmp48;
  const Scalar _tmp204 = _tmp201 * _tmp48 + _tmp202 * _tmp97;
  const Scalar _tmp205 = Scalar(1.0) / (_tmp64);
  const Scalar _tmp206 = std::pow(_tmp60, Scalar(2));
  const Scalar _tmp207 = std::pow(_tmp64, Scalar(2));
  const Scalar _tmp208 = Scalar(1.0) / (_tmp207);
  const Scalar _tmp209 = _tmp207 * lambdas_y(2, 0) / (_tmp206 + _tmp207);
  const Scalar _tmp210 = _tmp209 * (_tmp205 * (-_tmp61 - _tmp62) - _tmp206 * _tmp208);
  const Scalar _tmp211 = _tmp192 * (_tmp188 * _tmp54 - _tmp191 * _tmp51 * (-_tmp49 + _tmp50));
  const Scalar _tmp212 = -_tmp210 * _tmp82 + _tmp210 * _tmp83 - _tmp211 * _tmp82 + _tmp211 * _tmp83;
  const Scalar _tmp213 = -_tmp210 * _tmp67 - _tmp210 * _tmp70 - _tmp211 * _tmp67 - _tmp211 * _tmp70;
  const Scalar _tmp214 = _tmp212 * _tmp85 + _tmp213 * _tmp80;
  const Scalar _tmp215 = -_tmp212 * _tmp80 + _tmp213 * _tmp85;
  const Scalar _tmp216 = _tmp214 * _y0[0] + _tmp215 * _y0[1];
  const Scalar _tmp217 = -_tmp214 * _y0[1] + _tmp215 * _y0[0];
  const Scalar _tmp218 = -_tmp216 * _y_T_b[1] + _tmp217 * _y_T_b[0];
  const Scalar _tmp219 = _tmp216 * _y_T_b[0] + _tmp217 * _y_T_b[1];
  const Scalar _tmp220 = -_tmp218 * _tmp48 + _tmp219 * _tmp97;
  const Scalar _tmp221 = _tmp218 * _tmp97 + _tmp219 * _tmp48;
  const Scalar _tmp222 = _tmp209 * (_tmp205 * _tmp63 - _tmp208 * _tmp60 * (-_tmp58 + _tmp59));
  const Scalar _tmp223 = -_tmp222 * _tmp67 - _tmp222 * _tmp70;
  const Scalar _tmp224 = -_tmp222 * _tmp82 + _tmp222 * _tmp83;
  const Scalar _tmp225 = _tmp223 * _tmp80 + _tmp224 * _tmp85;
  const Scalar _tmp226 = _tmp223 * _tmp85 - _tmp224 * _tmp80;
  const Scalar _tmp227 = -_tmp225 * _y0[1] + _tmp226 * _y0[0];
  const Scalar _tmp228 = _tmp225 * _y0[0] + _tmp226 * _y0[1];
  const Scalar _tmp229 = _tmp227 * _y_T_b[0] - _tmp228 * _y_T_b[1];
  const Scalar _tmp230 = _tmp227 * _y_T_b[1] + _tmp228 * _y_T_b[0];
  const Scalar _tmp231 = _tmp229 * _tmp97 + _tmp230 * _tmp48;
  const Scalar _tmp232 = -_tmp229 * _tmp48 + _tmp230 * _tmp97;
  const Scalar _tmp233 = -_tmp98 - _tmp99;
  const Scalar _tmp234 = _tmp103 - _tmp233 * _tmp48;
  const Scalar _tmp235 = _tmp233 * _tmp97 + _tmp96;

  // Output terms (11)
  Eigen::Matrix<Scalar, 1, 1> _res;

  _res(0, 0) = sqrt_info(0, 0) * std::atan2(_tmp105, _tmp107);

  if (res_D_x0 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 1, 3>> _res_D_x0{res_D_x0};

    _res_D_x0.setZero();

    _res_D_x0(0, 0) = _tmp125 * (-_tmp123 * (_a_T_b[0] * _tmp120 + _a_T_b[1] * _tmp121) +
                                 _tmp124 * (_a_T_b[0] * _tmp121 - _a_T_b[1] * _tmp120));
  }

  if (res_D_x1 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 1, 3>> _res_D_x1{res_D_x1};

    _res_D_x1.setZero();

    _res_D_x1(0, 0) = _tmp125 * (-_tmp123 * (_a_T_b[0] * _tmp141 + _a_T_b[1] * _tmp142) +
                                 _tmp124 * (_a_T_b[0] * _tmp142 - _a_T_b[1] * _tmp141));
  }

  if (res_D_x2 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 1, 3>> _res_D_x2{res_D_x2};

    _res_D_x2.setZero();

    _res_D_x2(0, 0) = _tmp125 * (-_tmp123 * (_a_T_b[0] * _tmp158 + _a_T_b[1] * _tmp159) +
                                 _tmp124 * (_a_T_b[0] * _tmp159 - _a_T_b[1] * _tmp158));
  }

  if (res_D_x3 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 1, 3>> _res_D_x3{res_D_x3};

    _res_D_x3.setZero();

    _res_D_x3(0, 0) = _tmp125 * (-_tmp123 * (_a_T_b[0] * _tmp169 + _a_T_b[1] * _tmp170) +
                                 _tmp124 * (_a_T_b[0] * _tmp170 - _a_T_b[1] * _tmp169));
  }

  if (res_D_x_T_a != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 1, 3>> _res_D_x_T_a{res_D_x_T_a};

    _res_D_x_T_a.setZero();

    _res_D_x_T_a(0, 0) = _tmp125 * (-_tmp123 * (_a_T_b[0] * _tmp173 + _a_T_b[1] * _tmp172) +
                                    _tmp124 * (_a_T_b[0] * _tmp172 - _a_T_b[1] * _tmp173));
  }

  if (res_D_y0 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 1, 3>> _res_D_y0{res_D_y0};

    _res_D_y0.setZero();

    _res_D_y0(0, 0) = _tmp125 * (-_tmp123 * (_a_T_b[0] * _tmp187 + _a_T_b[1] * _tmp186) +
                                 _tmp124 * (_a_T_b[0] * _tmp186 - _a_T_b[1] * _tmp187));
  }

  if (res_D_y1 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 1, 3>> _res_D_y1{res_D_y1};

    _res_D_y1.setZero();

    _res_D_y1(0, 0) = _tmp125 * (-_tmp123 * (_a_T_b[0] * _tmp204 + _a_T_b[1] * _tmp203) +
                                 _tmp124 * (_a_T_b[0] * _tmp203 - _a_T_b[1] * _tmp204));
  }

  if (res_D_y2 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 1, 3>> _res_D_y2{res_D_y2};

    _res_D_y2.setZero();

    _res_D_y2(0, 0) = _tmp125 * (-_tmp123 * (_a_T_b[0] * _tmp221 + _a_T_b[1] * _tmp220) +
                                 _tmp124 * (_a_T_b[0] * _tmp220 - _a_T_b[1] * _tmp221));
  }

  if (res_D_y3 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 1, 3>> _res_D_y3{res_D_y3};

    _res_D_y3.setZero();

    _res_D_y3(0, 0) = _tmp125 * (-_tmp123 * (_a_T_b[0] * _tmp231 + _a_T_b[1] * _tmp232) +
                                 _tmp124 * (_a_T_b[0] * _tmp232 - _a_T_b[1] * _tmp231));
  }

  if (res_D_y_T_b != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 1, 3>> _res_D_y_T_b{res_D_y_T_b};

    _res_D_y_T_b.setZero();

    _res_D_y_T_b(0, 0) = _tmp125 * (-_tmp123 * (_a_T_b[0] * _tmp235 + _a_T_b[1] * _tmp234) +
                                    _tmp124 * (_a_T_b[0] * _tmp234 - _a_T_b[1] * _tmp235));
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_hyperion
