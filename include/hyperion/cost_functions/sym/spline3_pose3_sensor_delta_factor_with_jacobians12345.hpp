// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>

namespace sym_hyperion {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline3_pose3_sensor_delta_factor
 *
 * Args:
 *     lambdas: Matrix31
 *     x0: Pose3
 *     x1: Pose3
 *     x2: Pose3
 *     x3: Pose3
 *     x_T_y: Pose3
 *     y: Pose3
 *     sqrt_info: Matrix66
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix61
 *     res_D_x0: (6x6) jacobian of res (6) wrt arg x0 (6)
 *     res_D_x1: (6x6) jacobian of res (6) wrt arg x1 (6)
 *     res_D_x2: (6x6) jacobian of res (6) wrt arg x2 (6)
 *     res_D_x3: (6x6) jacobian of res (6) wrt arg x3 (6)
 *     res_D_x_T_y: (6x6) jacobian of res (6) wrt arg x_T_y (6)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 6, 1> Spline3Pose3SensorDeltaFactorWithJacobians12345(
    const Eigen::Matrix<Scalar, 3, 1>& lambdas, const sym::Pose3<Scalar>& x0,
    const sym::Pose3<Scalar>& x1, const sym::Pose3<Scalar>& x2, const sym::Pose3<Scalar>& x3,
    const sym::Pose3<Scalar>& x_T_y, const sym::Pose3<Scalar>& y,
    const Eigen::Matrix<Scalar, 6, 6>& sqrt_info, const Scalar epsilon,
    Scalar* const res_D_x0 = nullptr, Scalar* const res_D_x1 = nullptr,
    Scalar* const res_D_x2 = nullptr, Scalar* const res_D_x3 = nullptr,
    Scalar* const res_D_x_T_y = nullptr) {
  // Total ops: 8728

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x3 = x3.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x_T_y = x_T_y.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y = y.Data();

  // Intermediate terms (1801)
  const Scalar _tmp0 = _x1[2] * _x2[3];
  const Scalar _tmp1 = _x1[1] * _x2[0];
  const Scalar _tmp2 = _x1[0] * _x2[1];
  const Scalar _tmp3 = _x1[3] * _x2[2];
  const Scalar _tmp4 = -_tmp0 + _tmp1 - _tmp2 + _tmp3;
  const Scalar _tmp5 = _x2[2] * _x3[2];
  const Scalar _tmp6 = _x2[0] * _x3[0];
  const Scalar _tmp7 = _x2[1] * _x3[1];
  const Scalar _tmp8 = -_tmp5 - _tmp6 - _tmp7;
  const Scalar _tmp9 = _x2[3] * _x3[3];
  const Scalar _tmp10 =
      2 * std::min<Scalar>(0, (((-_tmp8 + _tmp9) > 0) - ((-_tmp8 + _tmp9) < 0))) + 1;
  const Scalar _tmp11 = _tmp10 * lambdas(2, 0);
  const Scalar _tmp12 = _tmp11 * _tmp4;
  const Scalar _tmp13 = _x2[2] * _x3[3];
  const Scalar _tmp14 = _x2[0] * _x3[1];
  const Scalar _tmp15 = _x2[3] * _x3[2];
  const Scalar _tmp16 = _x2[1] * _x3[0];
  const Scalar _tmp17 = -_tmp13 - _tmp14 + _tmp15 + _tmp16;
  const Scalar _tmp18 = 1 - epsilon;
  const Scalar _tmp19 = std::min<Scalar>(_tmp18, std::fabs(_tmp8 - _tmp9));
  const Scalar _tmp20 = 1 - std::pow(_tmp19, Scalar(2));
  const Scalar _tmp21 = std::acos(_tmp19);
  const Scalar _tmp22 = std::pow(_tmp10, Scalar(2));
  const Scalar _tmp23 = std::pow(lambdas(2, 0), Scalar(2));
  const Scalar _tmp24 = 4 * _tmp22 * _tmp23;
  const Scalar _tmp25 = std::pow(_tmp17, Scalar(2)) * _tmp24;
  const Scalar _tmp26 = std::pow(_tmp21, Scalar(2)) / _tmp20;
  const Scalar _tmp27 = _x2[2] * _x3[0];
  const Scalar _tmp28 = _x2[0] * _x3[2];
  const Scalar _tmp29 = _x2[3] * _x3[1];
  const Scalar _tmp30 = _x2[1] * _x3[3];
  const Scalar _tmp31 = -_tmp27 + _tmp28 + _tmp29 - _tmp30;
  const Scalar _tmp32 = _tmp24 * std::pow(_tmp31, Scalar(2));
  const Scalar _tmp33 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp34 = _x2[2] * _x3[1];
  const Scalar _tmp35 = _x2[0] * _x3[3];
  const Scalar _tmp36 = _x2[3] * _x3[0];
  const Scalar _tmp37 = _x2[1] * _x3[2];
  const Scalar _tmp38 = _tmp34 - _tmp35 + _tmp36 - _tmp37;
  const Scalar _tmp39 = _tmp24 * std::pow(_tmp38, Scalar(2));
  const Scalar _tmp40 =
      std::sqrt(Scalar(_tmp25 * _tmp26 + _tmp26 * _tmp32 + _tmp26 * _tmp39 + _tmp33));
  const Scalar _tmp41 = (Scalar(1) / Scalar(2)) * _tmp40;
  const Scalar _tmp42 = _tmp21 * std::sin(_tmp41) / (std::sqrt(_tmp20) * _tmp40);
  const Scalar _tmp43 = _x1[0] * _x2[0];
  const Scalar _tmp44 = _x1[1] * _x2[1];
  const Scalar _tmp45 = _x1[2] * _x2[2];
  const Scalar _tmp46 = -_tmp43 - _tmp44 - _tmp45;
  const Scalar _tmp47 = _x1[3] * _x2[3];
  const Scalar _tmp48 =
      2 * std::min<Scalar>(0, (((-_tmp46 + _tmp47) > 0) - ((-_tmp46 + _tmp47) < 0))) + 1;
  const Scalar _tmp49 = _tmp48 * lambdas(1, 0);
  const Scalar _tmp50 = std::min<Scalar>(_tmp18, std::fabs(_tmp46 - _tmp47));
  const Scalar _tmp51 = 1 - std::pow(_tmp50, Scalar(2));
  const Scalar _tmp52 = std::acos(_tmp50);
  const Scalar _tmp53 = std::pow(_tmp52, Scalar(2)) / _tmp51;
  const Scalar _tmp54 = _x1[1] * _x2[3];
  const Scalar _tmp55 = _x1[2] * _x2[0];
  const Scalar _tmp56 = _x1[3] * _x2[1];
  const Scalar _tmp57 = _x1[0] * _x2[2];
  const Scalar _tmp58 = -_tmp54 - _tmp55 + _tmp56 + _tmp57;
  const Scalar _tmp59 = std::pow(_tmp48, Scalar(2));
  const Scalar _tmp60 = std::pow(lambdas(1, 0), Scalar(2));
  const Scalar _tmp61 = 4 * _tmp59 * _tmp60;
  const Scalar _tmp62 = std::pow(_tmp58, Scalar(2)) * _tmp61;
  const Scalar _tmp63 = std::pow(_tmp4, Scalar(2)) * _tmp61;
  const Scalar _tmp64 = _x1[0] * _x2[3];
  const Scalar _tmp65 = _x1[3] * _x2[0];
  const Scalar _tmp66 = _x1[2] * _x2[1];
  const Scalar _tmp67 = _x1[1] * _x2[2];
  const Scalar _tmp68 = -_tmp64 + _tmp65 + _tmp66 - _tmp67;
  const Scalar _tmp69 = _tmp61 * std::pow(_tmp68, Scalar(2));
  const Scalar _tmp70 =
      std::sqrt(Scalar(_tmp33 + _tmp53 * _tmp62 + _tmp53 * _tmp63 + _tmp53 * _tmp69));
  const Scalar _tmp71 = (Scalar(1) / Scalar(2)) * _tmp70;
  const Scalar _tmp72 = _tmp52 * std::sin(_tmp71) / (std::sqrt(_tmp51) * _tmp70);
  const Scalar _tmp73 = 4 * _tmp49 * _tmp72;
  const Scalar _tmp74 = _tmp42 * _tmp73;
  const Scalar _tmp75 = _tmp17 * _tmp74;
  const Scalar _tmp76 = _tmp11 * _tmp58;
  const Scalar _tmp77 = _tmp31 * _tmp42;
  const Scalar _tmp78 = _tmp73 * _tmp77;
  const Scalar _tmp79 = _tmp11 * _tmp68;
  const Scalar _tmp80 = _tmp38 * _tmp74;
  const Scalar _tmp81 = std::cos(_tmp71);
  const Scalar _tmp82 = std::cos(_tmp41);
  const Scalar _tmp83 = -_tmp12 * _tmp75 - _tmp76 * _tmp78 - _tmp79 * _tmp80 + _tmp81 * _tmp82;
  const Scalar _tmp84 = _x0[2] * _x1[2];
  const Scalar _tmp85 = _x0[1] * _x1[1];
  const Scalar _tmp86 = _x0[0] * _x1[0];
  const Scalar _tmp87 = -_tmp84 - _tmp85 - _tmp86;
  const Scalar _tmp88 = _x0[3] * _x1[3];
  const Scalar _tmp89 = std::min<Scalar>(_tmp18, std::fabs(_tmp87 - _tmp88));
  const Scalar _tmp90 = std::acos(_tmp89);
  const Scalar _tmp91 = 1 - std::pow(_tmp89, Scalar(2));
  const Scalar _tmp92 = std::pow(_tmp90, Scalar(2)) / _tmp91;
  const Scalar _tmp93 = _x0[3] * _x1[2];
  const Scalar _tmp94 = _x0[0] * _x1[1];
  const Scalar _tmp95 = _x0[2] * _x1[3];
  const Scalar _tmp96 = _x0[1] * _x1[0];
  const Scalar _tmp97 = _tmp93 - _tmp94 - _tmp95 + _tmp96;
  const Scalar _tmp98 =
      2 * std::min<Scalar>(0, (((-_tmp87 + _tmp88) > 0) - ((-_tmp87 + _tmp88) < 0))) + 1;
  const Scalar _tmp99 = std::pow(_tmp98, Scalar(2)) * std::pow(lambdas(0, 0), Scalar(2));
  const Scalar _tmp100 = 4 * _tmp99;
  const Scalar _tmp101 = _tmp100 * std::pow(_tmp97, Scalar(2));
  const Scalar _tmp102 = _x0[0] * _x1[2];
  const Scalar _tmp103 = _x0[3] * _x1[1];
  const Scalar _tmp104 = _x0[1] * _x1[3];
  const Scalar _tmp105 = _x0[2] * _x1[0];
  const Scalar _tmp106 = _tmp102 + _tmp103 - _tmp104 - _tmp105;
  const Scalar _tmp107 = _tmp100 * std::pow(_tmp106, Scalar(2));
  const Scalar _tmp108 = _x0[1] * _x1[2];
  const Scalar _tmp109 = _x0[2] * _x1[1];
  const Scalar _tmp110 = _x0[0] * _x1[3];
  const Scalar _tmp111 = _x0[3] * _x1[0];
  const Scalar _tmp112 = -_tmp108 + _tmp109 - _tmp110 + _tmp111;
  const Scalar _tmp113 = _tmp100 * std::pow(_tmp112, Scalar(2));
  const Scalar _tmp114 =
      std::sqrt(Scalar(_tmp101 * _tmp92 + _tmp107 * _tmp92 + _tmp113 * _tmp92 + _tmp33));
  const Scalar _tmp115 = (Scalar(1) / Scalar(2)) * _tmp114;
  const Scalar _tmp116 = std::cos(_tmp115);
  const Scalar _tmp117 = 2 * _tmp49;
  const Scalar _tmp118 = _tmp117 * _tmp68;
  const Scalar _tmp119 = _tmp72 * _tmp82;
  const Scalar _tmp120 = 2 * _tmp11;
  const Scalar _tmp121 = _tmp120 * _tmp81;
  const Scalar _tmp122 = _tmp121 * _tmp42;
  const Scalar _tmp123 = _tmp118 * _tmp119 - _tmp12 * _tmp78 + _tmp122 * _tmp38 + _tmp75 * _tmp76;
  const Scalar _tmp124 = 2 * _tmp98 * lambdas(0, 0);
  const Scalar _tmp125 = _tmp90 * std::sin(_tmp115) / (_tmp114 * std::sqrt(_tmp91));
  const Scalar _tmp126 = _tmp124 * _tmp125;
  const Scalar _tmp127 = _tmp123 * _tmp126;
  const Scalar _tmp128 = _tmp117 * _tmp119;
  const Scalar _tmp129 = _tmp12 * _tmp80 + _tmp121 * _tmp77 + _tmp128 * _tmp58 - _tmp75 * _tmp79;
  const Scalar _tmp130 = _tmp106 * _tmp124;
  const Scalar _tmp131 = _tmp125 * _tmp130;
  const Scalar _tmp132 = _tmp122 * _tmp17 + _tmp128 * _tmp4 - _tmp76 * _tmp80 + _tmp78 * _tmp79;
  const Scalar _tmp133 = _tmp126 * _tmp132;
  const Scalar _tmp134 =
      -_tmp112 * _tmp127 + _tmp116 * _tmp83 - _tmp129 * _tmp131 - _tmp133 * _tmp97;
  const Scalar _tmp135 =
      -_tmp112 * _tmp133 + _tmp116 * _tmp129 + _tmp127 * _tmp97 + _tmp131 * _tmp83;
  const Scalar _tmp136 = _tmp126 * _tmp83;
  const Scalar _tmp137 = _tmp126 * _tmp129;
  const Scalar _tmp138 =
      _tmp112 * _tmp137 + _tmp116 * _tmp132 - _tmp123 * _tmp131 + _tmp136 * _tmp97;
  const Scalar _tmp139 =
      _tmp112 * _tmp136 + _tmp116 * _tmp123 + _tmp131 * _tmp132 - _tmp137 * _tmp97;
  const Scalar _tmp140 = _tmp134 * _x0[2] + _tmp135 * _x0[0] + _tmp138 * _x0[3] - _tmp139 * _x0[1];
  const Scalar _tmp141 = -2 * std::pow(_tmp140, Scalar(2));
  const Scalar _tmp142 = _tmp134 * _x0[1] + _tmp135 * _x0[3] - _tmp138 * _x0[0] + _tmp139 * _x0[2];
  const Scalar _tmp143 = 1 - 2 * std::pow(_tmp142, Scalar(2));
  const Scalar _tmp144 = _tmp141 + _tmp143;
  const Scalar _tmp145 = _tmp134 * _x0[0] - _tmp135 * _x0[2] + _tmp138 * _x0[1] + _tmp139 * _x0[3];
  const Scalar _tmp146 = 2 * _tmp145;
  const Scalar _tmp147 = _tmp142 * _tmp146;
  const Scalar _tmp148 = _tmp134 * _x0[3] - _tmp135 * _x0[1] - _tmp138 * _x0[2] - _tmp139 * _x0[0];
  const Scalar _tmp149 = 2 * _tmp148;
  const Scalar _tmp150 = _tmp140 * _tmp149;
  const Scalar _tmp151 = _tmp147 + _tmp150;
  const Scalar _tmp152 = _x0[5] + lambdas(0, 0) * (-_x0[5] + _x1[5]) +
                         lambdas(1, 0) * (-_x1[5] + _x2[5]) + lambdas(2, 0) * (-_x2[5] + _x3[5]);
  const Scalar _tmp153 = _x0[4] + lambdas(0, 0) * (-_x0[4] + _x1[4]) +
                         lambdas(1, 0) * (-_x1[4] + _x2[4]) + lambdas(2, 0) * (-_x2[4] + _x3[4]);
  const Scalar _tmp154 = _tmp140 * _tmp146;
  const Scalar _tmp155 = _tmp142 * _tmp149;
  const Scalar _tmp156 = _tmp154 - _tmp155;
  const Scalar _tmp157 = _x0[6] + lambdas(0, 0) * (-_x0[6] + _x1[6]) +
                         lambdas(1, 0) * (-_x1[6] + _x2[6]) + lambdas(2, 0) * (-_x2[6] + _x3[6]);
  const Scalar _tmp158 = -_tmp144 * _tmp153 + _tmp144 * _y[4] - _tmp151 * _tmp152 +
                         _tmp151 * _y[5] - _tmp156 * _tmp157 + _tmp156 * _y[6] - _x_T_y[4];
  const Scalar _tmp159 = -2 * std::pow(_tmp145, Scalar(2));
  const Scalar _tmp160 = _tmp141 + _tmp159 + 1;
  const Scalar _tmp161 = _tmp147 - _tmp150;
  const Scalar _tmp162 = 2 * _tmp140 * _tmp142;
  const Scalar _tmp163 = _tmp145 * _tmp149;
  const Scalar _tmp164 = _tmp162 + _tmp163;
  const Scalar _tmp165 = -_tmp152 * _tmp160 - _tmp153 * _tmp161 - _tmp157 * _tmp164 +
                         _tmp160 * _y[5] + _tmp161 * _y[4] + _tmp164 * _y[6] - _x_T_y[5];
  const Scalar _tmp166 = _tmp140 * _y[1] - _tmp142 * _y[2] - _tmp145 * _y[3] + _tmp148 * _y[0];
  const Scalar _tmp167 = -_tmp140 * _y[0] - _tmp142 * _y[3] + _tmp145 * _y[2] + _tmp148 * _y[1];
  const Scalar _tmp168 = -_tmp140 * _y[3] + _tmp142 * _y[0] - _tmp145 * _y[1] + _tmp148 * _y[2];
  const Scalar _tmp169 = _tmp140 * _y[2] + _tmp142 * _y[1] + _tmp145 * _y[0] + _tmp148 * _y[3];
  const Scalar _tmp170 = -_tmp166 * _x_T_y[0] - _tmp167 * _x_T_y[1] - _tmp168 * _x_T_y[2];
  const Scalar _tmp171 = _tmp169 * _x_T_y[3];
  const Scalar _tmp172 = std::min<Scalar>(_tmp18, std::fabs(_tmp170 - _tmp171));
  const Scalar _tmp173 =
      (2 * std::min<Scalar>(0, (((-_tmp170 + _tmp171) > 0) - ((-_tmp170 + _tmp171) < 0))) + 1) *
      std::acos(_tmp172) / std::sqrt(Scalar(1 - std::pow(_tmp172, Scalar(2))));
  const Scalar _tmp174 = 2 * _tmp173;
  const Scalar _tmp175 = _tmp174 * (_tmp166 * _x_T_y[3] + _tmp167 * _x_T_y[2] -
                                    _tmp168 * _x_T_y[1] - _tmp169 * _x_T_y[0]);
  const Scalar _tmp176 = _tmp174 * (_tmp166 * _x_T_y[1] - _tmp167 * _x_T_y[0] +
                                    _tmp168 * _x_T_y[3] - _tmp169 * _x_T_y[2]);
  const Scalar _tmp177 = _tmp143 + _tmp159;
  const Scalar _tmp178 = _tmp162 - _tmp163;
  const Scalar _tmp179 = _tmp154 + _tmp155;
  const Scalar _tmp180 = -_tmp152 * _tmp178 - _tmp153 * _tmp179 - _tmp157 * _tmp177 +
                         _tmp177 * _y[6] + _tmp178 * _y[5] + _tmp179 * _y[4] - _x_T_y[6];
  const Scalar _tmp181 =
      -_tmp166 * _x_T_y[2] + _tmp167 * _x_T_y[3] + _tmp168 * _x_T_y[0] - _tmp169 * _x_T_y[1];
  const Scalar _tmp182 = _tmp174 * _tmp181;
  const Scalar _tmp183 = 2 * sqrt_info(4, 1);
  const Scalar _tmp184 = _tmp5 + _tmp6 + _tmp7 + _tmp9;
  const Scalar _tmp185 = std::fabs(_tmp184);
  const Scalar _tmp186 = std::min<Scalar>(_tmp18, _tmp185);
  const Scalar _tmp187 = 1 - std::pow(_tmp186, Scalar(2));
  const Scalar _tmp188 = std::pow(_tmp187, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp189 = _tmp11 * _tmp188;
  const Scalar _tmp190 = std::acos(_tmp186);
  const Scalar _tmp191 = _tmp190 * _tmp31;
  const Scalar _tmp192 = _tmp189 * _tmp191;
  const Scalar _tmp193 = _tmp43 + _tmp44 + _tmp45 + _tmp47;
  const Scalar _tmp194 = std::fabs(_tmp193);
  const Scalar _tmp195 = std::min<Scalar>(_tmp18, _tmp194);
  const Scalar _tmp196 = 1 - std::pow(_tmp195, Scalar(2));
  const Scalar _tmp197 = std::acos(_tmp195);
  const Scalar _tmp198 = _tmp197 / std::sqrt(_tmp196);
  const Scalar _tmp199 = _tmp198 * _tmp49;
  const Scalar _tmp200 = _tmp199 * _tmp4;
  const Scalar _tmp201 = Scalar(1.0) / (_tmp196);
  const Scalar _tmp202 = std::pow(_tmp197, Scalar(2));
  const Scalar _tmp203 = _tmp201 * _tmp202;
  const Scalar _tmp204 = _tmp203 * _tmp62 + _tmp203 * _tmp63 + _tmp203 * _tmp69 + _tmp33;
  const Scalar _tmp205 = std::sqrt(_tmp204);
  const Scalar _tmp206 = Scalar(1.0) / (_tmp205);
  const Scalar _tmp207 = (Scalar(1) / Scalar(2)) * _tmp205;
  const Scalar _tmp208 = std::sin(_tmp207);
  const Scalar _tmp209 = Scalar(1.0) / (_tmp187);
  const Scalar _tmp210 = std::pow(_tmp190, Scalar(2));
  const Scalar _tmp211 = _tmp209 * _tmp210;
  const Scalar _tmp212 = _tmp211 * _tmp25 + _tmp211 * _tmp32 + _tmp211 * _tmp39 + _tmp33;
  const Scalar _tmp213 = std::sqrt(_tmp212);
  const Scalar _tmp214 = (Scalar(1) / Scalar(2)) * _tmp213;
  const Scalar _tmp215 = std::sin(_tmp214);
  const Scalar _tmp216 = Scalar(1.0) / (_tmp213);
  const Scalar _tmp217 = _tmp208 * _tmp215 * _tmp216;
  const Scalar _tmp218 = _tmp206 * _tmp217;
  const Scalar _tmp219 = 4 * _tmp218;
  const Scalar _tmp220 = _tmp200 * _tmp219;
  const Scalar _tmp221 = std::cos(_tmp214);
  const Scalar _tmp222 = _tmp208 * _tmp221;
  const Scalar _tmp223 = _tmp206 * _tmp222;
  const Scalar _tmp224 = _tmp198 * _tmp223;
  const Scalar _tmp225 = _tmp199 * _tmp58;
  const Scalar _tmp226 = _tmp17 * _tmp190;
  const Scalar _tmp227 = _tmp189 * _tmp226;
  const Scalar _tmp228 = _tmp219 * _tmp227;
  const Scalar _tmp229 = std::cos(_tmp207);
  const Scalar _tmp230 = _tmp215 * _tmp229;
  const Scalar _tmp231 = _tmp216 * _tmp230;
  const Scalar _tmp232 = _tmp120 * _tmp188 * _tmp231;
  const Scalar _tmp233 = _tmp190 * _tmp38;
  const Scalar _tmp234 =
      _tmp118 * _tmp224 - _tmp192 * _tmp220 + _tmp225 * _tmp228 + _tmp232 * _tmp233;
  const Scalar _tmp235 = _tmp84 + _tmp85 + _tmp86 + _tmp88;
  const Scalar _tmp236 = std::fabs(_tmp235);
  const Scalar _tmp237 = std::min<Scalar>(_tmp18, _tmp236);
  const Scalar _tmp238 = 1 - std::pow(_tmp237, Scalar(2));
  const Scalar _tmp239 = Scalar(1.0) / (_tmp238);
  const Scalar _tmp240 = std::acos(_tmp237);
  const Scalar _tmp241 = std::pow(_tmp240, Scalar(2));
  const Scalar _tmp242 = _tmp239 * _tmp241;
  const Scalar _tmp243 = _tmp101 * _tmp242 + _tmp107 * _tmp242 + _tmp113 * _tmp242 + _tmp33;
  const Scalar _tmp244 = std::sqrt(_tmp243);
  const Scalar _tmp245 = (Scalar(1) / Scalar(2)) * _tmp244;
  const Scalar _tmp246 = std::sin(_tmp245);
  const Scalar _tmp247 = _tmp246 / _tmp244;
  const Scalar _tmp248 = _tmp240 / std::sqrt(_tmp238);
  const Scalar _tmp249 = _tmp247 * _tmp248;
  const Scalar _tmp250 = _tmp130 * _tmp249;
  const Scalar _tmp251 = _tmp192 * _tmp219;
  const Scalar _tmp252 = _tmp199 * _tmp68;
  const Scalar _tmp253 = _tmp189 * _tmp233;
  const Scalar _tmp254 = _tmp219 * _tmp253;
  const Scalar _tmp255 = _tmp221 * _tmp229;
  const Scalar _tmp256 = -_tmp220 * _tmp227 - _tmp225 * _tmp251 - _tmp252 * _tmp254 + _tmp255;
  const Scalar _tmp257 = _tmp124 * _tmp249;
  const Scalar _tmp258 = _tmp257 * _tmp97;
  const Scalar _tmp259 = _tmp200 * _tmp253;
  const Scalar _tmp260 = _tmp117 * _tmp224;
  const Scalar _tmp261 =
      _tmp191 * _tmp232 + _tmp219 * _tmp259 - _tmp228 * _tmp252 + _tmp260 * _tmp58;
  const Scalar _tmp262 = _tmp112 * _tmp257;
  const Scalar _tmp263 = std::cos(_tmp245);
  const Scalar _tmp264 =
      -_tmp225 * _tmp254 + _tmp226 * _tmp232 + _tmp251 * _tmp252 + _tmp260 * _tmp4;
  const Scalar _tmp265 = _tmp263 * _tmp264;
  const Scalar _tmp266 = -_tmp234 * _tmp250 + _tmp256 * _tmp258 + _tmp261 * _tmp262 + _tmp265;
  const Scalar _tmp267 = _tmp266 * _x0[3];
  const Scalar _tmp268 = (Scalar(1) / Scalar(2)) * _tmp267;
  const Scalar _tmp269 = -_tmp268;
  const Scalar _tmp270 = (Scalar(1) / Scalar(2)) * _tmp108;
  const Scalar _tmp271 = (Scalar(1) / Scalar(2)) * _tmp109;
  const Scalar _tmp272 = (Scalar(1) / Scalar(2)) * _tmp110;
  const Scalar _tmp273 = (Scalar(1) / Scalar(2)) * _tmp111;
  const Scalar _tmp274 = -_tmp270 + _tmp271 - _tmp272 + _tmp273;
  const Scalar _tmp275 = ((((_tmp18 - _tmp236) > 0) - ((_tmp18 - _tmp236) < 0)) + 1) *
                         (((_tmp235) > 0) - ((_tmp235) < 0));
  const Scalar _tmp276 = _tmp237 * _tmp241 / std::pow(_tmp238, Scalar(2));
  const Scalar _tmp277 = _tmp275 * _tmp276;
  const Scalar _tmp278 = _tmp113 * _tmp277;
  const Scalar _tmp279 = _tmp240 / (_tmp238 * std::sqrt(_tmp238));
  const Scalar _tmp280 = _tmp275 * _tmp279;
  const Scalar _tmp281 = _tmp274 * _tmp280;
  const Scalar _tmp282 = (Scalar(1) / Scalar(2)) * _tmp84;
  const Scalar _tmp283 = (Scalar(1) / Scalar(2)) * _tmp85;
  const Scalar _tmp284 = (Scalar(1) / Scalar(2)) * _tmp88;
  const Scalar _tmp285 = (Scalar(1) / Scalar(2)) * _tmp86;
  const Scalar _tmp286 = -_tmp282 - _tmp283 - _tmp284 - _tmp285;
  const Scalar _tmp287 = 8 * _tmp242 * _tmp99;
  const Scalar _tmp288 = _tmp112 * _tmp287;
  const Scalar _tmp289 = _tmp107 * _tmp280;
  const Scalar _tmp290 = _tmp107 * _tmp277;
  const Scalar _tmp291 = _tmp101 * _tmp277;
  const Scalar _tmp292 = (Scalar(1) / Scalar(2)) * _tmp102;
  const Scalar _tmp293 = (Scalar(1) / Scalar(2)) * _tmp103;
  const Scalar _tmp294 = (Scalar(1) / Scalar(2)) * _tmp104;
  const Scalar _tmp295 = (Scalar(1) / Scalar(2)) * _tmp105;
  const Scalar _tmp296 = -_tmp292 - _tmp293 + _tmp294 + _tmp295;
  const Scalar _tmp297 = _tmp287 * _tmp97;
  const Scalar _tmp298 = (Scalar(1) / Scalar(2)) * _tmp93;
  const Scalar _tmp299 = (Scalar(1) / Scalar(2)) * _tmp94;
  const Scalar _tmp300 = (Scalar(1) / Scalar(2)) * _tmp95;
  const Scalar _tmp301 = (Scalar(1) / Scalar(2)) * _tmp96;
  const Scalar _tmp302 = _tmp298 - _tmp299 - _tmp300 + _tmp301;
  const Scalar _tmp303 = _tmp106 * _tmp287;
  const Scalar _tmp304 = _tmp296 * _tmp297 + _tmp302 * _tmp303;
  const Scalar _tmp305 = -_tmp101 * _tmp281 - _tmp113 * _tmp281 + _tmp274 * _tmp278 -
                         _tmp274 * _tmp289 + _tmp274 * _tmp290 + _tmp274 * _tmp291 +
                         _tmp286 * _tmp288 + _tmp304;
  const Scalar _tmp306 = (Scalar(1) / Scalar(4)) * _tmp247;
  const Scalar _tmp307 = _tmp234 * _tmp306;
  const Scalar _tmp308 = _tmp98 * lambdas(0, 0);
  const Scalar _tmp309 = _tmp256 * _tmp308;
  const Scalar _tmp310 = _tmp112 * _tmp309;
  const Scalar _tmp311 = _tmp237 * _tmp247;
  const Scalar _tmp312 = _tmp281 * _tmp311;
  const Scalar _tmp313 = _tmp261 * _tmp308;
  const Scalar _tmp314 = _tmp274 * _tmp97;
  const Scalar _tmp315 = _tmp239 * _tmp247;
  const Scalar _tmp316 = _tmp275 * _tmp315;
  const Scalar _tmp317 = _tmp314 * _tmp316;
  const Scalar _tmp318 = _tmp246 / (_tmp243 * std::sqrt(_tmp243));
  const Scalar _tmp319 = _tmp248 * _tmp318;
  const Scalar _tmp320 = _tmp308 * _tmp319;
  const Scalar _tmp321 = _tmp264 * _tmp320;
  const Scalar _tmp322 = _tmp106 * _tmp321;
  const Scalar _tmp323 = _tmp257 * _tmp286;
  const Scalar _tmp324 = _tmp256 * _tmp323;
  const Scalar _tmp325 = _tmp264 * _tmp308;
  const Scalar _tmp326 = _tmp106 * _tmp325;
  const Scalar _tmp327 = (Scalar(1) / Scalar(2)) * _tmp308 / _tmp243;
  const Scalar _tmp328 = _tmp106 * _tmp327;
  const Scalar _tmp329 = _tmp248 * _tmp305;
  const Scalar _tmp330 = _tmp265 * _tmp329;
  const Scalar _tmp331 = _tmp274 * _tmp316;
  const Scalar _tmp332 = _tmp256 * _tmp263;
  const Scalar _tmp333 = _tmp112 * _tmp327;
  const Scalar _tmp334 = _tmp332 * _tmp333;
  const Scalar _tmp335 = _tmp112 * _tmp319;
  const Scalar _tmp336 = _tmp309 * _tmp335;
  const Scalar _tmp337 = _tmp320 * _tmp97;
  const Scalar _tmp338 = _tmp261 * _tmp305;
  const Scalar _tmp339 = _tmp280 * _tmp311;
  const Scalar _tmp340 = _tmp314 * _tmp339;
  const Scalar _tmp341 = _tmp327 * _tmp97;
  const Scalar _tmp342 = _tmp261 * _tmp263;
  const Scalar _tmp343 = _tmp329 * _tmp342;
  const Scalar _tmp344 = _tmp257 * _tmp261;
  const Scalar _tmp345 = _tmp257 * _tmp264;
  const Scalar _tmp346 = -_tmp296 * _tmp344 + _tmp302 * _tmp345;
  const Scalar _tmp347 = -_tmp305 * _tmp307 - _tmp305 * _tmp322 - _tmp305 * _tmp336 +
                         _tmp310 * _tmp312 - _tmp310 * _tmp331 + _tmp312 * _tmp326 +
                         _tmp313 * _tmp317 - _tmp313 * _tmp340 + _tmp324 - _tmp326 * _tmp331 +
                         _tmp328 * _tmp330 + _tmp329 * _tmp334 + _tmp337 * _tmp338 -
                         _tmp341 * _tmp343 + _tmp346;
  const Scalar _tmp348 = _tmp234 * _tmp323;
  const Scalar _tmp349 = -_tmp348;
  const Scalar _tmp350 = _tmp256 * _tmp306;
  const Scalar _tmp351 = _tmp234 * _tmp263;
  const Scalar _tmp352 = _tmp333 * _tmp351;
  const Scalar _tmp353 = _tmp265 * _tmp341;
  const Scalar _tmp354 = _tmp234 * _tmp308;
  const Scalar _tmp355 = _tmp112 * _tmp354;
  const Scalar _tmp356 = _tmp314 * _tmp325;
  const Scalar _tmp357 = _tmp106 * _tmp313;
  const Scalar _tmp358 = _tmp106 * _tmp320;
  const Scalar _tmp359 = _tmp335 * _tmp354;
  const Scalar _tmp360 = _tmp264 * _tmp337;
  const Scalar _tmp361 = _tmp257 * _tmp296;
  const Scalar _tmp362 = -_tmp264 * _tmp361 - _tmp302 * _tmp344;
  const Scalar _tmp363 = -_tmp305 * _tmp350 + _tmp305 * _tmp359 + _tmp305 * _tmp360 -
                         _tmp312 * _tmp355 - _tmp312 * _tmp357 + _tmp316 * _tmp356 -
                         _tmp328 * _tmp343 - _tmp329 * _tmp352 - _tmp329 * _tmp353 +
                         _tmp331 * _tmp355 + _tmp331 * _tmp357 + _tmp338 * _tmp358 -
                         _tmp339 * _tmp356 + _tmp349 + _tmp362;
  const Scalar _tmp364 = _tmp264 * _tmp323;
  const Scalar _tmp365 = -_tmp364;
  const Scalar _tmp366 = _tmp112 * _tmp325;
  const Scalar _tmp367 = _tmp106 * _tmp309;
  const Scalar _tmp368 = _tmp328 * _tmp332;
  const Scalar _tmp369 = _tmp308 * _tmp335;
  const Scalar _tmp370 = _tmp264 * _tmp369;
  const Scalar _tmp371 = _tmp319 * _tmp367;
  const Scalar _tmp372 = _tmp261 * _tmp306;
  const Scalar _tmp373 = _tmp319 * _tmp97;
  const Scalar _tmp374 = _tmp354 * _tmp373;
  const Scalar _tmp375 = _tmp327 * _tmp351;
  const Scalar _tmp376 = _tmp375 * _tmp97;
  const Scalar _tmp377 = _tmp256 * _tmp257;
  const Scalar _tmp378 = _tmp234 * _tmp361 + _tmp302 * _tmp377;
  const Scalar _tmp379 = _tmp305 * _tmp370 - _tmp305 * _tmp371 - _tmp305 * _tmp372 -
                         _tmp305 * _tmp374 - _tmp312 * _tmp366 + _tmp312 * _tmp367 -
                         _tmp317 * _tmp354 + _tmp329 * _tmp368 + _tmp329 * _tmp376 -
                         _tmp330 * _tmp333 + _tmp331 * _tmp366 - _tmp331 * _tmp367 +
                         _tmp340 * _tmp354 + _tmp365 + _tmp378;
  const Scalar _tmp380 = -_tmp234 * _tmp262 - _tmp250 * _tmp261 - _tmp258 * _tmp264 + _tmp332;
  const Scalar _tmp381 = _tmp380 * _x0[2];
  const Scalar _tmp382 = (Scalar(1) / Scalar(2)) * _tmp381;
  const Scalar _tmp383 = _tmp319 * _tmp354;
  const Scalar _tmp384 = _tmp106 * _tmp383;
  const Scalar _tmp385 = _tmp106 * _tmp354;
  const Scalar _tmp386 = _tmp106 * _tmp375;
  const Scalar _tmp387 = _tmp309 * _tmp373;
  const Scalar _tmp388 = _tmp264 * _tmp306;
  const Scalar _tmp389 = _tmp286 * _tmp344;
  const Scalar _tmp390 = _tmp333 * _tmp342;
  const Scalar _tmp391 = _tmp332 * _tmp341;
  const Scalar _tmp392 = _tmp248 * _tmp391;
  const Scalar _tmp393 = _tmp112 * _tmp313;
  const Scalar _tmp394 = _tmp234 * _tmp257;
  const Scalar _tmp395 = _tmp256 * _tmp361 - _tmp302 * _tmp394;
  const Scalar _tmp396 = _tmp305 * _tmp384 - _tmp305 * _tmp387 - _tmp305 * _tmp388 +
                         _tmp305 * _tmp392 - _tmp309 * _tmp317 + _tmp309 * _tmp340 -
                         _tmp312 * _tmp385 + _tmp312 * _tmp393 - _tmp329 * _tmp386 +
                         _tmp329 * _tmp390 + _tmp331 * _tmp385 - _tmp331 * _tmp393 -
                         _tmp338 * _tmp369 + _tmp389 + _tmp395;
  const Scalar _tmp397 = _tmp234 * _tmp258 + _tmp250 * _tmp256 - _tmp262 * _tmp264 + _tmp342;
  const Scalar _tmp398 = _tmp397 * _x0[0];
  const Scalar _tmp399 = (Scalar(1) / Scalar(2)) * _tmp398;
  const Scalar _tmp400 = _tmp250 * _tmp264 + _tmp256 * _tmp262 - _tmp258 * _tmp261 + _tmp351;
  const Scalar _tmp401 = _tmp400 * _x0[1];
  const Scalar _tmp402 = -Scalar(1) / Scalar(2) * _tmp401;
  const Scalar _tmp403 = -_tmp399 + _tmp402;
  const Scalar _tmp404 = _tmp269 + _tmp347 * _x0[2] + _tmp363 * _x0[1] + _tmp379 * _x0[3] +
                         _tmp382 - _tmp396 * _x0[0] + _tmp403;
  const Scalar _tmp405 = _tmp266 * _x0[2];
  const Scalar _tmp406 = (Scalar(1) / Scalar(2)) * _tmp405;
  const Scalar _tmp407 = _tmp397 * _x0[1];
  const Scalar _tmp408 = (Scalar(1) / Scalar(2)) * _tmp407;
  const Scalar _tmp409 = _tmp400 * _x0[0];
  const Scalar _tmp410 = (Scalar(1) / Scalar(2)) * _tmp409;
  const Scalar _tmp411 = _tmp380 * _x0[3];
  const Scalar _tmp412 = (Scalar(1) / Scalar(2)) * _tmp411;
  const Scalar _tmp413 = _tmp347 * _x0[3] + _tmp363 * _x0[0] - _tmp379 * _x0[2] + _tmp396 * _x0[1] +
                         _tmp406 + _tmp408 - _tmp410 + _tmp412;
  const Scalar _tmp414 = _tmp266 * _x0[1];
  const Scalar _tmp415 = (Scalar(1) / Scalar(2)) * _tmp414;
  const Scalar _tmp416 = _tmp397 * _x0[2];
  const Scalar _tmp417 = -Scalar(1) / Scalar(2) * _tmp416;
  const Scalar _tmp418 = _tmp400 * _x0[3];
  const Scalar _tmp419 = (Scalar(1) / Scalar(2)) * _tmp418;
  const Scalar _tmp420 = -_tmp419;
  const Scalar _tmp421 = _tmp380 * _x0[0];
  const Scalar _tmp422 = (Scalar(1) / Scalar(2)) * _tmp421;
  const Scalar _tmp423 = -_tmp422;
  const Scalar _tmp424 = -_tmp347 * _x0[0] + _tmp363 * _x0[3] - _tmp379 * _x0[1] -
                         _tmp396 * _x0[2] + _tmp415 + _tmp417 + _tmp420 + _tmp423;
  const Scalar _tmp425 = _tmp266 * _x0[0];
  const Scalar _tmp426 = -Scalar(1) / Scalar(2) * _tmp425;
  const Scalar _tmp427 = _tmp397 * _x0[3];
  const Scalar _tmp428 = (Scalar(1) / Scalar(2)) * _tmp427;
  const Scalar _tmp429 = _tmp400 * _x0[2];
  const Scalar _tmp430 = (Scalar(1) / Scalar(2)) * _tmp429;
  const Scalar _tmp431 = -_tmp430;
  const Scalar _tmp432 = _tmp380 * _x0[1];
  const Scalar _tmp433 = (Scalar(1) / Scalar(2)) * _tmp432;
  const Scalar _tmp434 = -_tmp433;
  const Scalar _tmp435 = -_tmp347 * _x0[1] + _tmp363 * _x0[2] + _tmp379 * _x0[0] +
                         _tmp396 * _x0[3] + _tmp426 + _tmp428 + _tmp431 + _tmp434;
  const Scalar _tmp436 = _tmp404 * _y[0] - _tmp413 * _y[1] + _tmp424 * _y[2] - _tmp435 * _y[3];
  const Scalar _tmp437 = -_tmp404 * _y[3] + _tmp413 * _y[2] + _tmp424 * _y[1] - _tmp435 * _y[0];
  const Scalar _tmp438 = _tmp404 * _y[1] + _tmp413 * _y[0] + _tmp424 * _y[3] + _tmp435 * _y[2];
  const Scalar _tmp439 = -_tmp404 * _y[2] - _tmp413 * _y[3] + _tmp424 * _y[0] + _tmp435 * _y[1];
  const Scalar _tmp440 =
      -_tmp436 * _x_T_y[1] + _tmp437 * _x_T_y[2] - _tmp438 * _x_T_y[0] + _tmp439 * _x_T_y[3];
  const Scalar _tmp441 = -_tmp405 - _tmp407 - _tmp409 + _tmp411;
  const Scalar _tmp442 = -_tmp425 + _tmp427 + _tmp429 + _tmp432;
  const Scalar _tmp443 = _tmp414 - _tmp416 + _tmp418 + _tmp421;
  const Scalar _tmp444 = _tmp267 + _tmp381 + _tmp398 - _tmp401;
  const Scalar _tmp445 = _tmp441 * _y[1] - _tmp442 * _y[3] + _tmp443 * _y[2] - _tmp444 * _y[0];
  const Scalar _tmp446 = _tmp445 * _x_T_y[1];
  const Scalar _tmp447 = _tmp441 * _y[0] - _tmp442 * _y[2] - _tmp443 * _y[3] + _tmp444 * _y[1];
  const Scalar _tmp448 = _tmp447 * _x_T_y[0];
  const Scalar _tmp449 = _tmp441 * _y[2] + _tmp442 * _y[0] - _tmp443 * _y[1] - _tmp444 * _y[3];
  const Scalar _tmp450 = _tmp449 * _x_T_y[2];
  const Scalar _tmp451 = _tmp441 * _y[3] + _tmp442 * _y[1] + _tmp443 * _y[0] + _tmp444 * _y[2];
  const Scalar _tmp452 = _tmp451 * _x_T_y[3];
  const Scalar _tmp453 = _tmp446 + _tmp448 + _tmp450 + _tmp452;
  const Scalar _tmp454 = std::fabs(_tmp453);
  const Scalar _tmp455 = std::min<Scalar>(_tmp18, _tmp454);
  const Scalar _tmp456 = 1 - std::pow(_tmp455, Scalar(2));
  const Scalar _tmp457 = 2 * std::min<Scalar>(0, (((_tmp446 + _tmp448 + _tmp450 + _tmp452) > 0) -
                                                  ((_tmp446 + _tmp448 + _tmp450 + _tmp452) < 0))) +
                         1;
  const Scalar _tmp458 = _tmp457 * std::acos(_tmp455);
  const Scalar _tmp459 = _tmp458 / std::sqrt(_tmp456);
  const Scalar _tmp460 = 2 * _tmp459;
  const Scalar _tmp461 = _tmp460 * sqrt_info(0, 0);
  const Scalar _tmp462 = 2 * _tmp444;
  const Scalar _tmp463 = _tmp424 * _tmp462;
  const Scalar _tmp464 = 2 * _tmp441;
  const Scalar _tmp465 = _tmp435 * _tmp464;
  const Scalar _tmp466 = 2 * _tmp443;
  const Scalar _tmp467 = 2 * _tmp442;
  const Scalar _tmp468 = _tmp404 * _tmp466 + _tmp413 * _tmp467;
  const Scalar _tmp469 = _tmp463 + _tmp465 + _tmp468;
  const Scalar _tmp470 = 4 * _tmp442;
  const Scalar _tmp471 = -_tmp404 * _tmp470;
  const Scalar _tmp472 = 4 * _tmp444;
  const Scalar _tmp473 = -_tmp435 * _tmp472;
  const Scalar _tmp474 = _tmp471 + _tmp473;
  const Scalar _tmp475 = _tmp424 * _tmp467;
  const Scalar _tmp476 = _tmp404 * _tmp464;
  const Scalar _tmp477 = _tmp413 * _tmp462 + _tmp435 * _tmp466;
  const Scalar _tmp478 = -_tmp475 - _tmp476 + _tmp477;
  const Scalar _tmp479 = -_tmp152 * _tmp469 - _tmp153 * _tmp474 - _tmp157 * _tmp478 +
                         _tmp469 * _y[5] + _tmp474 * _y[4] + _tmp478 * _y[6];
  const Scalar _tmp480 = -_tmp463 - _tmp465 + _tmp468;
  const Scalar _tmp481 = _tmp424 * _tmp466;
  const Scalar _tmp482 = _tmp413 * _tmp464;
  const Scalar _tmp483 = _tmp404 * _tmp462 + _tmp435 * _tmp467;
  const Scalar _tmp484 = _tmp481 + _tmp482 + _tmp483;
  const Scalar _tmp485 = 4 * _tmp443;
  const Scalar _tmp486 = -_tmp413 * _tmp485;
  const Scalar _tmp487 = _tmp473 + _tmp486;
  const Scalar _tmp488 = -_tmp152 * _tmp487 - _tmp153 * _tmp480 - _tmp157 * _tmp484 +
                         _tmp480 * _y[4] + _tmp484 * _y[6] + _tmp487 * _y[5];
  const Scalar _tmp489 =
      _tmp436 * _x_T_y[2] + _tmp437 * _x_T_y[1] + _tmp438 * _x_T_y[3] + _tmp439 * _x_T_y[0];
  const Scalar _tmp490 = _tmp445 * _x_T_y[3];
  const Scalar _tmp491 = _tmp447 * _x_T_y[2];
  const Scalar _tmp492 = _tmp449 * _x_T_y[0];
  const Scalar _tmp493 = _tmp451 * _x_T_y[1];
  const Scalar _tmp494 = _tmp490 - _tmp491 + _tmp492 - _tmp493;
  const Scalar _tmp495 = ((((_tmp18 - _tmp454) > 0) - ((_tmp18 - _tmp454) < 0)) + 1) *
                         (((_tmp453) > 0) - ((_tmp453) < 0));
  const Scalar _tmp496 = _tmp455 * _tmp458 / (_tmp456 * std::sqrt(_tmp456));
  const Scalar _tmp497 = _tmp495 * _tmp496;
  const Scalar _tmp498 = _tmp494 * _tmp497;
  const Scalar _tmp499 = _tmp498 * sqrt_info(0, 1);
  const Scalar _tmp500 = -_tmp481 - _tmp482 + _tmp483;
  const Scalar _tmp501 = _tmp471 + _tmp486;
  const Scalar _tmp502 = _tmp475 + _tmp476 + _tmp477;
  const Scalar _tmp503 = -_tmp152 * _tmp500 - _tmp153 * _tmp502 - _tmp157 * _tmp501 +
                         _tmp500 * _y[5] + _tmp501 * _y[6] + _tmp502 * _y[4];
  const Scalar _tmp504 = _tmp445 * _x_T_y[2];
  const Scalar _tmp505 = _tmp447 * _x_T_y[3];
  const Scalar _tmp506 = _tmp449 * _x_T_y[1];
  const Scalar _tmp507 = _tmp451 * _x_T_y[0];
  const Scalar _tmp508 = _tmp495 * (_tmp504 + _tmp505 - _tmp506 - _tmp507);
  const Scalar _tmp509 = _tmp457 / _tmp456;
  const Scalar _tmp510 = _tmp508 * _tmp509;
  const Scalar _tmp511 = _tmp489 * _tmp510;
  const Scalar _tmp512 =
      _tmp436 * _x_T_y[0] + _tmp437 * _x_T_y[3] - _tmp438 * _x_T_y[1] - _tmp439 * _x_T_y[2];
  const Scalar _tmp513 = _tmp460 * _tmp512;
  const Scalar _tmp514 = _tmp508 * sqrt_info(0, 0);
  const Scalar _tmp515 = _tmp496 * _tmp514;
  const Scalar _tmp516 = _tmp445 * _x_T_y[0];
  const Scalar _tmp517 = _tmp447 * _x_T_y[1];
  const Scalar _tmp518 = _tmp449 * _x_T_y[3];
  const Scalar _tmp519 = _tmp451 * _x_T_y[2];
  const Scalar _tmp520 = -_tmp516 + _tmp517 + _tmp518 - _tmp519;
  const Scalar _tmp521 = _tmp495 * _tmp509;
  const Scalar _tmp522 = _tmp520 * _tmp521;
  const Scalar _tmp523 = _tmp489 * _tmp522;
  const Scalar _tmp524 =
      _tmp436 * _x_T_y[3] - _tmp437 * _x_T_y[0] - _tmp438 * _x_T_y[2] + _tmp439 * _x_T_y[1];
  const Scalar _tmp525 = _tmp460 * _tmp524;
  const Scalar _tmp526 = _tmp497 * _tmp520;
  const Scalar _tmp527 = _tmp489 * _tmp526;
  const Scalar _tmp528 = _tmp494 * _tmp521;
  const Scalar _tmp529 = _tmp489 * _tmp528;
  const Scalar _tmp530 = _tmp460 * sqrt_info(1, 0);
  const Scalar _tmp531 = _tmp489 * _tmp498;
  const Scalar _tmp532 = _tmp508 * sqrt_info(1, 0);
  const Scalar _tmp533 = _tmp509 * _tmp532;
  const Scalar _tmp534 = _tmp496 * _tmp532;
  const Scalar _tmp535 = _tmp460 * sqrt_info(2, 0);
  const Scalar _tmp536 = _tmp496 * _tmp508;
  const Scalar _tmp537 = _tmp536 * sqrt_info(2, 0);
  const Scalar _tmp538 = _tmp440 * _tmp460;
  const Scalar _tmp539 = _tmp508 * sqrt_info(3, 0);
  const Scalar _tmp540 = _tmp509 * _tmp539;
  const Scalar _tmp541 = _tmp496 * _tmp539;
  const Scalar _tmp542 = _tmp460 * sqrt_info(3, 2);
  const Scalar _tmp543 = _tmp183 * _tmp459;
  const Scalar _tmp544 = _tmp489 * _tmp536;
  const Scalar _tmp545 = _tmp510 * sqrt_info(5, 0);
  const Scalar _tmp546 = _tmp292 + _tmp293 - _tmp294 - _tmp295;
  const Scalar _tmp547 = _tmp339 * _tmp546;
  const Scalar _tmp548 = _tmp313 * _tmp97;
  const Scalar _tmp549 = _tmp113 * _tmp280;
  const Scalar _tmp550 = _tmp101 * _tmp280;
  const Scalar _tmp551 = -_tmp298 + _tmp299 + _tmp300 - _tmp301;
  const Scalar _tmp552 = _tmp287 * _tmp314 + _tmp288 * _tmp551;
  const Scalar _tmp553 = _tmp278 * _tmp546 + _tmp286 * _tmp303 - _tmp289 * _tmp546 +
                         _tmp290 * _tmp546 + _tmp291 * _tmp546 - _tmp546 * _tmp549 -
                         _tmp546 * _tmp550 + _tmp552;
  const Scalar _tmp554 = _tmp106 * _tmp553;
  const Scalar _tmp555 = _tmp248 * _tmp327;
  const Scalar _tmp556 = _tmp265 * _tmp555;
  const Scalar _tmp557 = _tmp316 * _tmp97;
  const Scalar _tmp558 = _tmp546 * _tmp557;
  const Scalar _tmp559 = _tmp248 * _tmp553;
  const Scalar _tmp560 = _tmp316 * _tmp546;
  const Scalar _tmp561 = _tmp112 * _tmp560;
  const Scalar _tmp562 = _tmp337 * _tmp553;
  const Scalar _tmp563 = _tmp341 * _tmp342;
  const Scalar _tmp564 = -_tmp274 * _tmp344 + _tmp377 * _tmp551;
  const Scalar _tmp565 = _tmp261 * _tmp562 - _tmp307 * _tmp553 - _tmp309 * _tmp561 +
                         _tmp310 * _tmp547 + _tmp313 * _tmp558 - _tmp321 * _tmp554 +
                         _tmp326 * _tmp547 - _tmp326 * _tmp560 + _tmp334 * _tmp559 -
                         _tmp336 * _tmp553 + _tmp364 - _tmp547 * _tmp548 + _tmp554 * _tmp556 -
                         _tmp559 * _tmp563 + _tmp564;
  const Scalar _tmp566 = _tmp261 * _tmp369;
  const Scalar _tmp567 = _tmp309 * _tmp97;
  const Scalar _tmp568 = _tmp248 * _tmp375;
  const Scalar _tmp569 = _tmp274 * _tmp377 + _tmp344 * _tmp551;
  const Scalar _tmp570 = -_tmp309 * _tmp558 - _tmp313 * _tmp561 + _tmp349 + _tmp383 * _tmp554 -
                         _tmp385 * _tmp547 + _tmp385 * _tmp560 - _tmp387 * _tmp553 -
                         _tmp388 * _tmp553 + _tmp390 * _tmp559 + _tmp392 * _tmp553 +
                         _tmp393 * _tmp547 + _tmp547 * _tmp567 - _tmp553 * _tmp566 -
                         _tmp554 * _tmp568 + _tmp569;
  const Scalar _tmp571 = _tmp342 * _tmp555;
  const Scalar _tmp572 = _tmp325 * _tmp97;
  const Scalar _tmp573 = -_tmp389;
  const Scalar _tmp574 = _tmp261 * _tmp320;
  const Scalar _tmp575 = -_tmp274 * _tmp345 - _tmp394 * _tmp551;
  const Scalar _tmp576 = _tmp264 * _tmp562 + _tmp325 * _tmp558 - _tmp350 * _tmp553 -
                         _tmp352 * _tmp559 - _tmp353 * _tmp559 + _tmp354 * _tmp561 -
                         _tmp355 * _tmp547 - _tmp357 * _tmp547 + _tmp357 * _tmp560 +
                         _tmp359 * _tmp553 - _tmp547 * _tmp572 - _tmp554 * _tmp571 +
                         _tmp554 * _tmp574 + _tmp573 + _tmp575;
  const Scalar _tmp577 = _tmp354 * _tmp97;
  const Scalar _tmp578 = _tmp332 * _tmp555;
  const Scalar _tmp579 = _tmp265 * _tmp333;
  const Scalar _tmp580 = _tmp274 * _tmp394 - _tmp345 * _tmp551;
  const Scalar _tmp581 = _tmp324 + _tmp325 * _tmp561 - _tmp354 * _tmp558 - _tmp366 * _tmp547 +
                         _tmp367 * _tmp547 - _tmp367 * _tmp560 + _tmp370 * _tmp553 -
                         _tmp371 * _tmp553 - _tmp372 * _tmp553 - _tmp374 * _tmp553 +
                         _tmp376 * _tmp559 + _tmp547 * _tmp577 + _tmp554 * _tmp578 -
                         _tmp559 * _tmp579 + _tmp580;
  const Scalar _tmp582 = _tmp426 - _tmp428;
  const Scalar _tmp583 = _tmp430 + _tmp434 - _tmp565 * _x0[0] - _tmp570 * _x0[2] +
                         _tmp576 * _x0[3] - _tmp581 * _x0[1] + _tmp582;
  const Scalar _tmp584 = _tmp467 * _tmp583;
  const Scalar _tmp585 = _tmp410 + _tmp412;
  const Scalar _tmp586 = _tmp406 - _tmp408 + _tmp565 * _x0[2] - _tmp570 * _x0[0] +
                         _tmp576 * _x0[1] + _tmp581 * _x0[3] + _tmp585;
  const Scalar _tmp587 = _tmp464 * _tmp586;
  const Scalar _tmp588 = -_tmp382;
  const Scalar _tmp589 = _tmp268 + _tmp403 + _tmp565 * _x0[3] + _tmp570 * _x0[1] +
                         _tmp576 * _x0[0] - _tmp581 * _x0[2] + _tmp588;
  const Scalar _tmp590 = -_tmp415 + _tmp417;
  const Scalar _tmp591 = _tmp420 + _tmp422 - _tmp565 * _x0[1] + _tmp570 * _x0[3] +
                         _tmp576 * _x0[2] + _tmp581 * _x0[0] + _tmp590;
  const Scalar _tmp592 = _tmp462 * _tmp589 + _tmp466 * _tmp591;
  const Scalar _tmp593 = -_tmp584 - _tmp587 + _tmp592;
  const Scalar _tmp594 = _tmp462 * _tmp583;
  const Scalar _tmp595 = _tmp464 * _tmp591;
  const Scalar _tmp596 = _tmp466 * _tmp586 + _tmp467 * _tmp589;
  const Scalar _tmp597 = _tmp594 + _tmp595 + _tmp596;
  const Scalar _tmp598 = -_tmp472 * _tmp591;
  const Scalar _tmp599 = -_tmp470 * _tmp586;
  const Scalar _tmp600 = _tmp598 + _tmp599;
  const Scalar _tmp601 = -_tmp152 * _tmp597 - _tmp153 * _tmp600 - _tmp157 * _tmp593 +
                         _tmp593 * _y[6] + _tmp597 * _y[5] + _tmp600 * _y[4];
  const Scalar _tmp602 = _tmp583 * _y[0] - _tmp586 * _y[2] - _tmp589 * _y[3] + _tmp591 * _y[1];
  const Scalar _tmp603 = _tmp583 * _y[3] + _tmp586 * _y[1] + _tmp589 * _y[0] + _tmp591 * _y[2];
  const Scalar _tmp604 = _tmp583 * _y[1] - _tmp586 * _y[3] + _tmp589 * _y[2] - _tmp591 * _y[0];
  const Scalar _tmp605 = _tmp583 * _y[2] + _tmp586 * _y[0] - _tmp589 * _y[1] - _tmp591 * _y[3];
  const Scalar _tmp606 =
      _tmp602 * _x_T_y[0] + _tmp603 * _x_T_y[3] + _tmp604 * _x_T_y[1] + _tmp605 * _x_T_y[2];
  const Scalar _tmp607 = _tmp522 * _tmp606;
  const Scalar _tmp608 = _tmp526 * _tmp606;
  const Scalar _tmp609 = _tmp510 * _tmp606;
  const Scalar _tmp610 =
      _tmp602 * _x_T_y[3] - _tmp603 * _x_T_y[0] + _tmp604 * _x_T_y[2] - _tmp605 * _x_T_y[1];
  const Scalar _tmp611 = _tmp460 * _tmp610;
  const Scalar _tmp612 = -_tmp485 * _tmp589;
  const Scalar _tmp613 = _tmp598 + _tmp612;
  const Scalar _tmp614 = _tmp466 * _tmp583;
  const Scalar _tmp615 = _tmp464 * _tmp589;
  const Scalar _tmp616 = _tmp462 * _tmp586 + _tmp467 * _tmp591;
  const Scalar _tmp617 = _tmp614 + _tmp615 + _tmp616;
  const Scalar _tmp618 = -_tmp594 - _tmp595 + _tmp596;
  const Scalar _tmp619 = -_tmp152 * _tmp613 - _tmp153 * _tmp618 - _tmp157 * _tmp617 +
                         _tmp613 * _y[5] + _tmp617 * _y[6] + _tmp618 * _y[4];
  const Scalar _tmp620 =
      -_tmp602 * _x_T_y[2] - _tmp603 * _x_T_y[1] + _tmp604 * _x_T_y[3] + _tmp605 * _x_T_y[0];
  const Scalar _tmp621 = _tmp460 * sqrt_info(0, 1);
  const Scalar _tmp622 = _tmp528 * sqrt_info(0, 1);
  const Scalar _tmp623 =
      _tmp602 * _x_T_y[1] - _tmp603 * _x_T_y[2] - _tmp604 * _x_T_y[0] + _tmp605 * _x_T_y[3];
  const Scalar _tmp624 = _tmp460 * _tmp623;
  const Scalar _tmp625 = _tmp599 + _tmp612;
  const Scalar _tmp626 = -_tmp614 - _tmp615 + _tmp616;
  const Scalar _tmp627 = _tmp584 + _tmp587 + _tmp592;
  const Scalar _tmp628 = -_tmp152 * _tmp626 - _tmp153 * _tmp627 - _tmp157 * _tmp625 +
                         _tmp625 * _y[6] + _tmp626 * _y[5] + _tmp627 * _y[4];
  const Scalar _tmp629 = _tmp498 * _tmp606;
  const Scalar _tmp630 = _tmp460 * sqrt_info(1, 1);
  const Scalar _tmp631 = _tmp528 * sqrt_info(1, 1);
  const Scalar _tmp632 = _tmp460 * sqrt_info(2, 1);
  const Scalar _tmp633 = _tmp528 * sqrt_info(2, 1);
  const Scalar _tmp634 = _tmp460 * sqrt_info(3, 1);
  const Scalar _tmp635 = _tmp528 * sqrt_info(3, 1);
  const Scalar _tmp636 = _tmp528 * sqrt_info(4, 1);
  const Scalar _tmp637 = _tmp536 * _tmp606;
  const Scalar _tmp638 = _tmp460 * sqrt_info(5, 1);
  const Scalar _tmp639 = _tmp528 * sqrt_info(5, 1);
  const Scalar _tmp640 = _tmp270 - _tmp271 + _tmp272 - _tmp273;
  const Scalar _tmp641 = _tmp288 * _tmp546 + _tmp303 * _tmp640;
  const Scalar _tmp642 = _tmp278 * _tmp302 + _tmp286 * _tmp297 - _tmp289 * _tmp302 +
                         _tmp290 * _tmp302 + _tmp291 * _tmp302 - _tmp302 * _tmp549 -
                         _tmp302 * _tmp550 + _tmp641;
  const Scalar _tmp643 = _tmp106 * _tmp642;
  const Scalar _tmp644 = _tmp354 * _tmp557;
  const Scalar _tmp645 = _tmp302 * _tmp339;
  const Scalar _tmp646 = _tmp248 * _tmp642;
  const Scalar _tmp647 = _tmp264 * _tmp642;
  const Scalar _tmp648 = _tmp302 * _tmp316;
  const Scalar _tmp649 = -_tmp345 * _tmp546 + _tmp377 * _tmp640;
  const Scalar _tmp650 = -_tmp302 * _tmp644 + _tmp348 - _tmp366 * _tmp645 + _tmp366 * _tmp648 +
                         _tmp367 * _tmp645 - _tmp367 * _tmp648 + _tmp369 * _tmp647 -
                         _tmp371 * _tmp642 - _tmp372 * _tmp642 - _tmp374 * _tmp642 +
                         _tmp376 * _tmp646 + _tmp577 * _tmp645 + _tmp578 * _tmp643 -
                         _tmp579 * _tmp646 + _tmp649;
  const Scalar _tmp651 = _tmp302 * _tmp309;
  const Scalar _tmp652 = _tmp339 * _tmp651;
  const Scalar _tmp653 = _tmp112 * _tmp316;
  const Scalar _tmp654 = _tmp313 * _tmp557;
  const Scalar _tmp655 = _tmp261 * _tmp642;
  const Scalar _tmp656 = _tmp345 * _tmp640 + _tmp377 * _tmp546;
  const Scalar _tmp657 = _tmp112 * _tmp652 + _tmp302 * _tmp654 - _tmp307 * _tmp642 +
                         _tmp326 * _tmp645 - _tmp326 * _tmp648 + _tmp334 * _tmp646 -
                         _tmp336 * _tmp642 + _tmp337 * _tmp655 - _tmp358 * _tmp647 -
                         _tmp548 * _tmp645 + _tmp556 * _tmp643 - _tmp563 * _tmp646 + _tmp573 -
                         _tmp651 * _tmp653 + _tmp656;
  const Scalar _tmp658 = _tmp302 * _tmp653;
  const Scalar _tmp659 = _tmp344 * _tmp546 - _tmp394 * _tmp640;
  const Scalar _tmp660 = -_tmp306 * _tmp647 - _tmp313 * _tmp658 + _tmp324 - _tmp369 * _tmp655 +
                         _tmp383 * _tmp643 - _tmp385 * _tmp645 + _tmp385 * _tmp648 -
                         _tmp387 * _tmp642 + _tmp390 * _tmp646 + _tmp391 * _tmp646 +
                         _tmp393 * _tmp645 - _tmp557 * _tmp651 - _tmp568 * _tmp643 +
                         _tmp652 * _tmp97 + _tmp659;
  const Scalar _tmp661 = _tmp325 * _tmp557;
  const Scalar _tmp662 = -_tmp344 * _tmp640 - _tmp394 * _tmp546;
  const Scalar _tmp663 = _tmp302 * _tmp661 + _tmp337 * _tmp647 - _tmp350 * _tmp642 -
                         _tmp352 * _tmp646 - _tmp353 * _tmp646 + _tmp354 * _tmp658 -
                         _tmp355 * _tmp645 - _tmp357 * _tmp645 + _tmp357 * _tmp648 +
                         _tmp359 * _tmp642 + _tmp365 - _tmp571 * _tmp643 - _tmp572 * _tmp645 +
                         _tmp574 * _tmp643 + _tmp662;
  const Scalar _tmp664 = _tmp419 + _tmp423 + _tmp590 + _tmp650 * _x0[3] + _tmp657 * _x0[2] -
                         _tmp660 * _x0[0] + _tmp663 * _x0[1];
  const Scalar _tmp665 = -_tmp470 * _tmp664;
  const Scalar _tmp666 = _tmp431 + _tmp433 + _tmp582 - _tmp650 * _x0[2] + _tmp657 * _x0[3] +
                         _tmp660 * _x0[1] + _tmp663 * _x0[0];
  const Scalar _tmp667 = -_tmp485 * _tmp666;
  const Scalar _tmp668 = _tmp665 + _tmp667;
  const Scalar _tmp669 = _tmp269 + _tmp399 + _tmp402 + _tmp588 - _tmp650 * _x0[1] -
                         _tmp657 * _x0[0] - _tmp660 * _x0[2] + _tmp663 * _x0[3];
  const Scalar _tmp670 = _tmp466 * _tmp669;
  const Scalar _tmp671 = _tmp464 * _tmp666;
  const Scalar _tmp672 = -_tmp406 + _tmp408 + _tmp585 + _tmp650 * _x0[0] - _tmp657 * _x0[1] +
                         _tmp660 * _x0[3] + _tmp663 * _x0[2];
  const Scalar _tmp673 = _tmp462 * _tmp664 + _tmp467 * _tmp672;
  const Scalar _tmp674 = -_tmp670 - _tmp671 + _tmp673;
  const Scalar _tmp675 = _tmp467 * _tmp669;
  const Scalar _tmp676 = _tmp464 * _tmp664;
  const Scalar _tmp677 = _tmp462 * _tmp666 + _tmp466 * _tmp672;
  const Scalar _tmp678 = _tmp675 + _tmp676 + _tmp677;
  const Scalar _tmp679 = -_tmp152 * _tmp674 - _tmp153 * _tmp678 - _tmp157 * _tmp668 +
                         _tmp668 * _y[6] + _tmp674 * _y[5] + _tmp678 * _y[4];
  const Scalar _tmp680 = _tmp664 * _y[1] + _tmp666 * _y[0] + _tmp669 * _y[3] + _tmp672 * _y[2];
  const Scalar _tmp681 = _tmp664 * _y[0] - _tmp666 * _y[1] + _tmp669 * _y[2] - _tmp672 * _y[3];
  const Scalar _tmp682 = -_tmp664 * _y[2] - _tmp666 * _y[3] + _tmp669 * _y[0] + _tmp672 * _y[1];
  const Scalar _tmp683 = -_tmp664 * _y[3] + _tmp666 * _y[2] + _tmp669 * _y[1] - _tmp672 * _y[0];
  const Scalar _tmp684 =
      _tmp680 * _x_T_y[3] + _tmp681 * _x_T_y[2] + _tmp682 * _x_T_y[0] + _tmp683 * _x_T_y[1];
  const Scalar _tmp685 = _tmp510 * _tmp684;
  const Scalar _tmp686 = _tmp462 * _tmp669;
  const Scalar _tmp687 = _tmp464 * _tmp672;
  const Scalar _tmp688 = _tmp466 * _tmp664 + _tmp467 * _tmp666;
  const Scalar _tmp689 = _tmp686 + _tmp687 + _tmp688;
  const Scalar _tmp690 = -_tmp675 - _tmp676 + _tmp677;
  const Scalar _tmp691 = -_tmp472 * _tmp672;
  const Scalar _tmp692 = _tmp665 + _tmp691;
  const Scalar _tmp693 = -_tmp152 * _tmp689 - _tmp153 * _tmp692 - _tmp157 * _tmp690 +
                         _tmp689 * _y[5] + _tmp690 * _y[6] + _tmp692 * _y[4];
  const Scalar _tmp694 =
      -_tmp680 * _x_T_y[2] + _tmp681 * _x_T_y[3] + _tmp682 * _x_T_y[1] - _tmp683 * _x_T_y[0];
  const Scalar _tmp695 = _tmp460 * _tmp694;
  const Scalar _tmp696 = _tmp526 * _tmp684;
  const Scalar _tmp697 =
      -_tmp680 * _x_T_y[1] + _tmp681 * _x_T_y[0] - _tmp682 * _x_T_y[2] + _tmp683 * _x_T_y[3];
  const Scalar _tmp698 = _tmp460 * _tmp697;
  const Scalar _tmp699 = -_tmp686 - _tmp687 + _tmp688;
  const Scalar _tmp700 = _tmp667 + _tmp691;
  const Scalar _tmp701 = _tmp670 + _tmp671 + _tmp673;
  const Scalar _tmp702 = -_tmp152 * _tmp700 - _tmp153 * _tmp699 - _tmp157 * _tmp701 +
                         _tmp699 * _y[4] + _tmp700 * _y[5] + _tmp701 * _y[6];
  const Scalar _tmp703 = _tmp522 * _tmp684;
  const Scalar _tmp704 = _tmp498 * _tmp684;
  const Scalar _tmp705 =
      -_tmp680 * _x_T_y[0] - _tmp681 * _x_T_y[1] + _tmp682 * _x_T_y[3] + _tmp683 * _x_T_y[2];
  const Scalar _tmp706 = _tmp496 * _tmp684;
  const Scalar _tmp707 = _tmp528 * _tmp684;
  const Scalar _tmp708 = _tmp509 * _tmp684;
  const Scalar _tmp709 = _tmp460 * sqrt_info(3, 0);
  const Scalar _tmp710 = _tmp460 * _tmp705;
  const Scalar _tmp711 = _tmp536 * _tmp684;
  const Scalar _tmp712 = -2 * std::pow(_tmp444, Scalar(2));
  const Scalar _tmp713 = 1 - 2 * std::pow(_tmp442, Scalar(2));
  const Scalar _tmp714 = _tmp712 + _tmp713;
  const Scalar _tmp715 = 1 - lambdas(0, 0);
  const Scalar _tmp716 = _tmp714 * _tmp715;
  const Scalar _tmp717 = _tmp444 * _tmp464;
  const Scalar _tmp718 = _tmp442 * _tmp466;
  const Scalar _tmp719 = -_tmp717 + _tmp718;
  const Scalar _tmp720 = _tmp715 * _tmp719;
  const Scalar _tmp721 = _tmp441 * _tmp467;
  const Scalar _tmp722 = _tmp444 * _tmp466;
  const Scalar _tmp723 = _tmp721 + _tmp722;
  const Scalar _tmp724 = _tmp715 * _tmp723;
  const Scalar _tmp725 = _tmp714 * sqrt_info(2, 3);
  const Scalar _tmp726 = _tmp717 + _tmp718;
  const Scalar _tmp727 = _tmp715 * _tmp726;
  const Scalar _tmp728 = -2 * std::pow(_tmp443, Scalar(2));
  const Scalar _tmp729 = _tmp712 + _tmp728 + 1;
  const Scalar _tmp730 = _tmp715 * _tmp729;
  const Scalar _tmp731 = _tmp441 * _tmp466;
  const Scalar _tmp732 = _tmp444 * _tmp467;
  const Scalar _tmp733 = -_tmp731 + _tmp732;
  const Scalar _tmp734 = _tmp715 * _tmp733;
  const Scalar _tmp735 = _tmp713 + _tmp728;
  const Scalar _tmp736 = _tmp715 * _tmp735;
  const Scalar _tmp737 = -_tmp721 + _tmp722;
  const Scalar _tmp738 = _tmp715 * _tmp737;
  const Scalar _tmp739 = _tmp731 + _tmp732;
  const Scalar _tmp740 = _tmp715 * _tmp739;
  const Scalar _tmp741 = _tmp739 * sqrt_info(1, 4);
  const Scalar _tmp742 = (Scalar(1) / Scalar(2)) * _tmp47;
  const Scalar _tmp743 = (Scalar(1) / Scalar(2)) * _tmp43;
  const Scalar _tmp744 = (Scalar(1) / Scalar(2)) * _tmp44;
  const Scalar _tmp745 = (Scalar(1) / Scalar(2)) * _tmp45;
  const Scalar _tmp746 = -_tmp742 - _tmp743 - _tmp744 - _tmp745;
  const Scalar _tmp747 = _tmp199 * _tmp228;
  const Scalar _tmp748 = _tmp746 * _tmp747;
  const Scalar _tmp749 = -_tmp748;
  const Scalar _tmp750 = (Scalar(1) / Scalar(2)) * _tmp64;
  const Scalar _tmp751 = (Scalar(1) / Scalar(2)) * _tmp65;
  const Scalar _tmp752 = (Scalar(1) / Scalar(2)) * _tmp66;
  const Scalar _tmp753 = (Scalar(1) / Scalar(2)) * _tmp67;
  const Scalar _tmp754 = -_tmp750 + _tmp751 + _tmp752 - _tmp753;
  const Scalar _tmp755 = ((((_tmp18 - _tmp194) > 0) - ((_tmp18 - _tmp194) < 0)) + 1) *
                         (((_tmp193) > 0) - ((_tmp193) < 0));
  const Scalar _tmp756 = _tmp754 * _tmp755;
  const Scalar _tmp757 = _tmp195 * _tmp202 / std::pow(_tmp196, Scalar(2));
  const Scalar _tmp758 = _tmp69 * _tmp757;
  const Scalar _tmp759 = _tmp197 / (_tmp196 * std::sqrt(_tmp196));
  const Scalar _tmp760 = _tmp63 * _tmp756;
  const Scalar _tmp761 = _tmp756 * _tmp759;
  const Scalar _tmp762 = _tmp62 * _tmp757;
  const Scalar _tmp763 = 8 * _tmp203 * _tmp59 * _tmp60;
  const Scalar _tmp764 = _tmp68 * _tmp763;
  const Scalar _tmp765 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp766 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp767 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp768 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp769 = -_tmp765 + _tmp766 - _tmp767 + _tmp768;
  const Scalar _tmp770 = _tmp58 * _tmp763;
  const Scalar _tmp771 = (Scalar(1) / Scalar(2)) * _tmp54;
  const Scalar _tmp772 = (Scalar(1) / Scalar(2)) * _tmp55;
  const Scalar _tmp773 = (Scalar(1) / Scalar(2)) * _tmp56;
  const Scalar _tmp774 = (Scalar(1) / Scalar(2)) * _tmp57;
  const Scalar _tmp775 = _tmp771 + _tmp772 - _tmp773 - _tmp774;
  const Scalar _tmp776 = _tmp4 * _tmp763;
  const Scalar _tmp777 = _tmp769 * _tmp770 + _tmp775 * _tmp776;
  const Scalar _tmp778 = -_tmp62 * _tmp761 - _tmp69 * _tmp761 + _tmp746 * _tmp764 +
                         _tmp756 * _tmp758 + _tmp756 * _tmp762 + _tmp757 * _tmp760 -
                         _tmp759 * _tmp760 + _tmp777;
  const Scalar _tmp779 = (Scalar(1) / Scalar(2)) * _tmp218;
  const Scalar _tmp780 = _tmp192 * _tmp779;
  const Scalar _tmp781 = _tmp117 * _tmp4;
  const Scalar _tmp782 = _tmp195 * _tmp218;
  const Scalar _tmp783 = _tmp761 * _tmp782;
  const Scalar _tmp784 = _tmp253 * _tmp783;
  const Scalar _tmp785 = Scalar(1.0) / (_tmp204);
  const Scalar _tmp786 = _tmp231 * _tmp785;
  const Scalar _tmp787 = _tmp259 * _tmp786;
  const Scalar _tmp788 = _tmp201 * _tmp218;
  const Scalar _tmp789 = _tmp118 * _tmp788;
  const Scalar _tmp790 = _tmp227 * _tmp789;
  const Scalar _tmp791 = std::pow(_tmp204, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp792 = _tmp222 * _tmp225;
  const Scalar _tmp793 = _tmp791 * _tmp792;
  const Scalar _tmp794 = _tmp223 * _tmp49;
  const Scalar _tmp795 = _tmp201 * _tmp794;
  const Scalar _tmp796 = _tmp756 * _tmp795;
  const Scalar _tmp797 = _tmp198 * _tmp227;
  const Scalar _tmp798 = _tmp217 * _tmp797;
  const Scalar _tmp799 = _tmp791 * _tmp798;
  const Scalar _tmp800 = _tmp778 * _tmp799;
  const Scalar _tmp801 = _tmp252 * _tmp786;
  const Scalar _tmp802 = _tmp227 * _tmp801;
  const Scalar _tmp803 = (Scalar(1) / Scalar(2)) * _tmp255;
  const Scalar _tmp804 = _tmp785 * _tmp803;
  const Scalar _tmp805 = _tmp225 * _tmp804;
  const Scalar _tmp806 = _tmp198 * _tmp781;
  const Scalar _tmp807 = _tmp253 * _tmp778;
  const Scalar _tmp808 = _tmp217 * _tmp791;
  const Scalar _tmp809 = _tmp807 * _tmp808;
  const Scalar _tmp810 = _tmp195 * _tmp794;
  const Scalar _tmp811 = _tmp761 * _tmp810;
  const Scalar _tmp812 = _tmp253 * _tmp788;
  const Scalar _tmp813 = _tmp756 * _tmp781;
  const Scalar _tmp814 = _tmp227 * _tmp783;
  const Scalar _tmp815 = _tmp199 * _tmp775;
  const Scalar _tmp816 = _tmp254 * _tmp815 + _tmp260 * _tmp769;
  const Scalar _tmp817 = _tmp118 * _tmp800 - _tmp118 * _tmp814 - _tmp58 * _tmp796 +
                         _tmp58 * _tmp811 + _tmp749 + _tmp756 * _tmp790 - _tmp778 * _tmp780 +
                         _tmp778 * _tmp787 - _tmp778 * _tmp793 - _tmp778 * _tmp802 +
                         _tmp778 * _tmp805 + _tmp781 * _tmp784 - _tmp806 * _tmp809 -
                         _tmp812 * _tmp813 + _tmp816;
  const Scalar _tmp818 = _tmp260 * _tmp746;
  const Scalar _tmp819 = _tmp225 * _tmp786;
  const Scalar _tmp820 = _tmp227 * _tmp819;
  const Scalar _tmp821 = _tmp199 * _tmp222;
  const Scalar _tmp822 = _tmp68 * _tmp821;
  const Scalar _tmp823 = _tmp791 * _tmp822;
  const Scalar _tmp824 = _tmp252 * _tmp804;
  const Scalar _tmp825 = _tmp253 * _tmp779;
  const Scalar _tmp826 = _tmp117 * _tmp58;
  const Scalar _tmp827 = _tmp192 * _tmp198;
  const Scalar _tmp828 = _tmp808 * _tmp827;
  const Scalar _tmp829 = _tmp68 * _tmp795;
  const Scalar _tmp830 = _tmp192 * _tmp788;
  const Scalar _tmp831 = _tmp227 * _tmp788;
  const Scalar _tmp832 = _tmp826 * _tmp831;
  const Scalar _tmp833 = _tmp192 * _tmp783;
  const Scalar _tmp834 = _tmp200 * _tmp786;
  const Scalar _tmp835 = _tmp192 * _tmp834;
  const Scalar _tmp836 = _tmp778 * _tmp826;
  const Scalar _tmp837 = -_tmp251 * _tmp815 + _tmp747 * _tmp769;
  const Scalar _tmp838 = _tmp68 * _tmp811 - _tmp756 * _tmp829 - _tmp756 * _tmp832 +
                         _tmp778 * _tmp781 * _tmp828 + _tmp778 * _tmp820 - _tmp778 * _tmp823 +
                         _tmp778 * _tmp824 - _tmp778 * _tmp825 - _tmp778 * _tmp835 -
                         _tmp781 * _tmp833 - _tmp799 * _tmp836 + _tmp813 * _tmp830 +
                         _tmp814 * _tmp826 + _tmp818 + _tmp837;
  const Scalar _tmp839 = _tmp826 * _tmp830;
  const Scalar _tmp840 = _tmp118 * _tmp198;
  const Scalar _tmp841 = (Scalar(1) / Scalar(4)) * _tmp223;
  const Scalar _tmp842 = _tmp199 * _tmp254;
  const Scalar _tmp843 = _tmp746 * _tmp842;
  const Scalar _tmp844 = -_tmp843;
  const Scalar _tmp845 = _tmp227 * _tmp834;
  const Scalar _tmp846 = _tmp253 * _tmp801;
  const Scalar _tmp847 = _tmp253 * _tmp789;
  const Scalar _tmp848 = _tmp192 * _tmp819;
  const Scalar _tmp849 = _tmp781 * _tmp831;
  const Scalar _tmp850 = _tmp199 * _tmp251;
  const Scalar _tmp851 = -_tmp228 * _tmp815 - _tmp769 * _tmp850;
  const Scalar _tmp852 = -_tmp118 * _tmp784 + _tmp756 * _tmp839 + _tmp756 * _tmp847 +
                         _tmp756 * _tmp849 - _tmp778 * _tmp841 - _tmp778 * _tmp845 -
                         _tmp778 * _tmp846 - _tmp778 * _tmp848 + _tmp781 * _tmp800 -
                         _tmp781 * _tmp814 + _tmp809 * _tmp840 - _tmp826 * _tmp833 +
                         _tmp828 * _tmp836 + _tmp844 + _tmp851;
  const Scalar _tmp853 = _tmp280 * _tmp640;
  const Scalar _tmp854 = _tmp311 * _tmp853;
  const Scalar _tmp855 = _tmp282 + _tmp283 + _tmp284 + _tmp285;
  const Scalar _tmp856 = -_tmp101 * _tmp853 - _tmp113 * _tmp853 + _tmp278 * _tmp640 +
                         _tmp288 * _tmp855 - _tmp289 * _tmp640 + _tmp290 * _tmp640 +
                         _tmp291 * _tmp640 + _tmp304;
  const Scalar _tmp857 = _tmp106 * _tmp574;
  const Scalar _tmp858 = _tmp316 * _tmp640;
  const Scalar _tmp859 = _tmp112 * _tmp858;
  const Scalar _tmp860 = _tmp557 * _tmp640;
  const Scalar _tmp861 = _tmp248 * _tmp856;
  const Scalar _tmp862 = _tmp342 * _tmp861;
  const Scalar _tmp863 = _tmp335 * _tmp856;
  const Scalar _tmp864 = _tmp200 * _tmp804;
  const Scalar _tmp865 = _tmp4 * _tmp821;
  const Scalar _tmp866 = _tmp791 * _tmp865;
  const Scalar _tmp867 = _tmp812 * _tmp826;
  const Scalar _tmp868 = _tmp192 * _tmp840;
  const Scalar _tmp869 = _tmp192 * _tmp801;
  const Scalar _tmp870 = _tmp192 * _tmp789;
  const Scalar _tmp871 = _tmp746 * _tmp850;
  const Scalar _tmp872 = _tmp227 * _tmp779;
  const Scalar _tmp873 = _tmp198 * _tmp826;
  const Scalar _tmp874 = _tmp260 * _tmp775 - _tmp769 * _tmp842;
  const Scalar _tmp875 = _tmp118 * _tmp833 - _tmp4 * _tmp796 + _tmp4 * _tmp811 + _tmp756 * _tmp867 -
                         _tmp756 * _tmp870 - _tmp778 * _tmp808 * _tmp868 + _tmp778 * _tmp864 -
                         _tmp778 * _tmp866 + _tmp778 * _tmp869 - _tmp778 * _tmp872 -
                         _tmp784 * _tmp826 - _tmp807 * _tmp819 + _tmp809 * _tmp873 + _tmp871 +
                         _tmp874;
  const Scalar _tmp876 = _tmp394 * _tmp855;
  const Scalar _tmp877 = -_tmp876;
  const Scalar _tmp878 = -_tmp250 * _tmp817 - _tmp258 * _tmp875 - _tmp262 * _tmp838 +
                         _tmp263 * _tmp852 + _tmp325 * _tmp860 - _tmp328 * _tmp862 -
                         _tmp350 * _tmp856 - _tmp352 * _tmp861 - _tmp353 * _tmp861 +
                         _tmp354 * _tmp859 + _tmp354 * _tmp863 - _tmp355 * _tmp854 -
                         _tmp357 * _tmp854 + _tmp357 * _tmp858 + _tmp360 * _tmp856 + _tmp362 -
                         _tmp572 * _tmp854 + _tmp856 * _tmp857 + _tmp877;
  const Scalar _tmp879 = _tmp345 * _tmp855;
  const Scalar _tmp880 = -_tmp879;
  const Scalar _tmp881 = _tmp250 * _tmp852 + _tmp258 * _tmp838 - _tmp262 * _tmp875 +
                         _tmp263 * _tmp817 + _tmp325 * _tmp863 - _tmp354 * _tmp860 -
                         _tmp366 * _tmp854 + _tmp366 * _tmp858 + _tmp367 * _tmp854 -
                         _tmp367 * _tmp858 + _tmp368 * _tmp861 - _tmp371 * _tmp856 -
                         _tmp372 * _tmp856 - _tmp374 * _tmp856 + _tmp376 * _tmp861 + _tmp378 +
                         _tmp577 * _tmp854 - _tmp579 * _tmp861 + _tmp880;
  const Scalar _tmp882 = _tmp344 * _tmp855;
  const Scalar _tmp883 = -_tmp250 * _tmp838 + _tmp258 * _tmp852 + _tmp262 * _tmp817 +
                         _tmp263 * _tmp875 - _tmp309 * _tmp860 - _tmp313 * _tmp859 -
                         _tmp313 * _tmp863 + _tmp333 * _tmp862 + _tmp384 * _tmp856 -
                         _tmp385 * _tmp854 + _tmp385 * _tmp858 - _tmp386 * _tmp861 -
                         _tmp387 * _tmp856 - _tmp388 * _tmp856 + _tmp391 * _tmp861 +
                         _tmp393 * _tmp854 + _tmp395 + _tmp567 * _tmp854 + _tmp882;
  const Scalar _tmp884 = _tmp261 * _tmp337;
  const Scalar _tmp885 = _tmp377 * _tmp855;
  const Scalar _tmp886 = _tmp265 * _tmp328;
  const Scalar _tmp887 = _tmp250 * _tmp875 - _tmp258 * _tmp817 + _tmp262 * _tmp852 +
                         _tmp263 * _tmp838 - _tmp307 * _tmp856 - _tmp309 * _tmp859 -
                         _tmp309 * _tmp863 + _tmp310 * _tmp854 + _tmp313 * _tmp860 -
                         _tmp322 * _tmp856 + _tmp326 * _tmp854 - _tmp326 * _tmp858 +
                         _tmp334 * _tmp861 - _tmp341 * _tmp862 + _tmp346 - _tmp548 * _tmp854 +
                         _tmp856 * _tmp884 + _tmp861 * _tmp886 + _tmp885;
  const Scalar _tmp888 = _tmp878 * _x0[1] + _tmp881 * _x0[3] - _tmp883 * _x0[0] + _tmp887 * _x0[2];
  const Scalar _tmp889 = _tmp878 * _x0[0] - _tmp881 * _x0[2] + _tmp883 * _x0[1] + _tmp887 * _x0[3];
  const Scalar _tmp890 = _tmp878 * _x0[3] - _tmp881 * _x0[1] - _tmp883 * _x0[2] - _tmp887 * _x0[0];
  const Scalar _tmp891 = _tmp878 * _x0[2] + _tmp881 * _x0[0] + _tmp883 * _x0[3] - _tmp887 * _x0[1];
  const Scalar _tmp892 = -_tmp888 * _y[2] - _tmp889 * _y[3] + _tmp890 * _y[0] + _tmp891 * _y[1];
  const Scalar _tmp893 = _tmp888 * _y[1] + _tmp889 * _y[0] + _tmp890 * _y[3] + _tmp891 * _y[2];
  const Scalar _tmp894 = _tmp888 * _y[0] - _tmp889 * _y[1] + _tmp890 * _y[2] - _tmp891 * _y[3];
  const Scalar _tmp895 = -_tmp888 * _y[3] + _tmp889 * _y[2] + _tmp890 * _y[1] - _tmp891 * _y[0];
  const Scalar _tmp896 =
      _tmp892 * _x_T_y[0] + _tmp893 * _x_T_y[3] + _tmp894 * _x_T_y[2] + _tmp895 * _x_T_y[1];
  const Scalar _tmp897 = _tmp522 * _tmp896;
  const Scalar _tmp898 =
      _tmp892 * _x_T_y[1] - _tmp893 * _x_T_y[2] + _tmp894 * _x_T_y[3] - _tmp895 * _x_T_y[0];
  const Scalar _tmp899 = _tmp460 * _tmp898;
  const Scalar _tmp900 = _tmp464 * _tmp888;
  const Scalar _tmp901 = _tmp467 * _tmp890;
  const Scalar _tmp902 = _tmp462 * _tmp889 + _tmp466 * _tmp891;
  const Scalar _tmp903 = -_tmp900 - _tmp901 + _tmp902;
  const Scalar _tmp904 = _tmp464 * _tmp891;
  const Scalar _tmp905 = _tmp462 * _tmp890;
  const Scalar _tmp906 = _tmp466 * _tmp888 + _tmp467 * _tmp889;
  const Scalar _tmp907 = _tmp904 + _tmp905 + _tmp906;
  const Scalar _tmp908 = -_tmp470 * _tmp888;
  const Scalar _tmp909 = -_tmp472 * _tmp891;
  const Scalar _tmp910 = _tmp908 + _tmp909;
  const Scalar _tmp911 = -_tmp152 * _tmp907 - _tmp153 * _tmp910 - _tmp157 * _tmp903 +
                         _tmp903 * _y[6] + _tmp907 * _y[5] + _tmp910 * _y[4];
  const Scalar _tmp912 =
      _tmp892 * _x_T_y[3] - _tmp893 * _x_T_y[0] - _tmp894 * _x_T_y[1] + _tmp895 * _x_T_y[2];
  const Scalar _tmp913 = _tmp510 * _tmp896;
  const Scalar _tmp914 =
      -_tmp892 * _x_T_y[2] - _tmp893 * _x_T_y[1] + _tmp894 * _x_T_y[0] + _tmp895 * _x_T_y[3];
  const Scalar _tmp915 = _tmp460 * _tmp914;
  const Scalar _tmp916 = _tmp526 * _tmp896;
  const Scalar _tmp917 = _tmp900 + _tmp901 + _tmp902;
  const Scalar _tmp918 = _tmp464 * _tmp889;
  const Scalar _tmp919 = _tmp466 * _tmp890;
  const Scalar _tmp920 = _tmp462 * _tmp888 + _tmp467 * _tmp891;
  const Scalar _tmp921 = -_tmp918 - _tmp919 + _tmp920;
  const Scalar _tmp922 = -_tmp485 * _tmp889;
  const Scalar _tmp923 = _tmp908 + _tmp922;
  const Scalar _tmp924 = -_tmp152 * _tmp921 - _tmp153 * _tmp917 - _tmp157 * _tmp923 +
                         _tmp917 * _y[4] + _tmp921 * _y[5] + _tmp923 * _y[6];
  const Scalar _tmp925 = _tmp918 + _tmp919 + _tmp920;
  const Scalar _tmp926 = _tmp909 + _tmp922;
  const Scalar _tmp927 = -_tmp904 - _tmp905 + _tmp906;
  const Scalar _tmp928 = -_tmp152 * _tmp926 - _tmp153 * _tmp927 - _tmp157 * _tmp925 +
                         _tmp925 * _y[6] + _tmp926 * _y[5] + _tmp927 * _y[4];
  const Scalar _tmp929 = _tmp498 * _tmp896;
  const Scalar _tmp930 = _tmp460 * _tmp912;
  const Scalar _tmp931 = _tmp536 * _tmp896;
  const Scalar _tmp932 = _tmp275 * _tmp296;
  const Scalar _tmp933 = _tmp315 * _tmp932;
  const Scalar _tmp934 = _tmp279 * _tmp932;
  const Scalar _tmp935 = _tmp311 * _tmp934;
  const Scalar _tmp936 = -_tmp771 - _tmp772 + _tmp773 + _tmp774;
  const Scalar _tmp937 = _tmp755 * _tmp759;
  const Scalar _tmp938 = _tmp69 * _tmp937;
  const Scalar _tmp939 = _tmp62 * _tmp937;
  const Scalar _tmp940 = _tmp63 * _tmp757;
  const Scalar _tmp941 = _tmp755 * _tmp936;
  const Scalar _tmp942 = _tmp63 * _tmp937;
  const Scalar _tmp943 = _tmp755 * _tmp762;
  const Scalar _tmp944 = _tmp765 - _tmp766 + _tmp767 - _tmp768;
  const Scalar _tmp945 = _tmp754 * _tmp776 + _tmp764 * _tmp944;
  const Scalar _tmp946 = _tmp746 * _tmp770 + _tmp758 * _tmp941 - _tmp936 * _tmp938 -
                         _tmp936 * _tmp939 - _tmp936 * _tmp942 + _tmp936 * _tmp943 +
                         _tmp940 * _tmp941 + _tmp945;
  const Scalar _tmp947 = _tmp786 * _tmp946;
  const Scalar _tmp948 = _tmp252 * _tmp947;
  const Scalar _tmp949 = _tmp810 * _tmp937;
  const Scalar _tmp950 = _tmp58 * _tmp949;
  const Scalar _tmp951 = _tmp781 * _tmp941;
  const Scalar _tmp952 = _tmp791 * _tmp946;
  const Scalar _tmp953 = _tmp118 * _tmp798;
  const Scalar _tmp954 = _tmp804 * _tmp946;
  const Scalar _tmp955 = _tmp755 * _tmp795;
  const Scalar _tmp956 = _tmp58 * _tmp955;
  const Scalar _tmp957 = _tmp217 * _tmp952;
  const Scalar _tmp958 = _tmp253 * _tmp806;
  const Scalar _tmp959 = _tmp782 * _tmp937;
  const Scalar _tmp960 = _tmp118 * _tmp959;
  const Scalar _tmp961 = _tmp936 * _tmp960;
  const Scalar _tmp962 = _tmp781 * _tmp959;
  const Scalar _tmp963 = _tmp936 * _tmp962;
  const Scalar _tmp964 = _tmp199 * _tmp944;
  const Scalar _tmp965 = -_tmp228 * _tmp964 + _tmp754 * _tmp842;
  const Scalar _tmp966 = _tmp225 * _tmp954 - _tmp227 * _tmp948 - _tmp227 * _tmp961 +
                         _tmp253 * _tmp963 + _tmp259 * _tmp947 - _tmp780 * _tmp946 +
                         _tmp790 * _tmp941 - _tmp792 * _tmp952 - _tmp812 * _tmp951 + _tmp818 +
                         _tmp936 * _tmp950 - _tmp936 * _tmp956 + _tmp952 * _tmp953 -
                         _tmp957 * _tmp958 + _tmp965;
  const Scalar _tmp967 = _tmp276 * _tmp932;
  const Scalar _tmp968 = _tmp101 * _tmp932;
  const Scalar _tmp969 = -_tmp107 * _tmp934 + _tmp107 * _tmp967 - _tmp113 * _tmp934 +
                         _tmp113 * _tmp967 + _tmp276 * _tmp968 - _tmp279 * _tmp968 +
                         _tmp303 * _tmp855 + _tmp552;
  const Scalar _tmp970 = _tmp248 * _tmp969;
  const Scalar _tmp971 = _tmp328 * _tmp970;
  const Scalar _tmp972 = -_tmp871;
  const Scalar _tmp973 = _tmp826 * _tmp827;
  const Scalar _tmp974 = _tmp225 * _tmp947;
  const Scalar _tmp975 = _tmp200 * _tmp947;
  const Scalar _tmp976 = _tmp781 * _tmp798;
  const Scalar _tmp977 = _tmp253 * _tmp840;
  const Scalar _tmp978 = _tmp826 * _tmp959;
  const Scalar _tmp979 = _tmp936 * _tmp978;
  const Scalar _tmp980 = _tmp227 * _tmp962;
  const Scalar _tmp981 = -_tmp254 * _tmp964 - _tmp747 * _tmp754;
  const Scalar _tmp982 = -_tmp192 * _tmp974 - _tmp192 * _tmp979 - _tmp227 * _tmp975 -
                         _tmp253 * _tmp948 - _tmp253 * _tmp961 + _tmp831 * _tmp951 +
                         _tmp839 * _tmp941 - _tmp841 * _tmp946 + _tmp847 * _tmp941 -
                         _tmp936 * _tmp980 + _tmp952 * _tmp976 + _tmp957 * _tmp973 +
                         _tmp957 * _tmp977 + _tmp972 + _tmp981;
  const Scalar _tmp983 = _tmp798 * _tmp826;
  const Scalar _tmp984 = _tmp781 * _tmp827;
  const Scalar _tmp985 = _tmp68 * _tmp949;
  const Scalar _tmp986 = _tmp260 * _tmp944 - _tmp754 * _tmp850;
  const Scalar _tmp987 = -_tmp192 * _tmp963 - _tmp192 * _tmp975 + _tmp227 * _tmp974 +
                         _tmp227 * _tmp979 + _tmp252 * _tmp954 + _tmp748 - _tmp822 * _tmp952 -
                         _tmp825 * _tmp946 - _tmp829 * _tmp941 + _tmp830 * _tmp951 -
                         _tmp832 * _tmp941 + _tmp936 * _tmp985 - _tmp952 * _tmp983 +
                         _tmp957 * _tmp984 + _tmp986;
  const Scalar _tmp988 = _tmp935 * _tmp97;
  const Scalar _tmp989 = _tmp309 * _tmp969;
  const Scalar _tmp990 = _tmp933 * _tmp97;
  const Scalar _tmp991 = _tmp4 * _tmp955;
  const Scalar _tmp992 = _tmp253 * _tmp873;
  const Scalar _tmp993 = _tmp4 * _tmp949;
  const Scalar _tmp994 = _tmp251 * _tmp964 + _tmp260 * _tmp754;
  const Scalar _tmp995 = _tmp192 * _tmp948 + _tmp192 * _tmp961 + _tmp200 * _tmp954 -
                         _tmp253 * _tmp974 - _tmp253 * _tmp979 + _tmp844 - _tmp865 * _tmp952 +
                         _tmp867 * _tmp941 - _tmp868 * _tmp957 - _tmp870 * _tmp941 -
                         _tmp872 * _tmp946 - _tmp936 * _tmp991 + _tmp936 * _tmp993 +
                         _tmp957 * _tmp992 + _tmp994;
  const Scalar _tmp996 = _tmp250 * _tmp995 - _tmp258 * _tmp966 + _tmp262 * _tmp982 +
                         _tmp263 * _tmp987 + _tmp265 * _tmp971 - _tmp307 * _tmp969 -
                         _tmp310 * _tmp933 + _tmp310 * _tmp935 - _tmp313 * _tmp988 +
                         _tmp313 * _tmp990 - _tmp322 * _tmp969 - _tmp326 * _tmp933 +
                         _tmp326 * _tmp935 + _tmp334 * _tmp970 - _tmp335 * _tmp989 -
                         _tmp563 * _tmp970 + _tmp564 + _tmp879 + _tmp884 * _tmp969;
  const Scalar _tmp997 = _tmp354 * _tmp933;
  const Scalar _tmp998 = _tmp250 * _tmp982 + _tmp258 * _tmp987 - _tmp262 * _tmp995 +
                         _tmp263 * _tmp966 + _tmp354 * _tmp988 + _tmp366 * _tmp933 -
                         _tmp366 * _tmp935 - _tmp367 * _tmp933 + _tmp367 * _tmp935 +
                         _tmp368 * _tmp970 + _tmp370 * _tmp969 - _tmp371 * _tmp969 -
                         _tmp372 * _tmp969 - _tmp374 * _tmp969 + _tmp376 * _tmp970 -
                         _tmp579 * _tmp970 + _tmp580 + _tmp885 - _tmp97 * _tmp997;
  const Scalar _tmp999 = -_tmp250 * _tmp987 + _tmp258 * _tmp982 + _tmp262 * _tmp966 +
                         _tmp263 * _tmp995 + _tmp309 * _tmp988 - _tmp309 * _tmp990 -
                         _tmp373 * _tmp989 + _tmp384 * _tmp969 + _tmp385 * _tmp933 -
                         _tmp385 * _tmp935 - _tmp386 * _tmp970 - _tmp388 * _tmp969 +
                         _tmp390 * _tmp970 + _tmp392 * _tmp969 - _tmp393 * _tmp933 +
                         _tmp393 * _tmp935 - _tmp566 * _tmp969 + _tmp569 + _tmp877;
  const Scalar _tmp1000 = -_tmp882;
  const Scalar _tmp1001 = _tmp1000 + _tmp112 * _tmp997 - _tmp250 * _tmp966 - _tmp258 * _tmp995 -
                          _tmp262 * _tmp987 + _tmp263 * _tmp982 - _tmp325 * _tmp988 +
                          _tmp325 * _tmp990 - _tmp342 * _tmp971 - _tmp350 * _tmp969 -
                          _tmp352 * _tmp970 - _tmp353 * _tmp970 - _tmp355 * _tmp935 +
                          _tmp357 * _tmp933 - _tmp357 * _tmp935 + _tmp359 * _tmp969 +
                          _tmp360 * _tmp969 + _tmp575 + _tmp857 * _tmp969;
  const Scalar _tmp1002 =
      _tmp1001 * _x0[0] + _tmp996 * _x0[3] - _tmp998 * _x0[2] + _tmp999 * _x0[1];
  const Scalar _tmp1003 =
      _tmp1001 * _x0[3] - _tmp996 * _x0[0] - _tmp998 * _x0[1] - _tmp999 * _x0[2];
  const Scalar _tmp1004 =
      _tmp1001 * _x0[2] - _tmp996 * _x0[1] + _tmp998 * _x0[0] + _tmp999 * _x0[3];
  const Scalar _tmp1005 =
      _tmp1001 * _x0[1] + _tmp996 * _x0[2] + _tmp998 * _x0[3] - _tmp999 * _x0[0];
  const Scalar _tmp1006 = _tmp1002 * _y[0] + _tmp1003 * _y[3] + _tmp1004 * _y[2] + _tmp1005 * _y[1];
  const Scalar _tmp1007 =
      -_tmp1002 * _y[1] + _tmp1003 * _y[2] - _tmp1004 * _y[3] + _tmp1005 * _y[0];
  const Scalar _tmp1008 = _tmp1002 * _y[2] + _tmp1003 * _y[1] - _tmp1004 * _y[0] - _tmp1005 * _y[3];
  const Scalar _tmp1009 =
      -_tmp1002 * _y[3] + _tmp1003 * _y[0] + _tmp1004 * _y[1] - _tmp1005 * _y[2];
  const Scalar _tmp1010 =
      _tmp1006 * _x_T_y[3] + _tmp1007 * _x_T_y[2] + _tmp1008 * _x_T_y[1] + _tmp1009 * _x_T_y[0];
  const Scalar _tmp1011 = _tmp1010 * _tmp526;
  const Scalar _tmp1012 =
      -_tmp1006 * _x_T_y[1] + _tmp1007 * _x_T_y[0] + _tmp1008 * _x_T_y[3] - _tmp1009 * _x_T_y[2];
  const Scalar _tmp1013 = _tmp1012 * _tmp460;
  const Scalar _tmp1014 =
      -_tmp1006 * _x_T_y[0] - _tmp1007 * _x_T_y[1] + _tmp1008 * _x_T_y[2] + _tmp1009 * _x_T_y[3];
  const Scalar _tmp1015 = _tmp1014 * _tmp460;
  const Scalar _tmp1016 =
      -_tmp1006 * _x_T_y[2] + _tmp1007 * _x_T_y[3] - _tmp1008 * _x_T_y[0] + _tmp1009 * _x_T_y[1];
  const Scalar _tmp1017 = _tmp1016 * _tmp460;
  const Scalar _tmp1018 = _tmp1010 * _tmp509;
  const Scalar _tmp1019 = _tmp1018 * _tmp495;
  const Scalar _tmp1020 = _tmp1019 * _tmp494;
  const Scalar _tmp1021 = -_tmp1004 * _tmp472;
  const Scalar _tmp1022 = -_tmp1005 * _tmp470;
  const Scalar _tmp1023 = _tmp1021 + _tmp1022;
  const Scalar _tmp1024 = _tmp1004 * _tmp464;
  const Scalar _tmp1025 = _tmp1003 * _tmp462;
  const Scalar _tmp1026 = _tmp1002 * _tmp467 + _tmp1005 * _tmp466;
  const Scalar _tmp1027 = _tmp1024 + _tmp1025 + _tmp1026;
  const Scalar _tmp1028 = _tmp1005 * _tmp464;
  const Scalar _tmp1029 = _tmp1003 * _tmp467;
  const Scalar _tmp1030 = _tmp1002 * _tmp462 + _tmp1004 * _tmp466;
  const Scalar _tmp1031 = -_tmp1028 - _tmp1029 + _tmp1030;
  const Scalar _tmp1032 = -_tmp1023 * _tmp153 + _tmp1023 * _y[4] - _tmp1027 * _tmp152 +
                          _tmp1027 * _y[5] - _tmp1031 * _tmp157 + _tmp1031 * _y[6];
  const Scalar _tmp1033 = -_tmp1024 - _tmp1025 + _tmp1026;
  const Scalar _tmp1034 = -_tmp1002 * _tmp485;
  const Scalar _tmp1035 = _tmp1021 + _tmp1034;
  const Scalar _tmp1036 = _tmp1002 * _tmp464;
  const Scalar _tmp1037 = _tmp1003 * _tmp466;
  const Scalar _tmp1038 = _tmp1004 * _tmp467 + _tmp1005 * _tmp462;
  const Scalar _tmp1039 = _tmp1036 + _tmp1037 + _tmp1038;
  const Scalar _tmp1040 = -_tmp1033 * _tmp153 + _tmp1033 * _y[4] - _tmp1035 * _tmp152 +
                          _tmp1035 * _y[5] - _tmp1039 * _tmp157 + _tmp1039 * _y[6];
  const Scalar _tmp1041 = _tmp1028 + _tmp1029 + _tmp1030;
  const Scalar _tmp1042 = _tmp1022 + _tmp1034;
  const Scalar _tmp1043 = -_tmp1036 - _tmp1037 + _tmp1038;
  const Scalar _tmp1044 = -_tmp1041 * _tmp153 + _tmp1041 * _y[4] - _tmp1042 * _tmp157 +
                          _tmp1042 * _y[6] - _tmp1043 * _tmp152 + _tmp1043 * _y[5];
  const Scalar _tmp1045 = _tmp1018 * _tmp508;
  const Scalar _tmp1046 = _tmp1010 * _tmp496;
  const Scalar _tmp1047 = _tmp1019 * _tmp520;
  const Scalar _tmp1048 = _tmp1010 * _tmp498;
  const Scalar _tmp1049 = _tmp1010 * _tmp536;
  const Scalar _tmp1050 = _tmp278 * _tmp551 - _tmp289 * _tmp551 + _tmp290 * _tmp551 +
                          _tmp291 * _tmp551 + _tmp297 * _tmp855 - _tmp549 * _tmp551 -
                          _tmp550 * _tmp551 + _tmp641;
  const Scalar _tmp1051 = _tmp1050 * _tmp248;
  const Scalar _tmp1052 = _tmp1051 * _tmp318;
  const Scalar _tmp1053 = _tmp1052 * _tmp112;
  const Scalar _tmp1054 = _tmp339 * _tmp551;
  const Scalar _tmp1055 = _tmp1052 * _tmp97;
  const Scalar _tmp1056 = _tmp755 * _tmp769;
  const Scalar _tmp1057 = _tmp750 - _tmp751 - _tmp752 + _tmp753;
  const Scalar _tmp1058 = _tmp1057 * _tmp58;
  const Scalar _tmp1059 = _tmp1058 * _tmp763 + _tmp764 * _tmp936;
  const Scalar _tmp1060 = _tmp1056 * _tmp758 + _tmp1056 * _tmp940 + _tmp1059 + _tmp746 * _tmp776 -
                          _tmp769 * _tmp938 - _tmp769 * _tmp939 - _tmp769 * _tmp942 +
                          _tmp769 * _tmp943;
  const Scalar _tmp1061 = _tmp769 * _tmp978;
  const Scalar _tmp1062 = _tmp1056 * _tmp781;
  const Scalar _tmp1063 = _tmp1060 * _tmp253;
  const Scalar _tmp1064 = _tmp253 * _tmp769;
  const Scalar _tmp1065 = _tmp1060 * _tmp791;
  const Scalar _tmp1066 = _tmp1065 * _tmp217;
  const Scalar _tmp1067 = -_tmp1057 * _tmp850 - _tmp842 * _tmp936;
  const Scalar _tmp1068 = _tmp1056 * _tmp839 + _tmp1056 * _tmp847 - _tmp1060 * _tmp841 -
                          _tmp1060 * _tmp845 - _tmp1060 * _tmp848 - _tmp1061 * _tmp192 +
                          _tmp1062 * _tmp831 - _tmp1063 * _tmp801 - _tmp1064 * _tmp960 +
                          _tmp1065 * _tmp976 + _tmp1066 * _tmp973 + _tmp1066 * _tmp977 + _tmp1067 +
                          _tmp749 - _tmp769 * _tmp980;
  const Scalar _tmp1069 = _tmp316 * _tmp551;
  const Scalar _tmp1070 = _tmp1052 * _tmp106;
  const Scalar _tmp1071 = _tmp1069 * _tmp112;
  const Scalar _tmp1072 = _tmp227 * _tmp960;
  const Scalar _tmp1073 = _tmp1056 * _tmp789;
  const Scalar _tmp1074 = _tmp1057 * _tmp260 - _tmp747 * _tmp936;
  const Scalar _tmp1075 = -_tmp1060 * _tmp780 - _tmp1060 * _tmp802 + _tmp1060 * _tmp805 -
                          _tmp1062 * _tmp812 + _tmp1063 * _tmp834 + _tmp1064 * _tmp962 -
                          _tmp1065 * _tmp792 + _tmp1065 * _tmp953 - _tmp1066 * _tmp958 -
                          _tmp1072 * _tmp769 + _tmp1073 * _tmp227 + _tmp1074 + _tmp769 * _tmp950 -
                          _tmp769 * _tmp956 + _tmp843;
  const Scalar _tmp1076 = _tmp192 * _tmp960;
  const Scalar _tmp1077 = -_tmp1057 * _tmp842 + _tmp850 * _tmp936;
  const Scalar _tmp1078 = _tmp1056 * _tmp867 + _tmp1060 * _tmp864 + _tmp1060 * _tmp869 -
                          _tmp1060 * _tmp872 - _tmp1063 * _tmp819 - _tmp1064 * _tmp978 -
                          _tmp1065 * _tmp865 - _tmp1066 * _tmp868 + _tmp1066 * _tmp992 -
                          _tmp1073 * _tmp192 + _tmp1076 * _tmp769 + _tmp1077 - _tmp769 * _tmp991 +
                          _tmp769 * _tmp993 + _tmp818;
  const Scalar _tmp1079 = _tmp192 * _tmp962;
  const Scalar _tmp1080 = _tmp1057 * _tmp747 + _tmp260 * _tmp936;
  const Scalar _tmp1081 = -_tmp1056 * _tmp829 - _tmp1056 * _tmp832 + _tmp1060 * _tmp820 +
                          _tmp1060 * _tmp824 - _tmp1060 * _tmp835 + _tmp1061 * _tmp227 +
                          _tmp1062 * _tmp830 - _tmp1063 * _tmp779 - _tmp1065 * _tmp822 -
                          _tmp1065 * _tmp983 + _tmp1066 * _tmp984 - _tmp1079 * _tmp769 + _tmp1080 +
                          _tmp769 * _tmp985 + _tmp972;
  const Scalar _tmp1082 = _tmp1051 * _tmp333;
  const Scalar _tmp1083 = _tmp1000 - _tmp1050 * _tmp307 - _tmp1051 * _tmp563 + _tmp1051 * _tmp886 -
                          _tmp1053 * _tmp309 + _tmp1054 * _tmp310 + _tmp1054 * _tmp326 -
                          _tmp1054 * _tmp548 + _tmp1055 * _tmp313 + _tmp1068 * _tmp262 -
                          _tmp1069 * _tmp326 - _tmp1070 * _tmp325 - _tmp1071 * _tmp309 -
                          _tmp1075 * _tmp258 + _tmp1078 * _tmp250 + _tmp1081 * _tmp263 +
                          _tmp1082 * _tmp332 + _tmp551 * _tmp654 + _tmp656;
  const Scalar _tmp1084 = -_tmp1050 * _tmp372 + _tmp1051 * _tmp368 + _tmp1051 * _tmp376 -
                          _tmp1052 * _tmp367 + _tmp1053 * _tmp325 - _tmp1054 * _tmp366 +
                          _tmp1054 * _tmp367 + _tmp1054 * _tmp577 - _tmp1055 * _tmp354 +
                          _tmp1068 * _tmp250 + _tmp1069 * _tmp366 - _tmp1069 * _tmp367 +
                          _tmp1075 * _tmp263 - _tmp1078 * _tmp262 + _tmp1081 * _tmp258 -
                          _tmp1082 * _tmp265 - _tmp551 * _tmp644 + _tmp649 + _tmp876;
  const Scalar _tmp1085 = _tmp309 * _tmp551;
  const Scalar _tmp1086 = -_tmp1050 * _tmp388 - _tmp1051 * _tmp386 + _tmp1051 * _tmp391 -
                          _tmp1053 * _tmp313 - _tmp1054 * _tmp385 + _tmp1054 * _tmp393 -
                          _tmp1055 * _tmp309 + _tmp1068 * _tmp258 + _tmp1069 * _tmp385 +
                          _tmp1070 * _tmp354 - _tmp1071 * _tmp313 + _tmp1075 * _tmp262 +
                          _tmp1078 * _tmp263 - _tmp1081 * _tmp250 + _tmp1082 * _tmp342 +
                          _tmp1085 * _tmp339 * _tmp97 - _tmp1085 * _tmp557 + _tmp659 + _tmp885;
  const Scalar _tmp1087 = -_tmp1050 * _tmp350 - _tmp1051 * _tmp328 * _tmp342 - _tmp1051 * _tmp353 +
                          _tmp1053 * _tmp354 - _tmp1054 * _tmp355 - _tmp1054 * _tmp357 -
                          _tmp1054 * _tmp572 + _tmp1055 * _tmp325 + _tmp1068 * _tmp263 +
                          _tmp1069 * _tmp357 + _tmp1070 * _tmp313 + _tmp1071 * _tmp354 -
                          _tmp1075 * _tmp250 - _tmp1078 * _tmp258 - _tmp1081 * _tmp262 -
                          _tmp1082 * _tmp351 + _tmp551 * _tmp661 + _tmp662 + _tmp880;
  const Scalar _tmp1088 =
      -_tmp1083 * _x0[0] - _tmp1084 * _x0[1] - _tmp1086 * _x0[2] + _tmp1087 * _x0[3];
  const Scalar _tmp1089 = _tmp1088 * _tmp466;
  const Scalar _tmp1090 =
      _tmp1083 * _x0[3] - _tmp1084 * _x0[2] + _tmp1086 * _x0[1] + _tmp1087 * _x0[0];
  const Scalar _tmp1091 = _tmp1090 * _tmp464;
  const Scalar _tmp1092 =
      -_tmp1083 * _x0[1] + _tmp1084 * _x0[0] + _tmp1086 * _x0[3] + _tmp1087 * _x0[2];
  const Scalar _tmp1093 =
      _tmp1083 * _x0[2] + _tmp1084 * _x0[3] - _tmp1086 * _x0[0] + _tmp1087 * _x0[1];
  const Scalar _tmp1094 = _tmp1092 * _tmp467 + _tmp1093 * _tmp462;
  const Scalar _tmp1095 = -_tmp1089 - _tmp1091 + _tmp1094;
  const Scalar _tmp1096 = -_tmp1090 * _tmp485;
  const Scalar _tmp1097 = -_tmp1093 * _tmp470;
  const Scalar _tmp1098 = _tmp1096 + _tmp1097;
  const Scalar _tmp1099 = _tmp1088 * _tmp467;
  const Scalar _tmp1100 = _tmp1093 * _tmp464;
  const Scalar _tmp1101 = _tmp1090 * _tmp462 + _tmp1092 * _tmp466;
  const Scalar _tmp1102 = _tmp1099 + _tmp1100 + _tmp1101;
  const Scalar _tmp1103 = -_tmp1095 * _tmp152 + _tmp1095 * _y[5] - _tmp1098 * _tmp157 +
                          _tmp1098 * _y[6] - _tmp1102 * _tmp153 + _tmp1102 * _y[4];
  const Scalar _tmp1104 = _tmp1088 * _y[2] - _tmp1090 * _y[1] - _tmp1092 * _y[3] + _tmp1093 * _y[0];
  const Scalar _tmp1105 = _tmp1088 * _y[1] + _tmp1090 * _y[2] - _tmp1092 * _y[0] - _tmp1093 * _y[3];
  const Scalar _tmp1106 = _tmp1088 * _y[0] - _tmp1090 * _y[3] + _tmp1092 * _y[1] - _tmp1093 * _y[2];
  const Scalar _tmp1107 = _tmp1088 * _y[3] + _tmp1090 * _y[0] + _tmp1092 * _y[2] + _tmp1093 * _y[1];
  const Scalar _tmp1108 =
      _tmp1104 * _x_T_y[2] + _tmp1105 * _x_T_y[1] + _tmp1106 * _x_T_y[0] + _tmp1107 * _x_T_y[3];
  const Scalar _tmp1109 = _tmp1088 * _tmp462;
  const Scalar _tmp1110 = _tmp1092 * _tmp464;
  const Scalar _tmp1111 = _tmp1090 * _tmp467 + _tmp1093 * _tmp466;
  const Scalar _tmp1112 = _tmp1109 + _tmp1110 + _tmp1111;
  const Scalar _tmp1113 = -_tmp1099 - _tmp1100 + _tmp1101;
  const Scalar _tmp1114 = -_tmp1092 * _tmp472;
  const Scalar _tmp1115 = _tmp1097 + _tmp1114;
  const Scalar _tmp1116 = -_tmp1112 * _tmp152 + _tmp1112 * _y[5] - _tmp1113 * _tmp157 +
                          _tmp1113 * _y[6] - _tmp1115 * _tmp153 + _tmp1115 * _y[4];
  const Scalar _tmp1117 =
      _tmp1104 * _x_T_y[0] + _tmp1105 * _x_T_y[3] - _tmp1106 * _x_T_y[2] - _tmp1107 * _x_T_y[1];
  const Scalar _tmp1118 = _tmp1108 * _tmp522;
  const Scalar _tmp1119 =
      _tmp1104 * _x_T_y[3] - _tmp1105 * _x_T_y[0] + _tmp1106 * _x_T_y[1] - _tmp1107 * _x_T_y[2];
  const Scalar _tmp1120 = _tmp1119 * _tmp460;
  const Scalar _tmp1121 = _tmp1108 * _tmp526;
  const Scalar _tmp1122 = _tmp1089 + _tmp1091 + _tmp1094;
  const Scalar _tmp1123 = -_tmp1109 - _tmp1110 + _tmp1111;
  const Scalar _tmp1124 = _tmp1096 + _tmp1114;
  const Scalar _tmp1125 = -_tmp1122 * _tmp157 + _tmp1122 * _y[6] - _tmp1123 * _tmp153 +
                          _tmp1123 * _y[4] - _tmp1124 * _tmp152 + _tmp1124 * _y[5];
  const Scalar _tmp1126 =
      -_tmp1104 * _x_T_y[1] + _tmp1105 * _x_T_y[2] + _tmp1106 * _x_T_y[3] - _tmp1107 * _x_T_y[0];
  const Scalar _tmp1127 = _tmp1108 * _tmp510;
  const Scalar _tmp1128 = _tmp1108 * _tmp498;
  const Scalar _tmp1129 = _tmp1108 * _tmp528;
  const Scalar _tmp1130 = _tmp1126 * _tmp460;
  const Scalar _tmp1131 = _tmp1108 * _tmp536;
  const Scalar _tmp1132 = lambdas(0, 0) - lambdas(1, 0);
  const Scalar _tmp1133 = _tmp1132 * _tmp714;
  const Scalar _tmp1134 = _tmp1132 * _tmp723;
  const Scalar _tmp1135 = _tmp1132 * _tmp719;
  const Scalar _tmp1136 = _tmp1132 * _tmp729;
  const Scalar _tmp1137 = _tmp1132 * _tmp733;
  const Scalar _tmp1138 = _tmp1132 * _tmp726;
  const Scalar _tmp1139 = _tmp1132 * _tmp737;
  const Scalar _tmp1140 = _tmp1132 * _tmp739;
  const Scalar _tmp1141 = _tmp1132 * _tmp735;
  const Scalar _tmp1142 = _tmp742 + _tmp743 + _tmp744 + _tmp745;
  const Scalar _tmp1143 = _tmp1142 * _tmp747;
  const Scalar _tmp1144 = -_tmp1143;
  const Scalar _tmp1145 = _tmp1057 * _tmp755;
  const Scalar _tmp1146 = -_tmp1057 * _tmp938 - _tmp1057 * _tmp939 - _tmp1057 * _tmp942 +
                          _tmp1057 * _tmp943 + _tmp1142 * _tmp764 + _tmp1145 * _tmp758 +
                          _tmp1145 * _tmp940 + _tmp777;
  const Scalar _tmp1147 = _tmp1057 * _tmp4;
  const Scalar _tmp1148 = _tmp117 * _tmp959;
  const Scalar _tmp1149 = _tmp1147 * _tmp1148;
  const Scalar _tmp1150 = _tmp11 * _tmp231;
  const Scalar _tmp1151 = _tmp1150 * _tmp31;
  const Scalar _tmp1152 = (Scalar(1) / Scalar(2)) * _tmp34;
  const Scalar _tmp1153 = (Scalar(1) / Scalar(2)) * _tmp35;
  const Scalar _tmp1154 = (Scalar(1) / Scalar(2)) * _tmp36;
  const Scalar _tmp1155 = (Scalar(1) / Scalar(2)) * _tmp37;
  const Scalar _tmp1156 = _tmp1152 - _tmp1153 + _tmp1154 - _tmp1155;
  const Scalar _tmp1157 = _tmp1156 * _tmp190;
  const Scalar _tmp1158 = std::pow(_tmp187, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp1159 = ((((_tmp18 - _tmp185) > 0) - ((_tmp18 - _tmp185) < 0)) + 1) *
                          (((_tmp184) > 0) - ((_tmp184) < 0));
  const Scalar _tmp1160 = _tmp1158 * _tmp1159;
  const Scalar _tmp1161 = _tmp1160 * _tmp186;
  const Scalar _tmp1162 = _tmp1157 * _tmp1161;
  const Scalar _tmp1163 = _tmp1146 * _tmp799;
  const Scalar _tmp1164 = _tmp1151 * _tmp209;
  const Scalar _tmp1165 = _tmp1156 * _tmp1159;
  const Scalar _tmp1166 = _tmp209 * _tmp218;
  const Scalar _tmp1167 = _tmp1165 * _tmp1166;
  const Scalar _tmp1168 = _tmp11 * _tmp840;
  const Scalar _tmp1169 = _tmp1168 * _tmp17;
  const Scalar _tmp1170 = _tmp1160 * _tmp25;
  const Scalar _tmp1171 = _tmp1160 * _tmp39;
  const Scalar _tmp1172 = _tmp1159 * _tmp32;
  const Scalar _tmp1173 = _tmp186 * _tmp210 / std::pow(_tmp187, Scalar(2));
  const Scalar _tmp1174 = _tmp1172 * _tmp1173;
  const Scalar _tmp1175 = _tmp1158 * _tmp1172;
  const Scalar _tmp1176 = (Scalar(1) / Scalar(2)) * _tmp5;
  const Scalar _tmp1177 = (Scalar(1) / Scalar(2)) * _tmp6;
  const Scalar _tmp1178 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp1179 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp1180 = -_tmp1176 - _tmp1177 - _tmp1178 - _tmp1179;
  const Scalar _tmp1181 = 8 * _tmp211 * _tmp22 * _tmp23;
  const Scalar _tmp1182 = _tmp1181 * _tmp38;
  const Scalar _tmp1183 = _tmp1173 * _tmp39;
  const Scalar _tmp1184 = _tmp1173 * _tmp25;
  const Scalar _tmp1185 = (Scalar(1) / Scalar(2)) * _tmp27;
  const Scalar _tmp1186 = (Scalar(1) / Scalar(2)) * _tmp28;
  const Scalar _tmp1187 = (Scalar(1) / Scalar(2)) * _tmp29;
  const Scalar _tmp1188 = (Scalar(1) / Scalar(2)) * _tmp30;
  const Scalar _tmp1189 = _tmp1185 - _tmp1186 - _tmp1187 + _tmp1188;
  const Scalar _tmp1190 = _tmp1189 * _tmp17;
  const Scalar _tmp1191 = (Scalar(1) / Scalar(2)) * _tmp13;
  const Scalar _tmp1192 = (Scalar(1) / Scalar(2)) * _tmp14;
  const Scalar _tmp1193 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp1194 = (Scalar(1) / Scalar(2)) * _tmp16;
  const Scalar _tmp1195 = -_tmp1191 - _tmp1192 + _tmp1193 + _tmp1194;
  const Scalar _tmp1196 = _tmp1181 * _tmp31;
  const Scalar _tmp1197 = _tmp1181 * _tmp1190 + _tmp1195 * _tmp1196;
  const Scalar _tmp1198 = _tmp1156 * _tmp1174 - _tmp1157 * _tmp1170 - _tmp1157 * _tmp1171 -
                          _tmp1157 * _tmp1175 + _tmp1165 * _tmp1183 + _tmp1165 * _tmp1184 +
                          _tmp1180 * _tmp1182 + _tmp1197;
  const Scalar _tmp1199 = _tmp1198 * _tmp797;
  const Scalar _tmp1200 = std::pow(_tmp212, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp1201 = _tmp1200 * _tmp206 * _tmp208 * _tmp215;
  const Scalar _tmp1202 = _tmp118 * _tmp1201;
  const Scalar _tmp1203 = _tmp1145 * _tmp789;
  const Scalar _tmp1204 = _tmp225 * _tmp779;
  const Scalar _tmp1205 = Scalar(1.0) / (_tmp212);
  const Scalar _tmp1206 = _tmp224 * _tmp49;
  const Scalar _tmp1207 = _tmp1205 * _tmp1206;
  const Scalar _tmp1208 = _tmp1207 * _tmp68;
  const Scalar _tmp1209 = _tmp1208 * _tmp227;
  const Scalar _tmp1210 = _tmp189 * _tmp220;
  const Scalar _tmp1211 = _tmp1210 * _tmp190;
  const Scalar _tmp1212 = _tmp1180 * _tmp1211;
  const Scalar _tmp1213 = _tmp117 * _tmp198;
  const Scalar _tmp1214 = _tmp12 * _tmp1213;
  const Scalar _tmp1215 = _tmp1214 * _tmp38;
  const Scalar _tmp1216 = _tmp1198 * _tmp253;
  const Scalar _tmp1217 = _tmp1207 * _tmp4;
  const Scalar _tmp1218 = _tmp1200 * _tmp230;
  const Scalar _tmp1219 = _tmp1198 * _tmp1218;
  const Scalar _tmp1220 = _tmp218 * _tmp38;
  const Scalar _tmp1221 = _tmp1214 * _tmp1220;
  const Scalar _tmp1222 = _tmp1205 * _tmp192;
  const Scalar _tmp1223 = _tmp1222 * _tmp803;
  const Scalar _tmp1224 = _tmp117 * _tmp755;
  const Scalar _tmp1225 = _tmp1147 * _tmp1224;
  const Scalar _tmp1226 = _tmp17 * _tmp218;
  const Scalar _tmp1227 = _tmp1168 * _tmp1226;
  const Scalar _tmp1228 = _tmp1146 * _tmp808;
  const Scalar _tmp1229 = _tmp1201 * _tmp781;
  const Scalar _tmp1230 = _tmp1229 * _tmp198;
  const Scalar _tmp1231 = _tmp1146 * _tmp804;
  const Scalar _tmp1232 = _tmp1189 * _tmp190;
  const Scalar _tmp1233 = _tmp189 * _tmp219;
  const Scalar _tmp1234 = _tmp1233 * _tmp252;
  const Scalar _tmp1235 = _tmp190 * _tmp232;
  const Scalar _tmp1236 = _tmp1195 * _tmp1235 - _tmp1232 * _tmp1234;
  const Scalar _tmp1237 =
      -_tmp1057 * _tmp1072 + _tmp1058 * _tmp949 - _tmp1058 * _tmp955 + _tmp1144 -
      _tmp1146 * _tmp780 + _tmp1146 * _tmp787 - _tmp1146 * _tmp793 - _tmp1146 * _tmp802 +
      _tmp1149 * _tmp253 + _tmp1151 * _tmp1162 + _tmp1162 * _tmp1221 - _tmp1162 * _tmp1227 +
      _tmp1163 * _tmp118 - _tmp1164 * _tmp1165 + _tmp1167 * _tmp1169 - _tmp1167 * _tmp1215 -
      _tmp1198 * _tmp1204 - _tmp1198 * _tmp1209 + _tmp1198 * _tmp1223 + _tmp1199 * _tmp1202 +
      _tmp1203 * _tmp227 + _tmp1212 + _tmp1216 * _tmp1217 - _tmp1216 * _tmp1230 -
      _tmp1219 * _tmp192 - _tmp1225 * _tmp812 - _tmp1228 * _tmp958 + _tmp1231 * _tmp225 + _tmp1236 +
      _tmp816;
  const Scalar _tmp1238 = _tmp252 * _tmp779;
  const Scalar _tmp1239 = _tmp1198 * _tmp827;
  const Scalar _tmp1240 = _tmp1058 * _tmp1148;
  const Scalar _tmp1241 = _tmp1213 * _tmp76;
  const Scalar _tmp1242 = _tmp1162 * _tmp1226;
  const Scalar _tmp1243 = _tmp1146 * _tmp192;
  const Scalar _tmp1244 = _tmp1243 * _tmp808;
  const Scalar _tmp1245 = _tmp1241 * _tmp17;
  const Scalar _tmp1246 = _tmp1206 * _tmp1222;
  const Scalar _tmp1247 = _tmp1246 * _tmp4;
  const Scalar _tmp1248 = _tmp1201 * _tmp826;
  const Scalar _tmp1249 = _tmp1150 * _tmp38;
  const Scalar _tmp1250 = _tmp1249 * _tmp209;
  const Scalar _tmp1251 = _tmp1058 * _tmp1224;
  const Scalar _tmp1252 = _tmp1205 * _tmp803;
  const Scalar _tmp1253 = _tmp1252 * _tmp253;
  const Scalar _tmp1254 = _tmp1214 * _tmp31;
  const Scalar _tmp1255 = _tmp1254 * _tmp218;
  const Scalar _tmp1256 = _tmp1207 * _tmp58;
  const Scalar _tmp1257 = _tmp1256 * _tmp227;
  const Scalar _tmp1258 = _tmp1195 * _tmp190;
  const Scalar _tmp1259 = _tmp1233 * _tmp225;
  const Scalar _tmp1260 = -_tmp1210 * _tmp1258 + _tmp1232 * _tmp1259;
  const Scalar _tmp1261 = _tmp1142 * _tmp260 + _tmp1180 * _tmp1235;
  const Scalar _tmp1262 =
      _tmp1057 * _tmp985 - _tmp1145 * _tmp829 + _tmp1146 * _tmp820 - _tmp1146 * _tmp823 -
      _tmp1146 * _tmp825 - _tmp1149 * _tmp192 + _tmp1162 * _tmp1249 - _tmp1162 * _tmp1255 -
      _tmp1163 * _tmp826 - _tmp1165 * _tmp1250 - _tmp1167 * _tmp1245 + _tmp1167 * _tmp1254 -
      _tmp1198 * _tmp1238 - _tmp1198 * _tmp1247 + _tmp1198 * _tmp1253 + _tmp1198 * _tmp1257 -
      _tmp1199 * _tmp1248 - _tmp1219 * _tmp253 + _tmp1225 * _tmp830 + _tmp1229 * _tmp1239 +
      _tmp1231 * _tmp252 + _tmp1240 * _tmp227 + _tmp1241 * _tmp1242 - _tmp1243 * _tmp834 +
      _tmp1244 * _tmp806 - _tmp1251 * _tmp831 + _tmp1260 + _tmp1261 + _tmp837;
  const Scalar _tmp1263 = _tmp1142 * _tmp842;
  const Scalar _tmp1264 = -_tmp1263;
  const Scalar _tmp1265 = (Scalar(1) / Scalar(4)) * _tmp231;
  const Scalar _tmp1266 = _tmp1241 * _tmp31;
  const Scalar _tmp1267 = _tmp1266 * _tmp218;
  const Scalar _tmp1268 = _tmp1246 * _tmp58;
  const Scalar _tmp1269 = _tmp1168 * _tmp38;
  const Scalar _tmp1270 = _tmp1269 * _tmp218;
  const Scalar _tmp1271 = _tmp1217 * _tmp227;
  const Scalar _tmp1272 = _tmp1214 * _tmp17;
  const Scalar _tmp1273 = _tmp1201 * _tmp840;
  const Scalar _tmp1274 = _tmp1180 * _tmp190;
  const Scalar _tmp1275 = _tmp1234 * _tmp1274;
  const Scalar _tmp1276 = -_tmp1275;
  const Scalar _tmp1277 = -_tmp1210 * _tmp1232 - _tmp1258 * _tmp1259;
  const Scalar _tmp1278 =
      -_tmp1057 * _tmp253 * _tmp960 - _tmp1146 * _tmp841 - _tmp1146 * _tmp845 - _tmp1146 * _tmp846 -
      _tmp1149 * _tmp227 - _tmp1162 * _tmp1267 - _tmp1162 * _tmp1270 + _tmp1163 * _tmp781 +
      _tmp1167 * _tmp1266 + _tmp1167 * _tmp1269 + _tmp1167 * _tmp1272 - _tmp1198 * _tmp1265 -
      _tmp1198 * _tmp1268 - _tmp1198 * _tmp1271 + _tmp1199 * _tmp1229 + _tmp1203 * _tmp253 -
      _tmp1208 * _tmp1216 - _tmp1214 * _tmp1242 + _tmp1216 * _tmp1273 + _tmp1225 * _tmp831 +
      _tmp1228 * _tmp977 + _tmp1239 * _tmp1248 - _tmp1240 * _tmp192 - _tmp1243 * _tmp819 +
      _tmp1244 * _tmp873 + _tmp1251 * _tmp830 + _tmp1264 + _tmp1276 + _tmp1277 + _tmp851;
  const Scalar _tmp1279 = _tmp1259 * _tmp1274;
  const Scalar _tmp1280 = -_tmp1279;
  const Scalar _tmp1281 = _tmp1150 * _tmp17;
  const Scalar _tmp1282 = _tmp1281 * _tmp209;
  const Scalar _tmp1283 = _tmp1168 * _tmp31;
  const Scalar _tmp1284 = _tmp1283 * _tmp218;
  const Scalar _tmp1285 = _tmp1201 * _tmp873;
  const Scalar _tmp1286 = _tmp1142 * _tmp850;
  const Scalar _tmp1287 = _tmp1273 * _tmp192;
  const Scalar _tmp1288 = _tmp1246 * _tmp68;
  const Scalar _tmp1289 = _tmp1220 * _tmp1241;
  const Scalar _tmp1290 = _tmp253 * _tmp819;
  const Scalar _tmp1291 = _tmp1252 * _tmp227;
  const Scalar _tmp1292 = _tmp200 * _tmp779;
  const Scalar _tmp1293 = _tmp1241 * _tmp38;
  const Scalar _tmp1294 = _tmp1232 * _tmp232 + _tmp1234 * _tmp1258;
  const Scalar _tmp1295 =
      _tmp1057 * _tmp1076 - _tmp1146 * _tmp1290 - _tmp1146 * _tmp866 - _tmp1146 * _tmp872 +
      _tmp1147 * _tmp949 - _tmp1147 * _tmp955 + _tmp1162 * _tmp1281 + _tmp1162 * _tmp1284 -
      _tmp1162 * _tmp1289 - _tmp1165 * _tmp1282 - _tmp1167 * _tmp1283 + _tmp1167 * _tmp1293 -
      _tmp1198 * _tmp1287 + _tmp1198 * _tmp1288 + _tmp1198 * _tmp1291 - _tmp1198 * _tmp1292 -
      _tmp1203 * _tmp192 - _tmp1216 * _tmp1256 + _tmp1216 * _tmp1285 - _tmp1219 * _tmp227 +
      _tmp1228 * _tmp992 + _tmp1231 * _tmp200 - _tmp1240 * _tmp253 + _tmp1243 * _tmp801 -
      _tmp1244 * _tmp840 + _tmp1251 * _tmp812 + _tmp1280 + _tmp1286 + _tmp1294 + _tmp874;
  const Scalar _tmp1296 =
      _tmp1237 * _tmp262 - _tmp1262 * _tmp250 + _tmp1278 * _tmp258 + _tmp1295 * _tmp263;
  const Scalar _tmp1297 =
      -_tmp1237 * _tmp258 + _tmp1262 * _tmp263 + _tmp1278 * _tmp262 + _tmp1295 * _tmp250;
  const Scalar _tmp1298 =
      -_tmp1237 * _tmp250 - _tmp1262 * _tmp262 + _tmp1278 * _tmp263 - _tmp1295 * _tmp258;
  const Scalar _tmp1299 =
      _tmp1237 * _tmp263 + _tmp1262 * _tmp258 + _tmp1278 * _tmp250 - _tmp1295 * _tmp262;
  const Scalar _tmp1300 =
      -_tmp1296 * _x0[0] + _tmp1297 * _x0[2] + _tmp1298 * _x0[1] + _tmp1299 * _x0[3];
  const Scalar _tmp1301 =
      _tmp1296 * _x0[1] + _tmp1297 * _x0[3] + _tmp1298 * _x0[0] - _tmp1299 * _x0[2];
  const Scalar _tmp1302 =
      -_tmp1296 * _x0[2] - _tmp1297 * _x0[0] + _tmp1298 * _x0[3] - _tmp1299 * _x0[1];
  const Scalar _tmp1303 =
      _tmp1296 * _x0[3] - _tmp1297 * _x0[1] + _tmp1298 * _x0[2] + _tmp1299 * _x0[0];
  const Scalar _tmp1304 =
      -_tmp1300 * _y[2] - _tmp1301 * _y[3] + _tmp1302 * _y[0] + _tmp1303 * _y[1];
  const Scalar _tmp1305 = _tmp1300 * _y[0] - _tmp1301 * _y[1] + _tmp1302 * _y[2] - _tmp1303 * _y[3];
  const Scalar _tmp1306 = _tmp1300 * _y[1] + _tmp1301 * _y[0] + _tmp1302 * _y[3] + _tmp1303 * _y[2];
  const Scalar _tmp1307 =
      -_tmp1300 * _y[3] + _tmp1301 * _y[2] + _tmp1302 * _y[1] - _tmp1303 * _y[0];
  const Scalar _tmp1308 =
      _tmp1304 * _x_T_y[0] + _tmp1305 * _x_T_y[2] + _tmp1306 * _x_T_y[3] + _tmp1307 * _x_T_y[1];
  const Scalar _tmp1309 = _tmp1308 * _tmp510;
  const Scalar _tmp1310 =
      _tmp1304 * _x_T_y[3] - _tmp1305 * _x_T_y[1] - _tmp1306 * _x_T_y[0] + _tmp1307 * _x_T_y[2];
  const Scalar _tmp1311 = _tmp1303 * _tmp464;
  const Scalar _tmp1312 = _tmp1302 * _tmp462;
  const Scalar _tmp1313 = _tmp1300 * _tmp466 + _tmp1301 * _tmp467;
  const Scalar _tmp1314 = _tmp1311 + _tmp1312 + _tmp1313;
  const Scalar _tmp1315 = -_tmp1303 * _tmp472;
  const Scalar _tmp1316 = -_tmp1300 * _tmp470;
  const Scalar _tmp1317 = _tmp1315 + _tmp1316;
  const Scalar _tmp1318 = _tmp1300 * _tmp464;
  const Scalar _tmp1319 = _tmp1302 * _tmp467;
  const Scalar _tmp1320 = _tmp1301 * _tmp462 + _tmp1303 * _tmp466;
  const Scalar _tmp1321 = -_tmp1318 - _tmp1319 + _tmp1320;
  const Scalar _tmp1322 = -_tmp1314 * _tmp152 + _tmp1314 * _y[5] - _tmp1317 * _tmp153 +
                          _tmp1317 * _y[4] - _tmp1321 * _tmp157 + _tmp1321 * _y[6];
  const Scalar _tmp1323 = _tmp1308 * _tmp522;
  const Scalar _tmp1324 =
      -_tmp1304 * _x_T_y[2] + _tmp1305 * _x_T_y[0] - _tmp1306 * _x_T_y[1] + _tmp1307 * _x_T_y[3];
  const Scalar _tmp1325 =
      _tmp1304 * _x_T_y[1] + _tmp1305 * _x_T_y[3] - _tmp1306 * _x_T_y[2] - _tmp1307 * _x_T_y[0];
  const Scalar _tmp1326 = _tmp1325 * _tmp460;
  const Scalar _tmp1327 = _tmp1308 * _tmp496;
  const Scalar _tmp1328 = -_tmp1311 - _tmp1312 + _tmp1313;
  const Scalar _tmp1329 = _tmp1301 * _tmp464;
  const Scalar _tmp1330 = _tmp1302 * _tmp466;
  const Scalar _tmp1331 = _tmp1300 * _tmp462 + _tmp1303 * _tmp467;
  const Scalar _tmp1332 = _tmp1329 + _tmp1330 + _tmp1331;
  const Scalar _tmp1333 = -_tmp1301 * _tmp485;
  const Scalar _tmp1334 = _tmp1315 + _tmp1333;
  const Scalar _tmp1335 = -_tmp1328 * _tmp153 + _tmp1328 * _y[4] - _tmp1332 * _tmp157 +
                          _tmp1332 * _y[6] - _tmp1334 * _tmp152 + _tmp1334 * _y[5];
  const Scalar _tmp1336 = _tmp1308 * _tmp526;
  const Scalar _tmp1337 = _tmp1316 + _tmp1333;
  const Scalar _tmp1338 = -_tmp1329 - _tmp1330 + _tmp1331;
  const Scalar _tmp1339 = _tmp1318 + _tmp1319 + _tmp1320;
  const Scalar _tmp1340 = -_tmp1337 * _tmp157 + _tmp1337 * _y[6] - _tmp1338 * _tmp152 +
                          _tmp1338 * _y[5] - _tmp1339 * _tmp153 + _tmp1339 * _y[4];
  const Scalar _tmp1341 = _tmp1308 * _tmp498;
  const Scalar _tmp1342 = _tmp1310 * _tmp460;
  const Scalar _tmp1343 = _tmp1308 * _tmp536;
  const Scalar _tmp1344 = _tmp755 * _tmp775;
  const Scalar _tmp1345 = _tmp1142 * _tmp770 + _tmp1344 * _tmp758 + _tmp1344 * _tmp762 +
                          _tmp1344 * _tmp940 - _tmp775 * _tmp938 - _tmp775 * _tmp939 -
                          _tmp775 * _tmp942 + _tmp945;
  const Scalar _tmp1346 = _tmp1345 * _tmp791;
  const Scalar _tmp1347 = _tmp1346 * _tmp217;
  const Scalar _tmp1348 = -_tmp1185 + _tmp1186 + _tmp1187 - _tmp1188;
  const Scalar _tmp1349 = _tmp1348 * _tmp190;
  const Scalar _tmp1350 = _tmp1161 * _tmp1349;
  const Scalar _tmp1351 = _tmp1159 * _tmp1348;
  const Scalar _tmp1352 = _tmp1175 * _tmp190;
  const Scalar _tmp1353 = _tmp1191 + _tmp1192 - _tmp1193 - _tmp1194;
  const Scalar _tmp1354 = _tmp1181 * _tmp17;
  const Scalar _tmp1355 = _tmp1156 * _tmp1354 + _tmp1182 * _tmp1353;
  const Scalar _tmp1356 = -_tmp1170 * _tmp1349 - _tmp1171 * _tmp1349 + _tmp1174 * _tmp1348 +
                          _tmp1180 * _tmp1196 + _tmp1183 * _tmp1351 + _tmp1184 * _tmp1351 -
                          _tmp1348 * _tmp1352 + _tmp1355;
  const Scalar _tmp1357 = _tmp1166 * _tmp1351;
  const Scalar _tmp1358 = _tmp1226 * _tmp1350;
  const Scalar _tmp1359 = _tmp1344 * _tmp789;
  const Scalar _tmp1360 = _tmp1356 * _tmp227;
  const Scalar _tmp1361 = -_tmp1286;
  const Scalar _tmp1362 = _tmp775 * _tmp978;
  const Scalar _tmp1363 = _tmp253 * _tmp775;
  const Scalar _tmp1364 = _tmp1201 * _tmp973;
  const Scalar _tmp1365 = _tmp1356 * _tmp253;
  const Scalar _tmp1366 = _tmp1353 * _tmp190;
  const Scalar _tmp1367 = -_tmp1157 * _tmp1210 - _tmp1234 * _tmp1366;
  const Scalar _tmp1368 =
      -_tmp1208 * _tmp1365 - _tmp1214 * _tmp1358 - _tmp1217 * _tmp1360 + _tmp1230 * _tmp1360 -
      _tmp1265 * _tmp1356 + _tmp1266 * _tmp1357 - _tmp1267 * _tmp1350 - _tmp1268 * _tmp1356 +
      _tmp1269 * _tmp1357 - _tmp1270 * _tmp1350 + _tmp1272 * _tmp1357 + _tmp1273 * _tmp1365 +
      _tmp1280 + _tmp1344 * _tmp839 + _tmp1344 * _tmp849 - _tmp1345 * _tmp841 - _tmp1345 * _tmp845 -
      _tmp1345 * _tmp846 - _tmp1345 * _tmp848 + _tmp1346 * _tmp976 + _tmp1347 * _tmp973 +
      _tmp1347 * _tmp977 + _tmp1356 * _tmp1364 + _tmp1359 * _tmp253 + _tmp1361 -
      _tmp1362 * _tmp192 - _tmp1363 * _tmp960 + _tmp1367 - _tmp775 * _tmp980 + _tmp981;
  const Scalar _tmp1369 = -_tmp1212;
  const Scalar _tmp1370 = _tmp1229 * _tmp827;
  const Scalar _tmp1371 = _tmp1344 * _tmp781;
  const Scalar _tmp1372 = _tmp1252 * _tmp1356;
  const Scalar _tmp1373 = _tmp1218 * _tmp1356;
  const Scalar _tmp1374 = _tmp1157 * _tmp1259 + _tmp1366 * _tmp232;
  const Scalar _tmp1375 =
      -_tmp1079 * _tmp775 + _tmp1143 - _tmp1238 * _tmp1356 + _tmp1241 * _tmp1358 -
      _tmp1245 * _tmp1357 - _tmp1247 * _tmp1356 + _tmp1249 * _tmp1350 - _tmp1250 * _tmp1351 +
      _tmp1254 * _tmp1357 - _tmp1255 * _tmp1350 + _tmp1256 * _tmp1360 - _tmp1285 * _tmp1360 -
      _tmp1344 * _tmp829 - _tmp1344 * _tmp832 + _tmp1345 * _tmp820 + _tmp1345 * _tmp824 -
      _tmp1345 * _tmp825 - _tmp1345 * _tmp835 - _tmp1346 * _tmp822 - _tmp1346 * _tmp983 +
      _tmp1347 * _tmp984 + _tmp1356 * _tmp1370 + _tmp1362 * _tmp227 + _tmp1369 +
      _tmp1371 * _tmp830 + _tmp1372 * _tmp253 - _tmp1373 * _tmp253 + _tmp1374 + _tmp775 * _tmp985 +
      _tmp986;
  const Scalar _tmp1376 = _tmp1344 * _tmp795;
  const Scalar _tmp1377 = _tmp1157 * _tmp232 - _tmp1259 * _tmp1366;
  const Scalar _tmp1378 =
      _tmp1076 * _tmp775 - _tmp1256 * _tmp1365 + _tmp1264 + _tmp1275 + _tmp1281 * _tmp1350 -
      _tmp1282 * _tmp1351 - _tmp1283 * _tmp1357 + _tmp1284 * _tmp1350 + _tmp1285 * _tmp1365 -
      _tmp1287 * _tmp1356 + _tmp1288 * _tmp1356 - _tmp1289 * _tmp1350 - _tmp1290 * _tmp1345 -
      _tmp1292 * _tmp1356 + _tmp1293 * _tmp1357 + _tmp1344 * _tmp867 + _tmp1345 * _tmp864 +
      _tmp1345 * _tmp869 - _tmp1345 * _tmp872 - _tmp1346 * _tmp865 - _tmp1347 * _tmp868 +
      _tmp1347 * _tmp992 - _tmp1359 * _tmp192 - _tmp1363 * _tmp978 + _tmp1372 * _tmp227 -
      _tmp1373 * _tmp227 - _tmp1376 * _tmp4 + _tmp1377 + _tmp775 * _tmp993 + _tmp994;
  const Scalar _tmp1379 = -_tmp1157 * _tmp1234 + _tmp1210 * _tmp1366;
  const Scalar _tmp1380 =
      -_tmp1072 * _tmp775 + _tmp1151 * _tmp1350 - _tmp1164 * _tmp1351 + _tmp1169 * _tmp1357 -
      _tmp1204 * _tmp1356 - _tmp1208 * _tmp1360 - _tmp1215 * _tmp1357 + _tmp1217 * _tmp1365 +
      _tmp1221 * _tmp1350 + _tmp1223 * _tmp1356 - _tmp1227 * _tmp1350 - _tmp1230 * _tmp1365 +
      _tmp1261 + _tmp1273 * _tmp1360 - _tmp1345 * _tmp780 + _tmp1345 * _tmp787 -
      _tmp1345 * _tmp802 + _tmp1345 * _tmp805 - _tmp1346 * _tmp792 + _tmp1346 * _tmp953 -
      _tmp1347 * _tmp958 + _tmp1359 * _tmp227 + _tmp1363 * _tmp962 - _tmp1371 * _tmp812 -
      _tmp1373 * _tmp192 - _tmp1376 * _tmp58 + _tmp1379 + _tmp775 * _tmp950 + _tmp965;
  const Scalar _tmp1381 =
      _tmp1368 * _tmp250 + _tmp1375 * _tmp258 - _tmp1378 * _tmp262 + _tmp1380 * _tmp263;
  const Scalar _tmp1382 =
      _tmp1368 * _tmp258 - _tmp1375 * _tmp250 + _tmp1378 * _tmp263 + _tmp1380 * _tmp262;
  const Scalar _tmp1383 =
      _tmp1368 * _tmp263 - _tmp1375 * _tmp262 - _tmp1378 * _tmp258 - _tmp1380 * _tmp250;
  const Scalar _tmp1384 =
      _tmp1368 * _tmp262 + _tmp1375 * _tmp263 + _tmp1378 * _tmp250 - _tmp1380 * _tmp258;
  const Scalar _tmp1385 =
      -_tmp1381 * _x0[1] - _tmp1382 * _x0[2] + _tmp1383 * _x0[3] - _tmp1384 * _x0[0];
  const Scalar _tmp1386 =
      -_tmp1381 * _x0[2] + _tmp1382 * _x0[1] + _tmp1383 * _x0[0] + _tmp1384 * _x0[3];
  const Scalar _tmp1387 =
      _tmp1381 * _x0[3] - _tmp1382 * _x0[0] + _tmp1383 * _x0[1] + _tmp1384 * _x0[2];
  const Scalar _tmp1388 =
      _tmp1381 * _x0[0] + _tmp1382 * _x0[3] + _tmp1383 * _x0[2] - _tmp1384 * _x0[1];
  const Scalar _tmp1389 = _tmp1385 * _y[2] - _tmp1386 * _y[1] + _tmp1387 * _y[0] - _tmp1388 * _y[3];
  const Scalar _tmp1390 = _tmp1385 * _y[1] + _tmp1386 * _y[2] - _tmp1387 * _y[3] - _tmp1388 * _y[0];
  const Scalar _tmp1391 = _tmp1385 * _y[0] - _tmp1386 * _y[3] - _tmp1387 * _y[2] + _tmp1388 * _y[1];
  const Scalar _tmp1392 = _tmp1385 * _y[3] + _tmp1386 * _y[0] + _tmp1387 * _y[1] + _tmp1388 * _y[2];
  const Scalar _tmp1393 =
      _tmp1389 * _x_T_y[2] + _tmp1390 * _x_T_y[1] + _tmp1391 * _x_T_y[0] + _tmp1392 * _x_T_y[3];
  const Scalar _tmp1394 = _tmp1393 * _tmp522;
  const Scalar _tmp1395 = _tmp1393 * _tmp526;
  const Scalar _tmp1396 =
      _tmp1389 * _x_T_y[0] + _tmp1390 * _x_T_y[3] - _tmp1391 * _x_T_y[2] - _tmp1392 * _x_T_y[1];
  const Scalar _tmp1397 = _tmp1385 * _tmp467;
  const Scalar _tmp1398 = _tmp1387 * _tmp464;
  const Scalar _tmp1399 = _tmp1386 * _tmp462 + _tmp1388 * _tmp466;
  const Scalar _tmp1400 = _tmp1397 + _tmp1398 + _tmp1399;
  const Scalar _tmp1401 = _tmp1385 * _tmp466;
  const Scalar _tmp1402 = _tmp1386 * _tmp464;
  const Scalar _tmp1403 = _tmp1387 * _tmp462 + _tmp1388 * _tmp467;
  const Scalar _tmp1404 = -_tmp1401 - _tmp1402 + _tmp1403;
  const Scalar _tmp1405 = -_tmp1386 * _tmp485;
  const Scalar _tmp1406 = -_tmp1387 * _tmp470;
  const Scalar _tmp1407 = _tmp1405 + _tmp1406;
  const Scalar _tmp1408 = -_tmp1400 * _tmp153 + _tmp1400 * _y[4] - _tmp1404 * _tmp152 +
                          _tmp1404 * _y[5] - _tmp1407 * _tmp157 + _tmp1407 * _y[6];
  const Scalar _tmp1409 = -_tmp1388 * _tmp472;
  const Scalar _tmp1410 = _tmp1405 + _tmp1409;
  const Scalar _tmp1411 = _tmp1401 + _tmp1402 + _tmp1403;
  const Scalar _tmp1412 = _tmp1385 * _tmp462;
  const Scalar _tmp1413 = _tmp1388 * _tmp464;
  const Scalar _tmp1414 = _tmp1386 * _tmp467 + _tmp1387 * _tmp466;
  const Scalar _tmp1415 = -_tmp1412 - _tmp1413 + _tmp1414;
  const Scalar _tmp1416 = -_tmp1410 * _tmp152 + _tmp1410 * _y[5] - _tmp1411 * _tmp157 +
                          _tmp1411 * _y[6] - _tmp1415 * _tmp153 + _tmp1415 * _y[4];
  const Scalar _tmp1417 = _tmp1393 * _tmp510;
  const Scalar _tmp1418 = -_tmp1397 - _tmp1398 + _tmp1399;
  const Scalar _tmp1419 = _tmp1406 + _tmp1409;
  const Scalar _tmp1420 = _tmp1412 + _tmp1413 + _tmp1414;
  const Scalar _tmp1421 = -_tmp1418 * _tmp157 + _tmp1418 * _y[6] - _tmp1419 * _tmp153 +
                          _tmp1419 * _y[4] - _tmp1420 * _tmp152 + _tmp1420 * _y[5];
  const Scalar _tmp1422 =
      _tmp1389 * _x_T_y[3] - _tmp1390 * _x_T_y[0] + _tmp1391 * _x_T_y[1] - _tmp1392 * _x_T_y[2];
  const Scalar _tmp1423 = _tmp1422 * _tmp460;
  const Scalar _tmp1424 =
      -_tmp1389 * _x_T_y[1] + _tmp1390 * _x_T_y[2] + _tmp1391 * _x_T_y[3] - _tmp1392 * _x_T_y[0];
  const Scalar _tmp1425 = _tmp1393 * _tmp528;
  const Scalar _tmp1426 = _tmp1393 * _tmp498;
  const Scalar _tmp1427 = _tmp522 * sqrt_info(2, 2);
  const Scalar _tmp1428 = _tmp522 * sqrt_info(4, 2);
  const Scalar _tmp1429 = _tmp1393 * _tmp536;
  const Scalar _tmp1430 = _tmp1424 * _tmp460;
  const Scalar _tmp1431 = _tmp755 * _tmp944;
  const Scalar _tmp1432 = _tmp1059 + _tmp1142 * _tmp776 + _tmp1431 * _tmp758 + _tmp1431 * _tmp762 +
                          _tmp1431 * _tmp940 - _tmp938 * _tmp944 - _tmp939 * _tmp944 -
                          _tmp942 * _tmp944;
  const Scalar _tmp1433 = _tmp1432 * _tmp791;
  const Scalar _tmp1434 = _tmp1159 * _tmp1195;
  const Scalar _tmp1435 = -_tmp1152 + _tmp1153 - _tmp1154 + _tmp1155;
  const Scalar _tmp1436 = _tmp1182 * _tmp1348 + _tmp1196 * _tmp1435;
  const Scalar _tmp1437 = -_tmp1170 * _tmp1258 - _tmp1171 * _tmp1258 + _tmp1174 * _tmp1195 +
                          _tmp1180 * _tmp1354 + _tmp1183 * _tmp1434 + _tmp1184 * _tmp1434 -
                          _tmp1195 * _tmp1352 + _tmp1436;
  const Scalar _tmp1438 = _tmp1218 * _tmp192;
  const Scalar _tmp1439 = _tmp1437 * _tmp253;
  const Scalar _tmp1440 = _tmp1150 * _tmp1161;
  const Scalar _tmp1441 = _tmp1195 * _tmp1440;
  const Scalar _tmp1442 = _tmp1161 * _tmp218;
  const Scalar _tmp1443 = _tmp1214 * _tmp1442;
  const Scalar _tmp1444 = _tmp1195 * _tmp233;
  const Scalar _tmp1445 = _tmp1431 * _tmp789;
  const Scalar _tmp1446 = _tmp1166 * _tmp1434;
  const Scalar _tmp1447 = _tmp1446 * _tmp17;
  const Scalar _tmp1448 = _tmp1168 * _tmp218;
  const Scalar _tmp1449 = _tmp1161 * _tmp1448;
  const Scalar _tmp1450 = _tmp1195 * _tmp226;
  const Scalar _tmp1451 = _tmp1431 * _tmp795;
  const Scalar _tmp1452 = _tmp1437 * _tmp797;
  const Scalar _tmp1453 = _tmp1201 * _tmp1452;
  const Scalar _tmp1454 = _tmp1432 * _tmp804;
  const Scalar _tmp1455 = _tmp1433 * _tmp217;
  const Scalar _tmp1456 = _tmp1431 * _tmp781;
  const Scalar _tmp1457 = _tmp253 * _tmp944;
  const Scalar _tmp1458 = _tmp1210 * _tmp1349 + _tmp1235 * _tmp1435;
  const Scalar _tmp1459 =
      -_tmp1072 * _tmp944 + _tmp1074 - _tmp1164 * _tmp1434 + _tmp1168 * _tmp1447 +
      _tmp118 * _tmp1453 - _tmp1204 * _tmp1437 - _tmp1209 * _tmp1437 - _tmp1215 * _tmp1446 +
      _tmp1217 * _tmp1439 + _tmp1223 * _tmp1437 - _tmp1230 * _tmp1439 + _tmp1263 + _tmp1276 -
      _tmp1432 * _tmp780 + _tmp1432 * _tmp787 - _tmp1432 * _tmp802 - _tmp1433 * _tmp792 +
      _tmp1433 * _tmp953 - _tmp1437 * _tmp1438 + _tmp1441 * _tmp191 + _tmp1443 * _tmp1444 +
      _tmp1445 * _tmp227 - _tmp1449 * _tmp1450 - _tmp1451 * _tmp58 + _tmp1454 * _tmp225 -
      _tmp1455 * _tmp958 - _tmp1456 * _tmp812 + _tmp1457 * _tmp962 + _tmp1458 + _tmp944 * _tmp950;
  const Scalar _tmp1460 = _tmp1431 * _tmp826;
  const Scalar _tmp1461 = _tmp1218 * _tmp227;
  const Scalar _tmp1462 = _tmp944 * _tmp978;
  const Scalar _tmp1463 = _tmp1195 * _tmp1449;
  const Scalar _tmp1464 = _tmp1241 * _tmp1442;
  const Scalar _tmp1465 = _tmp1435 * _tmp190;
  const Scalar _tmp1466 = _tmp1234 * _tmp1465 - _tmp1259 * _tmp1349;
  const Scalar _tmp1467 =
      _tmp1076 * _tmp944 + _tmp1077 - _tmp1256 * _tmp1439 + _tmp1261 - _tmp1282 * _tmp1434 -
      _tmp1283 * _tmp1446 + _tmp1285 * _tmp1439 - _tmp1287 * _tmp1437 + _tmp1288 * _tmp1437 -
      _tmp1290 * _tmp1432 + _tmp1291 * _tmp1437 - _tmp1292 * _tmp1437 + _tmp1293 * _tmp1446 +
      _tmp1432 * _tmp869 - _tmp1432 * _tmp872 - _tmp1433 * _tmp865 - _tmp1437 * _tmp1461 +
      _tmp1441 * _tmp226 - _tmp1444 * _tmp1464 - _tmp1445 * _tmp192 - _tmp1451 * _tmp4 +
      _tmp1454 * _tmp200 - _tmp1455 * _tmp868 + _tmp1455 * _tmp992 + _tmp1460 * _tmp812 -
      _tmp1462 * _tmp253 + _tmp1463 * _tmp191 + _tmp1466 + _tmp944 * _tmp993;
  const Scalar _tmp1468 = _tmp1195 * _tmp191;
  const Scalar _tmp1469 = _tmp1432 * _tmp834;
  const Scalar _tmp1470 = -_tmp1234 * _tmp1349 - _tmp1259 * _tmp1465;
  const Scalar _tmp1471 =
      _tmp1067 + _tmp1144 - _tmp1208 * _tmp1439 + _tmp1214 * _tmp1447 + _tmp1229 * _tmp1452 -
      _tmp1265 * _tmp1437 + _tmp1266 * _tmp1446 - _tmp1268 * _tmp1437 + _tmp1269 * _tmp1446 -
      _tmp1271 * _tmp1437 + _tmp1273 * _tmp1439 + _tmp1364 * _tmp1437 + _tmp1369 +
      _tmp1431 * _tmp839 - _tmp1432 * _tmp841 - _tmp1432 * _tmp846 - _tmp1432 * _tmp848 +
      _tmp1433 * _tmp976 - _tmp1443 * _tmp1450 + _tmp1445 * _tmp253 + _tmp1455 * _tmp973 +
      _tmp1455 * _tmp977 + _tmp1456 * _tmp831 - _tmp1457 * _tmp960 - _tmp1462 * _tmp192 -
      _tmp1463 * _tmp233 - _tmp1464 * _tmp1468 - _tmp1469 * _tmp227 + _tmp1470 - _tmp944 * _tmp980;
  const Scalar _tmp1472 = _tmp1218 * _tmp253;
  const Scalar _tmp1473 = -_tmp1210 * _tmp1465 + _tmp1349 * _tmp232;
  const Scalar _tmp1474 =
      -_tmp1079 * _tmp944 + _tmp1080 - _tmp1238 * _tmp1437 - _tmp1245 * _tmp1446 -
      _tmp1247 * _tmp1437 - _tmp1250 * _tmp1434 + _tmp1253 * _tmp1437 + _tmp1254 * _tmp1446 +
      _tmp1257 * _tmp1437 + _tmp1279 + _tmp1361 + _tmp1370 * _tmp1437 - _tmp1431 * _tmp829 +
      _tmp1432 * _tmp820 - _tmp1432 * _tmp825 - _tmp1433 * _tmp822 - _tmp1433 * _tmp983 -
      _tmp1437 * _tmp1472 + _tmp1441 * _tmp233 - _tmp1443 * _tmp1468 + _tmp1450 * _tmp1464 -
      _tmp1453 * _tmp826 + _tmp1454 * _tmp252 + _tmp1455 * _tmp984 + _tmp1456 * _tmp830 -
      _tmp1460 * _tmp831 + _tmp1462 * _tmp227 - _tmp1469 * _tmp192 + _tmp1473 + _tmp944 * _tmp985;
  const Scalar _tmp1475 =
      -_tmp1459 * _tmp258 + _tmp1467 * _tmp250 + _tmp1471 * _tmp262 + _tmp1474 * _tmp263;
  const Scalar _tmp1476 =
      -_tmp1459 * _tmp250 - _tmp1467 * _tmp258 + _tmp1471 * _tmp263 - _tmp1474 * _tmp262;
  const Scalar _tmp1477 =
      _tmp1459 * _tmp263 - _tmp1467 * _tmp262 + _tmp1471 * _tmp250 + _tmp1474 * _tmp258;
  const Scalar _tmp1478 =
      _tmp1459 * _tmp262 + _tmp1467 * _tmp263 + _tmp1471 * _tmp258 - _tmp1474 * _tmp250;
  const Scalar _tmp1479 =
      _tmp1475 * _x0[2] + _tmp1476 * _x0[1] + _tmp1477 * _x0[3] - _tmp1478 * _x0[0];
  const Scalar _tmp1480 = -_tmp1479 * _tmp470;
  const Scalar _tmp1481 =
      _tmp1475 * _x0[3] + _tmp1476 * _x0[0] - _tmp1477 * _x0[2] + _tmp1478 * _x0[1];
  const Scalar _tmp1482 = -_tmp1481 * _tmp485;
  const Scalar _tmp1483 = _tmp1480 + _tmp1482;
  const Scalar _tmp1484 =
      -_tmp1475 * _x0[0] + _tmp1476 * _x0[3] - _tmp1477 * _x0[1] - _tmp1478 * _x0[2];
  const Scalar _tmp1485 = _tmp1484 * _tmp466;
  const Scalar _tmp1486 = _tmp1481 * _tmp464;
  const Scalar _tmp1487 =
      -_tmp1475 * _x0[1] + _tmp1476 * _x0[2] + _tmp1477 * _x0[0] + _tmp1478 * _x0[3];
  const Scalar _tmp1488 = _tmp1479 * _tmp462 + _tmp1487 * _tmp467;
  const Scalar _tmp1489 = -_tmp1485 - _tmp1486 + _tmp1488;
  const Scalar _tmp1490 = _tmp1484 * _tmp467;
  const Scalar _tmp1491 = _tmp1479 * _tmp464;
  const Scalar _tmp1492 = _tmp1481 * _tmp462 + _tmp1487 * _tmp466;
  const Scalar _tmp1493 = _tmp1490 + _tmp1491 + _tmp1492;
  const Scalar _tmp1494 = -_tmp1483 * _tmp157 + _tmp1483 * _y[6] - _tmp1489 * _tmp152 +
                          _tmp1489 * _y[5] - _tmp1493 * _tmp153 + _tmp1493 * _y[4];
  const Scalar _tmp1495 = _tmp1479 * _y[1] + _tmp1481 * _y[0] + _tmp1484 * _y[3] + _tmp1487 * _y[2];
  const Scalar _tmp1496 = _tmp1479 * _y[0] - _tmp1481 * _y[1] + _tmp1484 * _y[2] - _tmp1487 * _y[3];
  const Scalar _tmp1497 =
      -_tmp1479 * _y[2] - _tmp1481 * _y[3] + _tmp1484 * _y[0] + _tmp1487 * _y[1];
  const Scalar _tmp1498 =
      -_tmp1479 * _y[3] + _tmp1481 * _y[2] + _tmp1484 * _y[1] - _tmp1487 * _y[0];
  const Scalar _tmp1499 =
      _tmp1495 * _x_T_y[3] + _tmp1496 * _x_T_y[2] + _tmp1497 * _x_T_y[0] + _tmp1498 * _x_T_y[1];
  const Scalar _tmp1500 =
      -_tmp1495 * _x_T_y[0] - _tmp1496 * _x_T_y[1] + _tmp1497 * _x_T_y[3] + _tmp1498 * _x_T_y[2];
  const Scalar _tmp1501 = _tmp1499 * _tmp522;
  const Scalar _tmp1502 = _tmp510 * sqrt_info(0, 0);
  const Scalar _tmp1503 = _tmp1499 * _tmp498;
  const Scalar _tmp1504 = -_tmp1487 * _tmp472;
  const Scalar _tmp1505 = _tmp1482 + _tmp1504;
  const Scalar _tmp1506 = _tmp1484 * _tmp462;
  const Scalar _tmp1507 = _tmp1487 * _tmp464;
  const Scalar _tmp1508 = _tmp1479 * _tmp466 + _tmp1481 * _tmp467;
  const Scalar _tmp1509 = -_tmp1506 - _tmp1507 + _tmp1508;
  const Scalar _tmp1510 = _tmp1485 + _tmp1486 + _tmp1488;
  const Scalar _tmp1511 = -_tmp1505 * _tmp152 + _tmp1505 * _y[5] - _tmp1509 * _tmp153 +
                          _tmp1509 * _y[4] - _tmp1510 * _tmp157 + _tmp1510 * _y[6];
  const Scalar _tmp1512 = _tmp1480 + _tmp1504;
  const Scalar _tmp1513 = _tmp1506 + _tmp1507 + _tmp1508;
  const Scalar _tmp1514 = -_tmp1490 - _tmp1491 + _tmp1492;
  const Scalar _tmp1515 = -_tmp1512 * _tmp153 + _tmp1512 * _y[4] - _tmp1513 * _tmp152 +
                          _tmp1513 * _y[5] - _tmp1514 * _tmp157 + _tmp1514 * _y[6];
  const Scalar _tmp1516 = _tmp1499 * _tmp526;
  const Scalar _tmp1517 =
      -_tmp1495 * _x_T_y[2] + _tmp1496 * _x_T_y[3] + _tmp1497 * _x_T_y[1] - _tmp1498 * _x_T_y[0];
  const Scalar _tmp1518 = _tmp1517 * _tmp460;
  const Scalar _tmp1519 =
      -_tmp1495 * _x_T_y[1] + _tmp1496 * _x_T_y[0] - _tmp1497 * _x_T_y[2] + _tmp1498 * _x_T_y[3];
  const Scalar _tmp1520 = _tmp1519 * _tmp460;
  const Scalar _tmp1521 = _tmp1499 * _tmp528;
  const Scalar _tmp1522 = _tmp510 * sqrt_info(2, 0);
  const Scalar _tmp1523 = _tmp1500 * _tmp460;
  const Scalar _tmp1524 = _tmp1499 * _tmp536;
  const Scalar _tmp1525 = _tmp510 * sqrt_info(4, 0);
  const Scalar _tmp1526 = lambdas(1, 0) - lambdas(2, 0);
  const Scalar _tmp1527 = _tmp1526 * _tmp714;
  const Scalar _tmp1528 = _tmp1526 * _tmp723;
  const Scalar _tmp1529 = _tmp1526 * _tmp719;
  const Scalar _tmp1530 = _tmp1526 * _tmp729;
  const Scalar _tmp1531 = _tmp1526 * _tmp733;
  const Scalar _tmp1532 = _tmp1526 * _tmp726;
  const Scalar _tmp1533 = _tmp1526 * _tmp737;
  const Scalar _tmp1534 = _tmp1526 * _tmp739;
  const Scalar _tmp1535 = _tmp1526 * _tmp735;
  const Scalar _tmp1536 = _tmp1176 + _tmp1177 + _tmp1178 + _tmp1179;
  const Scalar _tmp1537 = _tmp1536 * _tmp190;
  const Scalar _tmp1538 = _tmp1234 * _tmp1537;
  const Scalar _tmp1539 = -_tmp1538;
  const Scalar _tmp1540 = _tmp1435 * _tmp226;
  const Scalar _tmp1541 = _tmp1159 * _tmp1435;
  const Scalar _tmp1542 = -_tmp1170 * _tmp1465 - _tmp1171 * _tmp1465 + _tmp1174 * _tmp1435 +
                          _tmp1182 * _tmp1536 + _tmp1183 * _tmp1541 + _tmp1184 * _tmp1541 +
                          _tmp1197 - _tmp1352 * _tmp1435;
  const Scalar _tmp1543 = _tmp1201 * _tmp1542;
  const Scalar _tmp1544 = _tmp1541 * _tmp209;
  const Scalar _tmp1545 = _tmp1226 * _tmp1544;
  const Scalar _tmp1546 = _tmp1543 * _tmp797;
  const Scalar _tmp1547 = _tmp1544 * _tmp218;
  const Scalar _tmp1548 = _tmp1435 * _tmp191;
  const Scalar _tmp1549 = _tmp1542 * _tmp253;
  const Scalar _tmp1550 = _tmp1435 * _tmp233;
  const Scalar _tmp1551 = -_tmp1208 * _tmp1549 + _tmp1214 * _tmp1545 - _tmp1265 * _tmp1542 +
                          _tmp1266 * _tmp1547 - _tmp1268 * _tmp1542 + _tmp1269 * _tmp1547 -
                          _tmp1271 * _tmp1542 + _tmp1273 * _tmp1549 + _tmp1277 -
                          _tmp1443 * _tmp1540 - _tmp1449 * _tmp1550 - _tmp1464 * _tmp1548 +
                          _tmp1539 + _tmp1543 * _tmp973 + _tmp1546 * _tmp781;
  const Scalar _tmp1552 = _tmp1259 * _tmp1537;
  const Scalar _tmp1553 = -_tmp1552;
  const Scalar _tmp1554 = _tmp1435 * _tmp1440;
  const Scalar _tmp1555 = _tmp1442 * _tmp1550;
  const Scalar _tmp1556 = -_tmp1241 * _tmp1555 - _tmp1256 * _tmp1549 - _tmp1281 * _tmp1544 -
                          _tmp1283 * _tmp1547 + _tmp1285 * _tmp1549 - _tmp1287 * _tmp1542 +
                          _tmp1288 * _tmp1542 + _tmp1289 * _tmp1544 + _tmp1291 * _tmp1542 -
                          _tmp1292 * _tmp1542 + _tmp1294 + _tmp1449 * _tmp1548 -
                          _tmp1461 * _tmp1542 + _tmp1553 + _tmp1554 * _tmp226;
  const Scalar _tmp1557 = _tmp1235 * _tmp1536;
  const Scalar _tmp1558 = -_tmp1238 * _tmp1542 - _tmp1241 * _tmp1545 - _tmp1247 * _tmp1542 -
                          _tmp1249 * _tmp1544 + _tmp1253 * _tmp1542 + _tmp1254 * _tmp1547 +
                          _tmp1257 * _tmp1542 + _tmp1260 - _tmp1443 * _tmp1548 +
                          _tmp1464 * _tmp1540 - _tmp1472 * _tmp1542 + _tmp1543 * _tmp984 -
                          _tmp1546 * _tmp826 + _tmp1554 * _tmp233 + _tmp1557;
  const Scalar _tmp1559 = _tmp1211 * _tmp1536;
  const Scalar _tmp1560 = -_tmp1151 * _tmp1544 + _tmp1168 * _tmp1545 + _tmp118 * _tmp1546 -
                          _tmp1204 * _tmp1542 - _tmp1209 * _tmp1542 + _tmp1214 * _tmp1555 +
                          _tmp1217 * _tmp1549 - _tmp1221 * _tmp1544 + _tmp1223 * _tmp1542 -
                          _tmp1230 * _tmp1549 + _tmp1236 - _tmp1438 * _tmp1542 -
                          _tmp1449 * _tmp1540 + _tmp1554 * _tmp191 + _tmp1559;
  const Scalar _tmp1561 =
      _tmp1551 * _tmp262 + _tmp1556 * _tmp250 + _tmp1558 * _tmp263 - _tmp1560 * _tmp258;
  const Scalar _tmp1562 =
      _tmp1551 * _tmp258 + _tmp1556 * _tmp263 - _tmp1558 * _tmp250 + _tmp1560 * _tmp262;
  const Scalar _tmp1563 =
      _tmp1551 * _tmp263 - _tmp1556 * _tmp258 - _tmp1558 * _tmp262 - _tmp1560 * _tmp250;
  const Scalar _tmp1564 =
      _tmp1551 * _tmp250 - _tmp1556 * _tmp262 + _tmp1558 * _tmp258 + _tmp1560 * _tmp263;
  const Scalar _tmp1565 =
      _tmp1561 * _x0[3] + _tmp1562 * _x0[1] + _tmp1563 * _x0[0] - _tmp1564 * _x0[2];
  const Scalar _tmp1566 =
      -_tmp1561 * _x0[0] - _tmp1562 * _x0[2] + _tmp1563 * _x0[3] - _tmp1564 * _x0[1];
  const Scalar _tmp1567 =
      -_tmp1561 * _x0[1] + _tmp1562 * _x0[3] + _tmp1563 * _x0[2] + _tmp1564 * _x0[0];
  const Scalar _tmp1568 =
      _tmp1561 * _x0[2] - _tmp1562 * _x0[0] + _tmp1563 * _x0[1] + _tmp1564 * _x0[3];
  const Scalar _tmp1569 = _tmp1565 * _y[2] + _tmp1566 * _y[1] - _tmp1567 * _y[0] - _tmp1568 * _y[3];
  const Scalar _tmp1570 = _tmp1565 * _y[0] + _tmp1566 * _y[3] + _tmp1567 * _y[2] + _tmp1568 * _y[1];
  const Scalar _tmp1571 =
      -_tmp1565 * _y[1] + _tmp1566 * _y[2] - _tmp1567 * _y[3] + _tmp1568 * _y[0];
  const Scalar _tmp1572 =
      -_tmp1565 * _y[3] + _tmp1566 * _y[0] + _tmp1567 * _y[1] - _tmp1568 * _y[2];
  const Scalar _tmp1573 =
      _tmp1569 * _x_T_y[3] - _tmp1570 * _x_T_y[1] + _tmp1571 * _x_T_y[0] - _tmp1572 * _x_T_y[2];
  const Scalar _tmp1574 = _tmp1573 * _tmp460;
  const Scalar _tmp1575 = _tmp1567 * _tmp464;
  const Scalar _tmp1576 = _tmp1566 * _tmp462;
  const Scalar _tmp1577 = _tmp1565 * _tmp467 + _tmp1568 * _tmp466;
  const Scalar _tmp1578 = -_tmp1575 - _tmp1576 + _tmp1577;
  const Scalar _tmp1579 = -_tmp1567 * _tmp472;
  const Scalar _tmp1580 = -_tmp1565 * _tmp485;
  const Scalar _tmp1581 = _tmp1579 + _tmp1580;
  const Scalar _tmp1582 = _tmp1565 * _tmp464;
  const Scalar _tmp1583 = _tmp1566 * _tmp466;
  const Scalar _tmp1584 = _tmp1567 * _tmp467 + _tmp1568 * _tmp462;
  const Scalar _tmp1585 = _tmp1582 + _tmp1583 + _tmp1584;
  const Scalar _tmp1586 = -_tmp152 * _tmp1581 - _tmp153 * _tmp1578 - _tmp157 * _tmp1585 +
                          _tmp1578 * _y[4] + _tmp1581 * _y[5] + _tmp1585 * _y[6];
  const Scalar _tmp1587 =
      _tmp1569 * _x_T_y[1] + _tmp1570 * _x_T_y[3] + _tmp1571 * _x_T_y[2] + _tmp1572 * _x_T_y[0];
  const Scalar _tmp1588 = _tmp1587 * _tmp522;
  const Scalar _tmp1589 = _tmp1568 * _tmp464;
  const Scalar _tmp1590 = _tmp1566 * _tmp467;
  const Scalar _tmp1591 = _tmp1565 * _tmp462 + _tmp1567 * _tmp466;
  const Scalar _tmp1592 = _tmp1589 + _tmp1590 + _tmp1591;
  const Scalar _tmp1593 = -_tmp1568 * _tmp470;
  const Scalar _tmp1594 = _tmp1580 + _tmp1593;
  const Scalar _tmp1595 = -_tmp1582 - _tmp1583 + _tmp1584;
  const Scalar _tmp1596 = -_tmp152 * _tmp1595 - _tmp153 * _tmp1592 - _tmp157 * _tmp1594 +
                          _tmp1592 * _y[4] + _tmp1594 * _y[6] + _tmp1595 * _y[5];
  const Scalar _tmp1597 =
      _tmp1569 * _x_T_y[2] - _tmp1570 * _x_T_y[0] - _tmp1571 * _x_T_y[1] + _tmp1572 * _x_T_y[3];
  const Scalar _tmp1598 = _tmp1575 + _tmp1576 + _tmp1577;
  const Scalar _tmp1599 = _tmp1579 + _tmp1593;
  const Scalar _tmp1600 = -_tmp1589 - _tmp1590 + _tmp1591;
  const Scalar _tmp1601 = -_tmp152 * _tmp1598 - _tmp153 * _tmp1599 - _tmp157 * _tmp1600 +
                          _tmp1598 * _y[5] + _tmp1599 * _y[4] + _tmp1600 * _y[6];
  const Scalar _tmp1602 = _tmp460 * (-_tmp1569 * _x_T_y[0] - _tmp1570 * _x_T_y[2] +
                                     _tmp1571 * _x_T_y[3] + _tmp1572 * _x_T_y[1]);
  const Scalar _tmp1603 = _tmp1587 * _tmp526;
  const Scalar _tmp1604 = _tmp1587 * _tmp510;
  const Scalar _tmp1605 = _tmp1587 * _tmp498;
  const Scalar _tmp1606 = _tmp522 * sqrt_info(3, 2);
  const Scalar _tmp1607 = _tmp1587 * _tmp536;
  const Scalar _tmp1608 = _tmp1597 * _tmp460;
  const Scalar _tmp1609 = _tmp1159 * _tmp209;
  const Scalar _tmp1610 = _tmp1190 * _tmp1609;
  const Scalar _tmp1611 = _tmp1610 * _tmp218;
  const Scalar _tmp1612 = _tmp1161 * _tmp190;
  const Scalar _tmp1613 = _tmp1190 * _tmp1612;
  const Scalar _tmp1614 = _tmp1613 * _tmp218;
  const Scalar _tmp1615 = _tmp1159 * _tmp1189;
  const Scalar _tmp1616 = -_tmp1170 * _tmp1232 - _tmp1171 * _tmp1232 + _tmp1174 * _tmp1189 +
                          _tmp1183 * _tmp1615 + _tmp1184 * _tmp1615 - _tmp1189 * _tmp1352 +
                          _tmp1196 * _tmp1536 + _tmp1355;
  const Scalar _tmp1617 = _tmp1616 * _tmp227;
  const Scalar _tmp1618 = _tmp1615 * _tmp209;
  const Scalar _tmp1619 = _tmp1161 * _tmp1232;
  const Scalar _tmp1620 = -_tmp1559;
  const Scalar _tmp1621 = _tmp1618 * _tmp218;
  const Scalar _tmp1622 = -_tmp1238 * _tmp1616 - _tmp1241 * _tmp1611 + _tmp1241 * _tmp1614 -
                          _tmp1247 * _tmp1616 - _tmp1249 * _tmp1618 + _tmp1249 * _tmp1619 +
                          _tmp1253 * _tmp1616 + _tmp1254 * _tmp1621 - _tmp1255 * _tmp1619 +
                          _tmp1256 * _tmp1617 - _tmp1285 * _tmp1617 + _tmp1370 * _tmp1616 +
                          _tmp1374 - _tmp1472 * _tmp1616 + _tmp1620;
  const Scalar _tmp1623 = _tmp1616 * _tmp253;
  const Scalar _tmp1624 = -_tmp1151 * _tmp1618 + _tmp1151 * _tmp1619 - _tmp1204 * _tmp1616 -
                          _tmp1208 * _tmp1617 + _tmp1217 * _tmp1623 - _tmp1221 * _tmp1618 +
                          _tmp1221 * _tmp1619 + _tmp1223 * _tmp1616 - _tmp1230 * _tmp1623 +
                          _tmp1273 * _tmp1617 + _tmp1379 - _tmp1438 * _tmp1616 +
                          _tmp1448 * _tmp1610 - _tmp1448 * _tmp1613 + _tmp1557;
  const Scalar _tmp1625 = _tmp1150 * _tmp1190;
  const Scalar _tmp1626 = _tmp1616 * _tmp58;
  const Scalar _tmp1627 = _tmp117 * _tmp1201 * _tmp1626;
  const Scalar _tmp1628 = -_tmp1218 * _tmp1617 + _tmp1252 * _tmp1617 - _tmp1256 * _tmp1623 -
                          _tmp1283 * _tmp1621 + _tmp1284 * _tmp1619 - _tmp1287 * _tmp1616 +
                          _tmp1288 * _tmp1616 + _tmp1289 * _tmp1618 - _tmp1289 * _tmp1619 -
                          _tmp1292 * _tmp1616 + _tmp1377 + _tmp1538 - _tmp1609 * _tmp1625 +
                          _tmp1612 * _tmp1625 + _tmp1627 * _tmp198 * _tmp253;
  const Scalar _tmp1629 = -_tmp1208 * _tmp1623 + _tmp1214 * _tmp1611 - _tmp1214 * _tmp1614 -
                          _tmp1217 * _tmp1617 + _tmp1230 * _tmp1617 - _tmp1246 * _tmp1626 -
                          _tmp1265 * _tmp1616 + _tmp1266 * _tmp1621 - _tmp1267 * _tmp1619 +
                          _tmp1270 * _tmp1618 - _tmp1270 * _tmp1619 + _tmp1273 * _tmp1623 +
                          _tmp1367 + _tmp1553 + _tmp1627 * _tmp827;
  const Scalar _tmp1630 =
      -_tmp1622 * _tmp250 + _tmp1624 * _tmp262 + _tmp1628 * _tmp263 + _tmp1629 * _tmp258;
  const Scalar _tmp1631 =
      -_tmp1622 * _tmp262 - _tmp1624 * _tmp250 - _tmp1628 * _tmp258 + _tmp1629 * _tmp263;
  const Scalar _tmp1632 =
      _tmp1622 * _tmp263 - _tmp1624 * _tmp258 + _tmp1628 * _tmp250 + _tmp1629 * _tmp262;
  const Scalar _tmp1633 =
      _tmp1622 * _tmp258 + _tmp1624 * _tmp263 - _tmp1628 * _tmp262 + _tmp1629 * _tmp250;
  const Scalar _tmp1634 =
      -_tmp1630 * _x0[2] + _tmp1631 * _x0[3] - _tmp1632 * _x0[0] - _tmp1633 * _x0[1];
  const Scalar _tmp1635 =
      _tmp1630 * _x0[1] + _tmp1631 * _x0[0] + _tmp1632 * _x0[3] - _tmp1633 * _x0[2];
  const Scalar _tmp1636 =
      _tmp1630 * _x0[3] + _tmp1631 * _x0[2] - _tmp1632 * _x0[1] + _tmp1633 * _x0[0];
  const Scalar _tmp1637 =
      -_tmp1630 * _x0[0] + _tmp1631 * _x0[1] + _tmp1632 * _x0[2] + _tmp1633 * _x0[3];
  const Scalar _tmp1638 = _tmp1634 * _y[2] - _tmp1635 * _y[1] - _tmp1636 * _y[3] + _tmp1637 * _y[0];
  const Scalar _tmp1639 = _tmp1634 * _y[1] + _tmp1635 * _y[2] - _tmp1636 * _y[0] - _tmp1637 * _y[3];
  const Scalar _tmp1640 = _tmp1634 * _y[3] + _tmp1635 * _y[0] + _tmp1636 * _y[2] + _tmp1637 * _y[1];
  const Scalar _tmp1641 = _tmp1634 * _y[0] - _tmp1635 * _y[3] + _tmp1636 * _y[1] - _tmp1637 * _y[2];
  const Scalar _tmp1642 =
      _tmp1638 * _x_T_y[2] + _tmp1639 * _x_T_y[1] + _tmp1640 * _x_T_y[3] + _tmp1641 * _x_T_y[0];
  const Scalar _tmp1643 = _tmp1642 * _tmp522;
  const Scalar _tmp1644 = -_tmp1637 * _tmp470;
  const Scalar _tmp1645 = -_tmp1635 * _tmp485;
  const Scalar _tmp1646 = _tmp1644 + _tmp1645;
  const Scalar _tmp1647 = _tmp1634 * _tmp466;
  const Scalar _tmp1648 = _tmp1635 * _tmp464;
  const Scalar _tmp1649 = _tmp1636 * _tmp467 + _tmp1637 * _tmp462;
  const Scalar _tmp1650 = -_tmp1647 - _tmp1648 + _tmp1649;
  const Scalar _tmp1651 = _tmp1634 * _tmp467;
  const Scalar _tmp1652 = _tmp1637 * _tmp464;
  const Scalar _tmp1653 = _tmp1635 * _tmp462 + _tmp1636 * _tmp466;
  const Scalar _tmp1654 = _tmp1651 + _tmp1652 + _tmp1653;
  const Scalar _tmp1655 = -_tmp152 * _tmp1650 - _tmp153 * _tmp1654 - _tmp157 * _tmp1646 +
                          _tmp1646 * _y[6] + _tmp1650 * _y[5] + _tmp1654 * _y[4];
  const Scalar _tmp1656 = -_tmp1636 * _tmp472;
  const Scalar _tmp1657 = _tmp1645 + _tmp1656;
  const Scalar _tmp1658 = _tmp1634 * _tmp462;
  const Scalar _tmp1659 = _tmp1636 * _tmp464;
  const Scalar _tmp1660 = _tmp1635 * _tmp467 + _tmp1637 * _tmp466;
  const Scalar _tmp1661 = -_tmp1658 - _tmp1659 + _tmp1660;
  const Scalar _tmp1662 = _tmp1647 + _tmp1648 + _tmp1649;
  const Scalar _tmp1663 = -_tmp152 * _tmp1657 - _tmp153 * _tmp1661 - _tmp157 * _tmp1662 +
                          _tmp1657 * _y[5] + _tmp1661 * _y[4] + _tmp1662 * _y[6];
  const Scalar _tmp1664 = _tmp1642 * _tmp510;
  const Scalar _tmp1665 = _tmp1642 * _tmp496;
  const Scalar _tmp1666 = _tmp1665 * _tmp495;
  const Scalar _tmp1667 = _tmp1666 * _tmp494;
  const Scalar _tmp1668 = _tmp1658 + _tmp1659 + _tmp1660;
  const Scalar _tmp1669 = _tmp1644 + _tmp1656;
  const Scalar _tmp1670 = -_tmp1651 - _tmp1652 + _tmp1653;
  const Scalar _tmp1671 = -_tmp152 * _tmp1668 - _tmp153 * _tmp1669 - _tmp157 * _tmp1670 +
                          _tmp1668 * _y[5] + _tmp1669 * _y[4] + _tmp1670 * _y[6];
  const Scalar _tmp1672 = _tmp1666 * _tmp520;
  const Scalar _tmp1673 =
      _tmp1638 * _x_T_y[0] + _tmp1639 * _x_T_y[3] - _tmp1640 * _x_T_y[1] - _tmp1641 * _x_T_y[2];
  const Scalar _tmp1674 = _tmp1673 * _tmp460;
  const Scalar _tmp1675 =
      _tmp1638 * _x_T_y[3] - _tmp1639 * _x_T_y[0] - _tmp1640 * _x_T_y[2] + _tmp1641 * _x_T_y[1];
  const Scalar _tmp1676 = _tmp1675 * _tmp460;
  const Scalar _tmp1677 = _tmp460 * (-_tmp1638 * _x_T_y[1] + _tmp1639 * _x_T_y[2] -
                                     _tmp1640 * _x_T_y[0] + _tmp1641 * _x_T_y[3]);
  const Scalar _tmp1678 = _tmp1642 * _tmp509;
  const Scalar _tmp1679 = _tmp1642 * _tmp528;
  const Scalar _tmp1680 = _tmp1665 * _tmp508;
  const Scalar _tmp1681 = _tmp1159 * _tmp1353;
  const Scalar _tmp1682 = -_tmp1170 * _tmp1366 - _tmp1171 * _tmp1366 + _tmp1174 * _tmp1353 +
                          _tmp1183 * _tmp1681 + _tmp1184 * _tmp1681 - _tmp1352 * _tmp1353 +
                          _tmp1354 * _tmp1536 + _tmp1436;
  const Scalar _tmp1683 = _tmp1222 * _tmp1682;
  const Scalar _tmp1684 = _tmp1206 * _tmp1683;
  const Scalar _tmp1685 = _tmp1682 * _tmp253;
  const Scalar _tmp1686 = _tmp1218 * _tmp1682;
  const Scalar _tmp1687 = _tmp1353 * _tmp191;
  const Scalar _tmp1688 = _tmp1353 * _tmp1440;
  const Scalar _tmp1689 = _tmp1681 * _tmp209;
  const Scalar _tmp1690 = _tmp1689 * _tmp218;
  const Scalar _tmp1691 = _tmp1353 * _tmp233;
  const Scalar _tmp1692 = -_tmp1256 * _tmp1685 - _tmp1281 * _tmp1689 - _tmp1283 * _tmp1690 +
                          _tmp1285 * _tmp1685 - _tmp1287 * _tmp1682 + _tmp1289 * _tmp1689 +
                          _tmp1291 * _tmp1682 - _tmp1292 * _tmp1682 + _tmp1449 * _tmp1687 -
                          _tmp1464 * _tmp1691 + _tmp1466 + _tmp1557 + _tmp1684 * _tmp68 -
                          _tmp1686 * _tmp227 + _tmp1688 * _tmp226;
  const Scalar _tmp1693 = _tmp1353 * _tmp226;
  const Scalar _tmp1694 = _tmp1682 * _tmp797;
  const Scalar _tmp1695 = _tmp1226 * _tmp1689;
  const Scalar _tmp1696 = -_tmp1208 * _tmp1685 + _tmp1214 * _tmp1695 + _tmp1229 * _tmp1694 -
                          _tmp1265 * _tmp1682 + _tmp1266 * _tmp1690 + _tmp1270 * _tmp1689 -
                          _tmp1271 * _tmp1682 + _tmp1273 * _tmp1685 + _tmp1364 * _tmp1682 -
                          _tmp1443 * _tmp1693 - _tmp1449 * _tmp1691 - _tmp1464 * _tmp1687 +
                          _tmp1470 + _tmp1620 - _tmp1684 * _tmp58;
  const Scalar _tmp1697 = -_tmp1164 * _tmp1681 + _tmp1168 * _tmp1695 + _tmp1202 * _tmp1694 -
                          _tmp1204 * _tmp1682 - _tmp1209 * _tmp1682 + _tmp1217 * _tmp1685 -
                          _tmp1221 * _tmp1689 - _tmp1230 * _tmp1685 + _tmp1443 * _tmp1691 -
                          _tmp1449 * _tmp1693 + _tmp1458 + _tmp1539 + _tmp1683 * _tmp803 -
                          _tmp1686 * _tmp192 + _tmp1688 * _tmp191;
  const Scalar _tmp1698 = -_tmp1238 * _tmp1682 - _tmp1241 * _tmp1695 - _tmp1248 * _tmp1694 -
                          _tmp1249 * _tmp1689 + _tmp1252 * _tmp1685 + _tmp1254 * _tmp1690 +
                          _tmp1257 * _tmp1682 + _tmp1370 * _tmp1682 - _tmp1443 * _tmp1687 +
                          _tmp1464 * _tmp1693 - _tmp1472 * _tmp1682 + _tmp1473 + _tmp1552 -
                          _tmp1684 * _tmp4 + _tmp1688 * _tmp233;
  const Scalar _tmp1699 =
      -_tmp1692 * _tmp258 + _tmp1696 * _tmp263 - _tmp1697 * _tmp250 - _tmp1698 * _tmp262;
  const Scalar _tmp1700 =
      _tmp1692 * _tmp250 + _tmp1696 * _tmp262 - _tmp1697 * _tmp258 + _tmp1698 * _tmp263;
  const Scalar _tmp1701 =
      _tmp1692 * _tmp263 + _tmp1696 * _tmp258 + _tmp1697 * _tmp262 - _tmp1698 * _tmp250;
  const Scalar _tmp1702 =
      -_tmp1692 * _tmp262 + _tmp1696 * _tmp250 + _tmp1697 * _tmp263 + _tmp1698 * _tmp258;
  const Scalar _tmp1703 =
      _tmp1699 * _x0[0] + _tmp1700 * _x0[3] + _tmp1701 * _x0[1] - _tmp1702 * _x0[2];
  const Scalar _tmp1704 =
      _tmp1699 * _x0[2] - _tmp1700 * _x0[1] + _tmp1701 * _x0[3] + _tmp1702 * _x0[0];
  const Scalar _tmp1705 =
      _tmp1699 * _x0[1] + _tmp1700 * _x0[2] - _tmp1701 * _x0[0] + _tmp1702 * _x0[3];
  const Scalar _tmp1706 =
      _tmp1699 * _x0[3] - _tmp1700 * _x0[0] - _tmp1701 * _x0[2] - _tmp1702 * _x0[1];
  const Scalar _tmp1707 =
      -_tmp1703 * _y[3] + _tmp1704 * _y[1] - _tmp1705 * _y[2] + _tmp1706 * _y[0];
  const Scalar _tmp1708 = _tmp1703 * _y[2] - _tmp1704 * _y[0] - _tmp1705 * _y[3] + _tmp1706 * _y[1];
  const Scalar _tmp1709 =
      -_tmp1703 * _y[1] - _tmp1704 * _y[3] + _tmp1705 * _y[0] + _tmp1706 * _y[2];
  const Scalar _tmp1710 = _tmp1703 * _y[0] + _tmp1704 * _y[2] + _tmp1705 * _y[1] + _tmp1706 * _y[3];
  const Scalar _tmp1711 =
      _tmp1707 * _x_T_y[0] + _tmp1708 * _x_T_y[1] + _tmp1709 * _x_T_y[2] + _tmp1710 * _x_T_y[3];
  const Scalar _tmp1712 =
      -_tmp1707 * _x_T_y[2] + _tmp1708 * _x_T_y[3] + _tmp1709 * _x_T_y[0] - _tmp1710 * _x_T_y[1];
  const Scalar _tmp1713 = _tmp1703 * _tmp464;
  const Scalar _tmp1714 = _tmp1706 * _tmp466;
  const Scalar _tmp1715 = _tmp1704 * _tmp467 + _tmp1705 * _tmp462;
  const Scalar _tmp1716 = -_tmp1713 - _tmp1714 + _tmp1715;
  const Scalar _tmp1717 = -_tmp1705 * _tmp470;
  const Scalar _tmp1718 = -_tmp1703 * _tmp485;
  const Scalar _tmp1719 = _tmp1717 + _tmp1718;
  const Scalar _tmp1720 = _tmp1705 * _tmp464;
  const Scalar _tmp1721 = _tmp1706 * _tmp467;
  const Scalar _tmp1722 = _tmp1703 * _tmp462 + _tmp1704 * _tmp466;
  const Scalar _tmp1723 = _tmp1720 + _tmp1721 + _tmp1722;
  const Scalar _tmp1724 = -_tmp152 * _tmp1716 - _tmp153 * _tmp1723 - _tmp157 * _tmp1719 +
                          _tmp1716 * _y[5] + _tmp1719 * _y[6] + _tmp1723 * _y[4];
  const Scalar _tmp1725 = _tmp1711 * _tmp510;
  const Scalar _tmp1726 = _tmp1713 + _tmp1714 + _tmp1715;
  const Scalar _tmp1727 = -_tmp1704 * _tmp472;
  const Scalar _tmp1728 = _tmp1718 + _tmp1727;
  const Scalar _tmp1729 = _tmp1704 * _tmp464;
  const Scalar _tmp1730 = _tmp1706 * _tmp462;
  const Scalar _tmp1731 = _tmp1703 * _tmp467 + _tmp1705 * _tmp466;
  const Scalar _tmp1732 = -_tmp1729 - _tmp1730 + _tmp1731;
  const Scalar _tmp1733 = -_tmp152 * _tmp1728 - _tmp153 * _tmp1732 - _tmp157 * _tmp1726 +
                          _tmp1726 * _y[6] + _tmp1728 * _y[5] + _tmp1732 * _y[4];
  const Scalar _tmp1734 = _tmp1729 + _tmp1730 + _tmp1731;
  const Scalar _tmp1735 = _tmp1717 + _tmp1727;
  const Scalar _tmp1736 = -_tmp1720 - _tmp1721 + _tmp1722;
  const Scalar _tmp1737 = -_tmp152 * _tmp1734 - _tmp153 * _tmp1735 - _tmp157 * _tmp1736 +
                          _tmp1734 * _y[5] + _tmp1735 * _y[4] + _tmp1736 * _y[6];
  const Scalar _tmp1738 =
      _tmp1707 * _x_T_y[3] + _tmp1708 * _x_T_y[2] - _tmp1709 * _x_T_y[1] - _tmp1710 * _x_T_y[0];
  const Scalar _tmp1739 = _tmp1738 * _tmp460;
  const Scalar _tmp1740 =
      _tmp1707 * _x_T_y[1] - _tmp1708 * _x_T_y[0] + _tmp1709 * _x_T_y[3] - _tmp1710 * _x_T_y[2];
  const Scalar _tmp1741 = _tmp1740 * _tmp460;
  const Scalar _tmp1742 = _tmp1711 * _tmp522;
  const Scalar _tmp1743 = _tmp1711 * _tmp526;
  const Scalar _tmp1744 = _tmp1711 * _tmp498;
  const Scalar _tmp1745 = _tmp1711 * _tmp528;
  const Scalar _tmp1746 = _tmp1711 * _tmp536;
  const Scalar _tmp1747 = _tmp719 * lambdas(2, 0);
  const Scalar _tmp1748 = _tmp723 * lambdas(2, 0);
  const Scalar _tmp1749 = _tmp714 * lambdas(2, 0);
  const Scalar _tmp1750 = _tmp726 * lambdas(2, 0);
  const Scalar _tmp1751 = _tmp729 * lambdas(2, 0);
  const Scalar _tmp1752 = _tmp733 * lambdas(2, 0);
  const Scalar _tmp1753 = _tmp737 * lambdas(2, 0);
  const Scalar _tmp1754 = _tmp735 * lambdas(2, 0);
  const Scalar _tmp1755 = _tmp739 * lambdas(2, 0);
  const Scalar _tmp1756 = (Scalar(1) / Scalar(2)) * _tmp516;
  const Scalar _tmp1757 = (Scalar(1) / Scalar(2)) * _tmp517;
  const Scalar _tmp1758 = (Scalar(1) / Scalar(2)) * _tmp518;
  const Scalar _tmp1759 = (Scalar(1) / Scalar(2)) * _tmp519;
  const Scalar _tmp1760 = -_tmp1756 + _tmp1757 + _tmp1758 - _tmp1759;
  const Scalar _tmp1761 = _tmp1760 * _tmp460;
  const Scalar _tmp1762 = (Scalar(1) / Scalar(2)) * _tmp504;
  const Scalar _tmp1763 = (Scalar(1) / Scalar(2)) * _tmp505;
  const Scalar _tmp1764 = (Scalar(1) / Scalar(2)) * _tmp506;
  const Scalar _tmp1765 = (Scalar(1) / Scalar(2)) * _tmp507;
  const Scalar _tmp1766 = _tmp1762 + _tmp1763 - _tmp1764 - _tmp1765;
  const Scalar _tmp1767 = _tmp1766 * _tmp496;
  const Scalar _tmp1768 = _tmp1766 * _tmp526;
  const Scalar _tmp1769 = _tmp1766 * _tmp522;
  const Scalar _tmp1770 = (Scalar(1) / Scalar(2)) * _tmp490;
  const Scalar _tmp1771 = (Scalar(1) / Scalar(2)) * _tmp491;
  const Scalar _tmp1772 = (Scalar(1) / Scalar(2)) * _tmp492;
  const Scalar _tmp1773 = (Scalar(1) / Scalar(2)) * _tmp493;
  const Scalar _tmp1774 = -_tmp1770 + _tmp1771 - _tmp1772 + _tmp1773;
  const Scalar _tmp1775 = _tmp1774 * _tmp460;
  const Scalar _tmp1776 = _tmp1766 * _tmp510;
  const Scalar _tmp1777 = -Scalar(1) / Scalar(2) * _tmp446 - Scalar(1) / Scalar(2) * _tmp448 -
                          Scalar(1) / Scalar(2) * _tmp450 - Scalar(1) / Scalar(2) * _tmp452;
  const Scalar _tmp1778 = _tmp1777 * _tmp460;
  const Scalar _tmp1779 = _tmp1766 * _tmp498;
  const Scalar _tmp1780 = _tmp1766 * _tmp528;
  const Scalar _tmp1781 = _tmp1766 * _tmp536;
  const Scalar _tmp1782 = _tmp1770 - _tmp1771 + _tmp1772 - _tmp1773;
  const Scalar _tmp1783 = _tmp1782 * _tmp522;
  const Scalar _tmp1784 = _tmp1766 * _tmp460;
  const Scalar _tmp1785 = _tmp1756 - _tmp1757 - _tmp1758 + _tmp1759;
  const Scalar _tmp1786 = _tmp1782 * _tmp509;
  const Scalar _tmp1787 = _tmp1786 * _tmp508;
  const Scalar _tmp1788 = _tmp1782 * _tmp526;
  const Scalar _tmp1789 = _tmp1782 * _tmp498;
  const Scalar _tmp1790 = _tmp1782 * _tmp528;
  const Scalar _tmp1791 = _tmp1782 * _tmp536;
  const Scalar _tmp1792 = _tmp1785 * _tmp460;
  const Scalar _tmp1793 = -_tmp1762 - _tmp1763 + _tmp1764 + _tmp1765;
  const Scalar _tmp1794 = _tmp1793 * _tmp460;
  const Scalar _tmp1795 = _tmp1760 * _tmp498;
  const Scalar _tmp1796 = _tmp1760 * _tmp522;
  const Scalar _tmp1797 = _tmp1760 * _tmp526;
  const Scalar _tmp1798 = _tmp1760 * _tmp528;
  const Scalar _tmp1799 = _tmp1782 * _tmp460;
  const Scalar _tmp1800 = _tmp1760 * _tmp536;

  // Output terms (6)
  Eigen::Matrix<Scalar, 6, 1> _res;

  _res(0, 0) = _tmp158 * sqrt_info(0, 3) + _tmp165 * sqrt_info(0, 4) + _tmp175 * sqrt_info(0, 0) +
               _tmp176 * sqrt_info(0, 2) + _tmp180 * sqrt_info(0, 5) + _tmp182 * sqrt_info(0, 1);
  _res(1, 0) = _tmp158 * sqrt_info(1, 3) + _tmp165 * sqrt_info(1, 4) + _tmp175 * sqrt_info(1, 0) +
               _tmp176 * sqrt_info(1, 2) + _tmp180 * sqrt_info(1, 5) + _tmp182 * sqrt_info(1, 1);
  _res(2, 0) = _tmp158 * sqrt_info(2, 3) + _tmp165 * sqrt_info(2, 4) + _tmp175 * sqrt_info(2, 0) +
               _tmp176 * sqrt_info(2, 2) + _tmp180 * sqrt_info(2, 5) + _tmp182 * sqrt_info(2, 1);
  _res(3, 0) = _tmp158 * sqrt_info(3, 3) + _tmp165 * sqrt_info(3, 4) + _tmp175 * sqrt_info(3, 0) +
               _tmp176 * sqrt_info(3, 2) + _tmp180 * sqrt_info(3, 5) + _tmp182 * sqrt_info(3, 1);
  _res(4, 0) = _tmp158 * sqrt_info(4, 3) + _tmp165 * sqrt_info(4, 4) + _tmp173 * _tmp181 * _tmp183 +
               _tmp175 * sqrt_info(4, 0) + _tmp176 * sqrt_info(4, 2) + _tmp180 * sqrt_info(4, 5);
  _res(5, 0) = _tmp158 * sqrt_info(5, 3) + _tmp165 * sqrt_info(5, 4) + _tmp175 * sqrt_info(5, 0) +
               _tmp176 * sqrt_info(5, 2) + _tmp180 * sqrt_info(5, 5) + _tmp182 * sqrt_info(5, 1);

  if (res_D_x0 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x0{res_D_x0};

    _res_D_x0(0, 0) = _tmp440 * _tmp461 + _tmp479 * sqrt_info(0, 3) + _tmp488 * sqrt_info(0, 4) +
                      _tmp489 * _tmp499 + _tmp489 * _tmp515 + _tmp503 * sqrt_info(0, 5) -
                      _tmp511 * sqrt_info(0, 0) + _tmp513 * sqrt_info(0, 1) -
                      _tmp523 * sqrt_info(0, 2) + _tmp525 * sqrt_info(0, 2) +
                      _tmp527 * sqrt_info(0, 2) - _tmp529 * sqrt_info(0, 1);
    _res_D_x0(1, 0) = _tmp440 * _tmp530 + _tmp479 * sqrt_info(1, 3) + _tmp488 * sqrt_info(1, 4) -
                      _tmp489 * _tmp533 + _tmp489 * _tmp534 + _tmp503 * sqrt_info(1, 5) +
                      _tmp513 * sqrt_info(1, 1) - _tmp523 * sqrt_info(1, 2) +
                      _tmp525 * sqrt_info(1, 2) + _tmp527 * sqrt_info(1, 2) -
                      _tmp529 * sqrt_info(1, 1) + _tmp531 * sqrt_info(1, 1);
    _res_D_x0(2, 0) = _tmp440 * _tmp535 + _tmp479 * sqrt_info(2, 3) + _tmp488 * sqrt_info(2, 4) +
                      _tmp489 * _tmp537 + _tmp503 * sqrt_info(2, 5) - _tmp511 * sqrt_info(2, 0) +
                      _tmp513 * sqrt_info(2, 1) - _tmp523 * sqrt_info(2, 2) +
                      _tmp525 * sqrt_info(2, 2) + _tmp527 * sqrt_info(2, 2) -
                      _tmp529 * sqrt_info(2, 1) + _tmp531 * sqrt_info(2, 1);
    _res_D_x0(3, 0) = _tmp479 * sqrt_info(3, 3) + _tmp488 * sqrt_info(3, 4) - _tmp489 * _tmp540 +
                      _tmp489 * _tmp541 + _tmp503 * sqrt_info(3, 5) + _tmp513 * sqrt_info(3, 1) -
                      _tmp523 * sqrt_info(3, 2) + _tmp524 * _tmp542 + _tmp527 * sqrt_info(3, 2) -
                      _tmp529 * sqrt_info(3, 1) + _tmp531 * sqrt_info(3, 1) +
                      _tmp538 * sqrt_info(3, 0);
    _res_D_x0(4, 0) =
        _tmp479 * sqrt_info(4, 3) + _tmp488 * sqrt_info(4, 4) + _tmp503 * sqrt_info(4, 5) -
        _tmp511 * sqrt_info(4, 0) + _tmp512 * _tmp543 - _tmp523 * sqrt_info(4, 2) +
        _tmp525 * sqrt_info(4, 2) + _tmp527 * sqrt_info(4, 2) - _tmp529 * sqrt_info(4, 1) +
        _tmp531 * sqrt_info(4, 1) + _tmp538 * sqrt_info(4, 0) + _tmp544 * sqrt_info(4, 0);
    _res_D_x0(5, 0) =
        _tmp479 * sqrt_info(5, 3) + _tmp488 * sqrt_info(5, 4) - _tmp489 * _tmp545 +
        _tmp503 * sqrt_info(5, 5) + _tmp513 * sqrt_info(5, 1) - _tmp523 * sqrt_info(5, 2) +
        _tmp525 * sqrt_info(5, 2) + _tmp527 * sqrt_info(5, 2) - _tmp529 * sqrt_info(5, 1) +
        _tmp531 * sqrt_info(5, 1) + _tmp538 * sqrt_info(5, 0) + _tmp544 * sqrt_info(5, 0);
    _res_D_x0(0, 1) = _tmp499 * _tmp606 + _tmp515 * _tmp606 + _tmp601 * sqrt_info(0, 3) -
                      _tmp606 * _tmp622 - _tmp607 * sqrt_info(0, 2) + _tmp608 * sqrt_info(0, 2) -
                      _tmp609 * sqrt_info(0, 0) + _tmp611 * sqrt_info(0, 0) +
                      _tmp619 * sqrt_info(0, 4) + _tmp620 * _tmp621 + _tmp624 * sqrt_info(0, 2) +
                      _tmp628 * sqrt_info(0, 5);
    _res_D_x0(1, 1) = -_tmp533 * _tmp606 + _tmp534 * _tmp606 + _tmp601 * sqrt_info(1, 3) -
                      _tmp606 * _tmp631 - _tmp607 * sqrt_info(1, 2) + _tmp608 * sqrt_info(1, 2) +
                      _tmp611 * sqrt_info(1, 0) + _tmp619 * sqrt_info(1, 4) + _tmp620 * _tmp630 +
                      _tmp624 * sqrt_info(1, 2) + _tmp628 * sqrt_info(1, 5) +
                      _tmp629 * sqrt_info(1, 1);
    _res_D_x0(2, 1) = _tmp535 * _tmp610 + _tmp537 * _tmp606 + _tmp601 * sqrt_info(2, 3) -
                      _tmp606 * _tmp633 - _tmp607 * sqrt_info(2, 2) + _tmp608 * sqrt_info(2, 2) -
                      _tmp609 * sqrt_info(2, 0) + _tmp619 * sqrt_info(2, 4) + _tmp620 * _tmp632 +
                      _tmp624 * sqrt_info(2, 2) + _tmp628 * sqrt_info(2, 5) +
                      _tmp629 * sqrt_info(2, 1);
    _res_D_x0(3, 1) = -_tmp540 * _tmp606 + _tmp541 * _tmp606 + _tmp542 * _tmp623 +
                      _tmp601 * sqrt_info(3, 3) - _tmp606 * _tmp635 - _tmp607 * sqrt_info(3, 2) +
                      _tmp608 * sqrt_info(3, 2) + _tmp611 * sqrt_info(3, 0) +
                      _tmp619 * sqrt_info(3, 4) + _tmp620 * _tmp634 + _tmp628 * sqrt_info(3, 5) +
                      _tmp629 * sqrt_info(3, 1);
    _res_D_x0(4, 1) =
        _tmp543 * _tmp620 + _tmp601 * sqrt_info(4, 3) - _tmp606 * _tmp636 -
        _tmp607 * sqrt_info(4, 2) + _tmp608 * sqrt_info(4, 2) - _tmp609 * sqrt_info(4, 0) +
        _tmp611 * sqrt_info(4, 0) + _tmp619 * sqrt_info(4, 4) + _tmp624 * sqrt_info(4, 2) +
        _tmp628 * sqrt_info(4, 5) + _tmp629 * sqrt_info(4, 1) + _tmp637 * sqrt_info(4, 0);
    _res_D_x0(5, 1) = -_tmp545 * _tmp606 + _tmp601 * sqrt_info(5, 3) - _tmp606 * _tmp639 -
                      _tmp607 * sqrt_info(5, 2) + _tmp608 * sqrt_info(5, 2) +
                      _tmp611 * sqrt_info(5, 0) + _tmp619 * sqrt_info(5, 4) + _tmp620 * _tmp638 +
                      _tmp624 * sqrt_info(5, 2) + _tmp628 * sqrt_info(5, 5) +
                      _tmp629 * sqrt_info(5, 1) + _tmp637 * sqrt_info(5, 0);
    _res_D_x0(0, 2) =
        _tmp461 * _tmp705 + _tmp514 * _tmp706 - _tmp622 * _tmp684 + _tmp679 * sqrt_info(0, 5) -
        _tmp685 * sqrt_info(0, 0) + _tmp693 * sqrt_info(0, 3) + _tmp695 * sqrt_info(0, 2) +
        _tmp696 * sqrt_info(0, 2) + _tmp698 * sqrt_info(0, 1) + _tmp702 * sqrt_info(0, 4) -
        _tmp703 * sqrt_info(0, 2) + _tmp704 * sqrt_info(0, 1);
    _res_D_x0(1, 2) =
        _tmp530 * _tmp705 - _tmp532 * _tmp708 + _tmp534 * _tmp684 + _tmp679 * sqrt_info(1, 5) +
        _tmp693 * sqrt_info(1, 3) + _tmp695 * sqrt_info(1, 2) + _tmp696 * sqrt_info(1, 2) +
        _tmp698 * sqrt_info(1, 1) + _tmp702 * sqrt_info(1, 4) - _tmp703 * sqrt_info(1, 2) +
        _tmp704 * sqrt_info(1, 1) - _tmp707 * sqrt_info(1, 1);
    _res_D_x0(2, 2) =
        _tmp535 * _tmp705 + _tmp537 * _tmp684 + _tmp679 * sqrt_info(2, 5) -
        _tmp685 * sqrt_info(2, 0) + _tmp693 * sqrt_info(2, 3) + _tmp695 * sqrt_info(2, 2) +
        _tmp696 * sqrt_info(2, 2) + _tmp698 * sqrt_info(2, 1) + _tmp702 * sqrt_info(2, 4) -
        _tmp703 * sqrt_info(2, 2) + _tmp704 * sqrt_info(2, 1) - _tmp707 * sqrt_info(2, 1);
    _res_D_x0(3, 2) = _tmp539 * _tmp706 - _tmp539 * _tmp708 + _tmp542 * _tmp694 -
                      _tmp635 * _tmp684 + _tmp679 * sqrt_info(3, 5) + _tmp693 * sqrt_info(3, 3) +
                      _tmp696 * sqrt_info(3, 2) + _tmp698 * sqrt_info(3, 1) +
                      _tmp702 * sqrt_info(3, 4) - _tmp703 * sqrt_info(3, 2) +
                      _tmp704 * sqrt_info(3, 1) + _tmp705 * _tmp709;
    _res_D_x0(4, 2) =
        _tmp543 * _tmp697 + _tmp679 * sqrt_info(4, 5) - _tmp685 * sqrt_info(4, 0) +
        _tmp693 * sqrt_info(4, 3) + _tmp695 * sqrt_info(4, 2) + _tmp696 * sqrt_info(4, 2) +
        _tmp702 * sqrt_info(4, 4) - _tmp703 * sqrt_info(4, 2) + _tmp704 * sqrt_info(4, 1) -
        _tmp707 * sqrt_info(4, 1) + _tmp710 * sqrt_info(4, 0) + _tmp711 * sqrt_info(4, 0);
    _res_D_x0(5, 2) =
        _tmp679 * sqrt_info(5, 5) - _tmp685 * sqrt_info(5, 0) + _tmp693 * sqrt_info(5, 3) +
        _tmp695 * sqrt_info(5, 2) + _tmp696 * sqrt_info(5, 2) + _tmp698 * sqrt_info(5, 1) +
        _tmp702 * sqrt_info(5, 4) - _tmp703 * sqrt_info(5, 2) + _tmp704 * sqrt_info(5, 1) -
        _tmp707 * sqrt_info(5, 1) + _tmp710 * sqrt_info(5, 0) + _tmp711 * sqrt_info(5, 0);
    _res_D_x0(0, 3) =
        -_tmp716 * sqrt_info(0, 3) - _tmp720 * sqrt_info(0, 4) - _tmp724 * sqrt_info(0, 5);
    _res_D_x0(1, 3) =
        -_tmp716 * sqrt_info(1, 3) - _tmp720 * sqrt_info(1, 4) - _tmp724 * sqrt_info(1, 5);
    _res_D_x0(2, 3) = -_tmp715 * _tmp725 - _tmp720 * sqrt_info(2, 4) - _tmp724 * sqrt_info(2, 5);
    _res_D_x0(3, 3) =
        -_tmp716 * sqrt_info(3, 3) - _tmp720 * sqrt_info(3, 4) - _tmp724 * sqrt_info(3, 5);
    _res_D_x0(4, 3) =
        -_tmp716 * sqrt_info(4, 3) - _tmp720 * sqrt_info(4, 4) - _tmp724 * sqrt_info(4, 5);
    _res_D_x0(5, 3) =
        -_tmp716 * sqrt_info(5, 3) - _tmp720 * sqrt_info(5, 4) - _tmp724 * sqrt_info(5, 5);
    _res_D_x0(0, 4) =
        -_tmp727 * sqrt_info(0, 3) - _tmp730 * sqrt_info(0, 4) - _tmp734 * sqrt_info(0, 5);
    _res_D_x0(1, 4) =
        -_tmp727 * sqrt_info(1, 3) - _tmp730 * sqrt_info(1, 4) - _tmp734 * sqrt_info(1, 5);
    _res_D_x0(2, 4) =
        -_tmp727 * sqrt_info(2, 3) - _tmp730 * sqrt_info(2, 4) - _tmp734 * sqrt_info(2, 5);
    _res_D_x0(3, 4) =
        -_tmp727 * sqrt_info(3, 3) - _tmp730 * sqrt_info(3, 4) - _tmp734 * sqrt_info(3, 5);
    _res_D_x0(4, 4) =
        -_tmp727 * sqrt_info(4, 3) - _tmp730 * sqrt_info(4, 4) - _tmp734 * sqrt_info(4, 5);
    _res_D_x0(5, 4) =
        -_tmp727 * sqrt_info(5, 3) - _tmp730 * sqrt_info(5, 4) - _tmp734 * sqrt_info(5, 5);
    _res_D_x0(0, 5) =
        -_tmp736 * sqrt_info(0, 5) - _tmp738 * sqrt_info(0, 3) - _tmp740 * sqrt_info(0, 4);
    _res_D_x0(1, 5) = -_tmp715 * _tmp741 - _tmp736 * sqrt_info(1, 5) - _tmp738 * sqrt_info(1, 3);
    _res_D_x0(2, 5) =
        -_tmp736 * sqrt_info(2, 5) - _tmp738 * sqrt_info(2, 3) - _tmp740 * sqrt_info(2, 4);
    _res_D_x0(3, 5) =
        -_tmp736 * sqrt_info(3, 5) - _tmp738 * sqrt_info(3, 3) - _tmp740 * sqrt_info(3, 4);
    _res_D_x0(4, 5) =
        -_tmp736 * sqrt_info(4, 5) - _tmp738 * sqrt_info(4, 3) - _tmp740 * sqrt_info(4, 4);
    _res_D_x0(5, 5) =
        -_tmp736 * sqrt_info(5, 5) - _tmp738 * sqrt_info(5, 3) - _tmp740 * sqrt_info(5, 4);
  }

  if (res_D_x1 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x1{res_D_x1};

    _res_D_x1(0, 0) = _tmp461 * _tmp912 + _tmp499 * _tmp896 + _tmp515 * _tmp896 -
                      _tmp622 * _tmp896 - _tmp897 * sqrt_info(0, 2) + _tmp899 * sqrt_info(0, 2) +
                      _tmp911 * sqrt_info(0, 3) - _tmp913 * sqrt_info(0, 0) +
                      _tmp915 * sqrt_info(0, 1) + _tmp916 * sqrt_info(0, 2) +
                      _tmp924 * sqrt_info(0, 5) + _tmp928 * sqrt_info(0, 4);
    _res_D_x1(1, 0) = _tmp530 * _tmp912 - _tmp533 * _tmp896 + _tmp534 * _tmp896 -
                      _tmp631 * _tmp896 - _tmp897 * sqrt_info(1, 2) + _tmp899 * sqrt_info(1, 2) +
                      _tmp911 * sqrt_info(1, 3) + _tmp915 * sqrt_info(1, 1) +
                      _tmp916 * sqrt_info(1, 2) + _tmp924 * sqrt_info(1, 5) +
                      _tmp928 * sqrt_info(1, 4) + _tmp929 * sqrt_info(1, 1);
    _res_D_x1(2, 0) =
        _tmp535 * _tmp912 + _tmp537 * _tmp896 - _tmp633 * _tmp896 - _tmp897 * sqrt_info(2, 2) +
        _tmp899 * sqrt_info(2, 2) + _tmp911 * sqrt_info(2, 3) - _tmp913 * sqrt_info(2, 0) +
        _tmp915 * sqrt_info(2, 1) + _tmp916 * sqrt_info(2, 2) + _tmp924 * sqrt_info(2, 5) +
        _tmp928 * sqrt_info(2, 4) + _tmp929 * sqrt_info(2, 1);
    _res_D_x1(3, 0) = -_tmp540 * _tmp896 + _tmp541 * _tmp896 + _tmp542 * _tmp898 +
                      _tmp634 * _tmp914 - _tmp635 * _tmp896 + _tmp709 * _tmp912 -
                      _tmp897 * sqrt_info(3, 2) + _tmp911 * sqrt_info(3, 3) +
                      _tmp916 * sqrt_info(3, 2) + _tmp924 * sqrt_info(3, 5) +
                      _tmp928 * sqrt_info(3, 4) + _tmp929 * sqrt_info(3, 1);
    _res_D_x1(4, 0) =
        _tmp543 * _tmp914 - _tmp636 * _tmp896 - _tmp897 * sqrt_info(4, 2) +
        _tmp899 * sqrt_info(4, 2) + _tmp911 * sqrt_info(4, 3) - _tmp913 * sqrt_info(4, 0) +
        _tmp916 * sqrt_info(4, 2) + _tmp924 * sqrt_info(4, 5) + _tmp928 * sqrt_info(4, 4) +
        _tmp929 * sqrt_info(4, 1) + _tmp930 * sqrt_info(4, 0) + _tmp931 * sqrt_info(4, 0);
    _res_D_x1(5, 0) =
        -_tmp545 * _tmp896 + _tmp638 * _tmp914 - _tmp639 * _tmp896 - _tmp897 * sqrt_info(5, 2) +
        _tmp899 * sqrt_info(5, 2) + _tmp911 * sqrt_info(5, 3) + _tmp916 * sqrt_info(5, 2) +
        _tmp924 * sqrt_info(5, 5) + _tmp928 * sqrt_info(5, 4) + _tmp929 * sqrt_info(5, 1) +
        _tmp930 * sqrt_info(5, 0) + _tmp931 * sqrt_info(5, 0);
    _res_D_x1(0, 1) =
        _tmp1011 * sqrt_info(0, 2) + _tmp1013 * sqrt_info(0, 1) + _tmp1015 * sqrt_info(0, 0) +
        _tmp1017 * sqrt_info(0, 2) - _tmp1020 * sqrt_info(0, 1) + _tmp1032 * sqrt_info(0, 3) +
        _tmp1040 * sqrt_info(0, 4) + _tmp1044 * sqrt_info(0, 5) - _tmp1045 * sqrt_info(0, 0) +
        _tmp1046 * _tmp514 - _tmp1047 * sqrt_info(0, 2) + _tmp1048 * sqrt_info(0, 1);
    _res_D_x1(1, 1) = _tmp1010 * _tmp534 + _tmp1011 * sqrt_info(1, 2) + _tmp1013 * sqrt_info(1, 1) +
                      _tmp1015 * sqrt_info(1, 0) + _tmp1017 * sqrt_info(1, 2) - _tmp1018 * _tmp532 -
                      _tmp1020 * sqrt_info(1, 1) + _tmp1032 * sqrt_info(1, 3) +
                      _tmp1040 * sqrt_info(1, 4) + _tmp1044 * sqrt_info(1, 5) -
                      _tmp1047 * sqrt_info(1, 2) + _tmp1048 * sqrt_info(1, 1);
    _res_D_x1(2, 1) = _tmp1010 * _tmp537 + _tmp1011 * sqrt_info(2, 2) + _tmp1013 * sqrt_info(2, 1) +
                      _tmp1014 * _tmp535 + _tmp1017 * sqrt_info(2, 2) - _tmp1020 * sqrt_info(2, 1) +
                      _tmp1032 * sqrt_info(2, 3) + _tmp1040 * sqrt_info(2, 4) +
                      _tmp1044 * sqrt_info(2, 5) - _tmp1045 * sqrt_info(2, 0) -
                      _tmp1047 * sqrt_info(2, 2) + _tmp1048 * sqrt_info(2, 1);
    _res_D_x1(3, 1) = _tmp1011 * sqrt_info(3, 2) + _tmp1013 * sqrt_info(3, 1) +
                      _tmp1015 * sqrt_info(3, 0) + _tmp1016 * _tmp542 - _tmp1018 * _tmp539 -
                      _tmp1020 * sqrt_info(3, 1) + _tmp1032 * sqrt_info(3, 3) +
                      _tmp1040 * sqrt_info(3, 4) + _tmp1044 * sqrt_info(3, 5) + _tmp1046 * _tmp539 -
                      _tmp1047 * sqrt_info(3, 2) + _tmp1048 * sqrt_info(3, 1);
    _res_D_x1(4, 1) =
        _tmp1011 * sqrt_info(4, 2) + _tmp1012 * _tmp543 + _tmp1015 * sqrt_info(4, 0) +
        _tmp1017 * sqrt_info(4, 2) - _tmp1020 * sqrt_info(4, 1) + _tmp1032 * sqrt_info(4, 3) +
        _tmp1040 * sqrt_info(4, 4) + _tmp1044 * sqrt_info(4, 5) - _tmp1045 * sqrt_info(4, 0) -
        _tmp1047 * sqrt_info(4, 2) + _tmp1048 * sqrt_info(4, 1) + _tmp1049 * sqrt_info(4, 0);
    _res_D_x1(5, 1) =
        _tmp1011 * sqrt_info(5, 2) + _tmp1013 * sqrt_info(5, 1) + _tmp1015 * sqrt_info(5, 0) +
        _tmp1017 * sqrt_info(5, 2) - _tmp1020 * sqrt_info(5, 1) + _tmp1032 * sqrt_info(5, 3) +
        _tmp1040 * sqrt_info(5, 4) + _tmp1044 * sqrt_info(5, 5) - _tmp1045 * sqrt_info(5, 0) -
        _tmp1047 * sqrt_info(5, 2) + _tmp1048 * sqrt_info(5, 1) + _tmp1049 * sqrt_info(5, 0);
    _res_D_x1(0, 2) = _tmp1103 * sqrt_info(0, 5) + _tmp1108 * _tmp499 + _tmp1108 * _tmp515 -
                      _tmp1108 * _tmp622 + _tmp1116 * sqrt_info(0, 3) + _tmp1117 * _tmp621 -
                      _tmp1118 * sqrt_info(0, 2) + _tmp1120 * sqrt_info(0, 2) +
                      _tmp1121 * sqrt_info(0, 2) + _tmp1125 * sqrt_info(0, 4) + _tmp1126 * _tmp461 -
                      _tmp1127 * sqrt_info(0, 0);
    _res_D_x1(1, 2) = _tmp1103 * sqrt_info(1, 5) - _tmp1108 * _tmp533 + _tmp1108 * _tmp534 +
                      _tmp1116 * sqrt_info(1, 3) + _tmp1117 * _tmp630 - _tmp1118 * sqrt_info(1, 2) +
                      _tmp1120 * sqrt_info(1, 2) + _tmp1121 * sqrt_info(1, 2) +
                      _tmp1125 * sqrt_info(1, 4) + _tmp1126 * _tmp530 + _tmp1128 * sqrt_info(1, 1) -
                      _tmp1129 * sqrt_info(1, 1);
    _res_D_x1(2, 2) = _tmp1103 * sqrt_info(2, 5) + _tmp1108 * _tmp537 + _tmp1116 * sqrt_info(2, 3) +
                      _tmp1117 * _tmp632 - _tmp1118 * sqrt_info(2, 2) + _tmp1120 * sqrt_info(2, 2) +
                      _tmp1121 * sqrt_info(2, 2) + _tmp1125 * sqrt_info(2, 4) + _tmp1126 * _tmp535 -
                      _tmp1127 * sqrt_info(2, 0) + _tmp1128 * sqrt_info(2, 1) -
                      _tmp1129 * sqrt_info(2, 1);
    _res_D_x1(3, 2) = _tmp1103 * sqrt_info(3, 5) - _tmp1108 * _tmp540 + _tmp1108 * _tmp541 -
                      _tmp1108 * _tmp635 + _tmp1116 * sqrt_info(3, 3) + _tmp1117 * _tmp634 -
                      _tmp1118 * sqrt_info(3, 2) + _tmp1119 * _tmp542 + _tmp1121 * sqrt_info(3, 2) +
                      _tmp1125 * sqrt_info(3, 4) + _tmp1128 * sqrt_info(3, 1) +
                      _tmp1130 * sqrt_info(3, 0);
    _res_D_x1(4, 2) =
        _tmp1103 * sqrt_info(4, 5) + _tmp1116 * sqrt_info(4, 3) + _tmp1117 * _tmp543 -
        _tmp1118 * sqrt_info(4, 2) + _tmp1120 * sqrt_info(4, 2) + _tmp1121 * sqrt_info(4, 2) +
        _tmp1125 * sqrt_info(4, 4) - _tmp1127 * sqrt_info(4, 0) + _tmp1128 * sqrt_info(4, 1) -
        _tmp1129 * sqrt_info(4, 1) + _tmp1130 * sqrt_info(4, 0) + _tmp1131 * sqrt_info(4, 0);
    _res_D_x1(5, 2) = _tmp1103 * sqrt_info(5, 5) - _tmp1108 * _tmp545 + _tmp1116 * sqrt_info(5, 3) +
                      _tmp1117 * _tmp638 - _tmp1118 * sqrt_info(5, 2) + _tmp1120 * sqrt_info(5, 2) +
                      _tmp1121 * sqrt_info(5, 2) + _tmp1125 * sqrt_info(5, 4) +
                      _tmp1128 * sqrt_info(5, 1) - _tmp1129 * sqrt_info(5, 1) +
                      _tmp1130 * sqrt_info(5, 0) + _tmp1131 * sqrt_info(5, 0);
    _res_D_x1(0, 3) =
        -_tmp1133 * sqrt_info(0, 3) - _tmp1134 * sqrt_info(0, 5) - _tmp1135 * sqrt_info(0, 4);
    _res_D_x1(1, 3) =
        -_tmp1133 * sqrt_info(1, 3) - _tmp1134 * sqrt_info(1, 5) - _tmp1135 * sqrt_info(1, 4);
    _res_D_x1(2, 3) = -_tmp1132 * _tmp725 - _tmp1134 * sqrt_info(2, 5) - _tmp1135 * sqrt_info(2, 4);
    _res_D_x1(3, 3) =
        -_tmp1133 * sqrt_info(3, 3) - _tmp1134 * sqrt_info(3, 5) - _tmp1135 * sqrt_info(3, 4);
    _res_D_x1(4, 3) =
        -_tmp1133 * sqrt_info(4, 3) - _tmp1134 * sqrt_info(4, 5) - _tmp1135 * sqrt_info(4, 4);
    _res_D_x1(5, 3) =
        -_tmp1133 * sqrt_info(5, 3) - _tmp1134 * sqrt_info(5, 5) - _tmp1135 * sqrt_info(5, 4);
    _res_D_x1(0, 4) =
        -_tmp1136 * sqrt_info(0, 4) - _tmp1137 * sqrt_info(0, 5) - _tmp1138 * sqrt_info(0, 3);
    _res_D_x1(1, 4) =
        -_tmp1136 * sqrt_info(1, 4) - _tmp1137 * sqrt_info(1, 5) - _tmp1138 * sqrt_info(1, 3);
    _res_D_x1(2, 4) =
        -_tmp1136 * sqrt_info(2, 4) - _tmp1137 * sqrt_info(2, 5) - _tmp1138 * sqrt_info(2, 3);
    _res_D_x1(3, 4) =
        -_tmp1136 * sqrt_info(3, 4) - _tmp1137 * sqrt_info(3, 5) - _tmp1138 * sqrt_info(3, 3);
    _res_D_x1(4, 4) =
        -_tmp1136 * sqrt_info(4, 4) - _tmp1137 * sqrt_info(4, 5) - _tmp1138 * sqrt_info(4, 3);
    _res_D_x1(5, 4) =
        -_tmp1136 * sqrt_info(5, 4) - _tmp1137 * sqrt_info(5, 5) - _tmp1138 * sqrt_info(5, 3);
    _res_D_x1(0, 5) =
        -_tmp1139 * sqrt_info(0, 3) - _tmp1140 * sqrt_info(0, 4) - _tmp1141 * sqrt_info(0, 5);
    _res_D_x1(1, 5) = -_tmp1132 * _tmp741 - _tmp1139 * sqrt_info(1, 3) - _tmp1141 * sqrt_info(1, 5);
    _res_D_x1(2, 5) =
        -_tmp1139 * sqrt_info(2, 3) - _tmp1140 * sqrt_info(2, 4) - _tmp1141 * sqrt_info(2, 5);
    _res_D_x1(3, 5) =
        -_tmp1139 * sqrt_info(3, 3) - _tmp1140 * sqrt_info(3, 4) - _tmp1141 * sqrt_info(3, 5);
    _res_D_x1(4, 5) =
        -_tmp1139 * sqrt_info(4, 3) - _tmp1140 * sqrt_info(4, 4) - _tmp1141 * sqrt_info(4, 5);
    _res_D_x1(5, 5) =
        -_tmp1139 * sqrt_info(5, 3) - _tmp1140 * sqrt_info(5, 4) - _tmp1141 * sqrt_info(5, 5);
  }

  if (res_D_x2 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x2{res_D_x2};

    _res_D_x2(0, 0) = _tmp1308 * _tmp499 - _tmp1308 * _tmp622 - _tmp1309 * sqrt_info(0, 0) +
                      _tmp1310 * _tmp461 + _tmp1322 * sqrt_info(0, 3) - _tmp1323 * sqrt_info(0, 2) +
                      _tmp1324 * _tmp621 + _tmp1326 * sqrt_info(0, 2) + _tmp1327 * _tmp514 +
                      _tmp1335 * sqrt_info(0, 4) + _tmp1336 * sqrt_info(0, 2) +
                      _tmp1340 * sqrt_info(0, 5);
    _res_D_x2(1, 0) = -_tmp1308 * _tmp533 + _tmp1308 * _tmp534 - _tmp1308 * _tmp631 +
                      _tmp1310 * _tmp530 + _tmp1322 * sqrt_info(1, 3) - _tmp1323 * sqrt_info(1, 2) +
                      _tmp1324 * _tmp630 + _tmp1326 * sqrt_info(1, 2) + _tmp1335 * sqrt_info(1, 4) +
                      _tmp1336 * sqrt_info(1, 2) + _tmp1340 * sqrt_info(1, 5) +
                      _tmp1341 * sqrt_info(1, 1);
    _res_D_x2(2, 0) = _tmp1308 * _tmp537 - _tmp1308 * _tmp633 - _tmp1309 * sqrt_info(2, 0) +
                      _tmp1310 * _tmp535 + _tmp1322 * sqrt_info(2, 3) - _tmp1323 * sqrt_info(2, 2) +
                      _tmp1324 * _tmp632 + _tmp1326 * sqrt_info(2, 2) + _tmp1335 * sqrt_info(2, 4) +
                      _tmp1336 * sqrt_info(2, 2) + _tmp1340 * sqrt_info(2, 5) +
                      _tmp1341 * sqrt_info(2, 1);
    _res_D_x2(3, 0) = -_tmp1308 * _tmp540 - _tmp1308 * _tmp635 + _tmp1310 * _tmp709 +
                      _tmp1322 * sqrt_info(3, 3) - _tmp1323 * sqrt_info(3, 2) + _tmp1324 * _tmp634 +
                      _tmp1325 * _tmp542 + _tmp1327 * _tmp539 + _tmp1335 * sqrt_info(3, 4) +
                      _tmp1336 * sqrt_info(3, 2) + _tmp1340 * sqrt_info(3, 5) +
                      _tmp1341 * sqrt_info(3, 1);
    _res_D_x2(4, 0) =
        -_tmp1308 * _tmp636 - _tmp1309 * sqrt_info(4, 0) + _tmp1322 * sqrt_info(4, 3) -
        _tmp1323 * sqrt_info(4, 2) + _tmp1324 * _tmp543 + _tmp1326 * sqrt_info(4, 2) +
        _tmp1335 * sqrt_info(4, 4) + _tmp1336 * sqrt_info(4, 2) + _tmp1340 * sqrt_info(4, 5) +
        _tmp1341 * sqrt_info(4, 1) + _tmp1342 * sqrt_info(4, 0) + _tmp1343 * sqrt_info(4, 0);
    _res_D_x2(5, 0) =
        -_tmp1308 * _tmp639 - _tmp1309 * sqrt_info(5, 0) + _tmp1322 * sqrt_info(5, 3) -
        _tmp1323 * sqrt_info(5, 2) + _tmp1324 * _tmp638 + _tmp1326 * sqrt_info(5, 2) +
        _tmp1335 * sqrt_info(5, 4) + _tmp1336 * sqrt_info(5, 2) + _tmp1340 * sqrt_info(5, 5) +
        _tmp1341 * sqrt_info(5, 1) + _tmp1342 * sqrt_info(5, 0) + _tmp1343 * sqrt_info(5, 0);
    _res_D_x2(0, 1) = _tmp1393 * _tmp499 + _tmp1393 * _tmp515 - _tmp1393 * _tmp622 -
                      _tmp1394 * sqrt_info(0, 2) + _tmp1395 * sqrt_info(0, 2) + _tmp1396 * _tmp621 +
                      _tmp1408 * sqrt_info(0, 5) + _tmp1416 * sqrt_info(0, 4) -
                      _tmp1417 * sqrt_info(0, 0) + _tmp1421 * sqrt_info(0, 3) +
                      _tmp1423 * sqrt_info(0, 2) + _tmp1424 * _tmp461;
    _res_D_x2(1, 1) = -_tmp1393 * _tmp533 + _tmp1393 * _tmp534 - _tmp1394 * sqrt_info(1, 2) +
                      _tmp1395 * sqrt_info(1, 2) + _tmp1396 * _tmp630 + _tmp1408 * sqrt_info(1, 5) +
                      _tmp1416 * sqrt_info(1, 4) + _tmp1421 * sqrt_info(1, 3) +
                      _tmp1423 * sqrt_info(1, 2) + _tmp1424 * _tmp530 - _tmp1425 * sqrt_info(1, 1) +
                      _tmp1426 * sqrt_info(1, 1);
    _res_D_x2(2, 1) = -_tmp1393 * _tmp1427 + _tmp1393 * _tmp537 + _tmp1395 * sqrt_info(2, 2) +
                      _tmp1396 * _tmp632 + _tmp1408 * sqrt_info(2, 5) + _tmp1416 * sqrt_info(2, 4) -
                      _tmp1417 * sqrt_info(2, 0) + _tmp1421 * sqrt_info(2, 3) +
                      _tmp1423 * sqrt_info(2, 2) + _tmp1424 * _tmp535 - _tmp1425 * sqrt_info(2, 1) +
                      _tmp1426 * sqrt_info(2, 1);
    _res_D_x2(3, 1) = -_tmp1393 * _tmp540 + _tmp1393 * _tmp541 - _tmp1394 * sqrt_info(3, 2) +
                      _tmp1395 * sqrt_info(3, 2) + _tmp1396 * _tmp634 + _tmp1408 * sqrt_info(3, 5) +
                      _tmp1416 * sqrt_info(3, 4) + _tmp1421 * sqrt_info(3, 3) + _tmp1422 * _tmp542 +
                      _tmp1424 * _tmp709 - _tmp1425 * sqrt_info(3, 1) + _tmp1426 * sqrt_info(3, 1);
    _res_D_x2(4, 1) =
        -_tmp1393 * _tmp1428 + _tmp1395 * sqrt_info(4, 2) + _tmp1396 * _tmp543 +
        _tmp1408 * sqrt_info(4, 5) + _tmp1416 * sqrt_info(4, 4) - _tmp1417 * sqrt_info(4, 0) +
        _tmp1421 * sqrt_info(4, 3) + _tmp1423 * sqrt_info(4, 2) - _tmp1425 * sqrt_info(4, 1) +
        _tmp1426 * sqrt_info(4, 1) + _tmp1429 * sqrt_info(4, 0) + _tmp1430 * sqrt_info(4, 0);
    _res_D_x2(5, 1) =
        -_tmp1394 * sqrt_info(5, 2) + _tmp1395 * sqrt_info(5, 2) + _tmp1396 * _tmp638 +
        _tmp1408 * sqrt_info(5, 5) + _tmp1416 * sqrt_info(5, 4) - _tmp1417 * sqrt_info(5, 0) +
        _tmp1421 * sqrt_info(5, 3) + _tmp1423 * sqrt_info(5, 2) - _tmp1425 * sqrt_info(5, 1) +
        _tmp1426 * sqrt_info(5, 1) + _tmp1429 * sqrt_info(5, 0) + _tmp1430 * sqrt_info(5, 0);
    _res_D_x2(0, 2) = _tmp1494 * sqrt_info(0, 5) - _tmp1499 * _tmp1502 + _tmp1499 * _tmp515 -
                      _tmp1499 * _tmp622 + _tmp1500 * _tmp461 - _tmp1501 * sqrt_info(0, 2) +
                      _tmp1503 * sqrt_info(0, 1) + _tmp1511 * sqrt_info(0, 4) +
                      _tmp1515 * sqrt_info(0, 3) + _tmp1516 * sqrt_info(0, 2) +
                      _tmp1518 * sqrt_info(0, 2) + _tmp1520 * sqrt_info(0, 1);
    _res_D_x2(1, 2) = _tmp1494 * sqrt_info(1, 5) - _tmp1499 * _tmp533 + _tmp1499 * _tmp534 +
                      _tmp1500 * _tmp530 - _tmp1501 * sqrt_info(1, 2) + _tmp1503 * sqrt_info(1, 1) +
                      _tmp1511 * sqrt_info(1, 4) + _tmp1515 * sqrt_info(1, 3) +
                      _tmp1516 * sqrt_info(1, 2) + _tmp1518 * sqrt_info(1, 2) +
                      _tmp1520 * sqrt_info(1, 1) - _tmp1521 * sqrt_info(1, 1);
    _res_D_x2(2, 2) = _tmp1494 * sqrt_info(2, 5) - _tmp1499 * _tmp1522 + _tmp1499 * _tmp537 +
                      _tmp1500 * _tmp535 - _tmp1501 * sqrt_info(2, 2) + _tmp1503 * sqrt_info(2, 1) +
                      _tmp1511 * sqrt_info(2, 4) + _tmp1515 * sqrt_info(2, 3) +
                      _tmp1516 * sqrt_info(2, 2) + _tmp1518 * sqrt_info(2, 2) +
                      _tmp1520 * sqrt_info(2, 1) - _tmp1521 * sqrt_info(2, 1);
    _res_D_x2(3, 2) = _tmp1494 * sqrt_info(3, 5) - _tmp1499 * _tmp540 + _tmp1499 * _tmp541 -
                      _tmp1499 * _tmp635 - _tmp1501 * sqrt_info(3, 2) + _tmp1503 * sqrt_info(3, 1) +
                      _tmp1511 * sqrt_info(3, 4) + _tmp1515 * sqrt_info(3, 3) +
                      _tmp1516 * sqrt_info(3, 2) + _tmp1517 * _tmp542 + _tmp1520 * sqrt_info(3, 1) +
                      _tmp1523 * sqrt_info(3, 0);
    _res_D_x2(4, 2) =
        _tmp1494 * sqrt_info(4, 5) - _tmp1499 * _tmp1525 - _tmp1501 * sqrt_info(4, 2) +
        _tmp1503 * sqrt_info(4, 1) + _tmp1511 * sqrt_info(4, 4) + _tmp1515 * sqrt_info(4, 3) +
        _tmp1516 * sqrt_info(4, 2) + _tmp1518 * sqrt_info(4, 2) + _tmp1519 * _tmp543 -
        _tmp1521 * sqrt_info(4, 1) + _tmp1523 * sqrt_info(4, 0) + _tmp1524 * sqrt_info(4, 0);
    _res_D_x2(5, 2) = _tmp1494 * sqrt_info(5, 5) - _tmp1499 * _tmp545 - _tmp1501 * sqrt_info(5, 2) +
                      _tmp1503 * sqrt_info(5, 1) + _tmp1511 * sqrt_info(5, 4) +
                      _tmp1515 * sqrt_info(5, 3) + _tmp1516 * sqrt_info(5, 2) +
                      _tmp1518 * sqrt_info(5, 2) + _tmp1519 * _tmp638 - _tmp1521 * sqrt_info(5, 1) +
                      _tmp1523 * sqrt_info(5, 0) + _tmp1524 * sqrt_info(5, 0);
    _res_D_x2(0, 3) =
        -_tmp1527 * sqrt_info(0, 3) - _tmp1528 * sqrt_info(0, 5) - _tmp1529 * sqrt_info(0, 4);
    _res_D_x2(1, 3) =
        -_tmp1527 * sqrt_info(1, 3) - _tmp1528 * sqrt_info(1, 5) - _tmp1529 * sqrt_info(1, 4);
    _res_D_x2(2, 3) = -_tmp1526 * _tmp725 - _tmp1528 * sqrt_info(2, 5) - _tmp1529 * sqrt_info(2, 4);
    _res_D_x2(3, 3) =
        -_tmp1527 * sqrt_info(3, 3) - _tmp1528 * sqrt_info(3, 5) - _tmp1529 * sqrt_info(3, 4);
    _res_D_x2(4, 3) =
        -_tmp1527 * sqrt_info(4, 3) - _tmp1528 * sqrt_info(4, 5) - _tmp1529 * sqrt_info(4, 4);
    _res_D_x2(5, 3) =
        -_tmp1527 * sqrt_info(5, 3) - _tmp1528 * sqrt_info(5, 5) - _tmp1529 * sqrt_info(5, 4);
    _res_D_x2(0, 4) =
        -_tmp1530 * sqrt_info(0, 4) - _tmp1531 * sqrt_info(0, 5) - _tmp1532 * sqrt_info(0, 3);
    _res_D_x2(1, 4) =
        -_tmp1530 * sqrt_info(1, 4) - _tmp1531 * sqrt_info(1, 5) - _tmp1532 * sqrt_info(1, 3);
    _res_D_x2(2, 4) =
        -_tmp1530 * sqrt_info(2, 4) - _tmp1531 * sqrt_info(2, 5) - _tmp1532 * sqrt_info(2, 3);
    _res_D_x2(3, 4) =
        -_tmp1530 * sqrt_info(3, 4) - _tmp1531 * sqrt_info(3, 5) - _tmp1532 * sqrt_info(3, 3);
    _res_D_x2(4, 4) =
        -_tmp1530 * sqrt_info(4, 4) - _tmp1531 * sqrt_info(4, 5) - _tmp1532 * sqrt_info(4, 3);
    _res_D_x2(5, 4) =
        -_tmp1530 * sqrt_info(5, 4) - _tmp1531 * sqrt_info(5, 5) - _tmp1532 * sqrt_info(5, 3);
    _res_D_x2(0, 5) =
        -_tmp1533 * sqrt_info(0, 3) - _tmp1534 * sqrt_info(0, 4) - _tmp1535 * sqrt_info(0, 5);
    _res_D_x2(1, 5) = -_tmp1526 * _tmp741 - _tmp1533 * sqrt_info(1, 3) - _tmp1535 * sqrt_info(1, 5);
    _res_D_x2(2, 5) =
        -_tmp1533 * sqrt_info(2, 3) - _tmp1534 * sqrt_info(2, 4) - _tmp1535 * sqrt_info(2, 5);
    _res_D_x2(3, 5) =
        -_tmp1533 * sqrt_info(3, 3) - _tmp1534 * sqrt_info(3, 4) - _tmp1535 * sqrt_info(3, 5);
    _res_D_x2(4, 5) =
        -_tmp1533 * sqrt_info(4, 3) - _tmp1534 * sqrt_info(4, 4) - _tmp1535 * sqrt_info(4, 5);
    _res_D_x2(5, 5) =
        -_tmp1533 * sqrt_info(5, 3) - _tmp1534 * sqrt_info(5, 4) - _tmp1535 * sqrt_info(5, 5);
  }

  if (res_D_x3 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x3{res_D_x3};

    _res_D_x3(0, 0) = _tmp1574 * sqrt_info(0, 1) + _tmp1586 * sqrt_info(0, 4) + _tmp1587 * _tmp499 +
                      _tmp1587 * _tmp515 - _tmp1587 * _tmp622 - _tmp1588 * sqrt_info(0, 2) +
                      _tmp1596 * sqrt_info(0, 5) + _tmp1597 * _tmp461 + _tmp1601 * sqrt_info(0, 3) +
                      _tmp1602 * sqrt_info(0, 2) + _tmp1603 * sqrt_info(0, 2) -
                      _tmp1604 * sqrt_info(0, 0);
    _res_D_x3(1, 0) = _tmp1574 * sqrt_info(1, 1) + _tmp1586 * sqrt_info(1, 4) - _tmp1587 * _tmp533 +
                      _tmp1587 * _tmp534 - _tmp1587 * _tmp631 - _tmp1588 * sqrt_info(1, 2) +
                      _tmp1596 * sqrt_info(1, 5) + _tmp1597 * _tmp530 + _tmp1601 * sqrt_info(1, 3) +
                      _tmp1602 * sqrt_info(1, 2) + _tmp1603 * sqrt_info(1, 2) +
                      _tmp1605 * sqrt_info(1, 1);
    _res_D_x3(2, 0) = -_tmp1427 * _tmp1587 + _tmp1574 * sqrt_info(2, 1) +
                      _tmp1586 * sqrt_info(2, 4) + _tmp1587 * _tmp537 - _tmp1587 * _tmp633 +
                      _tmp1596 * sqrt_info(2, 5) + _tmp1597 * _tmp535 + _tmp1601 * sqrt_info(2, 3) +
                      _tmp1602 * sqrt_info(2, 2) + _tmp1603 * sqrt_info(2, 2) -
                      _tmp1604 * sqrt_info(2, 0) + _tmp1605 * sqrt_info(2, 1);
    _res_D_x3(3, 0) = _tmp1574 * sqrt_info(3, 1) + _tmp1586 * sqrt_info(3, 4) -
                      _tmp1587 * _tmp1606 - _tmp1587 * _tmp540 + _tmp1587 * _tmp541 -
                      _tmp1587 * _tmp635 + _tmp1596 * sqrt_info(3, 5) + _tmp1597 * _tmp709 +
                      _tmp1601 * sqrt_info(3, 3) + _tmp1602 * sqrt_info(3, 2) +
                      _tmp1603 * sqrt_info(3, 2) + _tmp1605 * sqrt_info(3, 1);
    _res_D_x3(4, 0) = -_tmp1428 * _tmp1587 + _tmp1573 * _tmp543 + _tmp1586 * sqrt_info(4, 4) -
                      _tmp1587 * _tmp636 + _tmp1596 * sqrt_info(4, 5) + _tmp1601 * sqrt_info(4, 3) +
                      _tmp1602 * sqrt_info(4, 2) + _tmp1603 * sqrt_info(4, 2) -
                      _tmp1604 * sqrt_info(4, 0) + _tmp1605 * sqrt_info(4, 1) +
                      _tmp1607 * sqrt_info(4, 0) + _tmp1608 * sqrt_info(4, 0);
    _res_D_x3(5, 0) =
        _tmp1574 * sqrt_info(5, 1) + _tmp1586 * sqrt_info(5, 4) - _tmp1587 * _tmp639 -
        _tmp1588 * sqrt_info(5, 2) + _tmp1596 * sqrt_info(5, 5) + _tmp1601 * sqrt_info(5, 3) +
        _tmp1602 * sqrt_info(5, 2) + _tmp1603 * sqrt_info(5, 2) - _tmp1604 * sqrt_info(5, 0) +
        _tmp1605 * sqrt_info(5, 1) + _tmp1607 * sqrt_info(5, 0) + _tmp1608 * sqrt_info(5, 0);
    _res_D_x3(0, 1) =
        -_tmp1642 * _tmp622 - _tmp1643 * sqrt_info(0, 2) + _tmp1655 * sqrt_info(0, 5) +
        _tmp1663 * sqrt_info(0, 4) - _tmp1664 * sqrt_info(0, 0) + _tmp1665 * _tmp514 +
        _tmp1667 * sqrt_info(0, 1) + _tmp1671 * sqrt_info(0, 3) + _tmp1672 * sqrt_info(0, 2) +
        _tmp1674 * sqrt_info(0, 1) + _tmp1676 * sqrt_info(0, 2) + _tmp1677 * sqrt_info(0, 0);
    _res_D_x3(1, 1) = -_tmp1643 * sqrt_info(1, 2) + _tmp1655 * sqrt_info(1, 5) +
                      _tmp1663 * sqrt_info(1, 4) + _tmp1665 * _tmp532 + _tmp1667 * sqrt_info(1, 1) +
                      _tmp1671 * sqrt_info(1, 3) + _tmp1672 * sqrt_info(1, 2) +
                      _tmp1674 * sqrt_info(1, 1) + _tmp1676 * sqrt_info(1, 2) +
                      _tmp1677 * sqrt_info(1, 0) - _tmp1678 * _tmp532 - _tmp1679 * sqrt_info(1, 1);
    _res_D_x3(2, 1) =
        -_tmp1427 * _tmp1642 + _tmp1655 * sqrt_info(2, 5) + _tmp1663 * sqrt_info(2, 4) -
        _tmp1664 * sqrt_info(2, 0) + _tmp1667 * sqrt_info(2, 1) + _tmp1671 * sqrt_info(2, 3) +
        _tmp1672 * sqrt_info(2, 2) + _tmp1674 * sqrt_info(2, 1) + _tmp1676 * sqrt_info(2, 2) +
        _tmp1677 * sqrt_info(2, 0) - _tmp1679 * sqrt_info(2, 1) + _tmp1680 * sqrt_info(2, 0);
    _res_D_x3(3, 1) = -_tmp1606 * _tmp1642 - _tmp1642 * _tmp635 + _tmp1655 * sqrt_info(3, 5) +
                      _tmp1663 * sqrt_info(3, 4) + _tmp1665 * _tmp539 + _tmp1667 * sqrt_info(3, 1) +
                      _tmp1671 * sqrt_info(3, 3) + _tmp1672 * sqrt_info(3, 2) +
                      _tmp1674 * sqrt_info(3, 1) + _tmp1675 * _tmp542 + _tmp1677 * sqrt_info(3, 0) -
                      _tmp1678 * _tmp539;
    _res_D_x3(4, 1) =
        -_tmp1428 * _tmp1642 + _tmp1655 * sqrt_info(4, 5) + _tmp1663 * sqrt_info(4, 4) -
        _tmp1664 * sqrt_info(4, 0) + _tmp1667 * sqrt_info(4, 1) + _tmp1671 * sqrt_info(4, 3) +
        _tmp1672 * sqrt_info(4, 2) + _tmp1673 * _tmp543 + _tmp1676 * sqrt_info(4, 2) +
        _tmp1677 * sqrt_info(4, 0) - _tmp1679 * sqrt_info(4, 1) + _tmp1680 * sqrt_info(4, 0);
    _res_D_x3(5, 1) =
        -_tmp1643 * sqrt_info(5, 2) + _tmp1655 * sqrt_info(5, 5) + _tmp1663 * sqrt_info(5, 4) -
        _tmp1664 * sqrt_info(5, 0) + _tmp1667 * sqrt_info(5, 1) + _tmp1671 * sqrt_info(5, 3) +
        _tmp1672 * sqrt_info(5, 2) + _tmp1674 * sqrt_info(5, 1) + _tmp1676 * sqrt_info(5, 2) +
        _tmp1677 * sqrt_info(5, 0) - _tmp1679 * sqrt_info(5, 1) + _tmp1680 * sqrt_info(5, 0);
    _res_D_x3(0, 2) =
        _tmp1711 * _tmp515 - _tmp1711 * _tmp622 + _tmp1712 * _tmp621 + _tmp1724 * sqrt_info(0, 5) -
        _tmp1725 * sqrt_info(0, 0) + _tmp1733 * sqrt_info(0, 4) + _tmp1737 * sqrt_info(0, 3) +
        _tmp1739 * sqrt_info(0, 0) + _tmp1741 * sqrt_info(0, 2) - _tmp1742 * sqrt_info(0, 2) +
        _tmp1743 * sqrt_info(0, 2) + _tmp1744 * sqrt_info(0, 1);
    _res_D_x3(1, 2) =
        -_tmp1711 * _tmp533 + _tmp1711 * _tmp534 + _tmp1712 * _tmp630 + _tmp1724 * sqrt_info(1, 5) +
        _tmp1733 * sqrt_info(1, 4) + _tmp1737 * sqrt_info(1, 3) + _tmp1739 * sqrt_info(1, 0) +
        _tmp1741 * sqrt_info(1, 2) - _tmp1742 * sqrt_info(1, 2) + _tmp1743 * sqrt_info(1, 2) +
        _tmp1744 * sqrt_info(1, 1) - _tmp1745 * sqrt_info(1, 1);
    _res_D_x3(2, 2) = _tmp1711 * _tmp537 + _tmp1712 * _tmp632 + _tmp1724 * sqrt_info(2, 5) -
                      _tmp1725 * sqrt_info(2, 0) + _tmp1733 * sqrt_info(2, 4) +
                      _tmp1737 * sqrt_info(2, 3) + _tmp1738 * _tmp535 + _tmp1741 * sqrt_info(2, 2) -
                      _tmp1742 * sqrt_info(2, 2) + _tmp1743 * sqrt_info(2, 2) +
                      _tmp1744 * sqrt_info(2, 1) - _tmp1745 * sqrt_info(2, 1);
    _res_D_x3(3, 2) = -_tmp1711 * _tmp540 + _tmp1711 * _tmp541 + _tmp1712 * _tmp634 +
                      _tmp1724 * sqrt_info(3, 5) + _tmp1733 * sqrt_info(3, 4) +
                      _tmp1737 * sqrt_info(3, 3) + _tmp1739 * sqrt_info(3, 0) + _tmp1740 * _tmp542 -
                      _tmp1742 * sqrt_info(3, 2) + _tmp1743 * sqrt_info(3, 2) +
                      _tmp1744 * sqrt_info(3, 1) - _tmp1745 * sqrt_info(3, 1);
    _res_D_x3(4, 2) =
        -_tmp1525 * _tmp1711 + _tmp1712 * _tmp543 + _tmp1724 * sqrt_info(4, 5) +
        _tmp1733 * sqrt_info(4, 4) + _tmp1737 * sqrt_info(4, 3) + _tmp1739 * sqrt_info(4, 0) +
        _tmp1741 * sqrt_info(4, 2) - _tmp1742 * sqrt_info(4, 2) + _tmp1743 * sqrt_info(4, 2) +
        _tmp1744 * sqrt_info(4, 1) - _tmp1745 * sqrt_info(4, 1) + _tmp1746 * sqrt_info(4, 0);
    _res_D_x3(5, 2) =
        -_tmp1711 * _tmp545 + _tmp1712 * _tmp638 + _tmp1724 * sqrt_info(5, 5) +
        _tmp1733 * sqrt_info(5, 4) + _tmp1737 * sqrt_info(5, 3) + _tmp1739 * sqrt_info(5, 0) +
        _tmp1741 * sqrt_info(5, 2) - _tmp1742 * sqrt_info(5, 2) + _tmp1743 * sqrt_info(5, 2) +
        _tmp1744 * sqrt_info(5, 1) - _tmp1745 * sqrt_info(5, 1) + _tmp1746 * sqrt_info(5, 0);
    _res_D_x3(0, 3) =
        -_tmp1747 * sqrt_info(0, 4) - _tmp1748 * sqrt_info(0, 5) - _tmp1749 * sqrt_info(0, 3);
    _res_D_x3(1, 3) =
        -_tmp1747 * sqrt_info(1, 4) - _tmp1748 * sqrt_info(1, 5) - _tmp1749 * sqrt_info(1, 3);
    _res_D_x3(2, 3) =
        -_tmp1747 * sqrt_info(2, 4) - _tmp1748 * sqrt_info(2, 5) - _tmp725 * lambdas(2, 0);
    _res_D_x3(3, 3) =
        -_tmp1747 * sqrt_info(3, 4) - _tmp1748 * sqrt_info(3, 5) - _tmp1749 * sqrt_info(3, 3);
    _res_D_x3(4, 3) =
        -_tmp1747 * sqrt_info(4, 4) - _tmp1748 * sqrt_info(4, 5) - _tmp1749 * sqrt_info(4, 3);
    _res_D_x3(5, 3) =
        -_tmp1747 * sqrt_info(5, 4) - _tmp1748 * sqrt_info(5, 5) - _tmp1749 * sqrt_info(5, 3);
    _res_D_x3(0, 4) =
        -_tmp1750 * sqrt_info(0, 3) - _tmp1751 * sqrt_info(0, 4) - _tmp1752 * sqrt_info(0, 5);
    _res_D_x3(1, 4) =
        -_tmp1750 * sqrt_info(1, 3) - _tmp1751 * sqrt_info(1, 4) - _tmp1752 * sqrt_info(1, 5);
    _res_D_x3(2, 4) =
        -_tmp1750 * sqrt_info(2, 3) - _tmp1751 * sqrt_info(2, 4) - _tmp1752 * sqrt_info(2, 5);
    _res_D_x3(3, 4) =
        -_tmp1750 * sqrt_info(3, 3) - _tmp1751 * sqrt_info(3, 4) - _tmp1752 * sqrt_info(3, 5);
    _res_D_x3(4, 4) =
        -_tmp1750 * sqrt_info(4, 3) - _tmp1751 * sqrt_info(4, 4) - _tmp1752 * sqrt_info(4, 5);
    _res_D_x3(5, 4) =
        -_tmp1750 * sqrt_info(5, 3) - _tmp1751 * sqrt_info(5, 4) - _tmp1752 * sqrt_info(5, 5);
    _res_D_x3(0, 5) =
        -_tmp1753 * sqrt_info(0, 3) - _tmp1754 * sqrt_info(0, 5) - _tmp1755 * sqrt_info(0, 4);
    _res_D_x3(1, 5) =
        -_tmp1753 * sqrt_info(1, 3) - _tmp1754 * sqrt_info(1, 5) - _tmp741 * lambdas(2, 0);
    _res_D_x3(2, 5) =
        -_tmp1753 * sqrt_info(2, 3) - _tmp1754 * sqrt_info(2, 5) - _tmp1755 * sqrt_info(2, 4);
    _res_D_x3(3, 5) =
        -_tmp1753 * sqrt_info(3, 3) - _tmp1754 * sqrt_info(3, 5) - _tmp1755 * sqrt_info(3, 4);
    _res_D_x3(4, 5) =
        -_tmp1753 * sqrt_info(4, 3) - _tmp1754 * sqrt_info(4, 5) - _tmp1755 * sqrt_info(4, 4);
    _res_D_x3(5, 5) =
        -_tmp1753 * sqrt_info(5, 3) - _tmp1754 * sqrt_info(5, 5) - _tmp1755 * sqrt_info(5, 4);
  }

  if (res_D_x_T_y != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x_T_y{res_D_x_T_y};

    _res_D_x_T_y(0, 0) = _tmp1761 * sqrt_info(0, 1) + _tmp1766 * _tmp499 - _tmp1766 * _tmp622 +
                         _tmp1767 * _tmp514 + _tmp1768 * sqrt_info(0, 2) -
                         _tmp1769 * sqrt_info(0, 2) + _tmp1775 * sqrt_info(0, 2) -
                         _tmp1776 * sqrt_info(0, 0) + _tmp1778 * sqrt_info(0, 0);
    _res_D_x_T_y(1, 0) = _tmp1761 * sqrt_info(1, 1) - _tmp1766 * _tmp533 + _tmp1766 * _tmp534 +
                         _tmp1768 * sqrt_info(1, 2) - _tmp1769 * sqrt_info(1, 2) +
                         _tmp1775 * sqrt_info(1, 2) + _tmp1778 * sqrt_info(1, 0) +
                         _tmp1779 * sqrt_info(1, 1) - _tmp1780 * sqrt_info(1, 1);
    _res_D_x_T_y(2, 0) =
        _tmp1761 * sqrt_info(2, 1) + _tmp1768 * sqrt_info(2, 2) - _tmp1769 * sqrt_info(2, 2) +
        _tmp1775 * sqrt_info(2, 2) - _tmp1776 * sqrt_info(2, 0) + _tmp1777 * _tmp535 +
        _tmp1779 * sqrt_info(2, 1) - _tmp1780 * sqrt_info(2, 1) + _tmp1781 * sqrt_info(2, 0);
    _res_D_x_T_y(3, 0) = _tmp1761 * sqrt_info(3, 1) - _tmp1766 * _tmp540 + _tmp1767 * _tmp539 +
                         _tmp1768 * sqrt_info(3, 2) - _tmp1769 * sqrt_info(3, 2) +
                         _tmp1774 * _tmp542 + _tmp1778 * sqrt_info(3, 0) +
                         _tmp1779 * sqrt_info(3, 1) - _tmp1780 * sqrt_info(3, 1);
    _res_D_x_T_y(4, 0) =
        _tmp1760 * _tmp543 + _tmp1768 * sqrt_info(4, 2) - _tmp1769 * sqrt_info(4, 2) +
        _tmp1775 * sqrt_info(4, 2) - _tmp1776 * sqrt_info(4, 0) + _tmp1778 * sqrt_info(4, 0) +
        _tmp1779 * sqrt_info(4, 1) - _tmp1780 * sqrt_info(4, 1) + _tmp1781 * sqrt_info(4, 0);
    _res_D_x_T_y(5, 0) =
        _tmp1761 * sqrt_info(5, 1) + _tmp1768 * sqrt_info(5, 2) - _tmp1769 * sqrt_info(5, 2) +
        _tmp1775 * sqrt_info(5, 2) - _tmp1776 * sqrt_info(5, 0) + _tmp1778 * sqrt_info(5, 0) +
        _tmp1779 * sqrt_info(5, 1) - _tmp1780 * sqrt_info(5, 1) + _tmp1781 * sqrt_info(5, 0);
    _res_D_x_T_y(0, 1) = _tmp1778 * sqrt_info(0, 1) + _tmp1782 * _tmp515 - _tmp1782 * _tmp622 -
                         _tmp1783 * sqrt_info(0, 2) + _tmp1784 * sqrt_info(0, 2) +
                         _tmp1785 * _tmp461 - _tmp1787 * sqrt_info(0, 0) +
                         _tmp1788 * sqrt_info(0, 2) + _tmp1789 * sqrt_info(0, 1);
    _res_D_x_T_y(1, 1) = _tmp1778 * sqrt_info(1, 1) + _tmp1782 * _tmp534 -
                         _tmp1783 * sqrt_info(1, 2) + _tmp1784 * sqrt_info(1, 2) +
                         _tmp1785 * _tmp530 - _tmp1786 * _tmp532 + _tmp1788 * sqrt_info(1, 2) +
                         _tmp1789 * sqrt_info(1, 1) - _tmp1790 * sqrt_info(1, 1);
    _res_D_x_T_y(2, 1) =
        _tmp1778 * sqrt_info(2, 1) + _tmp1782 * _tmp537 - _tmp1783 * sqrt_info(2, 2) +
        _tmp1784 * sqrt_info(2, 2) + _tmp1785 * _tmp535 - _tmp1787 * sqrt_info(2, 0) +
        _tmp1788 * sqrt_info(2, 2) + _tmp1789 * sqrt_info(2, 1) - _tmp1790 * sqrt_info(2, 1);
    _res_D_x_T_y(3, 1) = _tmp1766 * _tmp542 + _tmp1778 * sqrt_info(3, 1) + _tmp1782 * _tmp541 -
                         _tmp1782 * _tmp635 - _tmp1783 * sqrt_info(3, 2) + _tmp1785 * _tmp709 -
                         _tmp1786 * _tmp539 + _tmp1788 * sqrt_info(3, 2) +
                         _tmp1789 * sqrt_info(3, 1);
    _res_D_x_T_y(4, 1) =
        _tmp1777 * _tmp543 - _tmp1783 * sqrt_info(4, 2) + _tmp1784 * sqrt_info(4, 2) -
        _tmp1787 * sqrt_info(4, 0) + _tmp1788 * sqrt_info(4, 2) + _tmp1789 * sqrt_info(4, 1) -
        _tmp1790 * sqrt_info(4, 1) + _tmp1791 * sqrt_info(4, 0) + _tmp1792 * sqrt_info(4, 0);
    _res_D_x_T_y(5, 1) =
        _tmp1778 * sqrt_info(5, 1) - _tmp1783 * sqrt_info(5, 2) + _tmp1784 * sqrt_info(5, 2) -
        _tmp1787 * sqrt_info(5, 0) + _tmp1788 * sqrt_info(5, 2) + _tmp1789 * sqrt_info(5, 1) -
        _tmp1790 * sqrt_info(5, 1) + _tmp1791 * sqrt_info(5, 0) + _tmp1792 * sqrt_info(5, 0);
    _res_D_x_T_y(0, 2) = -_tmp1502 * _tmp1760 + _tmp1760 * _tmp515 - _tmp1760 * _tmp622 +
                         _tmp1778 * sqrt_info(0, 2) + _tmp1782 * _tmp461 +
                         _tmp1794 * sqrt_info(0, 1) + _tmp1795 * sqrt_info(0, 1) -
                         _tmp1796 * sqrt_info(0, 2) + _tmp1797 * sqrt_info(0, 2);
    _res_D_x_T_y(1, 2) = -_tmp1760 * _tmp533 + _tmp1760 * _tmp534 + _tmp1778 * sqrt_info(1, 2) +
                         _tmp1782 * _tmp530 + _tmp1794 * sqrt_info(1, 1) +
                         _tmp1795 * sqrt_info(1, 1) - _tmp1796 * sqrt_info(1, 2) +
                         _tmp1797 * sqrt_info(1, 2) - _tmp1798 * sqrt_info(1, 1);
    _res_D_x_T_y(2, 2) = -_tmp1427 * _tmp1760 - _tmp1522 * _tmp1760 + _tmp1760 * _tmp537 +
                         _tmp1778 * sqrt_info(2, 2) + _tmp1782 * _tmp535 +
                         _tmp1794 * sqrt_info(2, 1) + _tmp1795 * sqrt_info(2, 1) +
                         _tmp1797 * sqrt_info(2, 2) - _tmp1798 * sqrt_info(2, 1);
    _res_D_x_T_y(3, 2) = -_tmp1760 * _tmp540 + _tmp1760 * _tmp541 + _tmp1777 * _tmp542 +
                         _tmp1794 * sqrt_info(3, 1) + _tmp1795 * sqrt_info(3, 1) -
                         _tmp1796 * sqrt_info(3, 2) + _tmp1797 * sqrt_info(3, 2) -
                         _tmp1798 * sqrt_info(3, 1) + _tmp1799 * sqrt_info(3, 0);
    _res_D_x_T_y(4, 2) = -_tmp1428 * _tmp1760 - _tmp1525 * _tmp1760 + _tmp1778 * sqrt_info(4, 2) +
                         _tmp1793 * _tmp543 + _tmp1795 * sqrt_info(4, 1) +
                         _tmp1797 * sqrt_info(4, 2) - _tmp1798 * sqrt_info(4, 1) +
                         _tmp1799 * sqrt_info(4, 0) + _tmp1800 * sqrt_info(4, 0);
    _res_D_x_T_y(5, 2) =
        -_tmp1760 * _tmp545 + _tmp1778 * sqrt_info(5, 2) + _tmp1794 * sqrt_info(5, 1) +
        _tmp1795 * sqrt_info(5, 1) - _tmp1796 * sqrt_info(5, 2) + _tmp1797 * sqrt_info(5, 2) -
        _tmp1798 * sqrt_info(5, 1) + _tmp1799 * sqrt_info(5, 0) + _tmp1800 * sqrt_info(5, 0);
    _res_D_x_T_y(0, 3) = -sqrt_info(0, 3);
    _res_D_x_T_y(1, 3) = -sqrt_info(1, 3);
    _res_D_x_T_y(2, 3) = -sqrt_info(2, 3);
    _res_D_x_T_y(3, 3) = -sqrt_info(3, 3);
    _res_D_x_T_y(4, 3) = -sqrt_info(4, 3);
    _res_D_x_T_y(5, 3) = -sqrt_info(5, 3);
    _res_D_x_T_y(0, 4) = -sqrt_info(0, 4);
    _res_D_x_T_y(1, 4) = -sqrt_info(1, 4);
    _res_D_x_T_y(2, 4) = -sqrt_info(2, 4);
    _res_D_x_T_y(3, 4) = -sqrt_info(3, 4);
    _res_D_x_T_y(4, 4) = -sqrt_info(4, 4);
    _res_D_x_T_y(5, 4) = -sqrt_info(5, 4);
    _res_D_x_T_y(0, 5) = -sqrt_info(0, 5);
    _res_D_x_T_y(1, 5) = -sqrt_info(1, 5);
    _res_D_x_T_y(2, 5) = -sqrt_info(2, 5);
    _res_D_x_T_y(3, 5) = -sqrt_info(3, 5);
    _res_D_x_T_y(4, 5) = -sqrt_info(4, 5);
    _res_D_x_T_y(5, 5) = -sqrt_info(5, 5);
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_hyperion
