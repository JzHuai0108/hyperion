// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>

namespace sym_hyperion {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline3_pose3_sensor_relative_between_factor
 *
 * Args:
 *     lambdas_x: Matrix31
 *     x0: Pose3
 *     x1: Pose3
 *     x2: Pose3
 *     x3: Pose3
 *     x_T_a: Pose3
 *     a_T_b: Pose3
 *     lambdas_y: Matrix31
 *     y0: Pose3
 *     y1: Pose3
 *     y2: Pose3
 *     y3: Pose3
 *     y_T_b: Pose3
 *     sqrt_info: Matrix66
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix61
 *     res_D_x0: (6x6) jacobian of res (6) wrt arg x0 (6)
 *     res_D_x1: (6x6) jacobian of res (6) wrt arg x1 (6)
 *     res_D_x2: (6x6) jacobian of res (6) wrt arg x2 (6)
 *     res_D_x3: (6x6) jacobian of res (6) wrt arg x3 (6)
 *     res_D_x_T_a: (6x6) jacobian of res (6) wrt arg x_T_a (6)
 *     res_D_y0: (6x6) jacobian of res (6) wrt arg y0 (6)
 *     res_D_y1: (6x6) jacobian of res (6) wrt arg y1 (6)
 *     res_D_y2: (6x6) jacobian of res (6) wrt arg y2 (6)
 *     res_D_y3: (6x6) jacobian of res (6) wrt arg y3 (6)
 *     res_D_y_T_b: (6x6) jacobian of res (6) wrt arg y_T_b (6)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 6, 1> Spline3Pose3SensorRelativeBetweenFactorWithJacobians1234589101112(
    const Eigen::Matrix<Scalar, 3, 1>& lambdas_x, const sym::Pose3<Scalar>& x0,
    const sym::Pose3<Scalar>& x1, const sym::Pose3<Scalar>& x2, const sym::Pose3<Scalar>& x3,
    const sym::Pose3<Scalar>& x_T_a, const sym::Pose3<Scalar>& a_T_b,
    const Eigen::Matrix<Scalar, 3, 1>& lambdas_y, const sym::Pose3<Scalar>& y0,
    const sym::Pose3<Scalar>& y1, const sym::Pose3<Scalar>& y2, const sym::Pose3<Scalar>& y3,
    const sym::Pose3<Scalar>& y_T_b, const Eigen::Matrix<Scalar, 6, 6>& sqrt_info,
    const Scalar epsilon, Scalar* const res_D_x0 = nullptr, Scalar* const res_D_x1 = nullptr,
    Scalar* const res_D_x2 = nullptr, Scalar* const res_D_x3 = nullptr,
    Scalar* const res_D_x_T_a = nullptr, Scalar* const res_D_y0 = nullptr,
    Scalar* const res_D_y1 = nullptr, Scalar* const res_D_y2 = nullptr,
    Scalar* const res_D_y3 = nullptr, Scalar* const res_D_y_T_b = nullptr) {
  // Total ops: 19723

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x3 = x3.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x_T_a = x_T_a.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _a_T_b = a_T_b.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y0 = y0.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y1 = y1.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y2 = y2.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y3 = y3.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y_T_b = y_T_b.Data();

  // Intermediate terms (3833)
  const Scalar _tmp0 = _x2[2] * _x3[0];
  const Scalar _tmp1 = _x2[0] * _x3[2];
  const Scalar _tmp2 = _x2[3] * _x3[1];
  const Scalar _tmp3 = _x2[1] * _x3[3];
  const Scalar _tmp4 = -_tmp0 + _tmp1 + _tmp2 - _tmp3;
  const Scalar _tmp5 = _x2[2] * _x3[2];
  const Scalar _tmp6 = _x2[0] * _x3[0];
  const Scalar _tmp7 = _x2[1] * _x3[1];
  const Scalar _tmp8 = -_tmp5 - _tmp6 - _tmp7;
  const Scalar _tmp9 = _x2[3] * _x3[3];
  const Scalar _tmp10 =
      2 * std::min<Scalar>(0, (((-_tmp8 + _tmp9) > 0) - ((-_tmp8 + _tmp9) < 0))) + 1;
  const Scalar _tmp11 = std::pow(_tmp10, Scalar(2)) * std::pow(lambdas_x(2, 0), Scalar(2));
  const Scalar _tmp12 = 4 * _tmp11;
  const Scalar _tmp13 = _tmp12 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp14 = 1 - epsilon;
  const Scalar _tmp15 = std::min<Scalar>(_tmp14, std::fabs(_tmp8 - _tmp9));
  const Scalar _tmp16 = 1 - std::pow(_tmp15, Scalar(2));
  const Scalar _tmp17 = std::acos(_tmp15);
  const Scalar _tmp18 = std::pow(_tmp17, Scalar(2)) / _tmp16;
  const Scalar _tmp19 = _x2[2] * _x3[1];
  const Scalar _tmp20 = _x2[0] * _x3[3];
  const Scalar _tmp21 = _x2[3] * _x3[0];
  const Scalar _tmp22 = _x2[1] * _x3[2];
  const Scalar _tmp23 = _tmp19 - _tmp20 + _tmp21 - _tmp22;
  const Scalar _tmp24 = _tmp12 * std::pow(_tmp23, Scalar(2));
  const Scalar _tmp25 = _x2[2] * _x3[3];
  const Scalar _tmp26 = _x2[0] * _x3[1];
  const Scalar _tmp27 = _x2[3] * _x3[2];
  const Scalar _tmp28 = _x2[1] * _x3[0];
  const Scalar _tmp29 = -_tmp25 - _tmp26 + _tmp27 + _tmp28;
  const Scalar _tmp30 = _tmp12 * std::pow(_tmp29, Scalar(2));
  const Scalar _tmp31 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp32 =
      std::sqrt(Scalar(_tmp13 * _tmp18 + _tmp18 * _tmp24 + _tmp18 * _tmp30 + _tmp31));
  const Scalar _tmp33 = (Scalar(1) / Scalar(2)) * _tmp32;
  const Scalar _tmp34 = std::cos(_tmp33);
  const Scalar _tmp35 = _x1[0] * _x2[3];
  const Scalar _tmp36 = _x1[3] * _x2[0];
  const Scalar _tmp37 = _x1[2] * _x2[1];
  const Scalar _tmp38 = _x1[1] * _x2[2];
  const Scalar _tmp39 = -_tmp35 + _tmp36 + _tmp37 - _tmp38;
  const Scalar _tmp40 = _x1[0] * _x2[0];
  const Scalar _tmp41 = _x1[1] * _x2[1];
  const Scalar _tmp42 = _x1[2] * _x2[2];
  const Scalar _tmp43 = -_tmp40 - _tmp41 - _tmp42;
  const Scalar _tmp44 = _x1[3] * _x2[3];
  const Scalar _tmp45 =
      2 * std::min<Scalar>(0, (((-_tmp43 + _tmp44) > 0) - ((-_tmp43 + _tmp44) < 0))) + 1;
  const Scalar _tmp46 = std::pow(_tmp45, Scalar(2)) * std::pow(lambdas_x(1, 0), Scalar(2));
  const Scalar _tmp47 = 4 * _tmp46;
  const Scalar _tmp48 = std::pow(_tmp39, Scalar(2)) * _tmp47;
  const Scalar _tmp49 = std::min<Scalar>(_tmp14, std::fabs(_tmp43 - _tmp44));
  const Scalar _tmp50 = 1 - std::pow(_tmp49, Scalar(2));
  const Scalar _tmp51 = std::acos(_tmp49);
  const Scalar _tmp52 = std::pow(_tmp51, Scalar(2)) / _tmp50;
  const Scalar _tmp53 = _x1[2] * _x2[3];
  const Scalar _tmp54 = _x1[1] * _x2[0];
  const Scalar _tmp55 = _x1[0] * _x2[1];
  const Scalar _tmp56 = _x1[3] * _x2[2];
  const Scalar _tmp57 = -_tmp53 + _tmp54 - _tmp55 + _tmp56;
  const Scalar _tmp58 = _tmp47 * std::pow(_tmp57, Scalar(2));
  const Scalar _tmp59 = _x1[1] * _x2[3];
  const Scalar _tmp60 = _x1[2] * _x2[0];
  const Scalar _tmp61 = _x1[3] * _x2[1];
  const Scalar _tmp62 = _x1[0] * _x2[2];
  const Scalar _tmp63 = -_tmp59 - _tmp60 + _tmp61 + _tmp62;
  const Scalar _tmp64 = _tmp47 * std::pow(_tmp63, Scalar(2));
  const Scalar _tmp65 =
      std::sqrt(Scalar(_tmp31 + _tmp48 * _tmp52 + _tmp52 * _tmp58 + _tmp52 * _tmp64));
  const Scalar _tmp66 = (Scalar(1) / Scalar(2)) * _tmp65;
  const Scalar _tmp67 = _tmp51 * std::sin(_tmp66) / (std::sqrt(_tmp50) * _tmp65);
  const Scalar _tmp68 = _tmp34 * _tmp67;
  const Scalar _tmp69 = _tmp45 * lambdas_x(1, 0);
  const Scalar _tmp70 = 2 * _tmp69;
  const Scalar _tmp71 = _tmp63 * _tmp70;
  const Scalar _tmp72 = _tmp10 * lambdas_x(2, 0);
  const Scalar _tmp73 = _tmp4 * _tmp72;
  const Scalar _tmp74 = std::cos(_tmp66);
  const Scalar _tmp75 = _tmp17 * std::sin(_tmp33) / (std::sqrt(_tmp16) * _tmp32);
  const Scalar _tmp76 = _tmp74 * _tmp75;
  const Scalar _tmp77 = 2 * _tmp76;
  const Scalar _tmp78 = _tmp39 * _tmp69;
  const Scalar _tmp79 = _tmp29 * _tmp72;
  const Scalar _tmp80 = _tmp78 * _tmp79;
  const Scalar _tmp81 = 4 * _tmp67 * _tmp75;
  const Scalar _tmp82 = _tmp23 * _tmp72;
  const Scalar _tmp83 = _tmp57 * _tmp69;
  const Scalar _tmp84 = _tmp82 * _tmp83;
  const Scalar _tmp85 = _tmp68 * _tmp71 + _tmp73 * _tmp77 - _tmp80 * _tmp81 + _tmp81 * _tmp84;
  const Scalar _tmp86 = _x0[1] * _x1[2];
  const Scalar _tmp87 = _x0[2] * _x1[1];
  const Scalar _tmp88 = _x0[0] * _x1[3];
  const Scalar _tmp89 = _x0[3] * _x1[0];
  const Scalar _tmp90 = -_tmp86 + _tmp87 - _tmp88 + _tmp89;
  const Scalar _tmp91 = _x0[2] * _x1[2];
  const Scalar _tmp92 = _x0[1] * _x1[1];
  const Scalar _tmp93 = _x0[0] * _x1[0];
  const Scalar _tmp94 = -_tmp91 - _tmp92 - _tmp93;
  const Scalar _tmp95 = _x0[3] * _x1[3];
  const Scalar _tmp96 =
      2 * std::min<Scalar>(0, (((-_tmp94 + _tmp95) > 0) - ((-_tmp94 + _tmp95) < 0))) + 1;
  const Scalar _tmp97 = std::pow(_tmp96, Scalar(2)) * std::pow(lambdas_x(0, 0), Scalar(2));
  const Scalar _tmp98 = 4 * _tmp97;
  const Scalar _tmp99 = std::pow(_tmp90, Scalar(2)) * _tmp98;
  const Scalar _tmp100 = std::min<Scalar>(_tmp14, std::fabs(_tmp94 - _tmp95));
  const Scalar _tmp101 = std::acos(_tmp100);
  const Scalar _tmp102 = 1 - std::pow(_tmp100, Scalar(2));
  const Scalar _tmp103 = std::pow(_tmp101, Scalar(2)) / _tmp102;
  const Scalar _tmp104 = _x0[0] * _x1[2];
  const Scalar _tmp105 = _x0[3] * _x1[1];
  const Scalar _tmp106 = _x0[1] * _x1[3];
  const Scalar _tmp107 = _x0[2] * _x1[0];
  const Scalar _tmp108 = _tmp104 + _tmp105 - _tmp106 - _tmp107;
  const Scalar _tmp109 = std::pow(_tmp108, Scalar(2)) * _tmp98;
  const Scalar _tmp110 = _x0[3] * _x1[2];
  const Scalar _tmp111 = _x0[0] * _x1[1];
  const Scalar _tmp112 = _x0[2] * _x1[3];
  const Scalar _tmp113 = _x0[1] * _x1[0];
  const Scalar _tmp114 = _tmp110 - _tmp111 - _tmp112 + _tmp113;
  const Scalar _tmp115 = std::pow(_tmp114, Scalar(2)) * _tmp98;
  const Scalar _tmp116 =
      std::sqrt(Scalar(_tmp103 * _tmp109 + _tmp103 * _tmp115 + _tmp103 * _tmp99 + _tmp31));
  const Scalar _tmp117 = (Scalar(1) / Scalar(2)) * _tmp116;
  const Scalar _tmp118 = std::cos(_tmp117);
  const Scalar _tmp119 = 2 * _tmp96 * lambdas_x(0, 0);
  const Scalar _tmp120 = _tmp114 * _tmp119;
  const Scalar _tmp121 = _tmp39 * _tmp70;
  const Scalar _tmp122 = _tmp73 * _tmp81;
  const Scalar _tmp123 = _tmp63 * _tmp69;
  const Scalar _tmp124 = _tmp123 * _tmp79;
  const Scalar _tmp125 = 2 * _tmp72;
  const Scalar _tmp126 =
      _tmp121 * _tmp68 - _tmp122 * _tmp83 + _tmp124 * _tmp81 + _tmp125 * _tmp23 * _tmp76;
  const Scalar _tmp127 = _tmp101 * std::sin(_tmp117) / (std::sqrt(_tmp102) * _tmp116);
  const Scalar _tmp128 = _tmp126 * _tmp127;
  const Scalar _tmp129 = _tmp57 * _tmp70;
  const Scalar _tmp130 = _tmp123 * _tmp82;
  const Scalar _tmp131 = _tmp122 * _tmp78 + _tmp129 * _tmp68 - _tmp130 * _tmp81 + _tmp77 * _tmp79;
  const Scalar _tmp132 = _tmp127 * _tmp131;
  const Scalar _tmp133 = _tmp119 * _tmp90;
  const Scalar _tmp134 = _tmp79 * _tmp83;
  const Scalar _tmp135 = _tmp78 * _tmp82;
  const Scalar _tmp136 = -_tmp122 * _tmp123 - _tmp134 * _tmp81 - _tmp135 * _tmp81 + _tmp34 * _tmp74;
  const Scalar _tmp137 = _tmp108 * _tmp119;
  const Scalar _tmp138 = _tmp127 * _tmp137;
  const Scalar _tmp139 =
      _tmp118 * _tmp85 + _tmp120 * _tmp128 - _tmp132 * _tmp133 + _tmp136 * _tmp138;
  const Scalar _tmp140 = _tmp127 * _tmp133;
  const Scalar _tmp141 = _tmp120 * _tmp127;
  const Scalar _tmp142 =
      _tmp118 * _tmp126 + _tmp132 * _tmp137 + _tmp136 * _tmp140 - _tmp141 * _tmp85;
  const Scalar _tmp143 =
      _tmp118 * _tmp131 - _tmp128 * _tmp137 + _tmp136 * _tmp141 + _tmp140 * _tmp85;
  const Scalar _tmp144 =
      _tmp118 * _tmp136 - _tmp128 * _tmp133 - _tmp131 * _tmp141 - _tmp138 * _tmp85;
  const Scalar _tmp145 = -_tmp139 * _x0[1] - _tmp142 * _x0[0] - _tmp143 * _x0[2] + _tmp144 * _x0[3];
  const Scalar _tmp146 = -_tmp139 * _x0[2] + _tmp142 * _x0[3] + _tmp143 * _x0[1] + _tmp144 * _x0[0];
  const Scalar _tmp147 = _tmp139 * _x0[0] - _tmp142 * _x0[1] + _tmp143 * _x0[3] + _tmp144 * _x0[2];
  const Scalar _tmp148 = _tmp139 * _x0[3] + _tmp142 * _x0[2] - _tmp143 * _x0[0] + _tmp144 * _x0[1];
  const Scalar _tmp149 =
      _tmp145 * _x_T_a[1] - _tmp146 * _x_T_a[2] + _tmp147 * _x_T_a[0] + _tmp148 * _x_T_a[3];
  const Scalar _tmp150 = _y1[1] * _y2[0];
  const Scalar _tmp151 = _y1[2] * _y2[3];
  const Scalar _tmp152 = _y1[3] * _y2[2];
  const Scalar _tmp153 = _y1[0] * _y2[1];
  const Scalar _tmp154 = _tmp150 - _tmp151 + _tmp152 - _tmp153;
  const Scalar _tmp155 = _y1[1] * _y2[1];
  const Scalar _tmp156 = _y1[2] * _y2[2];
  const Scalar _tmp157 = _y1[0] * _y2[0];
  const Scalar _tmp158 = -_tmp155 - _tmp156 - _tmp157;
  const Scalar _tmp159 = _y1[3] * _y2[3];
  const Scalar _tmp160 =
      2 * std::min<Scalar>(0, (((-_tmp158 + _tmp159) > 0) - ((-_tmp158 + _tmp159) < 0))) + 1;
  const Scalar _tmp161 = _tmp160 * lambdas_y(1, 0);
  const Scalar _tmp162 = _tmp154 * _tmp161;
  const Scalar _tmp163 = _y2[2] * _y3[3];
  const Scalar _tmp164 = _y2[1] * _y3[0];
  const Scalar _tmp165 = _y2[0] * _y3[1];
  const Scalar _tmp166 = _y2[3] * _y3[2];
  const Scalar _tmp167 = -_tmp163 + _tmp164 - _tmp165 + _tmp166;
  const Scalar _tmp168 = _y2[2] * _y3[2];
  const Scalar _tmp169 = _y2[1] * _y3[1];
  const Scalar _tmp170 = _y2[0] * _y3[0];
  const Scalar _tmp171 = -_tmp168 - _tmp169 - _tmp170;
  const Scalar _tmp172 = _y2[3] * _y3[3];
  const Scalar _tmp173 =
      2 * std::min<Scalar>(0, (((-_tmp171 + _tmp172) > 0) - ((-_tmp171 + _tmp172) < 0))) + 1;
  const Scalar _tmp174 = _tmp173 * lambdas_y(2, 0);
  const Scalar _tmp175 = _tmp167 * _tmp174;
  const Scalar _tmp176 = 4 * _tmp175;
  const Scalar _tmp177 = std::min<Scalar>(_tmp14, std::fabs(_tmp171 - _tmp172));
  const Scalar _tmp178 = std::acos(_tmp177);
  const Scalar _tmp179 = _y2[2] * _y3[1];
  const Scalar _tmp180 = _y2[1] * _y3[2];
  const Scalar _tmp181 = _y2[0] * _y3[3];
  const Scalar _tmp182 = _y2[3] * _y3[0];
  const Scalar _tmp183 = _tmp179 - _tmp180 - _tmp181 + _tmp182;
  const Scalar _tmp184 = std::pow(_tmp183, Scalar(2));
  const Scalar _tmp185 = std::pow(_tmp173, Scalar(2)) * std::pow(lambdas_y(2, 0), Scalar(2));
  const Scalar _tmp186 = 4 * _tmp185;
  const Scalar _tmp187 = 1 - std::pow(_tmp177, Scalar(2));
  const Scalar _tmp188 = std::pow(_tmp178, Scalar(2)) / _tmp187;
  const Scalar _tmp189 = _tmp186 * _tmp188;
  const Scalar _tmp190 = std::pow(_tmp167, Scalar(2)) * _tmp186;
  const Scalar _tmp191 = _y2[2] * _y3[0];
  const Scalar _tmp192 = _y2[1] * _y3[3];
  const Scalar _tmp193 = _y2[0] * _y3[2];
  const Scalar _tmp194 = _y2[3] * _y3[1];
  const Scalar _tmp195 = -_tmp191 - _tmp192 + _tmp193 + _tmp194;
  const Scalar _tmp196 = std::pow(_tmp195, Scalar(2));
  const Scalar _tmp197 =
      std::sqrt(Scalar(_tmp184 * _tmp189 + _tmp188 * _tmp190 + _tmp189 * _tmp196 + _tmp31));
  const Scalar _tmp198 = (Scalar(1) / Scalar(2)) * _tmp197;
  const Scalar _tmp199 = _tmp178 * std::sin(_tmp198) / (std::sqrt(_tmp187) * _tmp197);
  const Scalar _tmp200 = std::min<Scalar>(_tmp14, std::fabs(_tmp158 - _tmp159));
  const Scalar _tmp201 = 1 - std::pow(_tmp200, Scalar(2));
  const Scalar _tmp202 = std::acos(_tmp200);
  const Scalar _tmp203 = std::pow(_tmp202, Scalar(2)) / _tmp201;
  const Scalar _tmp204 = std::pow(_tmp160, Scalar(2)) * std::pow(lambdas_y(1, 0), Scalar(2));
  const Scalar _tmp205 = 4 * _tmp204;
  const Scalar _tmp206 = std::pow(_tmp154, Scalar(2)) * _tmp205;
  const Scalar _tmp207 = _y1[1] * _y2[2];
  const Scalar _tmp208 = _y1[2] * _y2[1];
  const Scalar _tmp209 = _y1[3] * _y2[0];
  const Scalar _tmp210 = _y1[0] * _y2[3];
  const Scalar _tmp211 = -_tmp207 + _tmp208 + _tmp209 - _tmp210;
  const Scalar _tmp212 = _tmp205 * std::pow(_tmp211, Scalar(2));
  const Scalar _tmp213 = _y1[1] * _y2[3];
  const Scalar _tmp214 = _y1[2] * _y2[0];
  const Scalar _tmp215 = _y1[3] * _y2[1];
  const Scalar _tmp216 = _y1[0] * _y2[2];
  const Scalar _tmp217 = -_tmp213 - _tmp214 + _tmp215 + _tmp216;
  const Scalar _tmp218 = _tmp205 * std::pow(_tmp217, Scalar(2));
  const Scalar _tmp219 =
      std::sqrt(Scalar(_tmp203 * _tmp206 + _tmp203 * _tmp212 + _tmp203 * _tmp218 + _tmp31));
  const Scalar _tmp220 = (Scalar(1) / Scalar(2)) * _tmp219;
  const Scalar _tmp221 = _tmp202 * std::sin(_tmp220) / (std::sqrt(_tmp201) * _tmp219);
  const Scalar _tmp222 = _tmp199 * _tmp221;
  const Scalar _tmp223 = _tmp176 * _tmp222;
  const Scalar _tmp224 = _tmp174 * _tmp183;
  const Scalar _tmp225 = 4 * _tmp224;
  const Scalar _tmp226 = _tmp161 * _tmp211;
  const Scalar _tmp227 = _tmp222 * _tmp226;
  const Scalar _tmp228 = _tmp174 * _tmp195;
  const Scalar _tmp229 = 4 * _tmp228;
  const Scalar _tmp230 = _tmp161 * _tmp217;
  const Scalar _tmp231 = _tmp222 * _tmp230;
  const Scalar _tmp232 = std::cos(_tmp220);
  const Scalar _tmp233 = std::cos(_tmp198);
  const Scalar _tmp234 =
      -_tmp162 * _tmp223 - _tmp225 * _tmp227 - _tmp229 * _tmp231 + _tmp232 * _tmp233;
  const Scalar _tmp235 = _y0[2] * _y1[1];
  const Scalar _tmp236 = _y0[0] * _y1[3];
  const Scalar _tmp237 = _y0[1] * _y1[2];
  const Scalar _tmp238 = _y0[3] * _y1[0];
  const Scalar _tmp239 = _tmp235 - _tmp236 - _tmp237 + _tmp238;
  const Scalar _tmp240 = _y0[3] * _y1[3];
  const Scalar _tmp241 = _y0[2] * _y1[2];
  const Scalar _tmp242 = _y0[0] * _y1[0];
  const Scalar _tmp243 = _y0[1] * _y1[1];
  const Scalar _tmp244 = -_tmp241 - _tmp242 - _tmp243;
  const Scalar _tmp245 = _tmp240 - _tmp244;
  const Scalar _tmp246 = (((_tmp245) > 0) - ((_tmp245) < 0));
  const Scalar _tmp247 = 2 * std::min<Scalar>(0, _tmp246) + 1;
  const Scalar _tmp248 = _tmp247 * lambdas_y(0, 0);
  const Scalar _tmp249 = 2 * _tmp248;
  const Scalar _tmp250 = std::fabs(_tmp245);
  const Scalar _tmp251 = std::min<Scalar>(_tmp14, _tmp250);
  const Scalar _tmp252 = std::acos(_tmp251);
  const Scalar _tmp253 = std::pow(_tmp252, Scalar(2));
  const Scalar _tmp254 = 1 - std::pow(_tmp251, Scalar(2));
  const Scalar _tmp255 = Scalar(1.0) / (_tmp254);
  const Scalar _tmp256 = _tmp253 * _tmp255;
  const Scalar _tmp257 = _y0[2] * _y1[3];
  const Scalar _tmp258 = _y0[0] * _y1[1];
  const Scalar _tmp259 = _y0[1] * _y1[0];
  const Scalar _tmp260 = _y0[3] * _y1[2];
  const Scalar _tmp261 = -_tmp257 - _tmp258 + _tmp259 + _tmp260;
  const Scalar _tmp262 = std::pow(_tmp247, Scalar(2)) * std::pow(lambdas_y(0, 0), Scalar(2));
  const Scalar _tmp263 = 4 * _tmp262;
  const Scalar _tmp264 = std::pow(_tmp261, Scalar(2)) * _tmp263;
  const Scalar _tmp265 = std::pow(_tmp239, Scalar(2)) * _tmp263;
  const Scalar _tmp266 = _y0[2] * _y1[0];
  const Scalar _tmp267 = _y0[0] * _y1[2];
  const Scalar _tmp268 = _y0[1] * _y1[3];
  const Scalar _tmp269 = _y0[3] * _y1[1];
  const Scalar _tmp270 = -_tmp266 + _tmp267 - _tmp268 + _tmp269;
  const Scalar _tmp271 = _tmp263 * std::pow(_tmp270, Scalar(2));
  const Scalar _tmp272 = _tmp256 * _tmp264 + _tmp256 * _tmp265 + _tmp256 * _tmp271 + _tmp31;
  const Scalar _tmp273 = std::sqrt(_tmp272);
  const Scalar _tmp274 = (Scalar(1) / Scalar(2)) * _tmp273;
  const Scalar _tmp275 = std::sin(_tmp274);
  const Scalar _tmp276 = _tmp275 / _tmp273;
  const Scalar _tmp277 = _tmp252 / std::sqrt(_tmp254);
  const Scalar _tmp278 = _tmp276 * _tmp277;
  const Scalar _tmp279 = _tmp249 * _tmp278;
  const Scalar _tmp280 = _tmp239 * _tmp279;
  const Scalar _tmp281 = _tmp162 * _tmp222;
  const Scalar _tmp282 = 2 * _tmp161;
  const Scalar _tmp283 = _tmp211 * _tmp282;
  const Scalar _tmp284 = _tmp221 * _tmp233;
  const Scalar _tmp285 = _tmp199 * _tmp232;
  const Scalar _tmp286 = 2 * _tmp285;
  const Scalar _tmp287 =
      _tmp223 * _tmp230 + _tmp224 * _tmp286 - _tmp229 * _tmp281 + _tmp283 * _tmp284;
  const Scalar _tmp288 = std::cos(_tmp274);
  const Scalar _tmp289 = _tmp282 * _tmp284;
  const Scalar _tmp290 = 2 * _tmp175;
  const Scalar _tmp291 =
      _tmp154 * _tmp289 - _tmp225 * _tmp231 + _tmp227 * _tmp229 + _tmp285 * _tmp290;
  const Scalar _tmp292 = _tmp249 * _tmp270;
  const Scalar _tmp293 = _tmp278 * _tmp292;
  const Scalar _tmp294 =
      _tmp217 * _tmp289 - _tmp223 * _tmp226 + _tmp225 * _tmp281 + _tmp228 * _tmp286;
  const Scalar _tmp295 = _tmp261 * _tmp279;
  const Scalar _tmp296 =
      _tmp234 * _tmp280 + _tmp287 * _tmp288 + _tmp291 * _tmp293 - _tmp294 * _tmp295;
  const Scalar _tmp297 =
      _tmp234 * _tmp293 - _tmp280 * _tmp291 + _tmp287 * _tmp295 + _tmp288 * _tmp294;
  const Scalar _tmp298 =
      _tmp234 * _tmp295 + _tmp280 * _tmp294 - _tmp287 * _tmp293 + _tmp288 * _tmp291;
  const Scalar _tmp299 =
      _tmp234 * _tmp288 - _tmp280 * _tmp287 - _tmp291 * _tmp295 - _tmp293 * _tmp294;
  const Scalar _tmp300 = -_tmp296 * _y0[0] - _tmp297 * _y0[1] - _tmp298 * _y0[2] + _tmp299 * _y0[3];
  const Scalar _tmp301 = _tmp296 * _y0[3] - _tmp297 * _y0[2] + _tmp298 * _y0[1] + _tmp299 * _y0[0];
  const Scalar _tmp302 = -_tmp296 * _y0[1] + _tmp297 * _y0[0] + _tmp298 * _y0[3] + _tmp299 * _y0[2];
  const Scalar _tmp303 = _tmp296 * _y0[2] + _tmp297 * _y0[3] - _tmp298 * _y0[0] + _tmp299 * _y0[1];
  const Scalar _tmp304 =
      _tmp300 * _y_T_b[2] + _tmp301 * _y_T_b[1] + _tmp302 * _y_T_b[3] - _tmp303 * _y_T_b[0];
  const Scalar _tmp305 =
      _tmp145 * _x_T_a[2] + _tmp146 * _x_T_a[1] + _tmp147 * _x_T_a[3] - _tmp148 * _x_T_a[0];
  const Scalar _tmp306 =
      _tmp300 * _y_T_b[1] - _tmp301 * _y_T_b[2] + _tmp302 * _y_T_b[0] + _tmp303 * _y_T_b[3];
  const Scalar _tmp307 =
      _tmp300 * _y_T_b[0] + _tmp301 * _y_T_b[3] - _tmp302 * _y_T_b[1] + _tmp303 * _y_T_b[2];
  const Scalar _tmp308 =
      _tmp145 * _x_T_a[3] - _tmp146 * _x_T_a[0] - _tmp147 * _x_T_a[2] - _tmp148 * _x_T_a[1];
  const Scalar _tmp309 =
      _tmp145 * _x_T_a[0] + _tmp146 * _x_T_a[3] - _tmp147 * _x_T_a[1] + _tmp148 * _x_T_a[2];
  const Scalar _tmp310 =
      _tmp300 * _y_T_b[3] - _tmp301 * _y_T_b[0] - _tmp302 * _y_T_b[2] - _tmp303 * _y_T_b[1];
  const Scalar _tmp311 =
      -_tmp149 * _tmp304 + _tmp305 * _tmp306 + _tmp307 * _tmp308 - _tmp309 * _tmp310;
  const Scalar _tmp312 =
      _tmp149 * _tmp307 + _tmp304 * _tmp308 - _tmp305 * _tmp310 - _tmp306 * _tmp309;
  const Scalar _tmp313 =
      _tmp149 * _tmp306 + _tmp304 * _tmp305 + _tmp307 * _tmp309 + _tmp308 * _tmp310;
  const Scalar _tmp314 =
      -_tmp149 * _tmp310 + _tmp304 * _tmp309 - _tmp305 * _tmp307 + _tmp306 * _tmp308;
  const Scalar _tmp315 = -_a_T_b[0] * _tmp311 - _a_T_b[1] * _tmp314 - _a_T_b[2] * _tmp312;
  const Scalar _tmp316 = _a_T_b[3] * _tmp313;
  const Scalar _tmp317 = std::min<Scalar>(_tmp14, std::fabs(_tmp315 - _tmp316));
  const Scalar _tmp318 =
      (2 * std::min<Scalar>(0, (((-_tmp315 + _tmp316) > 0) - ((-_tmp315 + _tmp316) < 0))) + 1) *
      std::acos(_tmp317) / std::sqrt(Scalar(1 - std::pow(_tmp317, Scalar(2))));
  const Scalar _tmp319 = 2 * _tmp318;
  const Scalar _tmp320 = _tmp319 * (-_a_T_b[0] * _tmp313 - _a_T_b[1] * _tmp312 +
                                    _a_T_b[2] * _tmp314 + _a_T_b[3] * _tmp311);
  const Scalar _tmp321 = -2 * std::pow(_tmp309, Scalar(2));
  const Scalar _tmp322 = 1 - 2 * std::pow(_tmp305, Scalar(2));
  const Scalar _tmp323 = _tmp321 + _tmp322;
  const Scalar _tmp324 = 2 * _tmp302;
  const Scalar _tmp325 = _tmp303 * _tmp324;
  const Scalar _tmp326 = 2 * _tmp300;
  const Scalar _tmp327 = _tmp301 * _tmp326;
  const Scalar _tmp328 = 2 * _tmp301 * _tmp303;
  const Scalar _tmp329 = _tmp302 * _tmp326;
  const Scalar _tmp330 = -2 * std::pow(_tmp302, Scalar(2));
  const Scalar _tmp331 = 1 - 2 * std::pow(_tmp301, Scalar(2));
  const Scalar _tmp332 = _y0[5] + lambdas_y(0, 0) * (-_y0[5] + _y1[5]) +
                         lambdas_y(1, 0) * (-_y1[5] + _y2[5]) +
                         lambdas_y(2, 0) * (-_y2[5] + _y3[5]);
  const Scalar _tmp333 = _tmp332 + _y_T_b[4] * (_tmp328 + _tmp329) +
                         _y_T_b[5] * (_tmp330 + _tmp331) + _y_T_b[6] * (_tmp325 - _tmp327);
  const Scalar _tmp334 = 2 * _tmp145;
  const Scalar _tmp335 = _tmp148 * _tmp334;
  const Scalar _tmp336 = 2 * _tmp146 * _tmp147;
  const Scalar _tmp337 = _tmp146 * _tmp334;
  const Scalar _tmp338 = 2 * _tmp148;
  const Scalar _tmp339 = _tmp147 * _tmp338;
  const Scalar _tmp340 = -2 * std::pow(_tmp148, Scalar(2));
  const Scalar _tmp341 = 1 - 2 * std::pow(_tmp146, Scalar(2));
  const Scalar _tmp342 = _x0[6] + lambdas_x(0, 0) * (-_x0[6] + _x1[6]) +
                         lambdas_x(1, 0) * (-_x1[6] + _x2[6]) +
                         lambdas_x(2, 0) * (-_x2[6] + _x3[6]);
  const Scalar _tmp343 = _tmp342 + _x_T_a[4] * (-_tmp335 + _tmp336) +
                         _x_T_a[5] * (_tmp337 + _tmp339) + _x_T_a[6] * (_tmp340 + _tmp341);
  const Scalar _tmp344 = 2 * _tmp308;
  const Scalar _tmp345 = _tmp309 * _tmp344;
  const Scalar _tmp346 = 2 * _tmp149;
  const Scalar _tmp347 = _tmp305 * _tmp346;
  const Scalar _tmp348 = _tmp345 + _tmp347;
  const Scalar _tmp349 = _tmp147 * _tmp334;
  const Scalar _tmp350 = _tmp146 * _tmp338;
  const Scalar _tmp351 = -2 * std::pow(_tmp147, Scalar(2));
  const Scalar _tmp352 = _x0[4] + lambdas_x(0, 0) * (-_x0[4] + _x1[4]) +
                         lambdas_x(1, 0) * (-_x1[4] + _x2[4]) +
                         lambdas_x(2, 0) * (-_x2[4] + _x3[4]);
  const Scalar _tmp353 = _tmp352 + _x_T_a[4] * (_tmp340 + _tmp351 + 1) +
                         _x_T_a[5] * (-_tmp349 + _tmp350) + _x_T_a[6] * (_tmp335 + _tmp336);
  const Scalar _tmp354 = _tmp305 * _tmp344;
  const Scalar _tmp355 = _tmp309 * _tmp346;
  const Scalar _tmp356 = -_tmp354 + _tmp355;
  const Scalar _tmp357 = _x0[5] + lambdas_x(0, 0) * (-_x0[5] + _x1[5]) +
                         lambdas_x(1, 0) * (-_x1[5] + _x2[5]) +
                         lambdas_x(2, 0) * (-_x2[5] + _x3[5]);
  const Scalar _tmp358 = _tmp357 + _x_T_a[4] * (_tmp349 + _tmp350) +
                         _x_T_a[5] * (_tmp341 + _tmp351) + _x_T_a[6] * (-_tmp337 + _tmp339);
  const Scalar _tmp359 = _tmp301 * _tmp324;
  const Scalar _tmp360 = _tmp303 * _tmp326;
  const Scalar _tmp361 = -2 * std::pow(_tmp303, Scalar(2));
  const Scalar _tmp362 = _y0[6] + lambdas_y(0, 0) * (-_y0[6] + _y1[6]) +
                         lambdas_y(1, 0) * (-_y1[6] + _y2[6]) +
                         lambdas_y(2, 0) * (-_y2[6] + _y3[6]);
  const Scalar _tmp363 = _tmp362 + _y_T_b[4] * (_tmp359 - _tmp360) +
                         _y_T_b[5] * (_tmp325 + _tmp327) + _y_T_b[6] * (_tmp331 + _tmp361);
  const Scalar _tmp364 = _y0[4] + lambdas_y(0, 0) * (-_y0[4] + _y1[4]) +
                         lambdas_y(1, 0) * (-_y1[4] + _y2[4]) +
                         lambdas_y(2, 0) * (-_y2[4] + _y3[4]);
  const Scalar _tmp365 = _tmp364 + _y_T_b[4] * (_tmp330 + _tmp361 + 1) +
                         _y_T_b[5] * (_tmp328 - _tmp329) + _y_T_b[6] * (_tmp359 + _tmp360);
  const Scalar _tmp366 = -_a_T_b[5] + _tmp323 * _tmp333 - _tmp323 * _tmp358 - _tmp343 * _tmp348 +
                         _tmp348 * _tmp363 - _tmp353 * _tmp356 + _tmp356 * _tmp365;
  const Scalar _tmp367 =
      -_a_T_b[0] * _tmp314 + _a_T_b[1] * _tmp311 - _a_T_b[2] * _tmp313 + _a_T_b[3] * _tmp312;
  const Scalar _tmp368 = _tmp319 * _tmp367;
  const Scalar _tmp369 = _tmp318 * (_a_T_b[0] * _tmp312 - _a_T_b[1] * _tmp313 -
                                    _a_T_b[2] * _tmp311 + _a_T_b[3] * _tmp314);
  const Scalar _tmp370 = 2 * _tmp369;
  const Scalar _tmp371 = _tmp149 * _tmp344;
  const Scalar _tmp372 = 2 * _tmp305 * _tmp309;
  const Scalar _tmp373 = -_tmp371 + _tmp372;
  const Scalar _tmp374 = _tmp354 + _tmp355;
  const Scalar _tmp375 = -2 * std::pow(_tmp149, Scalar(2));
  const Scalar _tmp376 = _tmp322 + _tmp375;
  const Scalar _tmp377 = -_a_T_b[4] + _tmp333 * _tmp374 - _tmp343 * _tmp373 - _tmp353 * _tmp376 -
                         _tmp358 * _tmp374 + _tmp363 * _tmp373 + _tmp365 * _tmp376;
  const Scalar _tmp378 = -_tmp345 + _tmp347;
  const Scalar _tmp379 = _tmp371 + _tmp372;
  const Scalar _tmp380 = _tmp321 + _tmp375 + 1;
  const Scalar _tmp381 = -_a_T_b[6] + _tmp333 * _tmp378 - _tmp343 * _tmp380 - _tmp353 * _tmp379 -
                         _tmp358 * _tmp378 + _tmp363 * _tmp380 + _tmp365 * _tmp379;
  const Scalar _tmp382 = 2 * sqrt_info(1, 2);
  const Scalar _tmp383 = 2 * sqrt_info(1, 1);
  const Scalar _tmp384 = 2 * sqrt_info(3, 1);
  const Scalar _tmp385 = 2 * sqrt_info(5, 1);
  const Scalar _tmp386 = (Scalar(1) / Scalar(2)) * _tmp86;
  const Scalar _tmp387 = (Scalar(1) / Scalar(2)) * _tmp87;
  const Scalar _tmp388 = (Scalar(1) / Scalar(2)) * _tmp88;
  const Scalar _tmp389 = (Scalar(1) / Scalar(2)) * _tmp89;
  const Scalar _tmp390 = -_tmp386 + _tmp387 - _tmp388 + _tmp389;
  const Scalar _tmp391 = _tmp40 + _tmp41 + _tmp42 + _tmp44;
  const Scalar _tmp392 = std::fabs(_tmp391);
  const Scalar _tmp393 = std::min<Scalar>(_tmp14, _tmp392);
  const Scalar _tmp394 = 1 - std::pow(_tmp393, Scalar(2));
  const Scalar _tmp395 = std::acos(_tmp393);
  const Scalar _tmp396 = _tmp395 / std::sqrt(_tmp394);
  const Scalar _tmp397 = _tmp396 * _tmp78;
  const Scalar _tmp398 = Scalar(1.0) / (_tmp394);
  const Scalar _tmp399 = std::pow(_tmp395, Scalar(2));
  const Scalar _tmp400 = _tmp398 * _tmp399;
  const Scalar _tmp401 = _tmp31 + _tmp400 * _tmp48 + _tmp400 * _tmp58 + _tmp400 * _tmp64;
  const Scalar _tmp402 = std::sqrt(_tmp401);
  const Scalar _tmp403 = (Scalar(1) / Scalar(2)) * _tmp402;
  const Scalar _tmp404 = std::sin(_tmp403);
  const Scalar _tmp405 = Scalar(1.0) / (_tmp402);
  const Scalar _tmp406 = _tmp5 + _tmp6 + _tmp7 + _tmp9;
  const Scalar _tmp407 = std::fabs(_tmp406);
  const Scalar _tmp408 = std::min<Scalar>(_tmp14, _tmp407);
  const Scalar _tmp409 = 1 - std::pow(_tmp408, Scalar(2));
  const Scalar _tmp410 = Scalar(1.0) / (_tmp409);
  const Scalar _tmp411 = std::acos(_tmp408);
  const Scalar _tmp412 = std::pow(_tmp411, Scalar(2));
  const Scalar _tmp413 = _tmp410 * _tmp412;
  const Scalar _tmp414 = _tmp13 * _tmp413 + _tmp24 * _tmp413 + _tmp30 * _tmp413 + _tmp31;
  const Scalar _tmp415 = std::sqrt(_tmp414);
  const Scalar _tmp416 = (Scalar(1) / Scalar(2)) * _tmp415;
  const Scalar _tmp417 = std::sin(_tmp416);
  const Scalar _tmp418 = _tmp404 * _tmp405 * _tmp417;
  const Scalar _tmp419 = _tmp418 * _tmp79;
  const Scalar _tmp420 = Scalar(1.0) / (_tmp415);
  const Scalar _tmp421 = _tmp411 / std::sqrt(_tmp409);
  const Scalar _tmp422 = _tmp420 * _tmp421;
  const Scalar _tmp423 = 4 * _tmp422;
  const Scalar _tmp424 = _tmp419 * _tmp423;
  const Scalar _tmp425 = _tmp396 * _tmp83;
  const Scalar _tmp426 = _tmp418 * _tmp423;
  const Scalar _tmp427 = _tmp426 * _tmp82;
  const Scalar _tmp428 = std::cos(_tmp403);
  const Scalar _tmp429 = _tmp417 * _tmp428;
  const Scalar _tmp430 = _tmp429 * _tmp73;
  const Scalar _tmp431 = _tmp420 * _tmp430;
  const Scalar _tmp432 = _tmp421 * _tmp431;
  const Scalar _tmp433 = std::cos(_tmp416);
  const Scalar _tmp434 = _tmp404 * _tmp433;
  const Scalar _tmp435 = _tmp405 * _tmp434;
  const Scalar _tmp436 = _tmp396 * _tmp435;
  const Scalar _tmp437 = _tmp436 * _tmp70;
  const Scalar _tmp438 = -_tmp397 * _tmp424 + _tmp425 * _tmp427 + 2 * _tmp432 + _tmp437 * _tmp63;
  const Scalar _tmp439 = _tmp91 + _tmp92 + _tmp93 + _tmp95;
  const Scalar _tmp440 = std::fabs(_tmp439);
  const Scalar _tmp441 = std::min<Scalar>(_tmp14, _tmp440);
  const Scalar _tmp442 = 1 - std::pow(_tmp441, Scalar(2));
  const Scalar _tmp443 = Scalar(1.0) / (_tmp442);
  const Scalar _tmp444 = std::acos(_tmp441);
  const Scalar _tmp445 = std::pow(_tmp444, Scalar(2));
  const Scalar _tmp446 = _tmp443 * _tmp445;
  const Scalar _tmp447 = _tmp109 * _tmp446 + _tmp115 * _tmp446 + _tmp31 + _tmp446 * _tmp99;
  const Scalar _tmp448 = std::sqrt(_tmp447);
  const Scalar _tmp449 = (Scalar(1) / Scalar(2)) * _tmp448;
  const Scalar _tmp450 = std::sin(_tmp449);
  const Scalar _tmp451 = _tmp450 / _tmp448;
  const Scalar _tmp452 = ((((_tmp14 - _tmp440) > 0) - ((_tmp14 - _tmp440) < 0)) + 1) *
                         (((_tmp439) > 0) - ((_tmp439) < 0));
  const Scalar _tmp453 = _tmp96 * lambdas_x(0, 0);
  const Scalar _tmp454 = _tmp452 * _tmp453;
  const Scalar _tmp455 = _tmp443 * _tmp454;
  const Scalar _tmp456 = _tmp451 * _tmp455;
  const Scalar _tmp457 = _tmp456 * _tmp90;
  const Scalar _tmp458 = _tmp438 * _tmp457;
  const Scalar _tmp459 = std::pow(_tmp442, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp460 = _tmp390 * _tmp444;
  const Scalar _tmp461 = _tmp459 * _tmp460;
  const Scalar _tmp462 = _tmp441 * _tmp454;
  const Scalar _tmp463 = _tmp451 * _tmp462;
  const Scalar _tmp464 = _tmp463 * _tmp90;
  const Scalar _tmp465 = _tmp438 * _tmp464;
  const Scalar _tmp466 = std::pow(_tmp442, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp467 = _tmp444 * _tmp466;
  const Scalar _tmp468 = _tmp453 * _tmp467;
  const Scalar _tmp469 = (Scalar(1) / Scalar(2)) / _tmp447;
  const Scalar _tmp470 = _tmp468 * _tmp469;
  const Scalar _tmp471 = _tmp108 * _tmp470;
  const Scalar _tmp472 = _tmp452 * _tmp99;
  const Scalar _tmp473 = _tmp115 * _tmp452;
  const Scalar _tmp474 = (Scalar(1) / Scalar(2)) * _tmp91;
  const Scalar _tmp475 = (Scalar(1) / Scalar(2)) * _tmp92;
  const Scalar _tmp476 = (Scalar(1) / Scalar(2)) * _tmp95;
  const Scalar _tmp477 = (Scalar(1) / Scalar(2)) * _tmp93;
  const Scalar _tmp478 = -_tmp474 - _tmp475 - _tmp476 - _tmp477;
  const Scalar _tmp479 = 8 * _tmp446 * _tmp97;
  const Scalar _tmp480 = _tmp479 * _tmp90;
  const Scalar _tmp481 = _tmp441 * _tmp445 / std::pow(_tmp442, Scalar(2));
  const Scalar _tmp482 = _tmp472 * _tmp481;
  const Scalar _tmp483 = _tmp473 * _tmp481;
  const Scalar _tmp484 = _tmp109 * _tmp452;
  const Scalar _tmp485 = _tmp481 * _tmp484;
  const Scalar _tmp486 = (Scalar(1) / Scalar(2)) * _tmp110;
  const Scalar _tmp487 = (Scalar(1) / Scalar(2)) * _tmp111;
  const Scalar _tmp488 = (Scalar(1) / Scalar(2)) * _tmp112;
  const Scalar _tmp489 = (Scalar(1) / Scalar(2)) * _tmp113;
  const Scalar _tmp490 = _tmp486 - _tmp487 - _tmp488 + _tmp489;
  const Scalar _tmp491 = _tmp108 * _tmp479;
  const Scalar _tmp492 = (Scalar(1) / Scalar(2)) * _tmp104;
  const Scalar _tmp493 = (Scalar(1) / Scalar(2)) * _tmp105;
  const Scalar _tmp494 = (Scalar(1) / Scalar(2)) * _tmp106;
  const Scalar _tmp495 = (Scalar(1) / Scalar(2)) * _tmp107;
  const Scalar _tmp496 = -_tmp492 - _tmp493 + _tmp494 + _tmp495;
  const Scalar _tmp497 = _tmp114 * _tmp479;
  const Scalar _tmp498 = _tmp490 * _tmp491 + _tmp496 * _tmp497;
  const Scalar _tmp499 = _tmp390 * _tmp482 + _tmp390 * _tmp483 + _tmp390 * _tmp485 -
                         _tmp461 * _tmp472 - _tmp461 * _tmp473 - _tmp461 * _tmp484 +
                         _tmp478 * _tmp480 + _tmp498;
  const Scalar _tmp500 = _tmp123 * _tmp396;
  const Scalar _tmp501 = _tmp426 * _tmp73;
  const Scalar _tmp502 = _tmp420 * _tmp429;
  const Scalar _tmp503 = _tmp421 * _tmp502;
  const Scalar _tmp504 = _tmp125 * _tmp503;
  const Scalar _tmp505 =
      _tmp121 * _tmp436 + _tmp23 * _tmp504 + _tmp424 * _tmp500 - _tmp425 * _tmp501;
  const Scalar _tmp506 = std::cos(_tmp449);
  const Scalar _tmp507 = _tmp505 * _tmp506;
  const Scalar _tmp508 = _tmp499 * _tmp507;
  const Scalar _tmp509 = _tmp438 * _tmp506;
  const Scalar _tmp510 = _tmp468 * _tmp90;
  const Scalar _tmp511 = _tmp469 * _tmp510;
  const Scalar _tmp512 = _tmp509 * _tmp511;
  const Scalar _tmp513 = _tmp503 * _tmp79;
  const Scalar _tmp514 = _tmp397 * _tmp501 - _tmp427 * _tmp500 + _tmp437 * _tmp57 + 2 * _tmp513;
  const Scalar _tmp515 = (Scalar(1) / Scalar(4)) * _tmp451;
  const Scalar _tmp516 = _tmp514 * _tmp515;
  const Scalar _tmp517 = _tmp428 * _tmp433;
  const Scalar _tmp518 = -_tmp397 * _tmp427 - _tmp424 * _tmp425 - _tmp500 * _tmp501 + _tmp517;
  const Scalar _tmp519 = _tmp506 * _tmp518;
  const Scalar _tmp520 = _tmp114 * _tmp470;
  const Scalar _tmp521 = _tmp499 * _tmp520;
  const Scalar _tmp522 = _tmp108 * _tmp456;
  const Scalar _tmp523 = _tmp505 * _tmp522;
  const Scalar _tmp524 = _tmp114 * _tmp390;
  const Scalar _tmp525 = _tmp456 * _tmp524;
  const Scalar _tmp526 = _tmp450 / (_tmp447 * std::sqrt(_tmp447));
  const Scalar _tmp527 = _tmp510 * _tmp526;
  const Scalar _tmp528 = _tmp438 * _tmp527;
  const Scalar _tmp529 = _tmp468 * _tmp526;
  const Scalar _tmp530 = _tmp108 * _tmp529;
  const Scalar _tmp531 = _tmp505 * _tmp530;
  const Scalar _tmp532 = _tmp451 * _tmp467;
  const Scalar _tmp533 = _tmp119 * _tmp532;
  const Scalar _tmp534 = _tmp438 * _tmp533;
  const Scalar _tmp535 = _tmp478 * _tmp534;
  const Scalar _tmp536 = _tmp444 * _tmp459;
  const Scalar _tmp537 = _tmp462 * _tmp536;
  const Scalar _tmp538 = _tmp451 * _tmp537;
  const Scalar _tmp539 = _tmp524 * _tmp538;
  const Scalar _tmp540 = _tmp114 * _tmp529;
  const Scalar _tmp541 = _tmp499 * _tmp518;
  const Scalar _tmp542 = _tmp108 * _tmp505;
  const Scalar _tmp543 = _tmp461 * _tmp463;
  const Scalar _tmp544 = _tmp518 * _tmp533;
  const Scalar _tmp545 = _tmp505 * _tmp533;
  const Scalar _tmp546 = -_tmp490 * _tmp545 + _tmp496 * _tmp544;
  const Scalar _tmp547 = -_tmp390 * _tmp458 + _tmp390 * _tmp523 + _tmp461 * _tmp465 -
                         _tmp471 * _tmp508 + _tmp499 * _tmp512 - _tmp499 * _tmp516 -
                         _tmp499 * _tmp528 + _tmp499 * _tmp531 - _tmp518 * _tmp525 +
                         _tmp518 * _tmp539 + _tmp519 * _tmp521 + _tmp535 - _tmp540 * _tmp541 -
                         _tmp542 * _tmp543 + _tmp546;
  const Scalar _tmp548 = _tmp120 * _tmp532;
  const Scalar _tmp549 = _tmp533 * _tmp90;
  const Scalar _tmp550 = _tmp108 * _tmp533;
  const Scalar _tmp551 = -_tmp438 * _tmp548 + _tmp507 + _tmp514 * _tmp550 + _tmp518 * _tmp549;
  const Scalar _tmp552 = _tmp551 * _x0[2];
  const Scalar _tmp553 = (Scalar(1) / Scalar(2)) * _tmp552;
  const Scalar _tmp554 = -_tmp553;
  const Scalar _tmp555 = _tmp108 * _tmp518;
  const Scalar _tmp556 = _tmp505 * _tmp548 + _tmp509 - _tmp514 * _tmp549 + _tmp533 * _tmp555;
  const Scalar _tmp557 = _tmp556 * _x0[3];
  const Scalar _tmp558 = (Scalar(1) / Scalar(2)) * _tmp557;
  const Scalar _tmp559 = _tmp478 * _tmp544;
  const Scalar _tmp560 = _tmp108 * _tmp514;
  const Scalar _tmp561 = _tmp499 * _tmp515;
  const Scalar _tmp562 = _tmp511 * _tmp519;
  const Scalar _tmp563 = _tmp464 * _tmp518;
  const Scalar _tmp564 = _tmp456 * _tmp560;
  const Scalar _tmp565 = _tmp506 * _tmp514;
  const Scalar _tmp566 = _tmp471 * _tmp499;
  const Scalar _tmp567 = _tmp457 * _tmp518;
  const Scalar _tmp568 = _tmp499 * _tmp529;
  const Scalar _tmp569 = _tmp499 * _tmp540;
  const Scalar _tmp570 = _tmp514 * _tmp533;
  const Scalar _tmp571 = _tmp490 * _tmp570 - _tmp496 * _tmp534;
  const Scalar _tmp572 = -_tmp390 * _tmp564 - _tmp390 * _tmp567 + _tmp438 * _tmp525 -
                         _tmp438 * _tmp539 + _tmp438 * _tmp569 + _tmp461 * _tmp563 +
                         _tmp499 * _tmp562 - _tmp505 * _tmp561 - _tmp509 * _tmp521 -
                         _tmp527 * _tmp541 + _tmp543 * _tmp560 + _tmp559 - _tmp560 * _tmp568 +
                         _tmp565 * _tmp566 + _tmp571;
  const Scalar _tmp573 = _tmp451 * _tmp514;
  const Scalar _tmp574 = _tmp462 * _tmp573;
  const Scalar _tmp575 = _tmp574 * _tmp90;
  const Scalar _tmp576 = _tmp514 * _tmp527;
  const Scalar _tmp577 = _tmp108 * _tmp519;
  const Scalar _tmp578 = _tmp470 * _tmp577;
  const Scalar _tmp579 = _tmp511 * _tmp565;
  const Scalar _tmp580 = _tmp478 * _tmp570;
  const Scalar _tmp581 = -_tmp580;
  const Scalar _tmp582 = _tmp456 * _tmp555;
  const Scalar _tmp583 = _tmp455 * _tmp573;
  const Scalar _tmp584 = _tmp583 * _tmp90;
  const Scalar _tmp585 = _tmp490 * _tmp518;
  const Scalar _tmp586 = _tmp496 * _tmp545 + _tmp533 * _tmp585;
  const Scalar _tmp587 = -_tmp390 * _tmp582 + _tmp390 * _tmp584 - _tmp438 * _tmp561 -
                         _tmp461 * _tmp575 + _tmp499 * _tmp576 + _tmp499 * _tmp578 -
                         _tmp499 * _tmp579 - _tmp505 * _tmp525 + _tmp505 * _tmp539 -
                         _tmp505 * _tmp569 + _tmp508 * _tmp520 + _tmp543 * _tmp555 -
                         _tmp555 * _tmp568 + _tmp581 + _tmp586;
  const Scalar _tmp588 = _tmp457 * _tmp505;
  const Scalar _tmp589 = _tmp505 * _tmp527;
  const Scalar _tmp590 = _tmp464 * _tmp505;
  const Scalar _tmp591 = _tmp108 * _tmp438;
  const Scalar _tmp592 = _tmp478 * _tmp545;
  const Scalar _tmp593 = -_tmp592;
  const Scalar _tmp594 = _tmp537 * _tmp573;
  const Scalar _tmp595 = _tmp456 * _tmp591;
  const Scalar _tmp596 = _tmp438 * _tmp530;
  const Scalar _tmp597 = -_tmp490 * _tmp534 - _tmp496 * _tmp570;
  const Scalar _tmp598 = _tmp390 * _tmp588 + _tmp390 * _tmp595 - _tmp461 * _tmp590 +
                         _tmp499 * _tmp589 + _tmp499 * _tmp596 - _tmp508 * _tmp511 -
                         _tmp509 * _tmp566 + _tmp514 * _tmp569 - _tmp518 * _tmp561 -
                         _tmp521 * _tmp565 + _tmp524 * _tmp583 - _tmp524 * _tmp594 -
                         _tmp543 * _tmp591 + _tmp593 + _tmp597;
  const Scalar _tmp599 = _tmp438 * _tmp549 - _tmp505 * _tmp550 + _tmp518 * _tmp548 + _tmp565;
  const Scalar _tmp600 = _tmp599 * _x0[0];
  const Scalar _tmp601 = -Scalar(1) / Scalar(2) * _tmp600;
  const Scalar _tmp602 = -_tmp438 * _tmp550 - _tmp505 * _tmp549 - _tmp514 * _tmp548 + _tmp519;
  const Scalar _tmp603 = _tmp602 * _x0[1];
  const Scalar _tmp604 = (Scalar(1) / Scalar(2)) * _tmp603;
  const Scalar _tmp605 = _tmp601 - _tmp604;
  const Scalar _tmp606 = _tmp547 * _x0[3] + _tmp554 + _tmp558 - _tmp572 * _x0[1] +
                         _tmp587 * _x0[0] + _tmp598 * _x0[2] + _tmp605;
  const Scalar _tmp607 = _tmp551 * _x0[0];
  const Scalar _tmp608 = (Scalar(1) / Scalar(2)) * _tmp607;
  const Scalar _tmp609 = _tmp556 * _x0[1];
  const Scalar _tmp610 = (Scalar(1) / Scalar(2)) * _tmp609;
  const Scalar _tmp611 = _tmp599 * _x0[2];
  const Scalar _tmp612 = (Scalar(1) / Scalar(2)) * _tmp611;
  const Scalar _tmp613 = _tmp602 * _x0[3];
  const Scalar _tmp614 = (Scalar(1) / Scalar(2)) * _tmp613;
  const Scalar _tmp615 = _tmp612 + _tmp614;
  const Scalar _tmp616 = _tmp547 * _x0[1] + _tmp572 * _x0[3] - _tmp587 * _x0[2] + _tmp598 * _x0[0] -
                         _tmp608 + _tmp610 + _tmp615;
  const Scalar _tmp617 = _tmp599 * _x0[3];
  const Scalar _tmp618 = (Scalar(1) / Scalar(2)) * _tmp617;
  const Scalar _tmp619 = -_tmp618;
  const Scalar _tmp620 = _tmp602 * _x0[2];
  const Scalar _tmp621 = (Scalar(1) / Scalar(2)) * _tmp620;
  const Scalar _tmp622 = _tmp551 * _x0[1];
  const Scalar _tmp623 = -Scalar(1) / Scalar(2) * _tmp622;
  const Scalar _tmp624 = _tmp556 * _x0[0];
  const Scalar _tmp625 = (Scalar(1) / Scalar(2)) * _tmp624;
  const Scalar _tmp626 = _tmp623 - _tmp625;
  const Scalar _tmp627 = -_tmp547 * _x0[0] + _tmp572 * _x0[2] + _tmp587 * _x0[3] +
                         _tmp598 * _x0[1] + _tmp619 + _tmp621 + _tmp626;
  const Scalar _tmp628 = _tmp599 * _x0[1];
  const Scalar _tmp629 = (Scalar(1) / Scalar(2)) * _tmp628;
  const Scalar _tmp630 = _tmp602 * _x0[0];
  const Scalar _tmp631 = (Scalar(1) / Scalar(2)) * _tmp630;
  const Scalar _tmp632 = -_tmp631;
  const Scalar _tmp633 = _tmp551 * _x0[3];
  const Scalar _tmp634 = (Scalar(1) / Scalar(2)) * _tmp633;
  const Scalar _tmp635 = _tmp556 * _x0[2];
  const Scalar _tmp636 = -Scalar(1) / Scalar(2) * _tmp635;
  const Scalar _tmp637 = -_tmp634 + _tmp636;
  const Scalar _tmp638 = -_tmp547 * _x0[2] - _tmp572 * _x0[0] - _tmp587 * _x0[1] +
                         _tmp598 * _x0[3] + _tmp629 + _tmp632 + _tmp637;
  const Scalar _tmp639 =
      -_tmp606 * _x_T_a[1] + _tmp616 * _x_T_a[3] + _tmp627 * _x_T_a[2] + _tmp638 * _x_T_a[0];
  const Scalar _tmp640 = _tmp155 + _tmp156 + _tmp157 + _tmp159;
  const Scalar _tmp641 = std::fabs(_tmp640);
  const Scalar _tmp642 = std::min<Scalar>(_tmp14, _tmp641);
  const Scalar _tmp643 = 1 - std::pow(_tmp642, Scalar(2));
  const Scalar _tmp644 = Scalar(1.0) / (_tmp643);
  const Scalar _tmp645 = std::acos(_tmp642);
  const Scalar _tmp646 = std::pow(_tmp645, Scalar(2));
  const Scalar _tmp647 = _tmp644 * _tmp646;
  const Scalar _tmp648 = _tmp206 * _tmp647 + _tmp212 * _tmp647 + _tmp218 * _tmp647 + _tmp31;
  const Scalar _tmp649 = std::sqrt(_tmp648);
  const Scalar _tmp650 = (Scalar(1) / Scalar(2)) * _tmp649;
  const Scalar _tmp651 = std::cos(_tmp650);
  const Scalar _tmp652 = _tmp168 + _tmp169 + _tmp170 + _tmp172;
  const Scalar _tmp653 = std::fabs(_tmp652);
  const Scalar _tmp654 = std::min<Scalar>(_tmp14, _tmp653);
  const Scalar _tmp655 = 1 - std::pow(_tmp654, Scalar(2));
  const Scalar _tmp656 = Scalar(1.0) / (_tmp655);
  const Scalar _tmp657 = std::acos(_tmp654);
  const Scalar _tmp658 = std::pow(_tmp657, Scalar(2));
  const Scalar _tmp659 = _tmp656 * _tmp658;
  const Scalar _tmp660 = _tmp184 * _tmp186;
  const Scalar _tmp661 = _tmp186 * _tmp196;
  const Scalar _tmp662 = _tmp190 * _tmp659 + _tmp31 + _tmp659 * _tmp660 + _tmp659 * _tmp661;
  const Scalar _tmp663 = std::sqrt(_tmp662);
  const Scalar _tmp664 = (Scalar(1) / Scalar(2)) * _tmp663;
  const Scalar _tmp665 = std::cos(_tmp664);
  const Scalar _tmp666 = _tmp651 * _tmp665;
  const Scalar _tmp667 = _tmp645 / std::sqrt(_tmp643);
  const Scalar _tmp668 = _tmp161 * _tmp667;
  const Scalar _tmp669 = _tmp211 * _tmp668;
  const Scalar _tmp670 = Scalar(1.0) / (_tmp663);
  const Scalar _tmp671 = std::pow(_tmp655, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp672 = _tmp657 * _tmp671;
  const Scalar _tmp673 = _tmp670 * _tmp672;
  const Scalar _tmp674 = Scalar(1.0) / (_tmp649);
  const Scalar _tmp675 = std::sin(_tmp650);
  const Scalar _tmp676 = std::sin(_tmp664);
  const Scalar _tmp677 = _tmp674 * _tmp675 * _tmp676;
  const Scalar _tmp678 = _tmp673 * _tmp677;
  const Scalar _tmp679 = _tmp225 * _tmp678;
  const Scalar _tmp680 = _tmp154 * _tmp668;
  const Scalar _tmp681 = _tmp175 * _tmp680;
  const Scalar _tmp682 = _tmp217 * _tmp668;
  const Scalar _tmp683 = _tmp673 * _tmp682;
  const Scalar _tmp684 = _tmp677 * _tmp683;
  const Scalar _tmp685 = -_tmp229 * _tmp684 + _tmp666 - _tmp669 * _tmp679 - 4 * _tmp678 * _tmp681;
  const Scalar _tmp686 = _tmp288 * _tmp685;
  const Scalar _tmp687 = _tmp665 * _tmp675;
  const Scalar _tmp688 = _tmp674 * _tmp687;
  const Scalar _tmp689 = _tmp667 * _tmp688;
  const Scalar _tmp690 = _tmp282 * _tmp689;
  const Scalar _tmp691 = _tmp669 * _tmp678;
  const Scalar _tmp692 = _tmp651 * _tmp676;
  const Scalar _tmp693 = _tmp174 * _tmp692;
  const Scalar _tmp694 = 2 * _tmp693;
  const Scalar _tmp695 = _tmp673 * _tmp694;
  const Scalar _tmp696 =
      -_tmp176 * _tmp691 + _tmp195 * _tmp695 + _tmp217 * _tmp690 + _tmp679 * _tmp680;
  const Scalar _tmp697 =
      _tmp176 * _tmp684 + _tmp183 * _tmp695 + _tmp211 * _tmp690 - _tmp229 * _tmp678 * _tmp680;
  const Scalar _tmp698 = _tmp673 * _tmp692;
  const Scalar _tmp699 =
      _tmp154 * _tmp690 - _tmp225 * _tmp684 + _tmp229 * _tmp691 + _tmp290 * _tmp698;
  const Scalar _tmp700 = -_tmp280 * _tmp697 - _tmp293 * _tmp696 - _tmp295 * _tmp699 + _tmp686;
  const Scalar _tmp701 = _tmp288 * _tmp696;
  const Scalar _tmp702 = _tmp279 * _tmp699;
  const Scalar _tmp703 = -_tmp239 * _tmp702 + _tmp293 * _tmp685 + _tmp295 * _tmp697 + _tmp701;
  const Scalar _tmp704 = _tmp288 * _tmp699;
  const Scalar _tmp705 = _tmp280 * _tmp696 - _tmp293 * _tmp697 + _tmp295 * _tmp685 + _tmp704;
  const Scalar _tmp706 = _tmp288 * _tmp697;
  const Scalar _tmp707 = _tmp280 * _tmp685 + _tmp293 * _tmp699 - _tmp295 * _tmp696 + _tmp706;
  const Scalar _tmp708 = _tmp700 * _y0[3] - _tmp703 * _y0[1] - _tmp705 * _y0[2] - _tmp707 * _y0[0];
  const Scalar _tmp709 = _tmp708 * _y_T_b[3];
  const Scalar _tmp710 = _tmp700 * _y0[1] + _tmp703 * _y0[3] - _tmp705 * _y0[0] + _tmp707 * _y0[2];
  const Scalar _tmp711 = _tmp710 * _y_T_b[1];
  const Scalar _tmp712 = _tmp700 * _y0[0] - _tmp703 * _y0[2] + _tmp705 * _y0[1] + _tmp707 * _y0[3];
  const Scalar _tmp713 = _tmp712 * _y_T_b[0];
  const Scalar _tmp714 = _tmp700 * _y0[2] + _tmp703 * _y0[0] + _tmp705 * _y0[3] - _tmp707 * _y0[1];
  const Scalar _tmp715 = _tmp714 * _y_T_b[2];
  const Scalar _tmp716 = _tmp709 - _tmp711 - _tmp713 - _tmp715;
  const Scalar _tmp717 =
      _tmp606 * _x_T_a[3] + _tmp616 * _x_T_a[1] - _tmp627 * _x_T_a[0] + _tmp638 * _x_T_a[2];
  const Scalar _tmp718 = _tmp710 * _y_T_b[3];
  const Scalar _tmp719 = _tmp712 * _y_T_b[2];
  const Scalar _tmp720 = _tmp714 * _y_T_b[0];
  const Scalar _tmp721 = _tmp708 * _y_T_b[1];
  const Scalar _tmp722 = _tmp718 - _tmp719 + _tmp720 + _tmp721;
  const Scalar _tmp723 =
      -_tmp606 * _x_T_a[2] - _tmp616 * _x_T_a[0] - _tmp627 * _x_T_a[1] + _tmp638 * _x_T_a[3];
  const Scalar _tmp724 = _tmp710 * _y_T_b[2];
  const Scalar _tmp725 = _tmp714 * _y_T_b[1];
  const Scalar _tmp726 = _tmp712 * _y_T_b[3];
  const Scalar _tmp727 = _tmp708 * _y_T_b[0];
  const Scalar _tmp728 = _tmp724 - _tmp725 + _tmp726 + _tmp727;
  const Scalar _tmp729 =
      _tmp606 * _x_T_a[0] - _tmp616 * _x_T_a[2] + _tmp627 * _x_T_a[3] + _tmp638 * _x_T_a[1];
  const Scalar _tmp730 = _tmp710 * _y_T_b[0];
  const Scalar _tmp731 = _tmp714 * _y_T_b[3];
  const Scalar _tmp732 = _tmp712 * _y_T_b[1];
  const Scalar _tmp733 = _tmp708 * _y_T_b[2];
  const Scalar _tmp734 = -_tmp730 + _tmp731 + _tmp732 + _tmp733;
  const Scalar _tmp735 =
      -_tmp639 * _tmp716 + _tmp717 * _tmp722 + _tmp723 * _tmp728 - _tmp729 * _tmp734;
  const Scalar _tmp736 =
      _tmp639 * _tmp734 - _tmp716 * _tmp729 - _tmp717 * _tmp728 + _tmp722 * _tmp723;
  const Scalar _tmp737 =
      _tmp639 * _tmp728 + _tmp716 * _tmp723 + _tmp717 * _tmp734 + _tmp722 * _tmp729;
  const Scalar _tmp738 =
      -_tmp639 * _tmp722 - _tmp716 * _tmp717 + _tmp723 * _tmp734 + _tmp728 * _tmp729;
  const Scalar _tmp739 =
      _a_T_b[0] * _tmp735 + _a_T_b[1] * _tmp736 + _a_T_b[2] * _tmp738 + _a_T_b[3] * _tmp737;
  const Scalar _tmp740 = -_tmp607 - _tmp609 - _tmp611 + _tmp613;
  const Scalar _tmp741 = _tmp740 * _x_T_a[3];
  const Scalar _tmp742 = _tmp617 + _tmp620 - _tmp622 + _tmp624;
  const Scalar _tmp743 = _tmp742 * _x_T_a[2];
  const Scalar _tmp744 = _tmp628 + _tmp630 + _tmp633 - _tmp635;
  const Scalar _tmp745 = _tmp744 * _x_T_a[0];
  const Scalar _tmp746 = _tmp552 + _tmp557 - _tmp600 + _tmp603;
  const Scalar _tmp747 = _tmp746 * _x_T_a[1];
  const Scalar _tmp748 = _tmp741 - _tmp743 - _tmp745 - _tmp747;
  const Scalar _tmp749 = _tmp742 * _x_T_a[3];
  const Scalar _tmp750 = _tmp744 * _x_T_a[1];
  const Scalar _tmp751 = _tmp746 * _x_T_a[0];
  const Scalar _tmp752 = _tmp740 * _x_T_a[2];
  const Scalar _tmp753 = _tmp749 + _tmp750 - _tmp751 + _tmp752;
  const Scalar _tmp754 = _tmp742 * _x_T_a[1];
  const Scalar _tmp755 = _tmp744 * _x_T_a[3];
  const Scalar _tmp756 = _tmp746 * _x_T_a[2];
  const Scalar _tmp757 = _tmp740 * _x_T_a[0];
  const Scalar _tmp758 = -_tmp754 + _tmp755 + _tmp756 + _tmp757;
  const Scalar _tmp759 = _tmp742 * _x_T_a[0];
  const Scalar _tmp760 = _tmp744 * _x_T_a[2];
  const Scalar _tmp761 = _tmp746 * _x_T_a[3];
  const Scalar _tmp762 = _tmp740 * _x_T_a[1];
  const Scalar _tmp763 = _tmp759 - _tmp760 + _tmp761 + _tmp762;
  const Scalar _tmp764 =
      -_tmp716 * _tmp753 - _tmp722 * _tmp758 + _tmp728 * _tmp763 + _tmp734 * _tmp748;
  const Scalar _tmp765 =
      _tmp716 * _tmp748 + _tmp722 * _tmp763 + _tmp728 * _tmp758 + _tmp734 * _tmp753;
  const Scalar _tmp766 =
      -_tmp716 * _tmp763 + _tmp722 * _tmp748 - _tmp728 * _tmp753 + _tmp734 * _tmp758;
  const Scalar _tmp767 =
      -_tmp716 * _tmp758 + _tmp722 * _tmp753 + _tmp728 * _tmp748 - _tmp734 * _tmp763;
  const Scalar _tmp768 =
      -_a_T_b[0] * _tmp765 - _a_T_b[1] * _tmp764 + _a_T_b[2] * _tmp766 + _a_T_b[3] * _tmp767;
  const Scalar _tmp769 = _a_T_b[2] * _tmp764;
  const Scalar _tmp770 = _a_T_b[3] * _tmp765;
  const Scalar _tmp771 = _a_T_b[1] * _tmp766;
  const Scalar _tmp772 = _a_T_b[0] * _tmp767;
  const Scalar _tmp773 = _tmp769 + _tmp770 + _tmp771 + _tmp772;
  const Scalar _tmp774 = std::fabs(_tmp773);
  const Scalar _tmp775 = ((((_tmp14 - _tmp774) > 0) - ((_tmp14 - _tmp774) < 0)) + 1) *
                         (((_tmp773) > 0) - ((_tmp773) < 0));
  const Scalar _tmp776 = std::min<Scalar>(_tmp14, _tmp774);
  const Scalar _tmp777 = 1 - std::pow(_tmp776, Scalar(2));
  const Scalar _tmp778 = 2 * std::min<Scalar>(0, (((_tmp769 + _tmp770 + _tmp771 + _tmp772) > 0) -
                                                  ((_tmp769 + _tmp770 + _tmp771 + _tmp772) < 0))) +
                         1;
  const Scalar _tmp779 = _tmp778 * std::acos(_tmp776);
  const Scalar _tmp780 = _tmp776 * _tmp779 / (_tmp777 * std::sqrt(_tmp777));
  const Scalar _tmp781 = _tmp775 * _tmp780;
  const Scalar _tmp782 = _tmp768 * _tmp781;
  const Scalar _tmp783 = _tmp782 * sqrt_info(0, 0);
  const Scalar _tmp784 = -2 * std::pow(_tmp744, Scalar(2));
  const Scalar _tmp785 = -2 * std::pow(_tmp742, Scalar(2));
  const Scalar _tmp786 = _tmp784 + _tmp785 + 1;
  const Scalar _tmp787 = 2 * _tmp744;
  const Scalar _tmp788 = _tmp740 * _tmp787;
  const Scalar _tmp789 = 2 * _tmp742;
  const Scalar _tmp790 = _tmp746 * _tmp789;
  const Scalar _tmp791 = -_tmp788 + _tmp790;
  const Scalar _tmp792 = _tmp740 * _tmp789;
  const Scalar _tmp793 = _tmp746 * _tmp787;
  const Scalar _tmp794 = _tmp792 + _tmp793;
  const Scalar _tmp795 = _tmp357 + _tmp786 * _x_T_a[5] + _tmp791 * _x_T_a[6] + _tmp794 * _x_T_a[4];
  const Scalar _tmp796 = 2 * _tmp758;
  const Scalar _tmp797 = _tmp723 * _tmp796;
  const Scalar _tmp798 = 2 * _tmp748;
  const Scalar _tmp799 = _tmp639 * _tmp798;
  const Scalar _tmp800 = 2 * _tmp763;
  const Scalar _tmp801 = 2 * _tmp753;
  const Scalar _tmp802 = _tmp717 * _tmp800 + _tmp729 * _tmp801;
  const Scalar _tmp803 = -_tmp797 - _tmp799 + _tmp802;
  const Scalar _tmp804 = 1 - 2 * std::pow(_tmp746, Scalar(2));
  const Scalar _tmp805 = _tmp784 + _tmp804;
  const Scalar _tmp806 = _tmp788 + _tmp790;
  const Scalar _tmp807 = 2 * _tmp746;
  const Scalar _tmp808 = _tmp740 * _tmp807;
  const Scalar _tmp809 = _tmp742 * _tmp787;
  const Scalar _tmp810 = -_tmp808 + _tmp809;
  const Scalar _tmp811 = _tmp342 + _tmp805 * _x_T_a[6] + _tmp806 * _x_T_a[5] + _tmp810 * _x_T_a[4];
  const Scalar _tmp812 = 4 * _tmp758;
  const Scalar _tmp813 = -_tmp639 * _tmp812;
  const Scalar _tmp814 = 4 * _tmp763;
  const Scalar _tmp815 = -_tmp729 * _tmp814;
  const Scalar _tmp816 = _tmp813 + _tmp815;
  const Scalar _tmp817 = _tmp785 + _tmp804;
  const Scalar _tmp818 = -_tmp792 + _tmp793;
  const Scalar _tmp819 = _tmp808 + _tmp809;
  const Scalar _tmp820 = _tmp352 + _tmp817 * _x_T_a[4] + _tmp818 * _x_T_a[5] + _tmp819 * _x_T_a[6];
  const Scalar _tmp821 = _tmp729 * _tmp798;
  const Scalar _tmp822 = _tmp723 * _tmp800;
  const Scalar _tmp823 = _tmp639 * _tmp801 + _tmp717 * _tmp796;
  const Scalar _tmp824 = _tmp821 + _tmp822 + _tmp823;
  const Scalar _tmp825 = -2 * std::pow(_tmp763, Scalar(2));
  const Scalar _tmp826 = 1 - 2 * std::pow(_tmp758, Scalar(2));
  const Scalar _tmp827 = _tmp825 + _tmp826;
  const Scalar _tmp828 = _tmp638 * _tmp807;
  const Scalar _tmp829 = 2 * _tmp740;
  const Scalar _tmp830 = _tmp627 * _tmp829;
  const Scalar _tmp831 = _tmp606 * _tmp787 + _tmp616 * _tmp789;
  const Scalar _tmp832 = _tmp638 * _tmp787;
  const Scalar _tmp833 = _tmp616 * _tmp829;
  const Scalar _tmp834 = _tmp606 * _tmp807 + _tmp627 * _tmp789;
  const Scalar _tmp835 = 4 * _tmp746;
  const Scalar _tmp836 = -_tmp627 * _tmp835;
  const Scalar _tmp837 = 4 * _tmp744;
  const Scalar _tmp838 = -_tmp616 * _tmp837;
  const Scalar _tmp839 = _x_T_a[4] * (-_tmp828 - _tmp830 + _tmp831) +
                         _x_T_a[5] * (_tmp832 + _tmp833 + _tmp834) +
                         _x_T_a[6] * (_tmp836 + _tmp838);
  const Scalar _tmp840 = -2 * std::pow(_tmp712, Scalar(2));
  const Scalar _tmp841 = 1 - 2 * std::pow(_tmp714, Scalar(2));
  const Scalar _tmp842 = _tmp840 + _tmp841;
  const Scalar _tmp843 = 2 * _tmp710;
  const Scalar _tmp844 = _tmp714 * _tmp843;
  const Scalar _tmp845 = 2 * _tmp708;
  const Scalar _tmp846 = _tmp712 * _tmp845;
  const Scalar _tmp847 = _tmp844 - _tmp846;
  const Scalar _tmp848 = _tmp712 * _tmp843;
  const Scalar _tmp849 = _tmp714 * _tmp845;
  const Scalar _tmp850 = _tmp848 + _tmp849;
  const Scalar _tmp851 = _tmp332 + _tmp842 * _y_T_b[5] + _tmp847 * _y_T_b[6] + _tmp850 * _y_T_b[4];
  const Scalar _tmp852 = 4 * _tmp742;
  const Scalar _tmp853 = -_tmp606 * _tmp852;
  const Scalar _tmp854 = _tmp638 * _tmp789;
  const Scalar _tmp855 = _tmp606 * _tmp829;
  const Scalar _tmp856 = _tmp616 * _tmp807 + _tmp627 * _tmp787;
  const Scalar _tmp857 = _x_T_a[4] * (_tmp836 + _tmp853) +
                         _x_T_a[5] * (-_tmp854 - _tmp855 + _tmp856) +
                         _x_T_a[6] * (_tmp828 + _tmp830 + _tmp831);
  const Scalar _tmp858 = _tmp748 * _tmp800;
  const Scalar _tmp859 = _tmp758 * _tmp801;
  const Scalar _tmp860 = _tmp858 + _tmp859;
  const Scalar _tmp861 = -2 * std::pow(_tmp710, Scalar(2));
  const Scalar _tmp862 = _tmp840 + _tmp861 + 1;
  const Scalar _tmp863 = _tmp844 + _tmp846;
  const Scalar _tmp864 = 2 * _tmp712;
  const Scalar _tmp865 = _tmp714 * _tmp864;
  const Scalar _tmp866 = _tmp710 * _tmp845;
  const Scalar _tmp867 = _tmp865 - _tmp866;
  const Scalar _tmp868 = _tmp362 + _tmp862 * _y_T_b[6] + _tmp863 * _y_T_b[5] + _tmp867 * _y_T_b[4];
  const Scalar _tmp869 = _tmp841 + _tmp861;
  const Scalar _tmp870 = _tmp865 + _tmp866;
  const Scalar _tmp871 = _tmp848 - _tmp849;
  const Scalar _tmp872 = _tmp364 + _tmp869 * _y_T_b[4] + _tmp870 * _y_T_b[6] + _tmp871 * _y_T_b[5];
  const Scalar _tmp873 = _x_T_a[4] * (_tmp854 + _tmp855 + _tmp856) +
                         _x_T_a[5] * (_tmp838 + _tmp853) +
                         _x_T_a[6] * (-_tmp832 - _tmp833 + _tmp834);
  const Scalar _tmp874 = _tmp758 * _tmp798;
  const Scalar _tmp875 = _tmp753 * _tmp800;
  const Scalar _tmp876 = -_tmp874 + _tmp875;
  const Scalar _tmp877 = -_tmp795 * _tmp803 + _tmp803 * _tmp851 - _tmp811 * _tmp816 +
                         _tmp816 * _tmp868 - _tmp820 * _tmp824 + _tmp824 * _tmp872 -
                         _tmp827 * _tmp839 - _tmp857 * _tmp860 - _tmp873 * _tmp876;
  const Scalar _tmp878 =
      -_a_T_b[0] * _tmp736 + _a_T_b[1] * _tmp735 - _a_T_b[2] * _tmp737 + _a_T_b[3] * _tmp738;
  const Scalar _tmp879 = _tmp779 / std::sqrt(_tmp777);
  const Scalar _tmp880 = 2 * _tmp879;
  const Scalar _tmp881 = _tmp880 * sqrt_info(0, 2);
  const Scalar _tmp882 =
      -_a_T_b[0] * _tmp766 + _a_T_b[1] * _tmp767 - _a_T_b[2] * _tmp765 + _a_T_b[3] * _tmp764;
  const Scalar _tmp883 = _tmp781 * _tmp882;
  const Scalar _tmp884 = _tmp883 * sqrt_info(0, 2);
  const Scalar _tmp885 = _tmp717 * _tmp798;
  const Scalar _tmp886 = _tmp723 * _tmp801;
  const Scalar _tmp887 = _tmp639 * _tmp800 + _tmp729 * _tmp796;
  const Scalar _tmp888 = _tmp885 + _tmp886 + _tmp887;
  const Scalar _tmp889 = -_tmp821 - _tmp822 + _tmp823;
  const Scalar _tmp890 = -2 * std::pow(_tmp753, Scalar(2));
  const Scalar _tmp891 = _tmp825 + _tmp890 + 1;
  const Scalar _tmp892 = -_tmp858 + _tmp859;
  const Scalar _tmp893 = _tmp748 * _tmp801;
  const Scalar _tmp894 = _tmp758 * _tmp800;
  const Scalar _tmp895 = _tmp893 + _tmp894;
  const Scalar _tmp896 = 4 * _tmp753;
  const Scalar _tmp897 = -_tmp717 * _tmp896;
  const Scalar _tmp898 = _tmp815 + _tmp897;
  const Scalar _tmp899 = -_tmp795 * _tmp888 - _tmp811 * _tmp889 - _tmp820 * _tmp898 -
                         _tmp839 * _tmp892 + _tmp851 * _tmp888 - _tmp857 * _tmp891 +
                         _tmp868 * _tmp889 + _tmp872 * _tmp898 - _tmp873 * _tmp895;
  const Scalar _tmp900 = _tmp775 * (_a_T_b[0] * _tmp764 - _a_T_b[1] * _tmp765 -
                                    _a_T_b[2] * _tmp767 + _a_T_b[3] * _tmp766);
  const Scalar _tmp901 = _tmp780 * _tmp900;
  const Scalar _tmp902 = _tmp739 * _tmp901;
  const Scalar _tmp903 =
      _a_T_b[0] * _tmp738 - _a_T_b[1] * _tmp737 - _a_T_b[2] * _tmp735 + _a_T_b[3] * _tmp736;
  const Scalar _tmp904 = _tmp880 * _tmp903;
  const Scalar _tmp905 = _tmp778 / _tmp777;
  const Scalar _tmp906 = _tmp775 * _tmp905;
  const Scalar _tmp907 = _tmp768 * _tmp906;
  const Scalar _tmp908 = _tmp907 * sqrt_info(0, 0);
  const Scalar _tmp909 = _tmp880 * (-_a_T_b[0] * _tmp737 - _a_T_b[1] * _tmp738 +
                                    _a_T_b[2] * _tmp736 + _a_T_b[3] * _tmp735);
  const Scalar _tmp910 = _tmp900 * _tmp905;
  const Scalar _tmp911 = _tmp910 * sqrt_info(0, 1);
  const Scalar _tmp912 = _tmp882 * _tmp906;
  const Scalar _tmp913 = _tmp912 * sqrt_info(0, 2);
  const Scalar _tmp914 = _tmp797 + _tmp799 + _tmp802;
  const Scalar _tmp915 = -_tmp885 - _tmp886 + _tmp887;
  const Scalar _tmp916 = _tmp874 + _tmp875;
  const Scalar _tmp917 = _tmp813 + _tmp897;
  const Scalar _tmp918 = _tmp826 + _tmp890;
  const Scalar _tmp919 = -_tmp893 + _tmp894;
  const Scalar _tmp920 = -_tmp795 * _tmp917 - _tmp811 * _tmp914 - _tmp820 * _tmp915 -
                         _tmp839 * _tmp916 + _tmp851 * _tmp917 - _tmp857 * _tmp919 +
                         _tmp868 * _tmp914 + _tmp872 * _tmp915 - _tmp873 * _tmp918;
  const Scalar _tmp921 = _tmp782 * sqrt_info(1, 0);
  const Scalar _tmp922 = _tmp880 * sqrt_info(1, 2);
  const Scalar _tmp923 = _tmp883 * sqrt_info(1, 2);
  const Scalar _tmp924 = _tmp383 * _tmp879;
  const Scalar _tmp925 = _tmp907 * sqrt_info(1, 0);
  const Scalar _tmp926 = _tmp910 * sqrt_info(1, 1);
  const Scalar _tmp927 = _tmp912 * sqrt_info(1, 2);
  const Scalar _tmp928 = _tmp782 * sqrt_info(2, 0);
  const Scalar _tmp929 = _tmp880 * sqrt_info(2, 2);
  const Scalar _tmp930 = _tmp883 * sqrt_info(2, 2);
  const Scalar _tmp931 = _tmp907 * sqrt_info(2, 0);
  const Scalar _tmp932 = _tmp910 * sqrt_info(2, 1);
  const Scalar _tmp933 = _tmp912 * sqrt_info(2, 2);
  const Scalar _tmp934 = _tmp782 * sqrt_info(3, 0);
  const Scalar _tmp935 = _tmp880 * sqrt_info(3, 2);
  const Scalar _tmp936 = _tmp883 * sqrt_info(3, 2);
  const Scalar _tmp937 = _tmp879 * _tmp903;
  const Scalar _tmp938 = _tmp907 * sqrt_info(3, 0);
  const Scalar _tmp939 = _tmp910 * sqrt_info(3, 1);
  const Scalar _tmp940 = _tmp912 * sqrt_info(3, 2);
  const Scalar _tmp941 = _tmp782 * sqrt_info(4, 0);
  const Scalar _tmp942 = _tmp878 * _tmp880;
  const Scalar _tmp943 = _tmp883 * sqrt_info(4, 2);
  const Scalar _tmp944 = _tmp907 * sqrt_info(4, 0);
  const Scalar _tmp945 = _tmp910 * sqrt_info(4, 1);
  const Scalar _tmp946 = _tmp912 * sqrt_info(4, 2);
  const Scalar _tmp947 = _tmp782 * sqrt_info(5, 0);
  const Scalar _tmp948 = _tmp883 * sqrt_info(5, 2);
  const Scalar _tmp949 = _tmp900 * sqrt_info(5, 1);
  const Scalar _tmp950 = _tmp780 * _tmp949;
  const Scalar _tmp951 = _tmp907 * sqrt_info(5, 0);
  const Scalar _tmp952 = _tmp905 * _tmp949;
  const Scalar _tmp953 = _tmp912 * sqrt_info(5, 2);
  const Scalar _tmp954 = _tmp492 + _tmp493 - _tmp494 - _tmp495;
  const Scalar _tmp955 = _tmp536 * _tmp954;
  const Scalar _tmp956 = _tmp463 * _tmp955;
  const Scalar _tmp957 = _tmp114 * _tmp505;
  const Scalar _tmp958 = _tmp481 * _tmp954;
  const Scalar _tmp959 = -_tmp486 + _tmp487 + _tmp488 - _tmp489;
  const Scalar _tmp960 = _tmp479 * _tmp524 + _tmp480 * _tmp959;
  const Scalar _tmp961 = -_tmp472 * _tmp955 + _tmp472 * _tmp958 - _tmp473 * _tmp955 +
                         _tmp473 * _tmp958 + _tmp478 * _tmp491 - _tmp484 * _tmp955 +
                         _tmp484 * _tmp958 + _tmp960;
  const Scalar _tmp962 = _tmp540 * _tmp961;
  const Scalar _tmp963 = _tmp529 * _tmp961;
  const Scalar _tmp964 = _tmp456 * _tmp954;
  const Scalar _tmp965 = _tmp515 * _tmp961;
  const Scalar _tmp966 = _tmp119 * _tmp460 * _tmp466;
  const Scalar _tmp967 = _tmp451 * _tmp966;
  const Scalar _tmp968 = _tmp505 * _tmp967 - _tmp570 * _tmp959;
  const Scalar _tmp969 = -_tmp438 * _tmp965 - _tmp505 * _tmp962 + _tmp507 * _tmp520 * _tmp961 +
                         _tmp555 * _tmp956 - _tmp555 * _tmp963 + _tmp559 - _tmp575 * _tmp955 +
                         _tmp576 * _tmp961 + _tmp578 * _tmp961 - _tmp579 * _tmp961 -
                         _tmp582 * _tmp954 + _tmp584 * _tmp954 + _tmp956 * _tmp957 -
                         _tmp957 * _tmp964 + _tmp968;
  const Scalar _tmp970 = -_tmp558;
  const Scalar _tmp971 = _tmp114 * _tmp518;
  const Scalar _tmp972 = _tmp519 * _tmp961;
  const Scalar _tmp973 = _tmp471 * _tmp507;
  const Scalar _tmp974 = _tmp108 * _tmp963;
  const Scalar _tmp975 = _tmp518 * _tmp967 + _tmp534 * _tmp959;
  const Scalar _tmp976 = -_tmp458 * _tmp954 + _tmp465 * _tmp955 + _tmp505 * _tmp974 +
                         _tmp512 * _tmp961 - _tmp514 * _tmp965 - _tmp518 * _tmp962 +
                         _tmp520 * _tmp972 - _tmp528 * _tmp961 - _tmp542 * _tmp956 +
                         _tmp542 * _tmp964 + _tmp593 + _tmp956 * _tmp971 - _tmp961 * _tmp973 -
                         _tmp964 * _tmp971 + _tmp975;
  const Scalar _tmp977 = _tmp114 * _tmp438;
  const Scalar _tmp978 = _tmp565 * _tmp961;
  const Scalar _tmp979 = _tmp509 * _tmp961;
  const Scalar _tmp980 = _tmp518 * _tmp527;
  const Scalar _tmp981 = -_tmp438 * _tmp967 + _tmp544 * _tmp959;
  const Scalar _tmp982 = _tmp438 * _tmp962 + _tmp471 * _tmp978 - _tmp505 * _tmp965 +
                         _tmp511 * _tmp972 - _tmp520 * _tmp979 + _tmp560 * _tmp956 -
                         _tmp560 * _tmp963 - _tmp560 * _tmp964 + _tmp563 * _tmp955 -
                         _tmp567 * _tmp954 + _tmp580 - _tmp956 * _tmp977 - _tmp961 * _tmp980 +
                         _tmp964 * _tmp977 + _tmp981;
  const Scalar _tmp983 = -_tmp535;
  const Scalar _tmp984 = _tmp114 * _tmp574;
  const Scalar _tmp985 = _tmp114 * _tmp583;
  const Scalar _tmp986 = _tmp507 * _tmp511;
  const Scalar _tmp987 = -_tmp545 * _tmp959 - _tmp573 * _tmp966;
  const Scalar _tmp988 = _tmp438 * _tmp974 - _tmp471 * _tmp979 + _tmp514 * _tmp962 -
                         _tmp518 * _tmp965 - _tmp520 * _tmp978 + _tmp588 * _tmp954 +
                         _tmp589 * _tmp961 - _tmp590 * _tmp955 - _tmp591 * _tmp956 +
                         _tmp591 * _tmp964 + _tmp954 * _tmp985 - _tmp955 * _tmp984 -
                         _tmp961 * _tmp986 + _tmp983 + _tmp987;
  const Scalar _tmp989 = _tmp553 + _tmp605 - _tmp969 * _x0[1] + _tmp970 - _tmp976 * _x0[2] -
                         _tmp982 * _x0[0] + _tmp988 * _x0[3];
  const Scalar _tmp990 = -_tmp621;
  const Scalar _tmp991 = _tmp618 + _tmp626 - _tmp969 * _x0[2] + _tmp976 * _x0[1] +
                         _tmp982 * _x0[3] + _tmp988 * _x0[0] + _tmp990;
  const Scalar _tmp992 = -_tmp629;
  const Scalar _tmp993 = _tmp631 + _tmp637 + _tmp969 * _x0[0] + _tmp976 * _x0[3] -
                         _tmp982 * _x0[1] + _tmp988 * _x0[2] + _tmp992;
  const Scalar _tmp994 = _tmp608 - _tmp610 + _tmp615 + _tmp969 * _x0[3] - _tmp976 * _x0[0] +
                         _tmp982 * _x0[2] + _tmp988 * _x0[1];
  const Scalar _tmp995 =
      _tmp989 * _x_T_a[1] - _tmp991 * _x_T_a[2] + _tmp993 * _x_T_a[0] + _tmp994 * _x_T_a[3];
  const Scalar _tmp996 =
      _tmp989 * _x_T_a[0] + _tmp991 * _x_T_a[3] - _tmp993 * _x_T_a[1] + _tmp994 * _x_T_a[2];
  const Scalar _tmp997 =
      _tmp989 * _x_T_a[3] - _tmp991 * _x_T_a[0] - _tmp993 * _x_T_a[2] - _tmp994 * _x_T_a[1];
  const Scalar _tmp998 =
      _tmp989 * _x_T_a[2] + _tmp991 * _x_T_a[1] + _tmp993 * _x_T_a[3] - _tmp994 * _x_T_a[0];
  const Scalar _tmp999 =
      -_tmp716 * _tmp995 + _tmp722 * _tmp997 - _tmp728 * _tmp998 + _tmp734 * _tmp996;
  const Scalar _tmp1000 =
      -_tmp716 * _tmp996 + _tmp722 * _tmp998 + _tmp728 * _tmp997 - _tmp734 * _tmp995;
  const Scalar _tmp1001 =
      _tmp716 * _tmp997 + _tmp722 * _tmp995 + _tmp728 * _tmp996 + _tmp734 * _tmp998;
  const Scalar _tmp1002 =
      -_tmp716 * _tmp998 - _tmp722 * _tmp996 + _tmp728 * _tmp995 + _tmp734 * _tmp997;
  const Scalar _tmp1003 =
      _a_T_b[0] * _tmp1000 + _a_T_b[1] * _tmp999 + _a_T_b[2] * _tmp1002 + _a_T_b[3] * _tmp1001;
  const Scalar _tmp1004 = _tmp880 * (-_a_T_b[0] * _tmp1001 - _a_T_b[1] * _tmp1002 +
                                     _a_T_b[2] * _tmp999 + _a_T_b[3] * _tmp1000);
  const Scalar _tmp1005 = _tmp1003 * _tmp901;
  const Scalar _tmp1006 =
      -_a_T_b[0] * _tmp999 + _a_T_b[1] * _tmp1000 - _a_T_b[2] * _tmp1001 + _a_T_b[3] * _tmp1002;
  const Scalar _tmp1007 = _tmp798 * _tmp998;
  const Scalar _tmp1008 = _tmp801 * _tmp997;
  const Scalar _tmp1009 = _tmp796 * _tmp995 + _tmp800 * _tmp996;
  const Scalar _tmp1010 = _tmp1007 + _tmp1008 + _tmp1009;
  const Scalar _tmp1011 = _tmp807 * _tmp989;
  const Scalar _tmp1012 = _tmp829 * _tmp994;
  const Scalar _tmp1013 = _tmp787 * _tmp993 + _tmp789 * _tmp991;
  const Scalar _tmp1014 = -_tmp837 * _tmp991;
  const Scalar _tmp1015 = -_tmp835 * _tmp994;
  const Scalar _tmp1016 = _tmp787 * _tmp989;
  const Scalar _tmp1017 = _tmp829 * _tmp991;
  const Scalar _tmp1018 = _tmp789 * _tmp994 + _tmp807 * _tmp993;
  const Scalar _tmp1019 = _x_T_a[4] * (-_tmp1011 - _tmp1012 + _tmp1013) +
                          _x_T_a[5] * (_tmp1016 + _tmp1017 + _tmp1018) +
                          _x_T_a[6] * (_tmp1014 + _tmp1015);
  const Scalar _tmp1020 = -_tmp852 * _tmp993;
  const Scalar _tmp1021 = _tmp789 * _tmp989;
  const Scalar _tmp1022 = _tmp829 * _tmp993;
  const Scalar _tmp1023 = _tmp787 * _tmp994 + _tmp807 * _tmp991;
  const Scalar _tmp1024 = _x_T_a[4] * (_tmp1015 + _tmp1020) +
                          _x_T_a[5] * (-_tmp1021 - _tmp1022 + _tmp1023) +
                          _x_T_a[6] * (_tmp1011 + _tmp1012 + _tmp1013);
  const Scalar _tmp1025 = _tmp798 * _tmp995;
  const Scalar _tmp1026 = _tmp800 * _tmp997;
  const Scalar _tmp1027 = _tmp796 * _tmp998 + _tmp801 * _tmp996;
  const Scalar _tmp1028 = -_tmp1025 - _tmp1026 + _tmp1027;
  const Scalar _tmp1029 = _x_T_a[4] * (_tmp1021 + _tmp1022 + _tmp1023) +
                          _x_T_a[5] * (_tmp1014 + _tmp1020) +
                          _x_T_a[6] * (-_tmp1016 - _tmp1017 + _tmp1018);
  const Scalar _tmp1030 = -_tmp814 * _tmp995;
  const Scalar _tmp1031 = -_tmp896 * _tmp998;
  const Scalar _tmp1032 = _tmp1030 + _tmp1031;
  const Scalar _tmp1033 = -_tmp1010 * _tmp795 + _tmp1010 * _tmp851 - _tmp1019 * _tmp892 -
                          _tmp1024 * _tmp891 - _tmp1028 * _tmp811 + _tmp1028 * _tmp868 -
                          _tmp1029 * _tmp895 - _tmp1032 * _tmp820 + _tmp1032 * _tmp872;
  const Scalar _tmp1034 = -_tmp1007 - _tmp1008 + _tmp1009;
  const Scalar _tmp1035 = -_tmp812 * _tmp996;
  const Scalar _tmp1036 = _tmp1031 + _tmp1035;
  const Scalar _tmp1037 = _tmp798 * _tmp996;
  const Scalar _tmp1038 = _tmp796 * _tmp997;
  const Scalar _tmp1039 = _tmp800 * _tmp998 + _tmp801 * _tmp995;
  const Scalar _tmp1040 = _tmp1037 + _tmp1038 + _tmp1039;
  const Scalar _tmp1041 = -_tmp1019 * _tmp916 - _tmp1024 * _tmp919 - _tmp1029 * _tmp918 -
                          _tmp1034 * _tmp820 + _tmp1034 * _tmp872 - _tmp1036 * _tmp795 +
                          _tmp1036 * _tmp851 - _tmp1040 * _tmp811 + _tmp1040 * _tmp868;
  const Scalar _tmp1042 =
      _a_T_b[0] * _tmp1002 - _a_T_b[1] * _tmp1001 - _a_T_b[2] * _tmp1000 + _a_T_b[3] * _tmp999;
  const Scalar _tmp1043 = _tmp880 * sqrt_info(0, 1);
  const Scalar _tmp1044 = _tmp1025 + _tmp1026 + _tmp1027;
  const Scalar _tmp1045 = _tmp1030 + _tmp1035;
  const Scalar _tmp1046 = -_tmp1037 - _tmp1038 + _tmp1039;
  const Scalar _tmp1047 = -_tmp1019 * _tmp827 - _tmp1024 * _tmp860 - _tmp1029 * _tmp876 -
                          _tmp1044 * _tmp820 + _tmp1044 * _tmp872 - _tmp1045 * _tmp811 +
                          _tmp1045 * _tmp868 - _tmp1046 * _tmp795 + _tmp1046 * _tmp851;
  const Scalar _tmp1048 = _tmp1003 * _tmp883;
  const Scalar _tmp1049 = _tmp901 * sqrt_info(2, 1);
  const Scalar _tmp1050 = _tmp880 * sqrt_info(2, 1);
  const Scalar _tmp1051 = _tmp384 * _tmp879;
  const Scalar _tmp1052 = _tmp880 * sqrt_info(4, 2);
  const Scalar _tmp1053 = _tmp880 * sqrt_info(4, 1);
  const Scalar _tmp1054 = _tmp880 * sqrt_info(5, 2);
  const Scalar _tmp1055 = _tmp385 * _tmp879;
  const Scalar _tmp1056 = _tmp490 * _tmp536;
  const Scalar _tmp1057 = _tmp386 - _tmp387 + _tmp388 - _tmp389;
  const Scalar _tmp1058 = _tmp1057 * _tmp491 + _tmp480 * _tmp954;
  const Scalar _tmp1059 = -_tmp1056 * _tmp472 - _tmp1056 * _tmp473 - _tmp1056 * _tmp484 + _tmp1058 +
                          _tmp478 * _tmp497 + _tmp482 * _tmp490 + _tmp483 * _tmp490 +
                          _tmp485 * _tmp490;
  const Scalar _tmp1060 = _tmp1059 * _tmp515;
  const Scalar _tmp1061 = _tmp538 * _tmp585;
  const Scalar _tmp1062 = _tmp1059 * _tmp520;
  const Scalar _tmp1063 = _tmp456 * _tmp490;
  const Scalar _tmp1064 = _tmp529 * _tmp555;
  const Scalar _tmp1065 = _tmp1056 * _tmp463;
  const Scalar _tmp1066 = _tmp1059 * _tmp505;
  const Scalar _tmp1067 = _tmp1057 * _tmp544 - _tmp570 * _tmp954;
  const Scalar _tmp1068 = -_tmp1056 * _tmp575 - _tmp1059 * _tmp1064 + _tmp1059 * _tmp576 +
                          _tmp1059 * _tmp578 - _tmp1059 * _tmp579 - _tmp1060 * _tmp438 +
                          _tmp1061 * _tmp108 + _tmp1062 * _tmp507 - _tmp1063 * _tmp957 +
                          _tmp1065 * _tmp957 - _tmp1066 * _tmp540 + _tmp1067 + _tmp490 * _tmp584 -
                          _tmp522 * _tmp585 + _tmp592;
  const Scalar _tmp1069 = _tmp529 * _tmp560;
  const Scalar _tmp1070 = _tmp1059 * _tmp471;
  const Scalar _tmp1071 = _tmp1059 * _tmp438;
  const Scalar _tmp1072 = _tmp537 * _tmp90;
  const Scalar _tmp1073 = _tmp1072 * _tmp451;
  const Scalar _tmp1074 = _tmp1057 * _tmp570 + _tmp544 * _tmp954;
  const Scalar _tmp1075 = -_tmp1059 * _tmp1069 + _tmp1059 * _tmp562 - _tmp1059 * _tmp980 -
                          _tmp1060 * _tmp505 - _tmp1062 * _tmp509 - _tmp1063 * _tmp560 +
                          _tmp1063 * _tmp977 + _tmp1065 * _tmp560 - _tmp1065 * _tmp977 +
                          _tmp1070 * _tmp565 + _tmp1071 * _tmp540 + _tmp1073 * _tmp585 + _tmp1074 -
                          _tmp457 * _tmp585 + _tmp983;
  const Scalar _tmp1076 = _tmp1059 * _tmp540;
  const Scalar _tmp1077 = _tmp114 * _tmp456;
  const Scalar _tmp1078 = -_tmp1057 * _tmp545 + _tmp534 * _tmp954;
  const Scalar _tmp1079 = _tmp1056 * _tmp465 + _tmp1059 * _tmp512 - _tmp1059 * _tmp516 +
                          _tmp1061 * _tmp114 + _tmp1062 * _tmp519 + _tmp1063 * _tmp542 -
                          _tmp1065 * _tmp542 + _tmp1066 * _tmp530 - _tmp1070 * _tmp507 -
                          _tmp1071 * _tmp527 - _tmp1076 * _tmp518 - _tmp1077 * _tmp585 + _tmp1078 -
                          _tmp458 * _tmp490 + _tmp559;
  const Scalar _tmp1080 = -_tmp1057 * _tmp534 - _tmp545 * _tmp954;
  const Scalar _tmp1081 = -_tmp1056 * _tmp590 - _tmp1056 * _tmp984 - _tmp1059 * _tmp986 -
                          _tmp1060 * _tmp518 - _tmp1062 * _tmp565 + _tmp1063 * _tmp591 -
                          _tmp1065 * _tmp591 + _tmp1066 * _tmp527 - _tmp1070 * _tmp509 +
                          _tmp1071 * _tmp530 + _tmp1076 * _tmp514 + _tmp1080 + _tmp490 * _tmp588 +
                          _tmp490 * _tmp985 + _tmp581;
  const Scalar _tmp1082 = -_tmp1068 * _x0[1] - _tmp1075 * _x0[0] - _tmp1079 * _x0[2] +
                          _tmp1081 * _x0[3] + _tmp619 + _tmp623 + _tmp625 + _tmp990;
  const Scalar _tmp1083 = _tmp1068 * _x0[3] + _tmp1075 * _x0[2] - _tmp1079 * _x0[0] +
                          _tmp1081 * _x0[1] + _tmp632 + _tmp634 + _tmp636 + _tmp992;
  const Scalar _tmp1084 = _tmp1068 * _x0[0] - _tmp1075 * _x0[1] + _tmp1079 * _x0[3] +
                          _tmp1081 * _x0[2] + _tmp608 + _tmp610 - _tmp612 + _tmp614;
  const Scalar _tmp1085 = -_tmp1068 * _x0[2] + _tmp1075 * _x0[3] + _tmp1079 * _x0[1] +
                          _tmp1081 * _x0[0] + _tmp554 + _tmp601 + _tmp604 + _tmp970;
  const Scalar _tmp1086 =
      _tmp1082 * _x_T_a[2] - _tmp1083 * _x_T_a[0] + _tmp1084 * _x_T_a[3] + _tmp1085 * _x_T_a[1];
  const Scalar _tmp1087 =
      _tmp1082 * _x_T_a[3] - _tmp1083 * _x_T_a[1] - _tmp1084 * _x_T_a[2] - _tmp1085 * _x_T_a[0];
  const Scalar _tmp1088 =
      _tmp1082 * _x_T_a[1] + _tmp1083 * _x_T_a[3] + _tmp1084 * _x_T_a[0] - _tmp1085 * _x_T_a[2];
  const Scalar _tmp1089 =
      _tmp1082 * _x_T_a[0] + _tmp1083 * _x_T_a[2] - _tmp1084 * _x_T_a[1] + _tmp1085 * _x_T_a[3];
  const Scalar _tmp1090 =
      _tmp1086 * _tmp722 + _tmp1087 * _tmp728 - _tmp1088 * _tmp734 - _tmp1089 * _tmp716;
  const Scalar _tmp1091 =
      -_tmp1086 * _tmp716 + _tmp1087 * _tmp734 + _tmp1088 * _tmp728 - _tmp1089 * _tmp722;
  const Scalar _tmp1092 =
      _tmp1086 * _tmp734 + _tmp1087 * _tmp716 + _tmp1088 * _tmp722 + _tmp1089 * _tmp728;
  const Scalar _tmp1093 =
      -_tmp1086 * _tmp728 + _tmp1087 * _tmp722 - _tmp1088 * _tmp716 + _tmp1089 * _tmp734;
  const Scalar _tmp1094 =
      -_a_T_b[0] * _tmp1093 + _a_T_b[1] * _tmp1090 - _a_T_b[2] * _tmp1092 + _a_T_b[3] * _tmp1091;
  const Scalar _tmp1095 = _tmp880 * (-_a_T_b[0] * _tmp1092 - _a_T_b[1] * _tmp1091 +
                                     _a_T_b[2] * _tmp1093 + _a_T_b[3] * _tmp1090);
  const Scalar _tmp1096 = -_tmp1088 * _tmp814;
  const Scalar _tmp1097 = -_tmp1086 * _tmp896;
  const Scalar _tmp1098 = _tmp1096 + _tmp1097;
  const Scalar _tmp1099 = _tmp1088 * _tmp798;
  const Scalar _tmp1100 = _tmp1087 * _tmp800;
  const Scalar _tmp1101 = _tmp1086 * _tmp796 + _tmp1089 * _tmp801;
  const Scalar _tmp1102 = -_tmp1099 - _tmp1100 + _tmp1101;
  const Scalar _tmp1103 = _tmp1086 * _tmp798;
  const Scalar _tmp1104 = _tmp1087 * _tmp801;
  const Scalar _tmp1105 = _tmp1088 * _tmp796 + _tmp1089 * _tmp800;
  const Scalar _tmp1106 = _tmp1103 + _tmp1104 + _tmp1105;
  const Scalar _tmp1107 = _tmp1085 * _tmp829;
  const Scalar _tmp1108 = _tmp1082 * _tmp787;
  const Scalar _tmp1109 = _tmp1083 * _tmp789 + _tmp1084 * _tmp807;
  const Scalar _tmp1110 = _tmp1083 * _tmp829;
  const Scalar _tmp1111 = _tmp1082 * _tmp807;
  const Scalar _tmp1112 = _tmp1084 * _tmp787 + _tmp1085 * _tmp789;
  const Scalar _tmp1113 = -_tmp1083 * _tmp835;
  const Scalar _tmp1114 = -_tmp1085 * _tmp837;
  const Scalar _tmp1115 = _x_T_a[4] * (-_tmp1110 - _tmp1111 + _tmp1112) +
                          _x_T_a[5] * (_tmp1107 + _tmp1108 + _tmp1109) +
                          _x_T_a[6] * (_tmp1113 + _tmp1114);
  const Scalar _tmp1116 = _tmp1084 * _tmp829;
  const Scalar _tmp1117 = _tmp1082 * _tmp789;
  const Scalar _tmp1118 = _tmp1083 * _tmp787 + _tmp1085 * _tmp807;
  const Scalar _tmp1119 = -_tmp1084 * _tmp852;
  const Scalar _tmp1120 = _x_T_a[4] * (_tmp1113 + _tmp1119) +
                          _x_T_a[5] * (-_tmp1116 - _tmp1117 + _tmp1118) +
                          _x_T_a[6] * (_tmp1110 + _tmp1111 + _tmp1112);
  const Scalar _tmp1121 = _x_T_a[4] * (_tmp1116 + _tmp1117 + _tmp1118) +
                          _x_T_a[5] * (_tmp1114 + _tmp1119) +
                          _x_T_a[6] * (-_tmp1107 - _tmp1108 + _tmp1109);
  const Scalar _tmp1122 = -_tmp1098 * _tmp820 + _tmp1098 * _tmp872 - _tmp1102 * _tmp811 +
                          _tmp1102 * _tmp868 - _tmp1106 * _tmp795 + _tmp1106 * _tmp851 -
                          _tmp1115 * _tmp892 - _tmp1120 * _tmp891 - _tmp1121 * _tmp895;
  const Scalar _tmp1123 =
      _a_T_b[0] * _tmp1090 + _a_T_b[1] * _tmp1093 + _a_T_b[2] * _tmp1091 + _a_T_b[3] * _tmp1092;
  const Scalar _tmp1124 = _tmp1123 * _tmp907;
  const Scalar _tmp1125 = _tmp1089 * _tmp798;
  const Scalar _tmp1126 = _tmp1087 * _tmp796;
  const Scalar _tmp1127 = _tmp1086 * _tmp800 + _tmp1088 * _tmp801;
  const Scalar _tmp1128 = _tmp1125 + _tmp1126 + _tmp1127;
  const Scalar _tmp1129 = -_tmp1089 * _tmp812;
  const Scalar _tmp1130 = _tmp1097 + _tmp1129;
  const Scalar _tmp1131 = -_tmp1103 - _tmp1104 + _tmp1105;
  const Scalar _tmp1132 = -_tmp1115 * _tmp916 - _tmp1120 * _tmp919 - _tmp1121 * _tmp918 -
                          _tmp1128 * _tmp811 + _tmp1128 * _tmp868 - _tmp1130 * _tmp795 +
                          _tmp1130 * _tmp851 - _tmp1131 * _tmp820 + _tmp1131 * _tmp872;
  const Scalar _tmp1133 = -_tmp1125 - _tmp1126 + _tmp1127;
  const Scalar _tmp1134 = _tmp1096 + _tmp1129;
  const Scalar _tmp1135 = _tmp1099 + _tmp1100 + _tmp1101;
  const Scalar _tmp1136 = -_tmp1115 * _tmp827 - _tmp1120 * _tmp860 - _tmp1121 * _tmp876 -
                          _tmp1133 * _tmp795 + _tmp1133 * _tmp851 - _tmp1134 * _tmp811 +
                          _tmp1134 * _tmp868 - _tmp1135 * _tmp820 + _tmp1135 * _tmp872;
  const Scalar _tmp1137 = _tmp1123 * _tmp883;
  const Scalar _tmp1138 =
      _a_T_b[0] * _tmp1091 - _a_T_b[1] * _tmp1092 - _a_T_b[2] * _tmp1090 + _a_T_b[3] * _tmp1093;
  const Scalar _tmp1139 = _tmp1123 * _tmp901;
  const Scalar _tmp1140 = _tmp1123 * _tmp910;
  const Scalar _tmp1141 = 1 - lambdas_x(0, 0);
  const Scalar _tmp1142 = _tmp1141 * _tmp891;
  const Scalar _tmp1143 = _tmp1141 * _tmp919;
  const Scalar _tmp1144 = _tmp1141 * _tmp860;
  const Scalar _tmp1145 = _tmp1141 * sqrt_info(4, 3);
  const Scalar _tmp1146 = _tmp1141 * _tmp895;
  const Scalar _tmp1147 = _tmp918 * sqrt_info(0, 4);
  const Scalar _tmp1148 = _tmp876 * sqrt_info(0, 5);
  const Scalar _tmp1149 = _tmp1141 * _tmp918;
  const Scalar _tmp1150 = _tmp1141 * _tmp876;
  const Scalar _tmp1151 = _tmp918 * sqrt_info(3, 4);
  const Scalar _tmp1152 = _tmp918 * sqrt_info(4, 4);
  const Scalar _tmp1153 = _tmp876 * sqrt_info(4, 5);
  const Scalar _tmp1154 = _tmp918 * sqrt_info(5, 4);
  const Scalar _tmp1155 = _tmp876 * sqrt_info(5, 5);
  const Scalar _tmp1156 = _tmp916 * sqrt_info(0, 4);
  const Scalar _tmp1157 = _tmp1141 * _tmp827;
  const Scalar _tmp1158 = _tmp1141 * _tmp892;
  const Scalar _tmp1159 = _tmp916 * sqrt_info(1, 4);
  const Scalar _tmp1160 = _tmp916 * sqrt_info(2, 4);
  const Scalar _tmp1161 = _tmp916 * sqrt_info(3, 4);
  const Scalar _tmp1162 = _tmp916 * sqrt_info(4, 4);
  const Scalar _tmp1163 = _tmp827 * sqrt_info(4, 5);
  const Scalar _tmp1164 = _tmp916 * sqrt_info(5, 4);
  const Scalar _tmp1165 = _tmp474 + _tmp475 + _tmp476 + _tmp477;
  const Scalar _tmp1166 = _tmp1165 * _tmp544;
  const Scalar _tmp1167 = _tmp473 * _tmp536;
  const Scalar _tmp1168 = _tmp484 * _tmp536;
  const Scalar _tmp1169 = _tmp472 * _tmp536;
  const Scalar _tmp1170 = -_tmp1057 * _tmp1167 - _tmp1057 * _tmp1168 - _tmp1057 * _tmp1169 +
                          _tmp1057 * _tmp482 + _tmp1057 * _tmp483 + _tmp1057 * _tmp485 +
                          _tmp1165 * _tmp480 + _tmp498;
  const Scalar _tmp1171 = _tmp1170 * _tmp520;
  const Scalar _tmp1172 = _tmp1057 * _tmp1073;
  const Scalar _tmp1173 = _tmp1170 * _tmp529;
  const Scalar _tmp1174 = _tmp114 * _tmp1173;
  const Scalar _tmp1175 = _tmp1057 * _tmp538;
  const Scalar _tmp1176 = _tmp1170 * _tmp471;
  const Scalar _tmp1177 = _tmp1170 * _tmp527;
  const Scalar _tmp1178 = _tmp1170 * _tmp505;
  const Scalar _tmp1179 = (Scalar(1) / Scalar(2)) * _tmp44;
  const Scalar _tmp1180 = (Scalar(1) / Scalar(2)) * _tmp40;
  const Scalar _tmp1181 = (Scalar(1) / Scalar(2)) * _tmp41;
  const Scalar _tmp1182 = (Scalar(1) / Scalar(2)) * _tmp42;
  const Scalar _tmp1183 = -_tmp1179 - _tmp1180 - _tmp1181 - _tmp1182;
  const Scalar _tmp1184 = _tmp1183 * _tmp437;
  const Scalar _tmp1185 = (Scalar(1) / Scalar(2)) * _tmp35;
  const Scalar _tmp1186 = (Scalar(1) / Scalar(2)) * _tmp36;
  const Scalar _tmp1187 = (Scalar(1) / Scalar(2)) * _tmp37;
  const Scalar _tmp1188 = (Scalar(1) / Scalar(2)) * _tmp38;
  const Scalar _tmp1189 = -_tmp1185 + _tmp1186 + _tmp1187 - _tmp1188;
  const Scalar _tmp1190 = ((((_tmp14 - _tmp392) > 0) - ((_tmp14 - _tmp392) < 0)) + 1) *
                          (((_tmp391) > 0) - ((_tmp391) < 0));
  const Scalar _tmp1191 = _tmp395 / (_tmp394 * std::sqrt(_tmp394));
  const Scalar _tmp1192 = _tmp1190 * _tmp1191;
  const Scalar _tmp1193 = _tmp1189 * _tmp1192;
  const Scalar _tmp1194 = _tmp129 * _tmp73;
  const Scalar _tmp1195 = _tmp1194 * _tmp418;
  const Scalar _tmp1196 = _tmp393 * _tmp422;
  const Scalar _tmp1197 = _tmp1195 * _tmp1196;
  const Scalar _tmp1198 = _tmp393 * _tmp399 / std::pow(_tmp394, Scalar(2));
  const Scalar _tmp1199 = _tmp1190 * _tmp1198;
  const Scalar _tmp1200 = _tmp1199 * _tmp48;
  const Scalar _tmp1201 = _tmp1198 * _tmp58;
  const Scalar _tmp1202 = _tmp1190 * _tmp1201;
  const Scalar _tmp1203 = 8 * _tmp400 * _tmp46;
  const Scalar _tmp1204 = _tmp1203 * _tmp39;
  const Scalar _tmp1205 = _tmp1199 * _tmp64;
  const Scalar _tmp1206 = (Scalar(1) / Scalar(2)) * _tmp53;
  const Scalar _tmp1207 = (Scalar(1) / Scalar(2)) * _tmp54;
  const Scalar _tmp1208 = (Scalar(1) / Scalar(2)) * _tmp55;
  const Scalar _tmp1209 = (Scalar(1) / Scalar(2)) * _tmp56;
  const Scalar _tmp1210 = -_tmp1206 + _tmp1207 - _tmp1208 + _tmp1209;
  const Scalar _tmp1211 = _tmp1210 * _tmp63;
  const Scalar _tmp1212 = (Scalar(1) / Scalar(2)) * _tmp59;
  const Scalar _tmp1213 = (Scalar(1) / Scalar(2)) * _tmp60;
  const Scalar _tmp1214 = (Scalar(1) / Scalar(2)) * _tmp61;
  const Scalar _tmp1215 = (Scalar(1) / Scalar(2)) * _tmp62;
  const Scalar _tmp1216 = _tmp1212 + _tmp1213 - _tmp1214 - _tmp1215;
  const Scalar _tmp1217 = _tmp1203 * _tmp57;
  const Scalar _tmp1218 = _tmp1203 * _tmp1211 + _tmp1216 * _tmp1217;
  const Scalar _tmp1219 = _tmp1183 * _tmp1204 + _tmp1189 * _tmp1200 + _tmp1189 * _tmp1202 +
                          _tmp1189 * _tmp1205 - _tmp1193 * _tmp48 - _tmp1193 * _tmp58 -
                          _tmp1193 * _tmp64 + _tmp1218;
  const Scalar _tmp1220 = _tmp1219 * _tmp422;
  const Scalar _tmp1221 = _tmp396 / (_tmp401 * std::sqrt(_tmp401));
  const Scalar _tmp1222 = _tmp404 * _tmp417;
  const Scalar _tmp1223 = _tmp1221 * _tmp1222;
  const Scalar _tmp1224 = _tmp1220 * _tmp1223;
  const Scalar _tmp1225 = _tmp71 * _tmp79;
  const Scalar _tmp1226 = _tmp398 * _tmp422;
  const Scalar _tmp1227 = _tmp1190 * _tmp1226;
  const Scalar _tmp1228 = _tmp1189 * _tmp1227;
  const Scalar _tmp1229 = _tmp398 * _tmp435;
  const Scalar _tmp1230 = _tmp1229 * _tmp78;
  const Scalar _tmp1231 = _tmp1190 * _tmp1230;
  const Scalar _tmp1232 = _tmp1221 * _tmp434;
  const Scalar _tmp1233 = _tmp1232 * _tmp78;
  const Scalar _tmp1234 = _tmp393 * _tmp435;
  const Scalar _tmp1235 = _tmp1234 * _tmp78;
  const Scalar _tmp1236 = Scalar(1.0) / (_tmp401);
  const Scalar _tmp1237 = _tmp1236 * _tmp432;
  const Scalar _tmp1238 = _tmp1237 * _tmp425;
  const Scalar _tmp1239 = (Scalar(1) / Scalar(2)) * _tmp418;
  const Scalar _tmp1240 = _tmp1239 * _tmp82;
  const Scalar _tmp1241 = _tmp1236 * _tmp513;
  const Scalar _tmp1242 = _tmp1241 * _tmp500;
  const Scalar _tmp1243 = _tmp419 * _tmp71;
  const Scalar _tmp1244 = _tmp1193 * _tmp1196;
  const Scalar _tmp1245 = (Scalar(1) / Scalar(2)) * _tmp517;
  const Scalar _tmp1246 = _tmp1236 * _tmp1245;
  const Scalar _tmp1247 = _tmp1219 * _tmp1246;
  const Scalar _tmp1248 = _tmp396 * _tmp69;
  const Scalar _tmp1249 = _tmp1248 * _tmp424;
  const Scalar _tmp1250 = _tmp1248 * _tmp501;
  const Scalar _tmp1251 = _tmp1210 * _tmp1249 - _tmp1216 * _tmp1250;
  const Scalar _tmp1252 = _tmp1184 - _tmp1189 * _tmp1231 - _tmp1193 * _tmp1197 +
                          _tmp1193 * _tmp1235 + _tmp1194 * _tmp1224 + _tmp1195 * _tmp1228 -
                          _tmp1219 * _tmp1233 - _tmp1219 * _tmp1238 + _tmp1219 * _tmp1242 -
                          _tmp1220 * _tmp1240 - _tmp1224 * _tmp1225 - _tmp1228 * _tmp1243 +
                          _tmp1243 * _tmp1244 + _tmp1247 * _tmp397 + _tmp1251;
  const Scalar _tmp1253 = _tmp1190 * _tmp1229;
  const Scalar _tmp1254 = _tmp123 * _tmp1253;
  const Scalar _tmp1255 = _tmp121 * _tmp79;
  const Scalar _tmp1256 = _tmp1236 * _tmp503 * _tmp82;
  const Scalar _tmp1257 = _tmp1256 * _tmp425;
  const Scalar _tmp1258 = _tmp121 * _tmp419;
  const Scalar _tmp1259 = _tmp1219 * _tmp397;
  const Scalar _tmp1260 = _tmp123 * _tmp1232;
  const Scalar _tmp1261 = _tmp129 * _tmp82;
  const Scalar _tmp1262 = _tmp1261 * _tmp418;
  const Scalar _tmp1263 = _tmp1183 * _tmp1248;
  const Scalar _tmp1264 = _tmp1263 * _tmp424;
  const Scalar _tmp1265 = -_tmp1264;
  const Scalar _tmp1266 = _tmp1239 * _tmp73;
  const Scalar _tmp1267 = _tmp123 * _tmp1234;
  const Scalar _tmp1268 = _tmp1246 * _tmp500;
  const Scalar _tmp1269 = _tmp1248 * _tmp427;
  const Scalar _tmp1270 = _tmp1210 * _tmp437 + _tmp1216 * _tmp1269;
  const Scalar _tmp1271 = -_tmp1189 * _tmp1254 + _tmp1193 * _tmp1267 + _tmp1219 * _tmp1257 -
                          _tmp1219 * _tmp1260 + _tmp1219 * _tmp1268 - _tmp1220 * _tmp1266 +
                          _tmp1224 * _tmp1255 - _tmp1224 * _tmp1261 + _tmp1228 * _tmp1258 -
                          _tmp1228 * _tmp1262 - _tmp1241 * _tmp1259 - _tmp1244 * _tmp1258 +
                          _tmp1244 * _tmp1262 + _tmp1265 + _tmp1270;
  const Scalar _tmp1272 = _tmp1241 * _tmp425;
  const Scalar _tmp1273 = _tmp71 * _tmp73;
  const Scalar _tmp1274 = _tmp1273 * _tmp418;
  const Scalar _tmp1275 = _tmp121 * _tmp82;
  const Scalar _tmp1276 = _tmp1275 * _tmp418;
  const Scalar _tmp1277 = _tmp129 * _tmp79;
  const Scalar _tmp1278 = _tmp129 * _tmp419;
  const Scalar _tmp1279 = _tmp1196 * _tmp1278;
  const Scalar _tmp1280 = (Scalar(1) / Scalar(4)) * _tmp435;
  const Scalar _tmp1281 = _tmp1237 * _tmp500;
  const Scalar _tmp1282 = _tmp1183 * _tmp1269;
  const Scalar _tmp1283 = -_tmp1282;
  const Scalar _tmp1284 = -_tmp1210 * _tmp1250 - _tmp1216 * _tmp1249;
  const Scalar _tmp1285 = -_tmp1193 * _tmp1279 - _tmp1219 * _tmp1272 - _tmp1219 * _tmp1280 -
                          _tmp1219 * _tmp1281 + _tmp1224 * _tmp1273 + _tmp1224 * _tmp1275 +
                          _tmp1224 * _tmp1277 + _tmp1228 * _tmp1274 + _tmp1228 * _tmp1276 +
                          _tmp1228 * _tmp1278 - _tmp1244 * _tmp1274 - _tmp1244 * _tmp1276 -
                          _tmp1256 * _tmp1259 + _tmp1283 + _tmp1284;
  const Scalar _tmp1286 = _tmp456 * _tmp977;
  const Scalar _tmp1287 = _tmp121 * _tmp73;
  const Scalar _tmp1288 = _tmp1287 * _tmp418;
  const Scalar _tmp1289 = _tmp1227 * _tmp1288;
  const Scalar _tmp1290 = _tmp71 * _tmp82;
  const Scalar _tmp1291 = _tmp1290 * _tmp418;
  const Scalar _tmp1292 = _tmp1232 * _tmp83;
  const Scalar _tmp1293 = _tmp1196 * _tmp1288;
  const Scalar _tmp1294 = _tmp1234 * _tmp83;
  const Scalar _tmp1295 = _tmp1253 * _tmp83;
  const Scalar _tmp1296 = (Scalar(1) / Scalar(2)) * _tmp419;
  const Scalar _tmp1297 = _tmp1256 * _tmp500;
  const Scalar _tmp1298 = _tmp1263 * _tmp501;
  const Scalar _tmp1299 = -_tmp1210 * _tmp1269 + _tmp1216 * _tmp437;
  const Scalar _tmp1300 = -_tmp1189 * _tmp1289 - _tmp1189 * _tmp1295 + _tmp1193 * _tmp1293 +
                          _tmp1193 * _tmp1294 - _tmp1219 * _tmp1292 - _tmp1219 * _tmp1297 -
                          _tmp1220 * _tmp1296 - _tmp1224 * _tmp1287 + _tmp1224 * _tmp1290 +
                          _tmp1228 * _tmp1291 + _tmp1237 * _tmp1259 - _tmp1244 * _tmp1291 +
                          _tmp1247 * _tmp425 + _tmp1298 + _tmp1299;
  const Scalar _tmp1301 = _tmp1057 * _tmp1286 - _tmp1057 * _tmp564 - _tmp1057 * _tmp567 + _tmp1166 +
                          _tmp1170 * _tmp562 - _tmp1171 * _tmp509 + _tmp1172 * _tmp518 -
                          _tmp1173 * _tmp560 + _tmp1174 * _tmp438 + _tmp1175 * _tmp560 -
                          _tmp1175 * _tmp977 + _tmp1176 * _tmp565 - _tmp1177 * _tmp518 -
                          _tmp1178 * _tmp515 + _tmp1252 * _tmp506 - _tmp1271 * _tmp548 +
                          _tmp1285 * _tmp549 + _tmp1300 * _tmp550 + _tmp571;
  const Scalar _tmp1302 = _tmp1165 * _tmp570;
  const Scalar _tmp1303 = -_tmp1302;
  const Scalar _tmp1304 = _tmp456 * _tmp957;
  const Scalar _tmp1305 = _tmp1170 * _tmp515;
  const Scalar _tmp1306 = _tmp1072 * _tmp573;
  const Scalar _tmp1307 = _tmp1170 * _tmp507;
  const Scalar _tmp1308 = -_tmp1057 * _tmp1304 - _tmp1057 * _tmp1306 - _tmp1057 * _tmp582 +
                          _tmp1057 * _tmp584 + _tmp1170 * _tmp578 - _tmp1170 * _tmp579 -
                          _tmp1173 * _tmp555 + _tmp1175 * _tmp555 + _tmp1175 * _tmp957 +
                          _tmp1177 * _tmp514 - _tmp1178 * _tmp540 + _tmp1252 * _tmp548 +
                          _tmp1271 * _tmp506 + _tmp1285 * _tmp550 - _tmp1300 * _tmp549 + _tmp1303 -
                          _tmp1305 * _tmp438 + _tmp1307 * _tmp520 + _tmp586;
  const Scalar _tmp1309 = _tmp1165 * _tmp545;
  const Scalar _tmp1310 = -_tmp1309;
  const Scalar _tmp1311 = _tmp114 * _tmp594;
  const Scalar _tmp1312 = -_tmp1057 * _tmp1311 + _tmp1057 * _tmp588 + _tmp1057 * _tmp595 +
                          _tmp1057 * _tmp985 - _tmp1171 * _tmp565 - _tmp1172 * _tmp505 +
                          _tmp1173 * _tmp591 + _tmp1174 * _tmp514 - _tmp1175 * _tmp591 -
                          _tmp1176 * _tmp509 + _tmp1178 * _tmp527 - _tmp1252 * _tmp549 -
                          _tmp1271 * _tmp550 + _tmp1285 * _tmp506 - _tmp1300 * _tmp548 -
                          _tmp1305 * _tmp518 - _tmp1307 * _tmp511 + _tmp1310 + _tmp597;
  const Scalar _tmp1313 = _tmp1077 * _tmp518;
  const Scalar _tmp1314 = _tmp1165 * _tmp534;
  const Scalar _tmp1315 = -_tmp1057 * _tmp1313 - _tmp1057 * _tmp458 + _tmp1057 * _tmp523 +
                          _tmp1170 * _tmp512 - _tmp1170 * _tmp516 + _tmp1171 * _tmp519 +
                          _tmp1172 * _tmp438 - _tmp1174 * _tmp518 - _tmp1175 * _tmp542 +
                          _tmp1175 * _tmp971 - _tmp1177 * _tmp438 + _tmp1178 * _tmp530 -
                          _tmp1252 * _tmp550 + _tmp1271 * _tmp549 + _tmp1285 * _tmp548 +
                          _tmp1300 * _tmp506 - _tmp1307 * _tmp471 + _tmp1314 + _tmp546;
  const Scalar _tmp1316 =
      -_tmp1301 * _x0[1] + _tmp1308 * _x0[0] + _tmp1312 * _x0[2] + _tmp1315 * _x0[3];
  const Scalar _tmp1317 =
      -_tmp1301 * _x0[0] - _tmp1308 * _x0[1] + _tmp1312 * _x0[3] - _tmp1315 * _x0[2];
  const Scalar _tmp1318 =
      _tmp1301 * _x0[2] + _tmp1308 * _x0[3] + _tmp1312 * _x0[1] - _tmp1315 * _x0[0];
  const Scalar _tmp1319 =
      _tmp1301 * _x0[3] - _tmp1308 * _x0[2] + _tmp1312 * _x0[0] + _tmp1315 * _x0[1];
  const Scalar _tmp1320 =
      _tmp1316 * _x_T_a[0] + _tmp1317 * _x_T_a[1] + _tmp1318 * _x_T_a[3] - _tmp1319 * _x_T_a[2];
  const Scalar _tmp1321 = _tmp1320 * _tmp798;
  const Scalar _tmp1322 =
      -_tmp1316 * _x_T_a[2] + _tmp1317 * _x_T_a[3] - _tmp1318 * _x_T_a[1] - _tmp1319 * _x_T_a[0];
  const Scalar _tmp1323 = _tmp1322 * _tmp800;
  const Scalar _tmp1324 =
      -_tmp1316 * _x_T_a[1] + _tmp1317 * _x_T_a[0] + _tmp1318 * _x_T_a[2] + _tmp1319 * _x_T_a[3];
  const Scalar _tmp1325 =
      _tmp1316 * _x_T_a[3] + _tmp1317 * _x_T_a[2] - _tmp1318 * _x_T_a[0] + _tmp1319 * _x_T_a[1];
  const Scalar _tmp1326 = _tmp1324 * _tmp801 + _tmp1325 * _tmp796;
  const Scalar _tmp1327 = -_tmp1321 - _tmp1323 + _tmp1326;
  const Scalar _tmp1328 = -_tmp1316 * _tmp852;
  const Scalar _tmp1329 = -_tmp1318 * _tmp835;
  const Scalar _tmp1330 = _tmp1317 * _tmp807;
  const Scalar _tmp1331 = _tmp1318 * _tmp829;
  const Scalar _tmp1332 = _tmp1316 * _tmp787 + _tmp1319 * _tmp789;
  const Scalar _tmp1333 = _tmp1317 * _tmp789;
  const Scalar _tmp1334 = _tmp1316 * _tmp829;
  const Scalar _tmp1335 = _tmp1318 * _tmp787 + _tmp1319 * _tmp807;
  const Scalar _tmp1336 = _x_T_a[4] * (_tmp1328 + _tmp1329) +
                          _x_T_a[5] * (-_tmp1333 - _tmp1334 + _tmp1335) +
                          _x_T_a[6] * (_tmp1330 + _tmp1331 + _tmp1332);
  const Scalar _tmp1337 = _tmp1325 * _tmp798;
  const Scalar _tmp1338 = _tmp1322 * _tmp801;
  const Scalar _tmp1339 = _tmp1320 * _tmp796 + _tmp1324 * _tmp800;
  const Scalar _tmp1340 = _tmp1337 + _tmp1338 + _tmp1339;
  const Scalar _tmp1341 = -_tmp1320 * _tmp814;
  const Scalar _tmp1342 = -_tmp1325 * _tmp896;
  const Scalar _tmp1343 = _tmp1341 + _tmp1342;
  const Scalar _tmp1344 = -_tmp1319 * _tmp837;
  const Scalar _tmp1345 = _tmp1317 * _tmp787;
  const Scalar _tmp1346 = _tmp1319 * _tmp829;
  const Scalar _tmp1347 = _tmp1316 * _tmp807 + _tmp1318 * _tmp789;
  const Scalar _tmp1348 = _x_T_a[4] * (-_tmp1330 - _tmp1331 + _tmp1332) +
                          _x_T_a[5] * (_tmp1345 + _tmp1346 + _tmp1347) +
                          _x_T_a[6] * (_tmp1329 + _tmp1344);
  const Scalar _tmp1349 = _x_T_a[4] * (_tmp1333 + _tmp1334 + _tmp1335) +
                          _x_T_a[5] * (_tmp1328 + _tmp1344) +
                          _x_T_a[6] * (-_tmp1345 - _tmp1346 + _tmp1347);
  const Scalar _tmp1350 = -_tmp1327 * _tmp811 + _tmp1327 * _tmp868 - _tmp1336 * _tmp891 -
                          _tmp1340 * _tmp795 + _tmp1340 * _tmp851 - _tmp1343 * _tmp820 +
                          _tmp1343 * _tmp872 - _tmp1348 * _tmp892 - _tmp1349 * _tmp895;
  const Scalar _tmp1351 = -_tmp1337 - _tmp1338 + _tmp1339;
  const Scalar _tmp1352 = -_tmp1324 * _tmp812;
  const Scalar _tmp1353 = _tmp1342 + _tmp1352;
  const Scalar _tmp1354 = _tmp1324 * _tmp798;
  const Scalar _tmp1355 = _tmp1322 * _tmp796;
  const Scalar _tmp1356 = _tmp1320 * _tmp801 + _tmp1325 * _tmp800;
  const Scalar _tmp1357 = _tmp1354 + _tmp1355 + _tmp1356;
  const Scalar _tmp1358 = -_tmp1336 * _tmp919 - _tmp1348 * _tmp916 - _tmp1349 * _tmp918 -
                          _tmp1351 * _tmp820 + _tmp1351 * _tmp872 - _tmp1353 * _tmp795 +
                          _tmp1353 * _tmp851 - _tmp1357 * _tmp811 + _tmp1357 * _tmp868;
  const Scalar _tmp1359 =
      -_tmp1320 * _tmp716 + _tmp1322 * _tmp722 + _tmp1324 * _tmp734 - _tmp1325 * _tmp728;
  const Scalar _tmp1360 =
      _tmp1320 * _tmp728 + _tmp1322 * _tmp734 - _tmp1324 * _tmp722 - _tmp1325 * _tmp716;
  const Scalar _tmp1361 =
      _tmp1320 * _tmp722 + _tmp1322 * _tmp716 + _tmp1324 * _tmp728 + _tmp1325 * _tmp734;
  const Scalar _tmp1362 =
      -_tmp1320 * _tmp734 + _tmp1322 * _tmp728 - _tmp1324 * _tmp716 + _tmp1325 * _tmp722;
  const Scalar _tmp1363 =
      _a_T_b[0] * _tmp1362 + _a_T_b[1] * _tmp1359 + _a_T_b[2] * _tmp1360 + _a_T_b[3] * _tmp1361;
  const Scalar _tmp1364 = _tmp1363 * _tmp907;
  const Scalar _tmp1365 = _tmp1363 * _tmp901;
  const Scalar _tmp1366 = _tmp880 * (-_a_T_b[0] * _tmp1361 - _a_T_b[1] * _tmp1360 +
                                     _a_T_b[2] * _tmp1359 + _a_T_b[3] * _tmp1362);
  const Scalar _tmp1367 = _tmp1363 * _tmp883;
  const Scalar _tmp1368 = _tmp1341 + _tmp1352;
  const Scalar _tmp1369 = -_tmp1354 - _tmp1355 + _tmp1356;
  const Scalar _tmp1370 = _tmp1321 + _tmp1323 + _tmp1326;
  const Scalar _tmp1371 = -_tmp1336 * _tmp860 - _tmp1348 * _tmp827 - _tmp1349 * _tmp876 -
                          _tmp1368 * _tmp811 + _tmp1368 * _tmp868 - _tmp1369 * _tmp795 +
                          _tmp1369 * _tmp851 - _tmp1370 * _tmp820 + _tmp1370 * _tmp872;
  const Scalar _tmp1372 =
      _a_T_b[0] * _tmp1360 - _a_T_b[1] * _tmp1361 - _a_T_b[2] * _tmp1362 + _a_T_b[3] * _tmp1359;
  const Scalar _tmp1373 =
      -_a_T_b[0] * _tmp1359 + _a_T_b[1] * _tmp1362 - _a_T_b[2] * _tmp1361 + _a_T_b[3] * _tmp1360;
  const Scalar _tmp1374 = _tmp456 * _tmp496;
  const Scalar _tmp1375 = -_tmp1212 - _tmp1213 + _tmp1214 + _tmp1215;
  const Scalar _tmp1376 = _tmp1190 * _tmp1375;
  const Scalar _tmp1377 = _tmp1191 * _tmp1376;
  const Scalar _tmp1378 = _tmp1196 * _tmp1377;
  const Scalar _tmp1379 = _tmp1226 * _tmp1376;
  const Scalar _tmp1380 = _tmp1198 * _tmp64;
  const Scalar _tmp1381 = _tmp1376 * _tmp48;
  const Scalar _tmp1382 = _tmp1203 * _tmp63;
  const Scalar _tmp1383 = _tmp1206 - _tmp1207 + _tmp1208 - _tmp1209;
  const Scalar _tmp1384 = _tmp1189 * _tmp1217 + _tmp1204 * _tmp1383;
  const Scalar _tmp1385 = _tmp1183 * _tmp1382 - _tmp1191 * _tmp1381 + _tmp1198 * _tmp1381 +
                          _tmp1201 * _tmp1376 + _tmp1376 * _tmp1380 - _tmp1377 * _tmp58 -
                          _tmp1377 * _tmp64 + _tmp1384;
  const Scalar _tmp1386 = _tmp1385 * _tmp422;
  const Scalar _tmp1387 = _tmp1246 * _tmp396;
  const Scalar _tmp1388 = _tmp1387 * _tmp83;
  const Scalar _tmp1389 = _tmp1229 * _tmp1376;
  const Scalar _tmp1390 = _tmp1385 * _tmp397;
  const Scalar _tmp1391 = _tmp1223 * _tmp1386;
  const Scalar _tmp1392 = _tmp1248 * _tmp1383;
  const Scalar _tmp1393 = _tmp1189 * _tmp437 + _tmp1392 * _tmp501;
  const Scalar _tmp1394 = _tmp1237 * _tmp1390 + _tmp1283 - _tmp1287 * _tmp1391 +
                          _tmp1288 * _tmp1378 - _tmp1288 * _tmp1379 + _tmp1290 * _tmp1391 -
                          _tmp1291 * _tmp1378 + _tmp1291 * _tmp1379 - _tmp1292 * _tmp1385 +
                          _tmp1294 * _tmp1377 - _tmp1296 * _tmp1386 - _tmp1297 * _tmp1385 +
                          _tmp1385 * _tmp1388 - _tmp1389 * _tmp83 + _tmp1393;
  const Scalar _tmp1395 = _tmp496 * _tmp538;
  const Scalar _tmp1396 = _tmp1165 * _tmp491 - _tmp1167 * _tmp496 - _tmp1168 * _tmp496 -
                          _tmp1169 * _tmp496 + _tmp482 * _tmp496 + _tmp483 * _tmp496 +
                          _tmp485 * _tmp496 + _tmp960;
  const Scalar _tmp1397 = _tmp1396 * _tmp540;
  const Scalar _tmp1398 = _tmp1396 * _tmp470;
  const Scalar _tmp1399 = _tmp114 * _tmp1398;
  const Scalar _tmp1400 = _tmp1246 * _tmp397;
  const Scalar _tmp1401 = -_tmp1189 * _tmp1250 + _tmp1383 * _tmp437;
  const Scalar _tmp1402 = _tmp1194 * _tmp1391 - _tmp1195 * _tmp1378 + _tmp1195 * _tmp1379 -
                          _tmp1225 * _tmp1391 - _tmp1230 * _tmp1376 - _tmp1233 * _tmp1385 +
                          _tmp1235 * _tmp1377 - _tmp1238 * _tmp1385 - _tmp1240 * _tmp1386 +
                          _tmp1242 * _tmp1385 + _tmp1243 * _tmp1378 - _tmp1243 * _tmp1379 +
                          _tmp1264 + _tmp1385 * _tmp1400 + _tmp1401;
  const Scalar _tmp1403 = _tmp1189 * _tmp1269 - _tmp1392 * _tmp424;
  const Scalar _tmp1404 = _tmp1184 - _tmp123 * _tmp1389 - _tmp1241 * _tmp1390 +
                          _tmp1255 * _tmp1391 + _tmp1257 * _tmp1385 - _tmp1258 * _tmp1378 +
                          _tmp1258 * _tmp1379 - _tmp1260 * _tmp1385 - _tmp1261 * _tmp1391 +
                          _tmp1262 * _tmp1378 - _tmp1262 * _tmp1379 - _tmp1266 * _tmp1386 +
                          _tmp1267 * _tmp1377 + _tmp1268 * _tmp1385 + _tmp1403;
  const Scalar _tmp1405 = -_tmp1298;
  const Scalar _tmp1406 = -_tmp1189 * _tmp1249 - _tmp1269 * _tmp1383;
  const Scalar _tmp1407 = -_tmp1256 * _tmp1390 - _tmp1272 * _tmp1385 + _tmp1273 * _tmp1391 -
                          _tmp1274 * _tmp1378 + _tmp1274 * _tmp1379 + _tmp1275 * _tmp1391 -
                          _tmp1276 * _tmp1378 + _tmp1276 * _tmp1379 + _tmp1277 * _tmp1391 +
                          _tmp1278 * _tmp1379 - _tmp1279 * _tmp1377 - _tmp1280 * _tmp1385 -
                          _tmp1281 * _tmp1385 + _tmp1405 + _tmp1406;
  const Scalar _tmp1408 = _tmp496 * _tmp518;
  const Scalar _tmp1409 = _tmp1073 * _tmp496;
  const Scalar _tmp1410 = -_tmp1077 * _tmp1408 + _tmp114 * _tmp1408 * _tmp538 + _tmp1310 +
                          _tmp1374 * _tmp542 + _tmp1394 * _tmp506 - _tmp1395 * _tmp542 +
                          _tmp1396 * _tmp512 - _tmp1396 * _tmp516 - _tmp1396 * _tmp528 +
                          _tmp1396 * _tmp531 - _tmp1396 * _tmp973 - _tmp1397 * _tmp518 +
                          _tmp1399 * _tmp519 - _tmp1402 * _tmp550 + _tmp1404 * _tmp549 +
                          _tmp1407 * _tmp548 + _tmp1409 * _tmp438 - _tmp458 * _tmp496 + _tmp975;
  const Scalar _tmp1411 = _tmp1396 * _tmp471;
  const Scalar _tmp1412 = _tmp1396 * _tmp515;
  const Scalar _tmp1413 = -_tmp1314;
  const Scalar _tmp1414 = -_tmp1311 * _tmp496 + _tmp1374 * _tmp591 - _tmp1394 * _tmp548 -
                          _tmp1395 * _tmp591 + _tmp1396 * _tmp589 + _tmp1396 * _tmp596 -
                          _tmp1396 * _tmp986 + _tmp1397 * _tmp514 - _tmp1399 * _tmp565 -
                          _tmp1402 * _tmp549 - _tmp1404 * _tmp550 + _tmp1407 * _tmp506 -
                          _tmp1409 * _tmp505 - _tmp1411 * _tmp509 - _tmp1412 * _tmp518 + _tmp1413 +
                          _tmp496 * _tmp588 + _tmp496 * _tmp985 + _tmp987;
  const Scalar _tmp1415 = _tmp1396 * _tmp529;
  const Scalar _tmp1416 = _tmp1073 * _tmp1408 + _tmp1302 - _tmp1374 * _tmp560 + _tmp1374 * _tmp977 +
                          _tmp1394 * _tmp550 + _tmp1395 * _tmp560 - _tmp1395 * _tmp977 +
                          _tmp1396 * _tmp562 - _tmp1396 * _tmp980 + _tmp1397 * _tmp438 -
                          _tmp1399 * _tmp509 + _tmp1402 * _tmp506 - _tmp1404 * _tmp548 +
                          _tmp1407 * _tmp549 - _tmp1408 * _tmp457 + _tmp1411 * _tmp565 -
                          _tmp1412 * _tmp505 - _tmp1415 * _tmp560 + _tmp981;
  const Scalar _tmp1417 = _tmp1166 - _tmp1306 * _tmp496 - _tmp1374 * _tmp957 - _tmp1394 * _tmp549 +
                          _tmp1395 * _tmp555 + _tmp1395 * _tmp957 + _tmp1396 * _tmp576 -
                          _tmp1396 * _tmp579 - _tmp1397 * _tmp505 + _tmp1398 * _tmp577 +
                          _tmp1399 * _tmp507 + _tmp1402 * _tmp548 + _tmp1404 * _tmp506 +
                          _tmp1407 * _tmp550 - _tmp1412 * _tmp438 - _tmp1415 * _tmp555 -
                          _tmp496 * _tmp582 + _tmp496 * _tmp584 + _tmp968;
  const Scalar _tmp1418 =
      -_tmp1410 * _x0[0] + _tmp1414 * _x0[1] + _tmp1416 * _x0[2] + _tmp1417 * _x0[3];
  const Scalar _tmp1419 =
      -_tmp1410 * _x0[2] + _tmp1414 * _x0[3] - _tmp1416 * _x0[0] - _tmp1417 * _x0[1];
  const Scalar _tmp1420 =
      _tmp1410 * _x0[1] + _tmp1414 * _x0[0] + _tmp1416 * _x0[3] - _tmp1417 * _x0[2];
  const Scalar _tmp1421 =
      _tmp1410 * _x0[3] + _tmp1414 * _x0[2] - _tmp1416 * _x0[1] + _tmp1417 * _x0[0];
  const Scalar _tmp1422 =
      -_tmp1418 * _x_T_a[1] + _tmp1419 * _x_T_a[3] - _tmp1420 * _x_T_a[0] - _tmp1421 * _x_T_a[2];
  const Scalar _tmp1423 =
      _tmp1418 * _x_T_a[2] + _tmp1419 * _x_T_a[0] + _tmp1420 * _x_T_a[3] - _tmp1421 * _x_T_a[1];
  const Scalar _tmp1424 =
      -_tmp1418 * _x_T_a[0] + _tmp1419 * _x_T_a[2] + _tmp1420 * _x_T_a[1] + _tmp1421 * _x_T_a[3];
  const Scalar _tmp1425 =
      _tmp1418 * _x_T_a[3] + _tmp1419 * _x_T_a[1] - _tmp1420 * _x_T_a[2] + _tmp1421 * _x_T_a[0];
  const Scalar _tmp1426 =
      _tmp1422 * _tmp722 + _tmp1423 * _tmp734 - _tmp1424 * _tmp728 - _tmp1425 * _tmp716;
  const Scalar _tmp1427 =
      _tmp1422 * _tmp716 + _tmp1423 * _tmp728 + _tmp1424 * _tmp734 + _tmp1425 * _tmp722;
  const Scalar _tmp1428 =
      _tmp1422 * _tmp734 - _tmp1423 * _tmp722 - _tmp1424 * _tmp716 + _tmp1425 * _tmp728;
  const Scalar _tmp1429 =
      _tmp1422 * _tmp728 - _tmp1423 * _tmp716 + _tmp1424 * _tmp722 - _tmp1425 * _tmp734;
  const Scalar _tmp1430 =
      _a_T_b[0] * _tmp1429 + _a_T_b[1] * _tmp1426 + _a_T_b[2] * _tmp1428 + _a_T_b[3] * _tmp1427;
  const Scalar _tmp1431 = _tmp1430 * _tmp907;
  const Scalar _tmp1432 = _tmp880 * (-_a_T_b[0] * _tmp1427 - _a_T_b[1] * _tmp1428 +
                                     _a_T_b[2] * _tmp1426 + _a_T_b[3] * _tmp1429);
  const Scalar _tmp1433 = _tmp1430 * _tmp782;
  const Scalar _tmp1434 =
      -_a_T_b[0] * _tmp1426 + _a_T_b[1] * _tmp1429 - _a_T_b[2] * _tmp1427 + _a_T_b[3] * _tmp1428;
  const Scalar _tmp1435 = _tmp901 * sqrt_info(0, 1);
  const Scalar _tmp1436 =
      _a_T_b[0] * _tmp1428 - _a_T_b[1] * _tmp1427 - _a_T_b[2] * _tmp1429 + _a_T_b[3] * _tmp1426;
  const Scalar _tmp1437 = _tmp1420 * _tmp829;
  const Scalar _tmp1438 = _tmp1419 * _tmp787;
  const Scalar _tmp1439 = _tmp1418 * _tmp789 + _tmp1421 * _tmp807;
  const Scalar _tmp1440 = _tmp1421 * _tmp829;
  const Scalar _tmp1441 = _tmp1419 * _tmp789;
  const Scalar _tmp1442 = _tmp1418 * _tmp787 + _tmp1420 * _tmp807;
  const Scalar _tmp1443 = -_tmp1420 * _tmp837;
  const Scalar _tmp1444 = -_tmp1421 * _tmp852;
  const Scalar _tmp1445 = _x_T_a[4] * (_tmp1440 + _tmp1441 + _tmp1442) +
                          _x_T_a[5] * (_tmp1443 + _tmp1444) +
                          _x_T_a[6] * (-_tmp1437 - _tmp1438 + _tmp1439);
  const Scalar _tmp1446 = _tmp1425 * _tmp798;
  const Scalar _tmp1447 = _tmp1422 * _tmp800;
  const Scalar _tmp1448 = _tmp1423 * _tmp801 + _tmp1424 * _tmp796;
  const Scalar _tmp1449 = -_tmp1446 - _tmp1447 + _tmp1448;
  const Scalar _tmp1450 = -_tmp1418 * _tmp835;
  const Scalar _tmp1451 = _tmp1418 * _tmp829;
  const Scalar _tmp1452 = _tmp1419 * _tmp807;
  const Scalar _tmp1453 = _tmp1420 * _tmp789 + _tmp1421 * _tmp787;
  const Scalar _tmp1454 = _x_T_a[4] * (_tmp1444 + _tmp1450) +
                          _x_T_a[5] * (-_tmp1440 - _tmp1441 + _tmp1442) +
                          _x_T_a[6] * (_tmp1451 + _tmp1452 + _tmp1453);
  const Scalar _tmp1455 = -_tmp1425 * _tmp814;
  const Scalar _tmp1456 = -_tmp1424 * _tmp896;
  const Scalar _tmp1457 = _tmp1455 + _tmp1456;
  const Scalar _tmp1458 = _x_T_a[4] * (-_tmp1451 - _tmp1452 + _tmp1453) +
                          _x_T_a[5] * (_tmp1437 + _tmp1438 + _tmp1439) +
                          _x_T_a[6] * (_tmp1443 + _tmp1450);
  const Scalar _tmp1459 = _tmp1424 * _tmp798;
  const Scalar _tmp1460 = _tmp1422 * _tmp801;
  const Scalar _tmp1461 = _tmp1423 * _tmp800 + _tmp1425 * _tmp796;
  const Scalar _tmp1462 = _tmp1459 + _tmp1460 + _tmp1461;
  const Scalar _tmp1463 = -_tmp1445 * _tmp895 - _tmp1449 * _tmp811 + _tmp1449 * _tmp868 -
                          _tmp1454 * _tmp891 - _tmp1457 * _tmp820 + _tmp1457 * _tmp872 -
                          _tmp1458 * _tmp892 - _tmp1462 * _tmp795 + _tmp1462 * _tmp851;
  const Scalar _tmp1464 = -_tmp1459 - _tmp1460 + _tmp1461;
  const Scalar _tmp1465 = _tmp1423 * _tmp798;
  const Scalar _tmp1466 = _tmp1422 * _tmp796;
  const Scalar _tmp1467 = _tmp1424 * _tmp800 + _tmp1425 * _tmp801;
  const Scalar _tmp1468 = _tmp1465 + _tmp1466 + _tmp1467;
  const Scalar _tmp1469 = -_tmp1423 * _tmp812;
  const Scalar _tmp1470 = _tmp1456 + _tmp1469;
  const Scalar _tmp1471 = -_tmp1445 * _tmp918 - _tmp1454 * _tmp919 - _tmp1458 * _tmp916 -
                          _tmp1464 * _tmp820 + _tmp1464 * _tmp872 - _tmp1468 * _tmp811 +
                          _tmp1468 * _tmp868 - _tmp1470 * _tmp795 + _tmp1470 * _tmp851;
  const Scalar _tmp1472 = _tmp1446 + _tmp1447 + _tmp1448;
  const Scalar _tmp1473 = -_tmp1465 - _tmp1466 + _tmp1467;
  const Scalar _tmp1474 = _tmp1455 + _tmp1469;
  const Scalar _tmp1475 = -_tmp1445 * _tmp876 - _tmp1454 * _tmp860 - _tmp1458 * _tmp827 -
                          _tmp1472 * _tmp820 + _tmp1472 * _tmp872 - _tmp1473 * _tmp795 +
                          _tmp1473 * _tmp851 - _tmp1474 * _tmp811 + _tmp1474 * _tmp868;
  const Scalar _tmp1476 = _tmp901 * sqrt_info(1, 1);
  const Scalar _tmp1477 = _tmp901 * sqrt_info(3, 1);
  const Scalar _tmp1478 = _tmp1434 * _tmp880;
  const Scalar _tmp1479 = _tmp901 * sqrt_info(4, 1);
  const Scalar _tmp1480 = _tmp1058 + _tmp1165 * _tmp497 - _tmp1167 * _tmp959 - _tmp1168 * _tmp959 -
                          _tmp1169 * _tmp959 + _tmp482 * _tmp959 + _tmp483 * _tmp959 +
                          _tmp485 * _tmp959;
  const Scalar _tmp1481 = _tmp1480 * _tmp470;
  const Scalar _tmp1482 = _tmp114 * _tmp1481;
  const Scalar _tmp1483 = _tmp1211 * _tmp69;
  const Scalar _tmp1484 = _tmp1192 * _tmp1210;
  const Scalar _tmp1485 = _tmp1196 * _tmp1484;
  const Scalar _tmp1486 = _tmp1210 * _tmp1227;
  const Scalar _tmp1487 = _tmp1192 * _tmp64;
  const Scalar _tmp1488 = _tmp1185 - _tmp1186 - _tmp1187 + _tmp1188;
  const Scalar _tmp1489 = _tmp1204 * _tmp1375 + _tmp1382 * _tmp1488;
  const Scalar _tmp1490 = _tmp1183 * _tmp1217 + _tmp1200 * _tmp1210 + _tmp1202 * _tmp1210 +
                          _tmp1205 * _tmp1210 - _tmp1210 * _tmp1487 - _tmp1484 * _tmp48 -
                          _tmp1484 * _tmp58 + _tmp1489;
  const Scalar _tmp1491 = _tmp1490 * _tmp397;
  const Scalar _tmp1492 = _tmp1490 * _tmp422;
  const Scalar _tmp1493 = _tmp1223 * _tmp79;
  const Scalar _tmp1494 = _tmp121 * _tmp1493;
  const Scalar _tmp1495 = _tmp1223 * _tmp1492;
  const Scalar _tmp1496 = -_tmp1249 * _tmp1375 + _tmp1488 * _tmp437;
  const Scalar _tmp1497 = _tmp1192 * _tmp1234 * _tmp1483 - _tmp1241 * _tmp1491 -
                          _tmp1253 * _tmp1483 + _tmp1257 * _tmp1490 - _tmp1258 * _tmp1485 +
                          _tmp1258 * _tmp1486 - _tmp1260 * _tmp1490 - _tmp1261 * _tmp1495 +
                          _tmp1262 * _tmp1485 - _tmp1262 * _tmp1486 - _tmp1266 * _tmp1492 +
                          _tmp1268 * _tmp1490 + _tmp1282 + _tmp1492 * _tmp1494 + _tmp1496;
  const Scalar _tmp1498 = _tmp1480 * _tmp515;
  const Scalar _tmp1499 = _tmp1480 * _tmp540;
  const Scalar _tmp1500 = _tmp1072 * _tmp959;
  const Scalar _tmp1501 = _tmp1500 * _tmp451;
  const Scalar _tmp1502 = _tmp1211 * _tmp70;
  const Scalar _tmp1503 = _tmp1192 * _tmp1196 * _tmp1502;
  const Scalar _tmp1504 = _tmp1503 * _tmp418;
  const Scalar _tmp1505 = _tmp1227 * _tmp1502;
  const Scalar _tmp1506 = _tmp1505 * _tmp418;
  const Scalar _tmp1507 = _tmp1250 * _tmp1375 - _tmp1269 * _tmp1488;
  const Scalar _tmp1508 = _tmp1184 - _tmp1210 * _tmp1289 - _tmp1210 * _tmp1295 +
                          _tmp1237 * _tmp1491 - _tmp1287 * _tmp1495 + _tmp1288 * _tmp1485 +
                          _tmp1290 * _tmp1495 - _tmp1292 * _tmp1490 + _tmp1294 * _tmp1484 -
                          _tmp1296 * _tmp1492 - _tmp1297 * _tmp1490 + _tmp1388 * _tmp1490 -
                          _tmp1504 * _tmp82 + _tmp1506 * _tmp82 + _tmp1507;
  const Scalar _tmp1509 = _tmp538 * _tmp959;
  const Scalar _tmp1510 = _tmp1493 * _tmp71;
  const Scalar _tmp1511 = _tmp1249 * _tmp1488 + _tmp1375 * _tmp437;
  const Scalar _tmp1512 = _tmp1194 * _tmp1495 - _tmp1195 * _tmp1485 + _tmp1195 * _tmp1486 -
                          _tmp1210 * _tmp1231 - _tmp1233 * _tmp1490 + _tmp1235 * _tmp1484 -
                          _tmp1238 * _tmp1490 - _tmp1240 * _tmp1492 + _tmp1242 * _tmp1490 +
                          _tmp1400 * _tmp1490 + _tmp1405 - _tmp1492 * _tmp1510 +
                          _tmp1503 * _tmp419 - _tmp1505 * _tmp419 + _tmp1511;
  const Scalar _tmp1513 = -_tmp1250 * _tmp1488 - _tmp1269 * _tmp1375;
  const Scalar _tmp1514 = -_tmp1256 * _tmp1491 + _tmp1265 - _tmp1272 * _tmp1490 +
                          _tmp1273 * _tmp1495 + _tmp1275 * _tmp1495 - _tmp1276 * _tmp1485 +
                          _tmp1276 * _tmp1486 + _tmp1277 * _tmp1495 + _tmp1278 * _tmp1486 -
                          _tmp1279 * _tmp1484 - _tmp1280 * _tmp1490 - _tmp1281 * _tmp1490 -
                          _tmp1504 * _tmp73 + _tmp1506 * _tmp73 + _tmp1513;
  const Scalar _tmp1515 = _tmp1480 * _tmp527;
  const Scalar _tmp1516 = _tmp108 * _tmp1481;
  const Scalar _tmp1517 = _tmp1480 * _tmp438;
  const Scalar _tmp1518 = _tmp1080 + _tmp1303 - _tmp1311 * _tmp959 - _tmp1480 * _tmp986 -
                          _tmp1482 * _tmp565 - _tmp1497 * _tmp550 - _tmp1498 * _tmp518 +
                          _tmp1499 * _tmp514 - _tmp1501 * _tmp505 - _tmp1508 * _tmp548 -
                          _tmp1509 * _tmp591 - _tmp1512 * _tmp549 + _tmp1514 * _tmp506 +
                          _tmp1515 * _tmp505 - _tmp1516 * _tmp509 + _tmp1517 * _tmp530 +
                          _tmp588 * _tmp959 + _tmp595 * _tmp959 + _tmp959 * _tmp985;
  const Scalar _tmp1519 = _tmp1078 + _tmp1166 - _tmp1313 * _tmp959 + _tmp1480 * _tmp512 -
                          _tmp1480 * _tmp516 + _tmp1480 * _tmp531 + _tmp1482 * _tmp519 +
                          _tmp1497 * _tmp549 - _tmp1499 * _tmp518 + _tmp1501 * _tmp438 +
                          _tmp1508 * _tmp506 - _tmp1509 * _tmp542 + _tmp1509 * _tmp971 -
                          _tmp1512 * _tmp550 + _tmp1514 * _tmp548 - _tmp1516 * _tmp507 -
                          _tmp1517 * _tmp527 - _tmp458 * _tmp959 + _tmp523 * _tmp959;
  const Scalar _tmp1520 = _tmp1480 * _tmp511;
  const Scalar _tmp1521 = -_tmp1064 * _tmp1480 + _tmp1067 - _tmp1304 * _tmp959 + _tmp1309 +
                          _tmp1481 * _tmp577 + _tmp1482 * _tmp507 + _tmp1497 * _tmp506 -
                          _tmp1498 * _tmp438 - _tmp1499 * _tmp505 - _tmp1500 * _tmp573 -
                          _tmp1508 * _tmp549 + _tmp1509 * _tmp555 + _tmp1509 * _tmp957 +
                          _tmp1512 * _tmp548 + _tmp1514 * _tmp550 + _tmp1515 * _tmp514 -
                          _tmp1520 * _tmp565 - _tmp582 * _tmp959 + _tmp584 * _tmp959;
  const Scalar _tmp1522 = -_tmp1069 * _tmp1480 + _tmp1074 + _tmp1286 * _tmp959 + _tmp1413 -
                          _tmp1482 * _tmp509 - _tmp1497 * _tmp548 - _tmp1498 * _tmp505 +
                          _tmp1501 * _tmp518 + _tmp1508 * _tmp550 + _tmp1509 * _tmp560 -
                          _tmp1509 * _tmp977 + _tmp1512 * _tmp506 + _tmp1514 * _tmp549 -
                          _tmp1515 * _tmp518 + _tmp1516 * _tmp565 + _tmp1517 * _tmp540 +
                          _tmp1520 * _tmp519 - _tmp564 * _tmp959 - _tmp567 * _tmp959;
  const Scalar _tmp1523 =
      _tmp1518 * _x0[0] + _tmp1519 * _x0[1] - _tmp1521 * _x0[2] + _tmp1522 * _x0[3];
  const Scalar _tmp1524 =
      _tmp1518 * _x0[3] - _tmp1519 * _x0[2] - _tmp1521 * _x0[1] - _tmp1522 * _x0[0];
  const Scalar _tmp1525 =
      _tmp1518 * _x0[1] - _tmp1519 * _x0[0] + _tmp1521 * _x0[3] + _tmp1522 * _x0[2];
  const Scalar _tmp1526 =
      _tmp1518 * _x0[2] + _tmp1519 * _x0[3] + _tmp1521 * _x0[0] - _tmp1522 * _x0[1];
  const Scalar _tmp1527 =
      -_tmp1523 * _x_T_a[2] + _tmp1524 * _x_T_a[1] + _tmp1525 * _x_T_a[3] + _tmp1526 * _x_T_a[0];
  const Scalar _tmp1528 =
      _tmp1523 * _x_T_a[3] + _tmp1524 * _x_T_a[0] + _tmp1525 * _x_T_a[2] - _tmp1526 * _x_T_a[1];
  const Scalar _tmp1529 =
      -_tmp1523 * _x_T_a[0] + _tmp1524 * _x_T_a[3] - _tmp1525 * _x_T_a[1] - _tmp1526 * _x_T_a[2];
  const Scalar _tmp1530 =
      _tmp1523 * _x_T_a[1] + _tmp1524 * _x_T_a[2] - _tmp1525 * _x_T_a[0] + _tmp1526 * _x_T_a[3];
  const Scalar _tmp1531 =
      _tmp1527 * _tmp728 - _tmp1528 * _tmp722 + _tmp1529 * _tmp734 - _tmp1530 * _tmp716;
  const Scalar _tmp1532 =
      -_tmp1527 * _tmp716 + _tmp1528 * _tmp734 + _tmp1529 * _tmp722 - _tmp1530 * _tmp728;
  const Scalar _tmp1533 =
      -_tmp1527 * _tmp734 - _tmp1528 * _tmp716 + _tmp1529 * _tmp728 + _tmp1530 * _tmp722;
  const Scalar _tmp1534 =
      _tmp1527 * _tmp722 + _tmp1528 * _tmp728 + _tmp1529 * _tmp716 + _tmp1530 * _tmp734;
  const Scalar _tmp1535 =
      _a_T_b[0] * _tmp1533 + _a_T_b[1] * _tmp1532 + _a_T_b[2] * _tmp1531 + _a_T_b[3] * _tmp1534;
  const Scalar _tmp1536 = _tmp1535 * _tmp901;
  const Scalar _tmp1537 = -_tmp1527 * _tmp814;
  const Scalar _tmp1538 = -_tmp1528 * _tmp812;
  const Scalar _tmp1539 = _tmp1537 + _tmp1538;
  const Scalar _tmp1540 = -_tmp1523 * _tmp837;
  const Scalar _tmp1541 = -_tmp1526 * _tmp852;
  const Scalar _tmp1542 = _tmp1524 * _tmp789;
  const Scalar _tmp1543 = _tmp1526 * _tmp829;
  const Scalar _tmp1544 = _tmp1523 * _tmp807 + _tmp1525 * _tmp787;
  const Scalar _tmp1545 = _tmp1523 * _tmp829;
  const Scalar _tmp1546 = _tmp1524 * _tmp787;
  const Scalar _tmp1547 = _tmp1525 * _tmp789 + _tmp1526 * _tmp807;
  const Scalar _tmp1548 = _x_T_a[4] * (_tmp1542 + _tmp1543 + _tmp1544) +
                          _x_T_a[5] * (_tmp1540 + _tmp1541) +
                          _x_T_a[6] * (-_tmp1545 - _tmp1546 + _tmp1547);
  const Scalar _tmp1549 = _tmp1527 * _tmp798;
  const Scalar _tmp1550 = _tmp1529 * _tmp800;
  const Scalar _tmp1551 = _tmp1528 * _tmp801 + _tmp1530 * _tmp796;
  const Scalar _tmp1552 = _tmp1549 + _tmp1550 + _tmp1551;
  const Scalar _tmp1553 = -_tmp1525 * _tmp835;
  const Scalar _tmp1554 = _tmp1525 * _tmp829;
  const Scalar _tmp1555 = _tmp1524 * _tmp807;
  const Scalar _tmp1556 = _tmp1523 * _tmp789 + _tmp1526 * _tmp787;
  const Scalar _tmp1557 = _x_T_a[4] * (_tmp1541 + _tmp1553) +
                          _x_T_a[5] * (-_tmp1542 - _tmp1543 + _tmp1544) +
                          _x_T_a[6] * (_tmp1554 + _tmp1555 + _tmp1556);
  const Scalar _tmp1558 = _tmp1528 * _tmp798;
  const Scalar _tmp1559 = _tmp1529 * _tmp796;
  const Scalar _tmp1560 = _tmp1527 * _tmp801 + _tmp1530 * _tmp800;
  const Scalar _tmp1561 = -_tmp1558 - _tmp1559 + _tmp1560;
  const Scalar _tmp1562 = _x_T_a[4] * (-_tmp1554 - _tmp1555 + _tmp1556) +
                          _x_T_a[5] * (_tmp1545 + _tmp1546 + _tmp1547) +
                          _x_T_a[6] * (_tmp1540 + _tmp1553);
  const Scalar _tmp1563 = -_tmp1539 * _tmp811 + _tmp1539 * _tmp868 - _tmp1548 * _tmp876 -
                          _tmp1552 * _tmp820 + _tmp1552 * _tmp872 - _tmp1557 * _tmp860 -
                          _tmp1561 * _tmp795 + _tmp1561 * _tmp851 - _tmp1562 * _tmp827;
  const Scalar _tmp1564 = _tmp1535 * _tmp782;
  const Scalar _tmp1565 = -_tmp1530 * _tmp896;
  const Scalar _tmp1566 = _tmp1538 + _tmp1565;
  const Scalar _tmp1567 = _tmp1530 * _tmp798;
  const Scalar _tmp1568 = _tmp1529 * _tmp801;
  const Scalar _tmp1569 = _tmp1527 * _tmp796 + _tmp1528 * _tmp800;
  const Scalar _tmp1570 = -_tmp1567 - _tmp1568 + _tmp1569;
  const Scalar _tmp1571 = _tmp1558 + _tmp1559 + _tmp1560;
  const Scalar _tmp1572 = -_tmp1548 * _tmp918 - _tmp1557 * _tmp919 - _tmp1562 * _tmp916 -
                          _tmp1566 * _tmp795 + _tmp1566 * _tmp851 - _tmp1570 * _tmp820 +
                          _tmp1570 * _tmp872 - _tmp1571 * _tmp811 + _tmp1571 * _tmp868;
  const Scalar _tmp1573 = _tmp1567 + _tmp1568 + _tmp1569;
  const Scalar _tmp1574 = -_tmp1549 - _tmp1550 + _tmp1551;
  const Scalar _tmp1575 = _tmp1537 + _tmp1565;
  const Scalar _tmp1576 = -_tmp1548 * _tmp895 - _tmp1557 * _tmp891 - _tmp1562 * _tmp892 -
                          _tmp1573 * _tmp795 + _tmp1573 * _tmp851 - _tmp1574 * _tmp811 +
                          _tmp1574 * _tmp868 - _tmp1575 * _tmp820 + _tmp1575 * _tmp872;
  const Scalar _tmp1577 =
      _a_T_b[0] * _tmp1531 - _a_T_b[1] * _tmp1534 - _a_T_b[2] * _tmp1533 + _a_T_b[3] * _tmp1532;
  const Scalar _tmp1578 = _tmp880 * (-_a_T_b[0] * _tmp1534 - _a_T_b[1] * _tmp1531 +
                                     _a_T_b[2] * _tmp1532 + _a_T_b[3] * _tmp1533);
  const Scalar _tmp1579 = _tmp1535 * _tmp912;
  const Scalar _tmp1580 =
      -_a_T_b[0] * _tmp1532 + _a_T_b[1] * _tmp1533 - _a_T_b[2] * _tmp1534 + _a_T_b[3] * _tmp1531;
  const Scalar _tmp1581 = lambdas_x(0, 0) - lambdas_x(1, 0);
  const Scalar _tmp1582 = _tmp919 * sqrt_info(0, 4);
  const Scalar _tmp1583 = _tmp860 * sqrt_info(0, 5);
  const Scalar _tmp1584 = _tmp891 * sqrt_info(0, 3);
  const Scalar _tmp1585 = _tmp919 * sqrt_info(1, 4);
  const Scalar _tmp1586 = _tmp860 * sqrt_info(1, 5);
  const Scalar _tmp1587 = _tmp891 * sqrt_info(1, 3);
  const Scalar _tmp1588 = _tmp919 * sqrt_info(2, 4);
  const Scalar _tmp1589 = _tmp860 * sqrt_info(2, 5);
  const Scalar _tmp1590 = _tmp891 * sqrt_info(2, 3);
  const Scalar _tmp1591 = _tmp919 * sqrt_info(3, 4);
  const Scalar _tmp1592 = _tmp860 * sqrt_info(3, 5);
  const Scalar _tmp1593 = _tmp891 * sqrt_info(3, 3);
  const Scalar _tmp1594 = _tmp919 * sqrt_info(4, 4);
  const Scalar _tmp1595 = _tmp860 * sqrt_info(4, 5);
  const Scalar _tmp1596 = _tmp891 * sqrt_info(4, 3);
  const Scalar _tmp1597 = _tmp919 * sqrt_info(5, 4);
  const Scalar _tmp1598 = _tmp860 * sqrt_info(5, 5);
  const Scalar _tmp1599 = _tmp891 * sqrt_info(5, 3);
  const Scalar _tmp1600 = _tmp1581 * _tmp918;
  const Scalar _tmp1601 = _tmp895 * sqrt_info(0, 3);
  const Scalar _tmp1602 = _tmp895 * sqrt_info(1, 3);
  const Scalar _tmp1603 = _tmp1581 * _tmp876;
  const Scalar _tmp1604 = _tmp895 * sqrt_info(2, 3);
  const Scalar _tmp1605 = _tmp895 * sqrt_info(3, 3);
  const Scalar _tmp1606 = _tmp895 * sqrt_info(4, 3);
  const Scalar _tmp1607 = _tmp895 * sqrt_info(5, 3);
  const Scalar _tmp1608 = _tmp1581 * _tmp827;
  const Scalar _tmp1609 = _tmp1581 * _tmp892;
  const Scalar _tmp1610 = _tmp1581 * _tmp916;
  const Scalar _tmp1611 = (Scalar(1) / Scalar(2)) * _tmp5;
  const Scalar _tmp1612 = (Scalar(1) / Scalar(2)) * _tmp6;
  const Scalar _tmp1613 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp1614 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp1615 = -_tmp1611 - _tmp1612 - _tmp1613 - _tmp1614;
  const Scalar _tmp1616 = _tmp426 * _tmp72;
  const Scalar _tmp1617 = _tmp1616 * _tmp500;
  const Scalar _tmp1618 = _tmp1615 * _tmp1617;
  const Scalar _tmp1619 = -_tmp1618;
  const Scalar _tmp1620 = (Scalar(1) / Scalar(2)) * _tmp19;
  const Scalar _tmp1621 = (Scalar(1) / Scalar(2)) * _tmp20;
  const Scalar _tmp1622 = (Scalar(1) / Scalar(2)) * _tmp21;
  const Scalar _tmp1623 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp1624 = _tmp1620 - _tmp1621 + _tmp1622 - _tmp1623;
  const Scalar _tmp1625 = ((((_tmp14 - _tmp407) > 0) - ((_tmp14 - _tmp407) < 0)) + 1) *
                          (((_tmp406) > 0) - ((_tmp406) < 0));
  const Scalar _tmp1626 = _tmp1624 * _tmp1625;
  const Scalar _tmp1627 = _tmp408 * _tmp412 / std::pow(_tmp409, Scalar(2));
  const Scalar _tmp1628 = _tmp13 * _tmp1627;
  const Scalar _tmp1629 = _tmp1627 * _tmp24;
  const Scalar _tmp1630 = _tmp411 / (_tmp409 * std::sqrt(_tmp409));
  const Scalar _tmp1631 = _tmp1625 * _tmp1630;
  const Scalar _tmp1632 = _tmp1624 * _tmp1631;
  const Scalar _tmp1633 = 8 * _tmp11 * _tmp413;
  const Scalar _tmp1634 = _tmp1633 * _tmp23;
  const Scalar _tmp1635 = _tmp1627 * _tmp30;
  const Scalar _tmp1636 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp1637 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp1638 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp1639 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp1640 = _tmp1636 - _tmp1637 - _tmp1638 + _tmp1639;
  const Scalar _tmp1641 = _tmp1633 * _tmp29;
  const Scalar _tmp1642 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp1643 = (Scalar(1) / Scalar(2)) * _tmp26;
  const Scalar _tmp1644 = (Scalar(1) / Scalar(2)) * _tmp27;
  const Scalar _tmp1645 = (Scalar(1) / Scalar(2)) * _tmp28;
  const Scalar _tmp1646 = -_tmp1642 - _tmp1643 + _tmp1644 + _tmp1645;
  const Scalar _tmp1647 = _tmp1633 * _tmp4;
  const Scalar _tmp1648 = _tmp1640 * _tmp1641 + _tmp1646 * _tmp1647;
  const Scalar _tmp1649 = -_tmp13 * _tmp1632 + _tmp1615 * _tmp1634 + _tmp1626 * _tmp1628 +
                          _tmp1626 * _tmp1629 + _tmp1626 * _tmp1635 - _tmp1632 * _tmp24 -
                          _tmp1632 * _tmp30 + _tmp1648;
  const Scalar _tmp1650 = _tmp1649 * _tmp79;
  const Scalar _tmp1651 = _tmp421 / _tmp414;
  const Scalar _tmp1652 = _tmp1245 * _tmp1651;
  const Scalar _tmp1653 = _tmp1192 * _tmp1488;
  const Scalar _tmp1654 = _tmp1179 + _tmp1180 + _tmp1181 + _tmp1182;
  const Scalar _tmp1655 = _tmp1200 * _tmp1488 + _tmp1202 * _tmp1488 + _tmp1204 * _tmp1654 +
                          _tmp1205 * _tmp1488 + _tmp1218 - _tmp1487 * _tmp1488 - _tmp1653 * _tmp48 -
                          _tmp1653 * _tmp58;
  const Scalar _tmp1656 = _tmp1221 * _tmp1655;
  const Scalar _tmp1657 = _tmp1222 * _tmp1656 * _tmp422;
  const Scalar _tmp1658 = _tmp408 * _tmp420;
  const Scalar _tmp1659 = _tmp1658 * _tmp396;
  const Scalar _tmp1660 = _tmp1632 * _tmp1659;
  const Scalar _tmp1661 = _tmp421 / (_tmp414 * std::sqrt(_tmp414));
  const Scalar _tmp1662 = _tmp1661 * _tmp396;
  const Scalar _tmp1663 = _tmp1662 * _tmp418;
  const Scalar _tmp1664 = _tmp1649 * _tmp1663;
  const Scalar _tmp1665 = _tmp1651 * _tmp436;
  const Scalar _tmp1666 = _tmp123 * _tmp1665;
  const Scalar _tmp1667 = _tmp1649 * _tmp1666;
  const Scalar _tmp1668 = _tmp1227 * _tmp1488;
  const Scalar _tmp1669 = _tmp1250 * _tmp1654;
  const Scalar _tmp1670 = _tmp410 * _tmp420;
  const Scalar _tmp1671 = _tmp1670 * _tmp396;
  const Scalar _tmp1672 = _tmp1288 * _tmp1671;
  const Scalar _tmp1673 = _tmp1665 * _tmp78;
  const Scalar _tmp1674 = _tmp1673 * _tmp73;
  const Scalar _tmp1675 = _tmp1656 * _tmp434;
  const Scalar _tmp1676 = _tmp410 * _tmp502;
  const Scalar _tmp1677 = _tmp1676 * _tmp79;
  const Scalar _tmp1678 = _tmp1626 * _tmp1671;
  const Scalar _tmp1679 = _tmp1655 * _tmp422;
  const Scalar _tmp1680 = _tmp1196 * _tmp1653;
  const Scalar _tmp1681 = _tmp1239 * _tmp420;
  const Scalar _tmp1682 = _tmp1681 * _tmp425;
  const Scalar _tmp1683 = _tmp1655 * _tmp397;
  const Scalar _tmp1684 = _tmp429 * _tmp79;
  const Scalar _tmp1685 = _tmp1661 * _tmp1684;
  const Scalar _tmp1686 = _tmp1246 * _tmp1655;
  const Scalar _tmp1687 = _tmp408 * _tmp502;
  const Scalar _tmp1688 = _tmp1687 * _tmp79;
  const Scalar _tmp1689 = _tmp1616 * _tmp397;
  const Scalar _tmp1690 = _tmp1640 * _tmp504 + _tmp1646 * _tmp1689;
  const Scalar _tmp1691 =
      _tmp1237 * _tmp1683 - _tmp1287 * _tmp1657 - _tmp1287 * _tmp1664 + _tmp1288 * _tmp1660 -
      _tmp1289 * _tmp1488 + _tmp1290 * _tmp1657 + _tmp1290 * _tmp1664 - _tmp1291 * _tmp1660 +
      _tmp1291 * _tmp1668 + _tmp1291 * _tmp1678 - _tmp1291 * _tmp1680 + _tmp1293 * _tmp1653 +
      _tmp1294 * _tmp1653 - _tmp1295 * _tmp1488 - _tmp1296 * _tmp1679 - _tmp1297 * _tmp1655 +
      _tmp1299 + _tmp1619 - _tmp1626 * _tmp1672 - _tmp1626 * _tmp1677 + _tmp1632 * _tmp1688 +
      _tmp1649 * _tmp1674 - _tmp1649 * _tmp1682 - _tmp1649 * _tmp1685 + _tmp1650 * _tmp1652 -
      _tmp1667 * _tmp82 + _tmp1669 - _tmp1675 * _tmp83 + _tmp1686 * _tmp425 + _tmp1690;
  const Scalar _tmp1692 = (Scalar(1) / Scalar(4)) * _tmp420;
  const Scalar _tmp1693 = _tmp1692 * _tmp429;
  const Scalar _tmp1694 = _tmp135 * _tmp1665;
  const Scalar _tmp1695 = _tmp1615 * _tmp1689;
  const Scalar _tmp1696 = -_tmp1695;
  const Scalar _tmp1697 = _tmp1269 * _tmp1654;
  const Scalar _tmp1698 = -_tmp1697;
  const Scalar _tmp1699 = _tmp1650 * _tmp1663;
  const Scalar _tmp1700 = _tmp1278 * _tmp1671;
  const Scalar _tmp1701 = _tmp1665 * _tmp83;
  const Scalar _tmp1702 = _tmp1276 * _tmp1671;
  const Scalar _tmp1703 = _tmp1616 * _tmp425;
  const Scalar _tmp1704 = -_tmp1617 * _tmp1646 - _tmp1640 * _tmp1703;
  const Scalar _tmp1705 =
      -_tmp1256 * _tmp1683 - _tmp1272 * _tmp1655 + _tmp1273 * _tmp1657 + _tmp1273 * _tmp1664 -
      _tmp1274 * _tmp1660 + _tmp1274 * _tmp1668 + _tmp1274 * _tmp1678 - _tmp1274 * _tmp1680 +
      _tmp1275 * _tmp1657 + _tmp1275 * _tmp1664 - _tmp1276 * _tmp1660 + _tmp1276 * _tmp1668 -
      _tmp1276 * _tmp1680 + _tmp1277 * _tmp1657 - _tmp1278 * _tmp1660 + _tmp1278 * _tmp1668 -
      _tmp1279 * _tmp1653 - _tmp1280 * _tmp1655 - _tmp1281 * _tmp1655 + _tmp1284 +
      _tmp129 * _tmp1699 + _tmp1626 * _tmp1700 + _tmp1626 * _tmp1702 - _tmp1649 * _tmp1693 -
      _tmp1649 * _tmp1694 - _tmp1650 * _tmp1701 - _tmp1667 * _tmp73 + _tmp1696 + _tmp1698 +
      _tmp1704;
  const Scalar _tmp1706 = _tmp1243 * _tmp1671;
  const Scalar _tmp1707 = _tmp1687 * _tmp82;
  const Scalar _tmp1708 = _tmp429 * _tmp82;
  const Scalar _tmp1709 = _tmp1661 * _tmp1708;
  const Scalar _tmp1710 = _tmp1681 * _tmp397;
  const Scalar _tmp1711 = _tmp1701 * _tmp73;
  const Scalar _tmp1712 = _tmp1652 * _tmp82;
  const Scalar _tmp1713 = _tmp1676 * _tmp82;
  const Scalar _tmp1714 = _tmp1195 * _tmp1671;
  const Scalar _tmp1715 = _tmp1617 * _tmp1640 - _tmp1646 * _tmp1703;
  const Scalar _tmp1716 = _tmp1615 * _tmp504 + _tmp1654 * _tmp437;
  const Scalar _tmp1717 =
      _tmp1194 * _tmp1657 + _tmp1194 * _tmp1664 - _tmp1195 * _tmp1660 + _tmp1195 * _tmp1668 -
      _tmp1195 * _tmp1680 - _tmp1225 * _tmp1657 - _tmp1231 * _tmp1488 + _tmp1235 * _tmp1653 -
      _tmp1238 * _tmp1655 - _tmp1240 * _tmp1679 + _tmp1242 * _tmp1655 + _tmp1243 * _tmp1660 -
      _tmp1243 * _tmp1668 + _tmp1243 * _tmp1680 + _tmp1251 - _tmp1626 * _tmp1706 -
      _tmp1626 * _tmp1713 + _tmp1626 * _tmp1714 + _tmp1632 * _tmp1707 - _tmp1649 * _tmp1709 -
      _tmp1649 * _tmp1710 - _tmp1649 * _tmp1711 + _tmp1649 * _tmp1712 + _tmp1650 * _tmp1666 -
      _tmp1675 * _tmp78 + _tmp1686 * _tmp397 - _tmp1699 * _tmp71 + _tmp1715 + _tmp1716;
  const Scalar _tmp1718 = _tmp1665 * _tmp84;
  const Scalar _tmp1719 = _tmp408 * _tmp431;
  const Scalar _tmp1720 = _tmp410 * _tmp431;
  const Scalar _tmp1721 = _tmp1681 * _tmp500;
  const Scalar _tmp1722 = _tmp1258 * _tmp396;
  const Scalar _tmp1723 = _tmp1658 * _tmp1722;
  const Scalar _tmp1724 = _tmp1615 * _tmp1703;
  const Scalar _tmp1725 = _tmp1249 * _tmp1654;
  const Scalar _tmp1726 = -_tmp1725;
  const Scalar _tmp1727 = _tmp1661 * _tmp430;
  const Scalar _tmp1728 = _tmp1652 * _tmp73;
  const Scalar _tmp1729 = _tmp1670 * _tmp1722;
  const Scalar _tmp1730 = -_tmp1640 * _tmp1689 + _tmp1646 * _tmp504;
  const Scalar _tmp1731 =
      _tmp121 * _tmp1699 - _tmp123 * _tmp1675 - _tmp1241 * _tmp1683 - _tmp1254 * _tmp1488 +
      _tmp1255 * _tmp1657 + _tmp1257 * _tmp1655 + _tmp1258 * _tmp1668 - _tmp1258 * _tmp1680 -
      _tmp1261 * _tmp1657 - _tmp1261 * _tmp1664 + _tmp1262 * _tmp1660 - _tmp1262 * _tmp1668 -
      _tmp1262 * _tmp1678 + _tmp1262 * _tmp1680 - _tmp1266 * _tmp1679 + _tmp1267 * _tmp1653 +
      _tmp1270 - _tmp1626 * _tmp1720 + _tmp1626 * _tmp1729 + _tmp1632 * _tmp1719 -
      _tmp1632 * _tmp1723 + _tmp1649 * _tmp1718 - _tmp1649 * _tmp1721 - _tmp1649 * _tmp1727 +
      _tmp1649 * _tmp1728 - _tmp1650 * _tmp1673 + _tmp1686 * _tmp500 + _tmp1724 + _tmp1726 +
      _tmp1730;
  const Scalar _tmp1732 =
      -_tmp1691 * _tmp548 + _tmp1705 * _tmp506 - _tmp1717 * _tmp549 - _tmp1731 * _tmp550;
  const Scalar _tmp1733 =
      _tmp1691 * _tmp550 + _tmp1705 * _tmp549 + _tmp1717 * _tmp506 - _tmp1731 * _tmp548;
  const Scalar _tmp1734 =
      _tmp1691 * _tmp506 + _tmp1705 * _tmp548 - _tmp1717 * _tmp550 + _tmp1731 * _tmp549;
  const Scalar _tmp1735 =
      -_tmp1691 * _tmp549 + _tmp1705 * _tmp550 + _tmp1717 * _tmp548 + _tmp1731 * _tmp506;
  const Scalar _tmp1736 =
      _tmp1732 * _x0[2] - _tmp1733 * _x0[1] + _tmp1734 * _x0[3] + _tmp1735 * _x0[0];
  const Scalar _tmp1737 =
      _tmp1732 * _x0[1] + _tmp1733 * _x0[2] - _tmp1734 * _x0[0] + _tmp1735 * _x0[3];
  const Scalar _tmp1738 =
      _tmp1732 * _x0[0] + _tmp1733 * _x0[3] + _tmp1734 * _x0[1] - _tmp1735 * _x0[2];
  const Scalar _tmp1739 =
      _tmp1732 * _x0[3] - _tmp1733 * _x0[0] - _tmp1734 * _x0[2] - _tmp1735 * _x0[1];
  const Scalar _tmp1740 =
      _tmp1736 * _x_T_a[3] - _tmp1737 * _x_T_a[0] + _tmp1738 * _x_T_a[1] + _tmp1739 * _x_T_a[2];
  const Scalar _tmp1741 =
      -_tmp1736 * _x_T_a[1] + _tmp1737 * _x_T_a[2] + _tmp1738 * _x_T_a[3] + _tmp1739 * _x_T_a[0];
  const Scalar _tmp1742 =
      _tmp1736 * _x_T_a[0] + _tmp1737 * _x_T_a[3] - _tmp1738 * _x_T_a[2] + _tmp1739 * _x_T_a[1];
  const Scalar _tmp1743 =
      -_tmp1736 * _x_T_a[2] - _tmp1737 * _x_T_a[1] - _tmp1738 * _x_T_a[0] + _tmp1739 * _x_T_a[3];
  const Scalar _tmp1744 =
      _tmp1740 * _tmp734 + _tmp1741 * _tmp728 + _tmp1742 * _tmp722 + _tmp1743 * _tmp716;
  const Scalar _tmp1745 =
      _tmp1740 * _tmp722 - _tmp1741 * _tmp716 - _tmp1742 * _tmp734 + _tmp1743 * _tmp728;
  const Scalar _tmp1746 =
      -_tmp1740 * _tmp728 + _tmp1741 * _tmp734 - _tmp1742 * _tmp716 + _tmp1743 * _tmp722;
  const Scalar _tmp1747 =
      -_tmp1740 * _tmp716 - _tmp1741 * _tmp722 + _tmp1742 * _tmp728 + _tmp1743 * _tmp734;
  const Scalar _tmp1748 =
      _a_T_b[0] * _tmp1745 + _a_T_b[1] * _tmp1746 + _a_T_b[2] * _tmp1747 + _a_T_b[3] * _tmp1744;
  const Scalar _tmp1749 = _tmp1748 * _tmp901;
  const Scalar _tmp1750 =
      -_a_T_b[0] * _tmp1746 + _a_T_b[1] * _tmp1745 - _a_T_b[2] * _tmp1744 + _a_T_b[3] * _tmp1747;
  const Scalar _tmp1751 = _tmp879 * (_a_T_b[0] * _tmp1747 - _a_T_b[1] * _tmp1744 -
                                     _a_T_b[2] * _tmp1745 + _a_T_b[3] * _tmp1746);
  const Scalar _tmp1752 = 2 * _tmp1751;
  const Scalar _tmp1753 = _tmp1748 * _tmp912;
  const Scalar _tmp1754 = _tmp1748 * _tmp782;
  const Scalar _tmp1755 = _tmp1740 * _tmp798;
  const Scalar _tmp1756 = _tmp1743 * _tmp801;
  const Scalar _tmp1757 = _tmp1741 * _tmp800 + _tmp1742 * _tmp796;
  const Scalar _tmp1758 = _tmp1755 + _tmp1756 + _tmp1757;
  const Scalar _tmp1759 = _tmp1736 * _tmp829;
  const Scalar _tmp1760 = _tmp1739 * _tmp789;
  const Scalar _tmp1761 = _tmp1737 * _tmp787 + _tmp1738 * _tmp807;
  const Scalar _tmp1762 = -_tmp1737 * _tmp835;
  const Scalar _tmp1763 = -_tmp1736 * _tmp852;
  const Scalar _tmp1764 = _tmp1737 * _tmp829;
  const Scalar _tmp1765 = _tmp1739 * _tmp807;
  const Scalar _tmp1766 = _tmp1736 * _tmp787 + _tmp1738 * _tmp789;
  const Scalar _tmp1767 = _x_T_a[4] * (_tmp1762 + _tmp1763) +
                          _x_T_a[5] * (-_tmp1759 - _tmp1760 + _tmp1761) +
                          _x_T_a[6] * (_tmp1764 + _tmp1765 + _tmp1766);
  const Scalar _tmp1768 = _tmp1738 * _tmp829;
  const Scalar _tmp1769 = _tmp1739 * _tmp787;
  const Scalar _tmp1770 = _tmp1736 * _tmp807 + _tmp1737 * _tmp789;
  const Scalar _tmp1771 = -_tmp1738 * _tmp837;
  const Scalar _tmp1772 = _x_T_a[4] * (_tmp1759 + _tmp1760 + _tmp1761) +
                          _x_T_a[5] * (_tmp1763 + _tmp1771) +
                          _x_T_a[6] * (-_tmp1768 - _tmp1769 + _tmp1770);
  const Scalar _tmp1773 = _tmp1742 * _tmp798;
  const Scalar _tmp1774 = _tmp1743 * _tmp800;
  const Scalar _tmp1775 = _tmp1740 * _tmp796 + _tmp1741 * _tmp801;
  const Scalar _tmp1776 = -_tmp1773 - _tmp1774 + _tmp1775;
  const Scalar _tmp1777 = _x_T_a[4] * (-_tmp1764 - _tmp1765 + _tmp1766) +
                          _x_T_a[5] * (_tmp1768 + _tmp1769 + _tmp1770) +
                          _x_T_a[6] * (_tmp1762 + _tmp1771);
  const Scalar _tmp1778 = -_tmp1740 * _tmp896;
  const Scalar _tmp1779 = -_tmp1742 * _tmp814;
  const Scalar _tmp1780 = _tmp1778 + _tmp1779;
  const Scalar _tmp1781 = -_tmp1758 * _tmp795 + _tmp1758 * _tmp851 - _tmp1767 * _tmp891 -
                          _tmp1772 * _tmp895 - _tmp1776 * _tmp811 + _tmp1776 * _tmp868 -
                          _tmp1777 * _tmp892 - _tmp1780 * _tmp820 + _tmp1780 * _tmp872;
  const Scalar _tmp1782 = _tmp880 * (-_a_T_b[0] * _tmp1744 - _a_T_b[1] * _tmp1747 +
                                     _a_T_b[2] * _tmp1746 + _a_T_b[3] * _tmp1745);
  const Scalar _tmp1783 = _tmp1773 + _tmp1774 + _tmp1775;
  const Scalar _tmp1784 = -_tmp1741 * _tmp812;
  const Scalar _tmp1785 = _tmp1779 + _tmp1784;
  const Scalar _tmp1786 = _tmp1741 * _tmp798;
  const Scalar _tmp1787 = _tmp1743 * _tmp796;
  const Scalar _tmp1788 = _tmp1740 * _tmp800 + _tmp1742 * _tmp801;
  const Scalar _tmp1789 = -_tmp1786 - _tmp1787 + _tmp1788;
  const Scalar _tmp1790 = -_tmp1767 * _tmp860 - _tmp1772 * _tmp876 - _tmp1777 * _tmp827 -
                          _tmp1783 * _tmp820 + _tmp1783 * _tmp872 - _tmp1785 * _tmp811 +
                          _tmp1785 * _tmp868 - _tmp1789 * _tmp795 + _tmp1789 * _tmp851;
  const Scalar _tmp1791 = _tmp1786 + _tmp1787 + _tmp1788;
  const Scalar _tmp1792 = -_tmp1755 - _tmp1756 + _tmp1757;
  const Scalar _tmp1793 = _tmp1778 + _tmp1784;
  const Scalar _tmp1794 = -_tmp1767 * _tmp919 - _tmp1772 * _tmp918 - _tmp1777 * _tmp916 -
                          _tmp1791 * _tmp811 + _tmp1791 * _tmp868 - _tmp1792 * _tmp820 +
                          _tmp1792 * _tmp872 - _tmp1793 * _tmp795 + _tmp1793 * _tmp851;
  const Scalar _tmp1795 = -_tmp1724;
  const Scalar _tmp1796 = -_tmp1636 + _tmp1637 + _tmp1638 - _tmp1639;
  const Scalar _tmp1797 = _tmp1625 * _tmp1796;
  const Scalar _tmp1798 = _tmp1192 * _tmp1216;
  const Scalar _tmp1799 = _tmp1196 * _tmp1798;
  const Scalar _tmp1800 = _tmp1190 * _tmp1216;
  const Scalar _tmp1801 = _tmp1198 * _tmp1800 * _tmp48 + _tmp1201 * _tmp1800 + _tmp1380 * _tmp1800 +
                          _tmp1382 * _tmp1654 + _tmp1384 - _tmp1798 * _tmp48 - _tmp1798 * _tmp58 -
                          _tmp1798 * _tmp64;
  const Scalar _tmp1802 = _tmp1631 * _tmp1707;
  const Scalar _tmp1803 = _tmp1631 * _tmp1659;
  const Scalar _tmp1804 = _tmp1243 * _tmp1803;
  const Scalar _tmp1805 = _tmp1226 * _tmp1800;
  const Scalar _tmp1806 = _tmp1631 * _tmp30;
  const Scalar _tmp1807 = _tmp1631 * _tmp24;
  const Scalar _tmp1808 = _tmp13 * _tmp1631;
  const Scalar _tmp1809 = _tmp1642 + _tmp1643 - _tmp1644 - _tmp1645;
  const Scalar _tmp1810 = _tmp1624 * _tmp1641 + _tmp1634 * _tmp1809;
  const Scalar _tmp1811 = _tmp1615 * _tmp1647 + _tmp1628 * _tmp1797 + _tmp1629 * _tmp1797 +
                          _tmp1635 * _tmp1797 - _tmp1796 * _tmp1806 - _tmp1796 * _tmp1807 -
                          _tmp1796 * _tmp1808 + _tmp1810;
  const Scalar _tmp1812 = _tmp1666 * _tmp79;
  const Scalar _tmp1813 = _tmp1665 * _tmp1811;
  const Scalar _tmp1814 = _tmp73 * _tmp83;
  const Scalar _tmp1815 = _tmp1661 * _tmp1811;
  const Scalar _tmp1816 = _tmp1815 * _tmp396;
  const Scalar _tmp1817 = _tmp1816 * _tmp418;
  const Scalar _tmp1818 = _tmp1195 * _tmp1803;
  const Scalar _tmp1819 = _tmp1801 * _tmp422;
  const Scalar _tmp1820 = _tmp1223 * _tmp1819;
  const Scalar _tmp1821 = _tmp1617 * _tmp1624 + _tmp1809 * _tmp504;
  const Scalar _tmp1822 =
      _tmp1194 * _tmp1817 + _tmp1194 * _tmp1820 - _tmp1195 * _tmp1799 + _tmp1195 * _tmp1805 -
      _tmp1225 * _tmp1820 - _tmp1230 * _tmp1800 - _tmp1233 * _tmp1801 + _tmp1235 * _tmp1798 -
      _tmp1238 * _tmp1801 - _tmp1240 * _tmp1819 + _tmp1242 * _tmp1801 + _tmp1243 * _tmp1799 -
      _tmp1243 * _tmp1805 - _tmp1243 * _tmp1816 + _tmp1400 * _tmp1801 + _tmp1401 -
      _tmp1706 * _tmp1797 - _tmp1708 * _tmp1815 - _tmp1710 * _tmp1811 + _tmp1712 * _tmp1811 -
      _tmp1713 * _tmp1797 + _tmp1714 * _tmp1797 + _tmp1725 + _tmp1795 + _tmp1796 * _tmp1802 +
      _tmp1796 * _tmp1804 - _tmp1796 * _tmp1818 + _tmp1811 * _tmp1812 - _tmp1813 * _tmp1814 +
      _tmp1821;
  const Scalar _tmp1823 = _tmp1262 * _tmp1803;
  const Scalar _tmp1824 = _tmp1229 * _tmp1800;
  const Scalar _tmp1825 = _tmp1256 * _tmp1801;
  const Scalar _tmp1826 = _tmp1665 * _tmp80;
  const Scalar _tmp1827 = _tmp1262 * _tmp1671;
  const Scalar _tmp1828 = _tmp1631 * _tmp1719;
  const Scalar _tmp1829 = _tmp1631 * _tmp1723;
  const Scalar _tmp1830 = _tmp1801 * _tmp397;
  const Scalar _tmp1831 = -_tmp1624 * _tmp1689 + _tmp1703 * _tmp1809;
  const Scalar _tmp1832 =
      -_tmp123 * _tmp1824 - _tmp1241 * _tmp1830 + _tmp1255 * _tmp1820 - _tmp1258 * _tmp1799 +
      _tmp1258 * _tmp1805 + _tmp1258 * _tmp1816 - _tmp1260 * _tmp1801 - _tmp1261 * _tmp1817 -
      _tmp1261 * _tmp1820 + _tmp1262 * _tmp1799 - _tmp1262 * _tmp1805 - _tmp1266 * _tmp1819 +
      _tmp1267 * _tmp1798 + _tmp1268 * _tmp1801 + _tmp1403 + _tmp1716 - _tmp1720 * _tmp1797 -
      _tmp1721 * _tmp1811 - _tmp1727 * _tmp1811 + _tmp1728 * _tmp1811 + _tmp1729 * _tmp1797 +
      _tmp1796 * _tmp1823 + _tmp1796 * _tmp1828 - _tmp1796 * _tmp1829 - _tmp1797 * _tmp1827 -
      _tmp1811 * _tmp1826 + _tmp1813 * _tmp84 + _tmp1825 * _tmp425 + _tmp1831;
  const Scalar _tmp1833 = _tmp1631 * _tmp1688;
  const Scalar _tmp1834 = _tmp1666 * _tmp82;
  const Scalar _tmp1835 = _tmp1811 * _tmp73;
  const Scalar _tmp1836 = _tmp1291 * _tmp1803;
  const Scalar _tmp1837 = _tmp1288 * _tmp1803;
  const Scalar _tmp1838 = _tmp1652 * _tmp79;
  const Scalar _tmp1839 = _tmp1291 * _tmp1671;
  const Scalar _tmp1840 = -_tmp1617 * _tmp1809 + _tmp1624 * _tmp504;
  const Scalar _tmp1841 =
      _tmp1237 * _tmp1830 - _tmp1287 * _tmp1817 - _tmp1287 * _tmp1820 + _tmp1288 * _tmp1799 -
      _tmp1288 * _tmp1805 + _tmp1290 * _tmp1817 + _tmp1290 * _tmp1820 - _tmp1291 * _tmp1799 +
      _tmp1291 * _tmp1805 - _tmp1292 * _tmp1801 + _tmp1294 * _tmp1798 - _tmp1296 * _tmp1819 -
      _tmp1297 * _tmp1801 + _tmp1388 * _tmp1801 + _tmp1393 - _tmp1672 * _tmp1797 +
      _tmp1673 * _tmp1835 - _tmp1677 * _tmp1797 - _tmp1682 * _tmp1811 - _tmp1684 * _tmp1815 +
      _tmp1695 + _tmp1698 + _tmp1796 * _tmp1833 - _tmp1796 * _tmp1836 + _tmp1796 * _tmp1837 +
      _tmp1797 * _tmp1839 - _tmp1811 * _tmp1834 + _tmp1811 * _tmp1838 - _tmp1824 * _tmp83 +
      _tmp1840;
  const Scalar _tmp1842 = _tmp1276 * _tmp1803;
  const Scalar _tmp1843 = -_tmp1669;
  const Scalar _tmp1844 = _tmp1274 * _tmp1803;
  const Scalar _tmp1845 = _tmp1274 * _tmp1671;
  const Scalar _tmp1846 = _tmp1278 * _tmp1803;
  const Scalar _tmp1847 = -_tmp1624 * _tmp1703 - _tmp1689 * _tmp1809;
  const Scalar _tmp1848 =
      -_tmp1272 * _tmp1801 + _tmp1273 * _tmp1817 + _tmp1273 * _tmp1820 - _tmp1274 * _tmp1799 +
      _tmp1274 * _tmp1805 + _tmp1275 * _tmp1817 + _tmp1275 * _tmp1820 - _tmp1276 * _tmp1799 +
      _tmp1276 * _tmp1805 + _tmp1277 * _tmp1820 + _tmp1278 * _tmp1805 + _tmp1278 * _tmp1816 -
      _tmp1279 * _tmp1798 - _tmp1280 * _tmp1801 - _tmp1281 * _tmp1801 - _tmp134 * _tmp1813 -
      _tmp135 * _tmp1813 + _tmp1406 + _tmp1619 - _tmp1666 * _tmp1835 - _tmp1693 * _tmp1811 +
      _tmp1700 * _tmp1797 + _tmp1702 * _tmp1797 - _tmp1796 * _tmp1842 - _tmp1796 * _tmp1844 -
      _tmp1796 * _tmp1846 + _tmp1797 * _tmp1845 - _tmp1825 * _tmp397 + _tmp1843 + _tmp1847;
  const Scalar _tmp1849 =
      -_tmp1822 * _tmp549 - _tmp1832 * _tmp550 - _tmp1841 * _tmp548 + _tmp1848 * _tmp506;
  const Scalar _tmp1850 =
      -_tmp1822 * _tmp550 + _tmp1832 * _tmp549 + _tmp1841 * _tmp506 + _tmp1848 * _tmp548;
  const Scalar _tmp1851 =
      _tmp1822 * _tmp506 - _tmp1832 * _tmp548 + _tmp1841 * _tmp550 + _tmp1848 * _tmp549;
  const Scalar _tmp1852 =
      _tmp1822 * _tmp548 + _tmp1832 * _tmp506 - _tmp1841 * _tmp549 + _tmp1848 * _tmp550;
  const Scalar _tmp1853 =
      _tmp1849 * _x0[3] - _tmp1850 * _x0[2] - _tmp1851 * _x0[0] - _tmp1852 * _x0[1];
  const Scalar _tmp1854 = _tmp1853 * _tmp787;
  const Scalar _tmp1855 =
      _tmp1849 * _x0[0] + _tmp1850 * _x0[1] + _tmp1851 * _x0[3] - _tmp1852 * _x0[2];
  const Scalar _tmp1856 = _tmp1855 * _tmp829;
  const Scalar _tmp1857 =
      _tmp1849 * _x0[2] + _tmp1850 * _x0[3] - _tmp1851 * _x0[1] + _tmp1852 * _x0[0];
  const Scalar _tmp1858 =
      _tmp1849 * _x0[1] - _tmp1850 * _x0[0] + _tmp1851 * _x0[2] + _tmp1852 * _x0[3];
  const Scalar _tmp1859 = _tmp1857 * _tmp807 + _tmp1858 * _tmp789;
  const Scalar _tmp1860 = -_tmp1858 * _tmp835;
  const Scalar _tmp1861 = -_tmp1855 * _tmp837;
  const Scalar _tmp1862 = _tmp1853 * _tmp807;
  const Scalar _tmp1863 = _tmp1858 * _tmp829;
  const Scalar _tmp1864 = _tmp1855 * _tmp789 + _tmp1857 * _tmp787;
  const Scalar _tmp1865 = _x_T_a[4] * (-_tmp1862 - _tmp1863 + _tmp1864) +
                          _x_T_a[5] * (_tmp1854 + _tmp1856 + _tmp1859) +
                          _x_T_a[6] * (_tmp1860 + _tmp1861);
  const Scalar _tmp1866 =
      _tmp1853 * _x_T_a[3] - _tmp1855 * _x_T_a[0] - _tmp1857 * _x_T_a[2] - _tmp1858 * _x_T_a[1];
  const Scalar _tmp1867 = _tmp1866 * _tmp796;
  const Scalar _tmp1868 =
      _tmp1853 * _x_T_a[0] + _tmp1855 * _x_T_a[3] - _tmp1857 * _x_T_a[1] + _tmp1858 * _x_T_a[2];
  const Scalar _tmp1869 = _tmp1868 * _tmp798;
  const Scalar _tmp1870 =
      _tmp1853 * _x_T_a[1] - _tmp1855 * _x_T_a[2] + _tmp1857 * _x_T_a[0] + _tmp1858 * _x_T_a[3];
  const Scalar _tmp1871 =
      _tmp1853 * _x_T_a[2] + _tmp1855 * _x_T_a[1] + _tmp1857 * _x_T_a[3] - _tmp1858 * _x_T_a[0];
  const Scalar _tmp1872 = _tmp1870 * _tmp801 + _tmp1871 * _tmp800;
  const Scalar _tmp1873 = -_tmp1867 - _tmp1869 + _tmp1872;
  const Scalar _tmp1874 = _tmp1866 * _tmp800;
  const Scalar _tmp1875 = _tmp1870 * _tmp798;
  const Scalar _tmp1876 = _tmp1868 * _tmp801 + _tmp1871 * _tmp796;
  const Scalar _tmp1877 = _tmp1874 + _tmp1875 + _tmp1876;
  const Scalar _tmp1878 = -_tmp1870 * _tmp814;
  const Scalar _tmp1879 = -_tmp1868 * _tmp812;
  const Scalar _tmp1880 = _tmp1878 + _tmp1879;
  const Scalar _tmp1881 = _tmp1853 * _tmp789;
  const Scalar _tmp1882 = _tmp1857 * _tmp829;
  const Scalar _tmp1883 = _tmp1855 * _tmp807 + _tmp1858 * _tmp787;
  const Scalar _tmp1884 = -_tmp1857 * _tmp852;
  const Scalar _tmp1885 = _x_T_a[4] * (_tmp1860 + _tmp1884) +
                          _x_T_a[5] * (-_tmp1881 - _tmp1882 + _tmp1883) +
                          _x_T_a[6] * (_tmp1862 + _tmp1863 + _tmp1864);
  const Scalar _tmp1886 = _x_T_a[4] * (_tmp1881 + _tmp1882 + _tmp1883) +
                          _x_T_a[5] * (_tmp1861 + _tmp1884) +
                          _x_T_a[6] * (-_tmp1854 - _tmp1856 + _tmp1859);
  const Scalar _tmp1887 = -_tmp1865 * _tmp827 - _tmp1873 * _tmp795 + _tmp1873 * _tmp851 -
                          _tmp1877 * _tmp820 + _tmp1877 * _tmp872 - _tmp1880 * _tmp811 +
                          _tmp1880 * _tmp868 - _tmp1885 * _tmp860 - _tmp1886 * _tmp876;
  const Scalar _tmp1888 =
      _tmp1866 * _tmp734 - _tmp1868 * _tmp722 + _tmp1870 * _tmp728 - _tmp1871 * _tmp716;
  const Scalar _tmp1889 =
      _tmp1866 * _tmp716 + _tmp1868 * _tmp728 + _tmp1870 * _tmp722 + _tmp1871 * _tmp734;
  const Scalar _tmp1890 =
      _tmp1866 * _tmp722 + _tmp1868 * _tmp734 - _tmp1870 * _tmp716 - _tmp1871 * _tmp728;
  const Scalar _tmp1891 =
      _tmp1866 * _tmp728 - _tmp1868 * _tmp716 - _tmp1870 * _tmp734 + _tmp1871 * _tmp722;
  const Scalar _tmp1892 =
      _a_T_b[0] * _tmp1891 + _a_T_b[1] * _tmp1890 + _a_T_b[2] * _tmp1888 + _a_T_b[3] * _tmp1889;
  const Scalar _tmp1893 = _tmp1892 * _tmp782;
  const Scalar _tmp1894 = _tmp880 * (-_a_T_b[0] * _tmp1889 - _a_T_b[1] * _tmp1888 +
                                     _a_T_b[2] * _tmp1890 + _a_T_b[3] * _tmp1891);
  const Scalar _tmp1895 =
      -_a_T_b[0] * _tmp1890 + _a_T_b[1] * _tmp1891 - _a_T_b[2] * _tmp1889 + _a_T_b[3] * _tmp1888;
  const Scalar _tmp1896 = _tmp1895 * _tmp880;
  const Scalar _tmp1897 =
      _a_T_b[0] * _tmp1888 - _a_T_b[1] * _tmp1889 - _a_T_b[2] * _tmp1891 + _a_T_b[3] * _tmp1890;
  const Scalar _tmp1898 = _tmp1892 * _tmp883;
  const Scalar _tmp1899 = -_tmp1871 * _tmp896;
  const Scalar _tmp1900 = _tmp1879 + _tmp1899;
  const Scalar _tmp1901 = _tmp1866 * _tmp801;
  const Scalar _tmp1902 = _tmp1871 * _tmp798;
  const Scalar _tmp1903 = _tmp1868 * _tmp800 + _tmp1870 * _tmp796;
  const Scalar _tmp1904 = -_tmp1901 - _tmp1902 + _tmp1903;
  const Scalar _tmp1905 = _tmp1867 + _tmp1869 + _tmp1872;
  const Scalar _tmp1906 = -_tmp1865 * _tmp916 - _tmp1885 * _tmp919 - _tmp1886 * _tmp918 -
                          _tmp1900 * _tmp795 + _tmp1900 * _tmp851 - _tmp1904 * _tmp820 +
                          _tmp1904 * _tmp872 - _tmp1905 * _tmp811 + _tmp1905 * _tmp868;
  const Scalar _tmp1907 = -_tmp1874 - _tmp1875 + _tmp1876;
  const Scalar _tmp1908 = _tmp1878 + _tmp1899;
  const Scalar _tmp1909 = _tmp1901 + _tmp1902 + _tmp1903;
  const Scalar _tmp1910 = -_tmp1865 * _tmp892 - _tmp1885 * _tmp891 - _tmp1886 * _tmp895 -
                          _tmp1907 * _tmp811 + _tmp1907 * _tmp868 - _tmp1908 * _tmp820 +
                          _tmp1908 * _tmp872 - _tmp1909 * _tmp795 + _tmp1909 * _tmp851;
  const Scalar _tmp1911 = _tmp1892 * _tmp901;
  const Scalar _tmp1912 = _tmp1227 * _tmp1383;
  const Scalar _tmp1913 = _tmp1631 * _tmp1646;
  const Scalar _tmp1914 = _tmp1625 * _tmp1646;
  const Scalar _tmp1915 = -_tmp1620 + _tmp1621 - _tmp1622 + _tmp1623;
  const Scalar _tmp1916 = _tmp1634 * _tmp1796 + _tmp1647 * _tmp1915;
  const Scalar _tmp1917 = -_tmp13 * _tmp1913 + _tmp1615 * _tmp1641 + _tmp1628 * _tmp1914 +
                          _tmp1629 * _tmp1914 + _tmp1635 * _tmp1914 - _tmp1913 * _tmp24 -
                          _tmp1913 * _tmp30 + _tmp1916;
  const Scalar _tmp1918 = _tmp1192 * _tmp1383;
  const Scalar _tmp1919 = _tmp1200 * _tmp1383 + _tmp1202 * _tmp1383 + _tmp1205 * _tmp1383 +
                          _tmp1217 * _tmp1654 + _tmp1489 - _tmp1918 * _tmp48 - _tmp1918 * _tmp58 -
                          _tmp1918 * _tmp64;
  const Scalar _tmp1920 = _tmp1919 * _tmp422;
  const Scalar _tmp1921 = _tmp1223 * _tmp1920;
  const Scalar _tmp1922 = _tmp1671 * _tmp1914;
  const Scalar _tmp1923 = _tmp1919 * _tmp78;
  const Scalar _tmp1924 = _tmp1923 * _tmp396;
  const Scalar _tmp1925 = _tmp1661 * _tmp1917;
  const Scalar _tmp1926 = _tmp1925 * _tmp396;
  const Scalar _tmp1927 = _tmp1659 * _tmp1913;
  const Scalar _tmp1928 = _tmp134 * _tmp1665;
  const Scalar _tmp1929 = _tmp1196 * _tmp1918;
  const Scalar _tmp1930 = _tmp1917 * _tmp73;
  const Scalar _tmp1931 = -_tmp1617 * _tmp1915 - _tmp1689 * _tmp1796;
  const Scalar _tmp1932 =
      -_tmp1256 * _tmp1924 - _tmp1272 * _tmp1919 + _tmp1273 * _tmp1921 + _tmp1274 * _tmp1912 +
      _tmp1274 * _tmp1922 + _tmp1274 * _tmp1926 - _tmp1274 * _tmp1927 - _tmp1274 * _tmp1929 +
      _tmp1275 * _tmp1921 + _tmp1276 * _tmp1912 + _tmp1276 * _tmp1922 + _tmp1276 * _tmp1926 -
      _tmp1276 * _tmp1927 - _tmp1276 * _tmp1929 + _tmp1277 * _tmp1921 + _tmp1278 * _tmp1912 +
      _tmp1278 * _tmp1926 - _tmp1278 * _tmp1927 - _tmp1279 * _tmp1918 - _tmp1280 * _tmp1919 -
      _tmp1281 * _tmp1919 + _tmp1513 - _tmp1666 * _tmp1930 - _tmp1693 * _tmp1917 -
      _tmp1694 * _tmp1917 + _tmp1700 * _tmp1914 + _tmp1726 + _tmp1795 - _tmp1917 * _tmp1928 +
      _tmp1931;
  const Scalar _tmp1933 = -_tmp1703 * _tmp1915 + _tmp1796 * _tmp504;
  const Scalar _tmp1934 =
      _tmp1194 * _tmp1921 + _tmp1195 * _tmp1912 + _tmp1195 * _tmp1926 - _tmp1195 * _tmp1927 -
      _tmp1197 * _tmp1918 - _tmp1231 * _tmp1383 - _tmp1232 * _tmp1923 + _tmp1235 * _tmp1918 -
      _tmp1238 * _tmp1919 - _tmp1240 * _tmp1920 + _tmp1242 * _tmp1919 - _tmp1243 * _tmp1912 -
      _tmp1243 * _tmp1922 - _tmp1243 * _tmp1926 + _tmp1243 * _tmp1927 + _tmp1243 * _tmp1929 +
      _tmp1387 * _tmp1923 - _tmp1510 * _tmp1920 + _tmp1511 + _tmp1618 - _tmp1701 * _tmp1930 +
      _tmp1707 * _tmp1913 - _tmp1708 * _tmp1925 - _tmp1710 * _tmp1917 + _tmp1712 * _tmp1917 -
      _tmp1713 * _tmp1914 + _tmp1714 * _tmp1914 + _tmp1812 * _tmp1917 + _tmp1843 + _tmp1933;
  const Scalar _tmp1935 = _tmp1703 * _tmp1796 + _tmp1915 * _tmp504;
  const Scalar _tmp1936 =
      -_tmp1241 * _tmp1924 - _tmp1254 * _tmp1383 + _tmp1257 * _tmp1919 + _tmp1258 * _tmp1912 -
      _tmp1258 * _tmp1929 - _tmp1260 * _tmp1919 - _tmp1261 * _tmp1921 - _tmp1262 * _tmp1912 -
      _tmp1262 * _tmp1922 - _tmp1262 * _tmp1926 + _tmp1262 * _tmp1927 + _tmp1262 * _tmp1929 -
      _tmp1266 * _tmp1920 + _tmp1267 * _tmp1918 + _tmp1268 * _tmp1919 + _tmp1494 * _tmp1920 +
      _tmp1496 + _tmp1696 + _tmp1697 + _tmp1718 * _tmp1917 + _tmp1719 * _tmp1913 -
      _tmp1720 * _tmp1914 - _tmp1721 * _tmp1917 + _tmp1722 * _tmp1925 - _tmp1723 * _tmp1913 +
      _tmp1728 * _tmp1917 + _tmp1729 * _tmp1914 - _tmp1826 * _tmp1917 - _tmp1925 * _tmp430 +
      _tmp1935;
  const Scalar _tmp1937 = -_tmp1617 * _tmp1796 + _tmp1689 * _tmp1915;
  const Scalar _tmp1938 =
      _tmp1237 * _tmp1924 - _tmp1287 * _tmp1921 - _tmp1288 * _tmp1926 + _tmp1288 * _tmp1927 -
      _tmp1289 * _tmp1383 + _tmp1290 * _tmp1921 + _tmp1291 * _tmp1912 + _tmp1291 * _tmp1922 +
      _tmp1291 * _tmp1926 - _tmp1291 * _tmp1927 - _tmp1291 * _tmp1929 - _tmp1292 * _tmp1919 +
      _tmp1293 * _tmp1918 + _tmp1294 * _tmp1918 - _tmp1295 * _tmp1383 - _tmp1296 * _tmp1920 -
      _tmp1297 * _tmp1919 + _tmp1388 * _tmp1919 + _tmp1507 - _tmp1672 * _tmp1914 +
      _tmp1674 * _tmp1917 - _tmp1677 * _tmp1914 - _tmp1682 * _tmp1917 - _tmp1684 * _tmp1925 +
      _tmp1688 * _tmp1913 + _tmp1716 - _tmp1834 * _tmp1917 + _tmp1838 * _tmp1917 + _tmp1937;
  const Scalar _tmp1939 =
      _tmp1932 * _tmp548 - _tmp1934 * _tmp550 + _tmp1936 * _tmp549 + _tmp1938 * _tmp506;
  const Scalar _tmp1940 =
      _tmp1932 * _tmp549 + _tmp1934 * _tmp506 - _tmp1936 * _tmp548 + _tmp1938 * _tmp550;
  const Scalar _tmp1941 =
      _tmp1932 * _tmp506 - _tmp1934 * _tmp549 - _tmp1936 * _tmp550 - _tmp1938 * _tmp548;
  const Scalar _tmp1942 =
      _tmp1932 * _tmp550 + _tmp1934 * _tmp548 + _tmp1936 * _tmp506 - _tmp1938 * _tmp549;
  const Scalar _tmp1943 =
      _tmp1939 * _x0[1] + _tmp1940 * _x0[3] + _tmp1941 * _x0[0] - _tmp1942 * _x0[2];
  const Scalar _tmp1944 =
      -_tmp1939 * _x0[2] - _tmp1940 * _x0[0] + _tmp1941 * _x0[3] - _tmp1942 * _x0[1];
  const Scalar _tmp1945 =
      _tmp1939 * _x0[3] - _tmp1940 * _x0[1] + _tmp1941 * _x0[2] + _tmp1942 * _x0[0];
  const Scalar _tmp1946 =
      -_tmp1939 * _x0[0] + _tmp1940 * _x0[2] + _tmp1941 * _x0[1] + _tmp1942 * _x0[3];
  const Scalar _tmp1947 =
      -_tmp1943 * _x_T_a[0] + _tmp1944 * _x_T_a[3] - _tmp1945 * _x_T_a[2] - _tmp1946 * _x_T_a[1];
  const Scalar _tmp1948 =
      -_tmp1943 * _x_T_a[2] + _tmp1944 * _x_T_a[1] + _tmp1945 * _x_T_a[0] + _tmp1946 * _x_T_a[3];
  const Scalar _tmp1949 =
      _tmp1943 * _x_T_a[3] + _tmp1944 * _x_T_a[0] - _tmp1945 * _x_T_a[1] + _tmp1946 * _x_T_a[2];
  const Scalar _tmp1950 =
      _tmp1943 * _x_T_a[1] + _tmp1944 * _x_T_a[2] + _tmp1945 * _x_T_a[3] - _tmp1946 * _x_T_a[0];
  const Scalar _tmp1951 =
      _tmp1947 * _tmp734 + _tmp1948 * _tmp728 - _tmp1949 * _tmp722 - _tmp1950 * _tmp716;
  const Scalar _tmp1952 =
      _tmp1947 * _tmp722 - _tmp1948 * _tmp716 + _tmp1949 * _tmp734 - _tmp1950 * _tmp728;
  const Scalar _tmp1953 =
      _tmp1947 * _tmp716 + _tmp1948 * _tmp722 + _tmp1949 * _tmp728 + _tmp1950 * _tmp734;
  const Scalar _tmp1954 =
      _tmp1947 * _tmp728 - _tmp1948 * _tmp734 - _tmp1949 * _tmp716 + _tmp1950 * _tmp722;
  const Scalar _tmp1955 =
      _a_T_b[0] * _tmp1954 + _a_T_b[1] * _tmp1952 + _a_T_b[2] * _tmp1951 + _a_T_b[3] * _tmp1953;
  const Scalar _tmp1956 = _tmp1955 * _tmp782;
  const Scalar _tmp1957 = _tmp1949 * _tmp798;
  const Scalar _tmp1958 = _tmp1947 * _tmp796;
  const Scalar _tmp1959 = _tmp1948 * _tmp801 + _tmp1950 * _tmp800;
  const Scalar _tmp1960 = -_tmp1957 - _tmp1958 + _tmp1959;
  const Scalar _tmp1961 = _tmp1946 * _tmp829;
  const Scalar _tmp1962 = _tmp1944 * _tmp807;
  const Scalar _tmp1963 = _tmp1943 * _tmp789 + _tmp1945 * _tmp787;
  const Scalar _tmp1964 = _tmp1945 * _tmp829;
  const Scalar _tmp1965 = _tmp1944 * _tmp789;
  const Scalar _tmp1966 = _tmp1943 * _tmp807 + _tmp1946 * _tmp787;
  const Scalar _tmp1967 = -_tmp1945 * _tmp852;
  const Scalar _tmp1968 = -_tmp1946 * _tmp835;
  const Scalar _tmp1969 = _x_T_a[4] * (_tmp1967 + _tmp1968) +
                          _x_T_a[5] * (-_tmp1964 - _tmp1965 + _tmp1966) +
                          _x_T_a[6] * (_tmp1961 + _tmp1962 + _tmp1963);
  const Scalar _tmp1970 = -_tmp1949 * _tmp812;
  const Scalar _tmp1971 = -_tmp1948 * _tmp814;
  const Scalar _tmp1972 = _tmp1970 + _tmp1971;
  const Scalar _tmp1973 = _tmp1943 * _tmp829;
  const Scalar _tmp1974 = _tmp1944 * _tmp787;
  const Scalar _tmp1975 = _tmp1945 * _tmp807 + _tmp1946 * _tmp789;
  const Scalar _tmp1976 = -_tmp1943 * _tmp837;
  const Scalar _tmp1977 = _x_T_a[4] * (-_tmp1961 - _tmp1962 + _tmp1963) +
                          _x_T_a[5] * (_tmp1973 + _tmp1974 + _tmp1975) +
                          _x_T_a[6] * (_tmp1968 + _tmp1976);
  const Scalar _tmp1978 = _x_T_a[4] * (_tmp1964 + _tmp1965 + _tmp1966) +
                          _x_T_a[5] * (_tmp1967 + _tmp1976) +
                          _x_T_a[6] * (-_tmp1973 - _tmp1974 + _tmp1975);
  const Scalar _tmp1979 = _tmp1948 * _tmp798;
  const Scalar _tmp1980 = _tmp1947 * _tmp800;
  const Scalar _tmp1981 = _tmp1949 * _tmp801 + _tmp1950 * _tmp796;
  const Scalar _tmp1982 = _tmp1979 + _tmp1980 + _tmp1981;
  const Scalar _tmp1983 = -_tmp1960 * _tmp795 + _tmp1960 * _tmp851 - _tmp1969 * _tmp860 -
                          _tmp1972 * _tmp811 + _tmp1972 * _tmp868 - _tmp1977 * _tmp827 -
                          _tmp1978 * _tmp876 - _tmp1982 * _tmp820 + _tmp1982 * _tmp872;
  const Scalar _tmp1984 = _tmp1950 * _tmp798;
  const Scalar _tmp1985 = _tmp1947 * _tmp801;
  const Scalar _tmp1986 = _tmp1948 * _tmp796 + _tmp1949 * _tmp800;
  const Scalar _tmp1987 = _tmp1984 + _tmp1985 + _tmp1986;
  const Scalar _tmp1988 = -_tmp1950 * _tmp896;
  const Scalar _tmp1989 = _tmp1971 + _tmp1988;
  const Scalar _tmp1990 = -_tmp1979 - _tmp1980 + _tmp1981;
  const Scalar _tmp1991 = -_tmp1969 * _tmp891 - _tmp1977 * _tmp892 - _tmp1978 * _tmp895 -
                          _tmp1987 * _tmp795 + _tmp1987 * _tmp851 - _tmp1989 * _tmp820 +
                          _tmp1989 * _tmp872 - _tmp1990 * _tmp811 + _tmp1990 * _tmp868;
  const Scalar _tmp1992 = _tmp1955 * _tmp901;
  const Scalar _tmp1993 = _tmp880 * (-_a_T_b[0] * _tmp1953 - _a_T_b[1] * _tmp1951 +
                                     _a_T_b[2] * _tmp1952 + _a_T_b[3] * _tmp1954);
  const Scalar _tmp1994 =
      -_a_T_b[0] * _tmp1952 + _a_T_b[1] * _tmp1954 - _a_T_b[2] * _tmp1953 + _a_T_b[3] * _tmp1951;
  const Scalar _tmp1995 =
      _a_T_b[0] * _tmp1951 - _a_T_b[1] * _tmp1953 - _a_T_b[2] * _tmp1954 + _a_T_b[3] * _tmp1952;
  const Scalar _tmp1996 = _tmp1995 * _tmp880;
  const Scalar _tmp1997 = _tmp1957 + _tmp1958 + _tmp1959;
  const Scalar _tmp1998 = -_tmp1984 - _tmp1985 + _tmp1986;
  const Scalar _tmp1999 = _tmp1970 + _tmp1988;
  const Scalar _tmp2000 = -_tmp1969 * _tmp919 - _tmp1977 * _tmp916 - _tmp1978 * _tmp918 -
                          _tmp1997 * _tmp811 + _tmp1997 * _tmp868 - _tmp1998 * _tmp820 +
                          _tmp1998 * _tmp872 - _tmp1999 * _tmp795 + _tmp1999 * _tmp851;
  const Scalar _tmp2001 = lambdas_x(1, 0) - lambdas_x(2, 0);
  const Scalar _tmp2002 = _tmp2001 * _tmp860;
  const Scalar _tmp2003 = _tmp2001 * _tmp918;
  const Scalar _tmp2004 = _tmp2001 * _tmp876;
  const Scalar _tmp2005 = _tmp2001 * _tmp827;
  const Scalar _tmp2006 = _tmp2001 * _tmp892;
  const Scalar _tmp2007 = _tmp1625 * _tmp1915;
  const Scalar _tmp2008 = _tmp1671 * _tmp2007;
  const Scalar _tmp2009 = _tmp1611 + _tmp1612 + _tmp1613 + _tmp1614;
  const Scalar _tmp2010 = _tmp1703 * _tmp2009;
  const Scalar _tmp2011 = _tmp1631 * _tmp1915;
  const Scalar _tmp2012 = _tmp1633 * _tmp2009;
  const Scalar _tmp2013 = -_tmp13 * _tmp2011 + _tmp1628 * _tmp2007 + _tmp1629 * _tmp2007 +
                          _tmp1635 * _tmp2007 + _tmp1648 - _tmp2011 * _tmp24 - _tmp2011 * _tmp30 +
                          _tmp2012 * _tmp23;
  const Scalar _tmp2014 = _tmp2013 * _tmp429;
  const Scalar _tmp2015 = _tmp1661 * _tmp2014;
  const Scalar _tmp2016 = _tmp1659 * _tmp2011;
  const Scalar _tmp2017 = _tmp1662 * _tmp2013;
  const Scalar _tmp2018 = _tmp1661 * _tmp1722;
  const Scalar _tmp2019 = -_tmp1262 * _tmp2008 + _tmp1262 * _tmp2016 - _tmp1262 * _tmp2017 +
                          _tmp1718 * _tmp2013 + _tmp1719 * _tmp2011 - _tmp1720 * _tmp2007 -
                          _tmp1721 * _tmp2013 - _tmp1723 * _tmp2011 + _tmp1728 * _tmp2013 +
                          _tmp1729 * _tmp2007 + _tmp1730 - _tmp1826 * _tmp2013 + _tmp2010 +
                          _tmp2013 * _tmp2018 - _tmp2015 * _tmp73;
  const Scalar _tmp2020 = _tmp2009 * _tmp504;
  const Scalar _tmp2021 = _tmp2013 * _tmp73;
  const Scalar _tmp2022 = _tmp1663 * _tmp2021;
  const Scalar _tmp2023 = -_tmp1195 * _tmp2016 - _tmp1243 * _tmp2008 + _tmp1243 * _tmp2016 -
                          _tmp1243 * _tmp2017 + _tmp129 * _tmp2022 - _tmp1701 * _tmp2021 +
                          _tmp1707 * _tmp2011 - _tmp1710 * _tmp2013 + _tmp1712 * _tmp2013 -
                          _tmp1713 * _tmp2007 + _tmp1714 * _tmp2007 + _tmp1715 +
                          _tmp1812 * _tmp2013 - _tmp2015 * _tmp82 + _tmp2020;
  const Scalar _tmp2024 = _tmp1689 * _tmp2009;
  const Scalar _tmp2025 = -_tmp2024;
  const Scalar _tmp2026 = _tmp1274 * _tmp2008 - _tmp1274 * _tmp2016 + _tmp1276 * _tmp2008 -
                          _tmp1276 * _tmp2016 + _tmp1276 * _tmp2017 + _tmp1278 * _tmp2008 -
                          _tmp1278 * _tmp2016 + _tmp1278 * _tmp2017 - _tmp1666 * _tmp2021 -
                          _tmp1692 * _tmp2014 - _tmp1694 * _tmp2013 + _tmp1704 -
                          _tmp1928 * _tmp2013 + _tmp2022 * _tmp71 + _tmp2025;
  const Scalar _tmp2027 = _tmp1617 * _tmp2009;
  const Scalar _tmp2028 = -_tmp2027;
  const Scalar _tmp2029 = -_tmp121 * _tmp2022 - _tmp1288 * _tmp2008 + _tmp1288 * _tmp2016 +
                          _tmp1291 * _tmp2008 - _tmp1291 * _tmp2016 + _tmp1291 * _tmp2017 +
                          _tmp1673 * _tmp2021 - _tmp1677 * _tmp2007 - _tmp1682 * _tmp2013 +
                          _tmp1688 * _tmp2011 + _tmp1690 - _tmp1834 * _tmp2013 +
                          _tmp1838 * _tmp2013 - _tmp2015 * _tmp79 + _tmp2028;
  const Scalar _tmp2030 =
      _tmp2019 * _tmp506 + _tmp2023 * _tmp548 + _tmp2026 * _tmp550 - _tmp2029 * _tmp549;
  const Scalar _tmp2031 =
      _tmp2019 * _tmp549 - _tmp2023 * _tmp550 + _tmp2026 * _tmp548 + _tmp2029 * _tmp506;
  const Scalar _tmp2032 =
      -_tmp2019 * _tmp548 + _tmp2023 * _tmp506 + _tmp2026 * _tmp549 + _tmp2029 * _tmp550;
  const Scalar _tmp2033 =
      -_tmp2019 * _tmp550 - _tmp2023 * _tmp549 + _tmp2026 * _tmp506 - _tmp2029 * _tmp548;
  const Scalar _tmp2034 =
      -_tmp2030 * _x0[1] - _tmp2031 * _x0[2] - _tmp2032 * _x0[0] + _tmp2033 * _x0[3];
  const Scalar _tmp2035 =
      -_tmp2030 * _x0[2] + _tmp2031 * _x0[1] + _tmp2032 * _x0[3] + _tmp2033 * _x0[0];
  const Scalar _tmp2036 =
      _tmp2030 * _x0[3] - _tmp2031 * _x0[0] + _tmp2032 * _x0[2] + _tmp2033 * _x0[1];
  const Scalar _tmp2037 =
      _tmp2030 * _x0[0] + _tmp2031 * _x0[3] - _tmp2032 * _x0[1] + _tmp2033 * _x0[2];
  const Scalar _tmp2038 =
      _tmp2034 * _x_T_a[2] + _tmp2035 * _x_T_a[1] - _tmp2036 * _x_T_a[0] + _tmp2037 * _x_T_a[3];
  const Scalar _tmp2039 =
      _tmp2034 * _x_T_a[1] - _tmp2035 * _x_T_a[2] + _tmp2036 * _x_T_a[3] + _tmp2037 * _x_T_a[0];
  const Scalar _tmp2040 =
      _tmp2034 * _x_T_a[3] - _tmp2035 * _x_T_a[0] - _tmp2036 * _x_T_a[1] - _tmp2037 * _x_T_a[2];
  const Scalar _tmp2041 =
      _tmp2034 * _x_T_a[0] + _tmp2035 * _x_T_a[3] + _tmp2036 * _x_T_a[2] - _tmp2037 * _x_T_a[1];
  const Scalar _tmp2042 =
      -_tmp2038 * _tmp716 + _tmp2039 * _tmp728 + _tmp2040 * _tmp734 - _tmp2041 * _tmp722;
  const Scalar _tmp2043 =
      _tmp2038 * _tmp722 - _tmp2039 * _tmp734 + _tmp2040 * _tmp728 - _tmp2041 * _tmp716;
  const Scalar _tmp2044 =
      -_tmp2038 * _tmp728 - _tmp2039 * _tmp716 + _tmp2040 * _tmp722 + _tmp2041 * _tmp734;
  const Scalar _tmp2045 =
      _tmp2038 * _tmp734 + _tmp2039 * _tmp722 + _tmp2040 * _tmp716 + _tmp2041 * _tmp728;
  const Scalar _tmp2046 =
      _a_T_b[0] * _tmp2043 + _a_T_b[1] * _tmp2044 + _a_T_b[2] * _tmp2042 + _a_T_b[3] * _tmp2045;
  const Scalar _tmp2047 = _tmp2046 * _tmp901;
  const Scalar _tmp2048 = _tmp2035 * _tmp829;
  const Scalar _tmp2049 = _tmp2034 * _tmp787;
  const Scalar _tmp2050 = _tmp2036 * _tmp789 + _tmp2037 * _tmp807;
  const Scalar _tmp2051 = -_tmp2036 * _tmp835;
  const Scalar _tmp2052 = -_tmp2035 * _tmp837;
  const Scalar _tmp2053 = _tmp2036 * _tmp829;
  const Scalar _tmp2054 = _tmp2034 * _tmp807;
  const Scalar _tmp2055 = _tmp2035 * _tmp789 + _tmp2037 * _tmp787;
  const Scalar _tmp2056 = _x_T_a[4] * (-_tmp2053 - _tmp2054 + _tmp2055) +
                          _x_T_a[5] * (_tmp2048 + _tmp2049 + _tmp2050) +
                          _x_T_a[6] * (_tmp2051 + _tmp2052);
  const Scalar _tmp2057 = _tmp2040 * _tmp801;
  const Scalar _tmp2058 = _tmp2038 * _tmp798;
  const Scalar _tmp2059 = _tmp2039 * _tmp796 + _tmp2041 * _tmp800;
  const Scalar _tmp2060 = _tmp2057 + _tmp2058 + _tmp2059;
  const Scalar _tmp2061 = _tmp2040 * _tmp800;
  const Scalar _tmp2062 = _tmp2039 * _tmp798;
  const Scalar _tmp2063 = _tmp2038 * _tmp796 + _tmp2041 * _tmp801;
  const Scalar _tmp2064 = -_tmp2061 - _tmp2062 + _tmp2063;
  const Scalar _tmp2065 = _tmp2037 * _tmp829;
  const Scalar _tmp2066 = _tmp2034 * _tmp789;
  const Scalar _tmp2067 = _tmp2035 * _tmp807 + _tmp2036 * _tmp787;
  const Scalar _tmp2068 = -_tmp2037 * _tmp852;
  const Scalar _tmp2069 = _x_T_a[4] * (_tmp2065 + _tmp2066 + _tmp2067) +
                          _x_T_a[5] * (_tmp2052 + _tmp2068) +
                          _x_T_a[6] * (-_tmp2048 - _tmp2049 + _tmp2050);
  const Scalar _tmp2070 = _x_T_a[4] * (_tmp2051 + _tmp2068) +
                          _x_T_a[5] * (-_tmp2065 - _tmp2066 + _tmp2067) +
                          _x_T_a[6] * (_tmp2053 + _tmp2054 + _tmp2055);
  const Scalar _tmp2071 = -_tmp2039 * _tmp814;
  const Scalar _tmp2072 = -_tmp2038 * _tmp896;
  const Scalar _tmp2073 = _tmp2071 + _tmp2072;
  const Scalar _tmp2074 = -_tmp2056 * _tmp892 - _tmp2060 * _tmp795 + _tmp2060 * _tmp851 -
                          _tmp2064 * _tmp811 + _tmp2064 * _tmp868 - _tmp2069 * _tmp895 -
                          _tmp2070 * _tmp891 - _tmp2073 * _tmp820 + _tmp2073 * _tmp872;
  const Scalar _tmp2075 =
      _a_T_b[0] * _tmp2042 - _a_T_b[1] * _tmp2045 - _a_T_b[2] * _tmp2043 + _a_T_b[3] * _tmp2044;
  const Scalar _tmp2076 = _tmp880 * (-_a_T_b[0] * _tmp2045 - _a_T_b[1] * _tmp2042 +
                                     _a_T_b[2] * _tmp2044 + _a_T_b[3] * _tmp2043);
  const Scalar _tmp2077 = -_tmp2041 * _tmp812;
  const Scalar _tmp2078 = _tmp2071 + _tmp2077;
  const Scalar _tmp2079 = _tmp2061 + _tmp2062 + _tmp2063;
  const Scalar _tmp2080 = _tmp2040 * _tmp796;
  const Scalar _tmp2081 = _tmp2041 * _tmp798;
  const Scalar _tmp2082 = _tmp2038 * _tmp800 + _tmp2039 * _tmp801;
  const Scalar _tmp2083 = -_tmp2080 - _tmp2081 + _tmp2082;
  const Scalar _tmp2084 = -_tmp2056 * _tmp827 - _tmp2069 * _tmp876 - _tmp2070 * _tmp860 -
                          _tmp2078 * _tmp811 + _tmp2078 * _tmp868 - _tmp2079 * _tmp820 +
                          _tmp2079 * _tmp872 - _tmp2083 * _tmp795 + _tmp2083 * _tmp851;
  const Scalar _tmp2085 =
      -_a_T_b[0] * _tmp2044 + _a_T_b[1] * _tmp2043 - _a_T_b[2] * _tmp2045 + _a_T_b[3] * _tmp2042;
  const Scalar _tmp2086 = _tmp2046 * _tmp782;
  const Scalar _tmp2087 = _tmp2046 * _tmp907;
  const Scalar _tmp2088 = _tmp2046 * _tmp883;
  const Scalar _tmp2089 = -_tmp2057 - _tmp2058 + _tmp2059;
  const Scalar _tmp2090 = _tmp2072 + _tmp2077;
  const Scalar _tmp2091 = _tmp2080 + _tmp2081 + _tmp2082;
  const Scalar _tmp2092 = -_tmp2056 * _tmp916 - _tmp2069 * _tmp918 - _tmp2070 * _tmp919 -
                          _tmp2089 * _tmp820 + _tmp2089 * _tmp872 - _tmp2090 * _tmp795 +
                          _tmp2090 * _tmp851 - _tmp2091 * _tmp811 + _tmp2091 * _tmp868;
  const Scalar _tmp2093 = _tmp1625 * _tmp1640;
  const Scalar _tmp2094 = _tmp1628 * _tmp2093 + _tmp1629 * _tmp2093 + _tmp1635 * _tmp2093 -
                          _tmp1640 * _tmp1806 - _tmp1640 * _tmp1807 - _tmp1640 * _tmp1808 +
                          _tmp1810 + _tmp2012 * _tmp4;
  const Scalar _tmp2095 = _tmp1665 * _tmp2094;
  const Scalar _tmp2096 = _tmp2095 * _tmp73;
  const Scalar _tmp2097 = _tmp1663 * _tmp2094;
  const Scalar _tmp2098 = -_tmp1287 * _tmp2097 + _tmp1290 * _tmp2097 - _tmp130 * _tmp2095 +
                          _tmp1640 * _tmp1833 - _tmp1640 * _tmp1836 + _tmp1640 * _tmp1837 -
                          _tmp1672 * _tmp2093 - _tmp1677 * _tmp2093 - _tmp1682 * _tmp2094 -
                          _tmp1685 * _tmp2094 + _tmp1838 * _tmp2094 + _tmp1839 * _tmp2093 +
                          _tmp1840 + _tmp2024 + _tmp2096 * _tmp78;
  const Scalar _tmp2099 = -_tmp1261 * _tmp2097 + _tmp1640 * _tmp1823 + _tmp1640 * _tmp1828 -
                          _tmp1640 * _tmp1829 - _tmp1720 * _tmp2093 - _tmp1721 * _tmp2094 -
                          _tmp1727 * _tmp2094 + _tmp1728 * _tmp2094 + _tmp1729 * _tmp2093 -
                          _tmp1827 * _tmp2093 + _tmp1831 + _tmp2018 * _tmp2094 + _tmp2020 -
                          _tmp2095 * _tmp80 + _tmp2095 * _tmp84;
  const Scalar _tmp2100 = -_tmp2010;
  const Scalar _tmp2101 = _tmp1662 * _tmp2094;
  const Scalar _tmp2102 = _tmp1194 * _tmp2097 + _tmp124 * _tmp2095 - _tmp1243 * _tmp2101 +
                          _tmp1640 * _tmp1802 + _tmp1640 * _tmp1804 - _tmp1640 * _tmp1818 -
                          _tmp1706 * _tmp2093 - _tmp1709 * _tmp2094 - _tmp1710 * _tmp2094 +
                          _tmp1712 * _tmp2094 - _tmp1713 * _tmp2093 + _tmp1714 * _tmp2093 -
                          _tmp1814 * _tmp2095 + _tmp1821 + _tmp2100;
  const Scalar _tmp2103 = -_tmp123 * _tmp2096 + _tmp1273 * _tmp2097 + _tmp1275 * _tmp2097 +
                          _tmp1278 * _tmp2101 - _tmp134 * _tmp2095 - _tmp135 * _tmp2095 -
                          _tmp1640 * _tmp1842 - _tmp1640 * _tmp1844 - _tmp1640 * _tmp1846 -
                          _tmp1693 * _tmp2094 + _tmp1700 * _tmp2093 + _tmp1702 * _tmp2093 +
                          _tmp1845 * _tmp2093 + _tmp1847 + _tmp2028;
  const Scalar _tmp2104 =
      -_tmp2098 * _tmp549 + _tmp2099 * _tmp506 + _tmp2102 * _tmp548 + _tmp2103 * _tmp550;
  const Scalar _tmp2105 =
      _tmp2098 * _tmp506 + _tmp2099 * _tmp549 - _tmp2102 * _tmp550 + _tmp2103 * _tmp548;
  const Scalar _tmp2106 =
      -_tmp2098 * _tmp548 - _tmp2099 * _tmp550 - _tmp2102 * _tmp549 + _tmp2103 * _tmp506;
  const Scalar _tmp2107 =
      _tmp2098 * _tmp550 - _tmp2099 * _tmp548 + _tmp2102 * _tmp506 + _tmp2103 * _tmp549;
  const Scalar _tmp2108 =
      -_tmp2104 * _x0[2] + _tmp2105 * _x0[1] + _tmp2106 * _x0[0] + _tmp2107 * _x0[3];
  const Scalar _tmp2109 =
      -_tmp2104 * _x0[1] - _tmp2105 * _x0[2] + _tmp2106 * _x0[3] - _tmp2107 * _x0[0];
  const Scalar _tmp2110 =
      _tmp2104 * _x0[3] - _tmp2105 * _x0[0] + _tmp2106 * _x0[1] + _tmp2107 * _x0[2];
  const Scalar _tmp2111 =
      _tmp2104 * _x0[0] + _tmp2105 * _x0[3] + _tmp2106 * _x0[2] - _tmp2107 * _x0[1];
  const Scalar _tmp2112 =
      _tmp2108 * _x_T_a[3] + _tmp2109 * _x_T_a[0] + _tmp2110 * _x_T_a[2] - _tmp2111 * _x_T_a[1];
  const Scalar _tmp2113 =
      _tmp2108 * _x_T_a[1] + _tmp2109 * _x_T_a[2] - _tmp2110 * _x_T_a[0] + _tmp2111 * _x_T_a[3];
  const Scalar _tmp2114 =
      -_tmp2108 * _x_T_a[0] + _tmp2109 * _x_T_a[3] - _tmp2110 * _x_T_a[1] - _tmp2111 * _x_T_a[2];
  const Scalar _tmp2115 =
      -_tmp2108 * _x_T_a[2] + _tmp2109 * _x_T_a[1] + _tmp2110 * _x_T_a[3] + _tmp2111 * _x_T_a[0];
  const Scalar _tmp2116 =
      -_tmp2112 * _tmp716 + _tmp2113 * _tmp722 + _tmp2114 * _tmp728 - _tmp2115 * _tmp734;
  const Scalar _tmp2117 =
      -_tmp2112 * _tmp722 - _tmp2113 * _tmp716 + _tmp2114 * _tmp734 + _tmp2115 * _tmp728;
  const Scalar _tmp2118 =
      _tmp2112 * _tmp728 + _tmp2113 * _tmp734 + _tmp2114 * _tmp716 + _tmp2115 * _tmp722;
  const Scalar _tmp2119 =
      _tmp2112 * _tmp734 - _tmp2113 * _tmp728 + _tmp2114 * _tmp722 - _tmp2115 * _tmp716;
  const Scalar _tmp2120 =
      _a_T_b[0] * _tmp2116 + _a_T_b[1] * _tmp2119 + _a_T_b[2] * _tmp2117 + _a_T_b[3] * _tmp2118;
  const Scalar _tmp2121 = _tmp880 * (-_a_T_b[0] * _tmp2118 - _a_T_b[1] * _tmp2117 +
                                     _a_T_b[2] * _tmp2119 + _a_T_b[3] * _tmp2116);
  const Scalar _tmp2122 = _tmp2112 * _tmp798;
  const Scalar _tmp2123 = _tmp2114 * _tmp796;
  const Scalar _tmp2124 = _tmp2113 * _tmp800 + _tmp2115 * _tmp801;
  const Scalar _tmp2125 = -_tmp2122 - _tmp2123 + _tmp2124;
  const Scalar _tmp2126 = -_tmp2112 * _tmp812;
  const Scalar _tmp2127 = -_tmp2115 * _tmp814;
  const Scalar _tmp2128 = _tmp2126 + _tmp2127;
  const Scalar _tmp2129 = -_tmp2111 * _tmp852;
  const Scalar _tmp2130 = -_tmp2110 * _tmp835;
  const Scalar _tmp2131 = _tmp2111 * _tmp829;
  const Scalar _tmp2132 = _tmp2109 * _tmp789;
  const Scalar _tmp2133 = _tmp2108 * _tmp807 + _tmp2110 * _tmp787;
  const Scalar _tmp2134 = _tmp2110 * _tmp829;
  const Scalar _tmp2135 = _tmp2109 * _tmp807;
  const Scalar _tmp2136 = _tmp2108 * _tmp789 + _tmp2111 * _tmp787;
  const Scalar _tmp2137 = _x_T_a[4] * (_tmp2129 + _tmp2130) +
                          _x_T_a[5] * (-_tmp2131 - _tmp2132 + _tmp2133) +
                          _x_T_a[6] * (_tmp2134 + _tmp2135 + _tmp2136);
  const Scalar _tmp2138 = -_tmp2108 * _tmp837;
  const Scalar _tmp2139 = _tmp2108 * _tmp829;
  const Scalar _tmp2140 = _tmp2109 * _tmp787;
  const Scalar _tmp2141 = _tmp2110 * _tmp789 + _tmp2111 * _tmp807;
  const Scalar _tmp2142 = _x_T_a[4] * (_tmp2131 + _tmp2132 + _tmp2133) +
                          _x_T_a[5] * (_tmp2129 + _tmp2138) +
                          _x_T_a[6] * (-_tmp2139 - _tmp2140 + _tmp2141);
  const Scalar _tmp2143 = _tmp2115 * _tmp798;
  const Scalar _tmp2144 = _tmp2114 * _tmp800;
  const Scalar _tmp2145 = _tmp2112 * _tmp801 + _tmp2113 * _tmp796;
  const Scalar _tmp2146 = _tmp2143 + _tmp2144 + _tmp2145;
  const Scalar _tmp2147 = _x_T_a[4] * (-_tmp2134 - _tmp2135 + _tmp2136) +
                          _x_T_a[5] * (_tmp2139 + _tmp2140 + _tmp2141) +
                          _x_T_a[6] * (_tmp2130 + _tmp2138);
  const Scalar _tmp2148 = -_tmp2125 * _tmp795 + _tmp2125 * _tmp851 - _tmp2128 * _tmp811 +
                          _tmp2128 * _tmp868 - _tmp2137 * _tmp860 - _tmp2142 * _tmp876 -
                          _tmp2146 * _tmp820 + _tmp2146 * _tmp872 - _tmp2147 * _tmp827;
  const Scalar _tmp2149 =
      _a_T_b[0] * _tmp2117 - _a_T_b[1] * _tmp2118 - _a_T_b[2] * _tmp2116 + _a_T_b[3] * _tmp2119;
  const Scalar _tmp2150 = _tmp2149 * _tmp880;
  const Scalar _tmp2151 = -_tmp2113 * _tmp896;
  const Scalar _tmp2152 = _tmp2127 + _tmp2151;
  const Scalar _tmp2153 = -_tmp2143 - _tmp2144 + _tmp2145;
  const Scalar _tmp2154 = _tmp2113 * _tmp798;
  const Scalar _tmp2155 = _tmp2114 * _tmp801;
  const Scalar _tmp2156 = _tmp2112 * _tmp800 + _tmp2115 * _tmp796;
  const Scalar _tmp2157 = _tmp2154 + _tmp2155 + _tmp2156;
  const Scalar _tmp2158 = -_tmp2137 * _tmp891 - _tmp2142 * _tmp895 - _tmp2147 * _tmp892 -
                          _tmp2152 * _tmp820 + _tmp2152 * _tmp872 - _tmp2153 * _tmp811 +
                          _tmp2153 * _tmp868 - _tmp2157 * _tmp795 + _tmp2157 * _tmp851;
  const Scalar _tmp2159 = _tmp2120 * _tmp907;
  const Scalar _tmp2160 =
      -_a_T_b[0] * _tmp2119 + _a_T_b[1] * _tmp2116 - _a_T_b[2] * _tmp2118 + _a_T_b[3] * _tmp2117;
  const Scalar _tmp2161 = _tmp2126 + _tmp2151;
  const Scalar _tmp2162 = -_tmp2154 - _tmp2155 + _tmp2156;
  const Scalar _tmp2163 = _tmp2122 + _tmp2123 + _tmp2124;
  const Scalar _tmp2164 = -_tmp2137 * _tmp919 - _tmp2142 * _tmp918 - _tmp2147 * _tmp916 -
                          _tmp2161 * _tmp795 + _tmp2161 * _tmp851 - _tmp2162 * _tmp820 +
                          _tmp2162 * _tmp872 - _tmp2163 * _tmp811 + _tmp2163 * _tmp868;
  const Scalar _tmp2165 = _tmp2120 * _tmp901;
  const Scalar _tmp2166 = _tmp2149 * _tmp879;
  const Scalar _tmp2167 = _tmp1625 * _tmp1809;
  const Scalar _tmp2168 = _tmp1630 * _tmp2167;
  const Scalar _tmp2169 = _tmp13 * _tmp2167;
  const Scalar _tmp2170 = _tmp1627 * _tmp2169 + _tmp1629 * _tmp2167 - _tmp1630 * _tmp2169 +
                          _tmp1635 * _tmp2167 + _tmp1916 + _tmp2012 * _tmp29 - _tmp2168 * _tmp24 -
                          _tmp2168 * _tmp30;
  const Scalar _tmp2171 = _tmp1659 * _tmp2168;
  const Scalar _tmp2172 = _tmp1661 * _tmp2170;
  const Scalar _tmp2173 = _tmp2172 * _tmp396;
  const Scalar _tmp2174 = -_tmp1274 * _tmp2171 + _tmp1274 * _tmp2173 - _tmp1276 * _tmp2171 +
                          _tmp1276 * _tmp2173 - _tmp1278 * _tmp2171 + _tmp1278 * _tmp2173 -
                          _tmp1666 * _tmp2170 * _tmp73 - _tmp1693 * _tmp2170 - _tmp1694 * _tmp2170 +
                          _tmp1700 * _tmp2167 + _tmp1702 * _tmp2167 + _tmp1845 * _tmp2167 -
                          _tmp1928 * _tmp2170 + _tmp1931 + _tmp2100;
  const Scalar _tmp2175 = _tmp1671 * _tmp2167;
  const Scalar _tmp2176 = _tmp1262 * _tmp2171 - _tmp1262 * _tmp2173 - _tmp1262 * _tmp2175 +
                          _tmp1718 * _tmp2170 + _tmp1719 * _tmp2168 - _tmp1720 * _tmp2167 -
                          _tmp1721 * _tmp2170 + _tmp1722 * _tmp2172 - _tmp1723 * _tmp2168 -
                          _tmp1727 * _tmp2170 + _tmp1728 * _tmp2170 + _tmp1729 * _tmp2167 -
                          _tmp1826 * _tmp2170 + _tmp1935 + _tmp2025;
  const Scalar _tmp2177 = _tmp1288 * _tmp2171 - _tmp1288 * _tmp2173 - _tmp1291 * _tmp2171 +
                          _tmp1291 * _tmp2173 + _tmp1291 * _tmp2175 - _tmp1672 * _tmp2167 +
                          _tmp1674 * _tmp2170 - _tmp1677 * _tmp2167 - _tmp1682 * _tmp2170 -
                          _tmp1684 * _tmp2172 + _tmp1688 * _tmp2168 - _tmp1834 * _tmp2170 +
                          _tmp1838 * _tmp2170 + _tmp1937 + _tmp2020;
  const Scalar _tmp2178 = -_tmp1195 * _tmp2171 + _tmp1195 * _tmp2173 + _tmp1243 * _tmp2171 -
                          _tmp1243 * _tmp2173 - _tmp1706 * _tmp2167 + _tmp1707 * _tmp2168 -
                          _tmp1708 * _tmp2172 - _tmp1710 * _tmp2170 - _tmp1711 * _tmp2170 +
                          _tmp1712 * _tmp2170 - _tmp1713 * _tmp2167 + _tmp1714 * _tmp2167 +
                          _tmp1812 * _tmp2170 + _tmp1933 + _tmp2027;
  const Scalar _tmp2179 =
      _tmp2174 * _tmp549 - _tmp2176 * _tmp548 + _tmp2177 * _tmp550 + _tmp2178 * _tmp506;
  const Scalar _tmp2180 =
      _tmp2174 * _tmp506 - _tmp2176 * _tmp550 - _tmp2177 * _tmp548 - _tmp2178 * _tmp549;
  const Scalar _tmp2181 =
      _tmp2174 * _tmp550 + _tmp2176 * _tmp506 - _tmp2177 * _tmp549 + _tmp2178 * _tmp548;
  const Scalar _tmp2182 =
      _tmp2174 * _tmp548 + _tmp2176 * _tmp549 + _tmp2177 * _tmp506 - _tmp2178 * _tmp550;
  const Scalar _tmp2183 =
      -_tmp2179 * _x0[1] + _tmp2180 * _x0[2] + _tmp2181 * _x0[0] + _tmp2182 * _x0[3];
  const Scalar _tmp2184 =
      _tmp2179 * _x0[2] + _tmp2180 * _x0[1] + _tmp2181 * _x0[3] - _tmp2182 * _x0[0];
  const Scalar _tmp2185 =
      _tmp2179 * _x0[3] + _tmp2180 * _x0[0] - _tmp2181 * _x0[2] + _tmp2182 * _x0[1];
  const Scalar _tmp2186 =
      -_tmp2179 * _x0[0] + _tmp2180 * _x0[3] - _tmp2181 * _x0[1] - _tmp2182 * _x0[2];
  const Scalar _tmp2187 =
      _tmp2183 * _x_T_a[3] - _tmp2184 * _x_T_a[0] + _tmp2185 * _x_T_a[1] + _tmp2186 * _x_T_a[2];
  const Scalar _tmp2188 =
      -_tmp2183 * _x_T_a[2] - _tmp2184 * _x_T_a[1] - _tmp2185 * _x_T_a[0] + _tmp2186 * _x_T_a[3];
  const Scalar _tmp2189 =
      _tmp2183 * _x_T_a[0] + _tmp2184 * _x_T_a[3] - _tmp2185 * _x_T_a[2] + _tmp2186 * _x_T_a[1];
  const Scalar _tmp2190 =
      -_tmp2183 * _x_T_a[1] + _tmp2184 * _x_T_a[2] + _tmp2185 * _x_T_a[3] + _tmp2186 * _x_T_a[0];
  const Scalar _tmp2191 =
      _tmp2187 * _tmp722 + _tmp2188 * _tmp728 - _tmp2189 * _tmp734 - _tmp2190 * _tmp716;
  const Scalar _tmp2192 =
      -_tmp2187 * _tmp728 + _tmp2188 * _tmp722 - _tmp2189 * _tmp716 + _tmp2190 * _tmp734;
  const Scalar _tmp2193 =
      -_tmp2187 * _tmp716 + _tmp2188 * _tmp734 + _tmp2189 * _tmp728 - _tmp2190 * _tmp722;
  const Scalar _tmp2194 =
      _tmp2187 * _tmp734 + _tmp2188 * _tmp716 + _tmp2189 * _tmp722 + _tmp2190 * _tmp728;
  const Scalar _tmp2195 = _tmp880 * (-_a_T_b[0] * _tmp2194 - _a_T_b[1] * _tmp2193 +
                                     _a_T_b[2] * _tmp2192 + _a_T_b[3] * _tmp2191);
  const Scalar _tmp2196 =
      _a_T_b[0] * _tmp2193 - _a_T_b[1] * _tmp2194 - _a_T_b[2] * _tmp2191 + _a_T_b[3] * _tmp2192;
  const Scalar _tmp2197 =
      _a_T_b[0] * _tmp2191 + _a_T_b[1] * _tmp2192 + _a_T_b[2] * _tmp2193 + _a_T_b[3] * _tmp2194;
  const Scalar _tmp2198 = _tmp2197 * _tmp782;
  const Scalar _tmp2199 = _tmp2197 * _tmp907;
  const Scalar _tmp2200 = _tmp2197 * _tmp912;
  const Scalar _tmp2201 =
      -_a_T_b[0] * _tmp2192 + _a_T_b[1] * _tmp2191 - _a_T_b[2] * _tmp2194 + _a_T_b[3] * _tmp2193;
  const Scalar _tmp2202 = _tmp2189 * _tmp798;
  const Scalar _tmp2203 = _tmp2188 * _tmp800;
  const Scalar _tmp2204 = _tmp2187 * _tmp796 + _tmp2190 * _tmp801;
  const Scalar _tmp2205 = _tmp2202 + _tmp2203 + _tmp2204;
  const Scalar _tmp2206 = _tmp2186 * _tmp807;
  const Scalar _tmp2207 = _tmp2184 * _tmp829;
  const Scalar _tmp2208 = _tmp2183 * _tmp787 + _tmp2185 * _tmp789;
  const Scalar _tmp2209 = -_tmp2185 * _tmp837;
  const Scalar _tmp2210 = -_tmp2184 * _tmp835;
  const Scalar _tmp2211 = _tmp2186 * _tmp787;
  const Scalar _tmp2212 = _tmp2185 * _tmp829;
  const Scalar _tmp2213 = _tmp2183 * _tmp807 + _tmp2184 * _tmp789;
  const Scalar _tmp2214 = _x_T_a[4] * (-_tmp2206 - _tmp2207 + _tmp2208) +
                          _x_T_a[5] * (_tmp2211 + _tmp2212 + _tmp2213) +
                          _x_T_a[6] * (_tmp2209 + _tmp2210);
  const Scalar _tmp2215 = _tmp2190 * _tmp798;
  const Scalar _tmp2216 = _tmp2188 * _tmp796;
  const Scalar _tmp2217 = _tmp2187 * _tmp800 + _tmp2189 * _tmp801;
  const Scalar _tmp2218 = -_tmp2215 - _tmp2216 + _tmp2217;
  const Scalar _tmp2219 = -_tmp2183 * _tmp852;
  const Scalar _tmp2220 = _tmp2186 * _tmp789;
  const Scalar _tmp2221 = _tmp2183 * _tmp829;
  const Scalar _tmp2222 = _tmp2184 * _tmp787 + _tmp2185 * _tmp807;
  const Scalar _tmp2223 = _x_T_a[4] * (_tmp2210 + _tmp2219) +
                          _x_T_a[5] * (-_tmp2220 - _tmp2221 + _tmp2222) +
                          _x_T_a[6] * (_tmp2206 + _tmp2207 + _tmp2208);
  const Scalar _tmp2224 = -_tmp2190 * _tmp812;
  const Scalar _tmp2225 = -_tmp2189 * _tmp814;
  const Scalar _tmp2226 = _tmp2224 + _tmp2225;
  const Scalar _tmp2227 = _x_T_a[4] * (_tmp2220 + _tmp2221 + _tmp2222) +
                          _x_T_a[5] * (_tmp2209 + _tmp2219) +
                          _x_T_a[6] * (-_tmp2211 - _tmp2212 + _tmp2213);
  const Scalar _tmp2228 = -_tmp2205 * _tmp820 + _tmp2205 * _tmp872 - _tmp2214 * _tmp827 -
                          _tmp2218 * _tmp795 + _tmp2218 * _tmp851 - _tmp2223 * _tmp860 -
                          _tmp2226 * _tmp811 + _tmp2226 * _tmp868 - _tmp2227 * _tmp876;
  const Scalar _tmp2229 = _tmp2215 + _tmp2216 + _tmp2217;
  const Scalar _tmp2230 = _tmp2187 * _tmp798;
  const Scalar _tmp2231 = _tmp2188 * _tmp801;
  const Scalar _tmp2232 = _tmp2189 * _tmp796 + _tmp2190 * _tmp800;
  const Scalar _tmp2233 = -_tmp2230 - _tmp2231 + _tmp2232;
  const Scalar _tmp2234 = -_tmp2187 * _tmp896;
  const Scalar _tmp2235 = _tmp2224 + _tmp2234;
  const Scalar _tmp2236 = -_tmp2214 * _tmp916 - _tmp2223 * _tmp919 - _tmp2227 * _tmp918 -
                          _tmp2229 * _tmp811 + _tmp2229 * _tmp868 - _tmp2233 * _tmp820 +
                          _tmp2233 * _tmp872 - _tmp2235 * _tmp795 + _tmp2235 * _tmp851;
  const Scalar _tmp2237 = _tmp2197 * _tmp901;
  const Scalar _tmp2238 = _tmp2225 + _tmp2234;
  const Scalar _tmp2239 = -_tmp2202 - _tmp2203 + _tmp2204;
  const Scalar _tmp2240 = _tmp2230 + _tmp2231 + _tmp2232;
  const Scalar _tmp2241 = -_tmp2214 * _tmp892 - _tmp2223 * _tmp891 - _tmp2227 * _tmp895 -
                          _tmp2238 * _tmp820 + _tmp2238 * _tmp872 - _tmp2239 * _tmp811 +
                          _tmp2239 * _tmp868 - _tmp2240 * _tmp795 + _tmp2240 * _tmp851;
  const Scalar _tmp2242 = _tmp919 * lambdas_x(2, 0);
  const Scalar _tmp2243 = _tmp895 * lambdas_x(2, 0);
  const Scalar _tmp2244 = _tmp876 * lambdas_x(2, 0);
  const Scalar _tmp2245 = _tmp918 * lambdas_x(2, 0);
  const Scalar _tmp2246 = _tmp892 * lambdas_x(2, 0);
  const Scalar _tmp2247 = _tmp827 * lambdas_x(2, 0);
  const Scalar _tmp2248 = (Scalar(1) / Scalar(2)) * _tmp759;
  const Scalar _tmp2249 = (Scalar(1) / Scalar(2)) * _tmp760;
  const Scalar _tmp2250 = (Scalar(1) / Scalar(2)) * _tmp761;
  const Scalar _tmp2251 = (Scalar(1) / Scalar(2)) * _tmp762;
  const Scalar _tmp2252 = -_tmp2248 + _tmp2249 - _tmp2250 - _tmp2251;
  const Scalar _tmp2253 = _tmp2252 * _tmp716;
  const Scalar _tmp2254 = (Scalar(1) / Scalar(2)) * _tmp741 - Scalar(1) / Scalar(2) * _tmp743 -
                          Scalar(1) / Scalar(2) * _tmp745 - Scalar(1) / Scalar(2) * _tmp747;
  const Scalar _tmp2255 = _tmp2254 * _tmp722;
  const Scalar _tmp2256 = (Scalar(1) / Scalar(2)) * _tmp754;
  const Scalar _tmp2257 = (Scalar(1) / Scalar(2)) * _tmp755;
  const Scalar _tmp2258 = (Scalar(1) / Scalar(2)) * _tmp756;
  const Scalar _tmp2259 = (Scalar(1) / Scalar(2)) * _tmp757;
  const Scalar _tmp2260 = _tmp2256 - _tmp2257 - _tmp2258 - _tmp2259;
  const Scalar _tmp2261 = _tmp2260 * _tmp734;
  const Scalar _tmp2262 = (Scalar(1) / Scalar(2)) * _tmp749;
  const Scalar _tmp2263 = (Scalar(1) / Scalar(2)) * _tmp750;
  const Scalar _tmp2264 = (Scalar(1) / Scalar(2)) * _tmp751;
  const Scalar _tmp2265 = (Scalar(1) / Scalar(2)) * _tmp752;
  const Scalar _tmp2266 = _tmp2262 + _tmp2263 - _tmp2264 + _tmp2265;
  const Scalar _tmp2267 = -_tmp2253 - _tmp2255 + _tmp2261 + _tmp2266 * _tmp728;
  const Scalar _tmp2268 = _tmp2260 * _tmp716;
  const Scalar _tmp2269 = _tmp2254 * _tmp728;
  const Scalar _tmp2270 = _tmp2252 * _tmp734 + _tmp2269;
  const Scalar _tmp2271 = _tmp2266 * _tmp722 + _tmp2268 + _tmp2270;
  const Scalar _tmp2272 = _tmp2252 * _tmp728;
  const Scalar _tmp2273 = _tmp2254 * _tmp734;
  const Scalar _tmp2274 = _tmp2260 * _tmp722 + _tmp2273;
  const Scalar _tmp2275 = -_tmp2266 * _tmp716 - _tmp2272 + _tmp2274;
  const Scalar _tmp2276 = -_tmp2254 * _tmp716;
  const Scalar _tmp2277 = _tmp2252 * _tmp722;
  const Scalar _tmp2278 = _tmp2260 * _tmp728;
  const Scalar _tmp2279 = -_tmp2266 * _tmp734 + _tmp2276 + _tmp2277 + _tmp2278;
  const Scalar _tmp2280 =
      -_a_T_b[0] * _tmp2275 + _a_T_b[1] * _tmp2279 - _a_T_b[2] * _tmp2271 + _a_T_b[3] * _tmp2267;
  const Scalar _tmp2281 =
      _a_T_b[0] * _tmp2279 + _a_T_b[1] * _tmp2275 + _a_T_b[2] * _tmp2267 + _a_T_b[3] * _tmp2271;
  const Scalar _tmp2282 = _tmp2281 * _tmp883;
  const Scalar _tmp2283 = _tmp2266 * _tmp798;
  const Scalar _tmp2284 = _tmp2260 * _tmp800;
  const Scalar _tmp2285 = _tmp2252 * _tmp796;
  const Scalar _tmp2286 = _tmp2254 * _tmp801;
  const Scalar _tmp2287 = _tmp2285 + _tmp2286;
  const Scalar _tmp2288 = -_tmp2283 - _tmp2284 + _tmp2287;
  const Scalar _tmp2289 = _tmp2266 * _tmp796;
  const Scalar _tmp2290 = _tmp2252 * _tmp798;
  const Scalar _tmp2291 = _tmp2260 * _tmp801;
  const Scalar _tmp2292 = _tmp2254 * _tmp800;
  const Scalar _tmp2293 = _tmp2291 + _tmp2292;
  const Scalar _tmp2294 = _tmp2289 + _tmp2290 + _tmp2293;
  const Scalar _tmp2295 = -_tmp2266 * _tmp814;
  const Scalar _tmp2296 = -_tmp2252 * _tmp896;
  const Scalar _tmp2297 = _tmp2295 + _tmp2296;
  const Scalar _tmp2298 = -_tmp2288 * _tmp811 + _tmp2288 * _tmp868 - _tmp2294 * _tmp795 +
                          _tmp2294 * _tmp851 - _tmp2297 * _tmp820 + _tmp2297 * _tmp872;
  const Scalar _tmp2299 = -_tmp2254 * _tmp812;
  const Scalar _tmp2300 = _tmp2296 + _tmp2299;
  const Scalar _tmp2301 = _tmp2252 * _tmp800;
  const Scalar _tmp2302 = _tmp2266 * _tmp801 + _tmp2301;
  const Scalar _tmp2303 = _tmp2254 * _tmp798;
  const Scalar _tmp2304 = _tmp2260 * _tmp796;
  const Scalar _tmp2305 = _tmp2303 + _tmp2304;
  const Scalar _tmp2306 = _tmp2302 + _tmp2305;
  const Scalar _tmp2307 = _tmp2289 - _tmp2290 - _tmp2291 + _tmp2292;
  const Scalar _tmp2308 = -_tmp2300 * _tmp795 + _tmp2300 * _tmp851 - _tmp2306 * _tmp811 +
                          _tmp2306 * _tmp868 - _tmp2307 * _tmp820 + _tmp2307 * _tmp872;
  const Scalar _tmp2309 = _tmp2281 * _tmp901;
  const Scalar _tmp2310 =
      _a_T_b[0] * _tmp2267 - _a_T_b[1] * _tmp2271 - _a_T_b[2] * _tmp2279 + _a_T_b[3] * _tmp2275;
  const Scalar _tmp2311 = _tmp880 * (-_a_T_b[0] * _tmp2271 - _a_T_b[1] * _tmp2267 +
                                     _a_T_b[2] * _tmp2275 + _a_T_b[3] * _tmp2279);
  const Scalar _tmp2312 = -_tmp2303;
  const Scalar _tmp2313 = _tmp2302 - _tmp2304 + _tmp2312;
  const Scalar _tmp2314 = _tmp2295 + _tmp2299;
  const Scalar _tmp2315 = _tmp2283 + _tmp2284 + _tmp2287;
  const Scalar _tmp2316 = -_tmp2313 * _tmp795 + _tmp2313 * _tmp851 - _tmp2314 * _tmp811 +
                          _tmp2314 * _tmp868 - _tmp2315 * _tmp820 + _tmp2315 * _tmp872;
  const Scalar _tmp2317 = -_tmp2256 + _tmp2257 + _tmp2258 + _tmp2259;
  const Scalar _tmp2318 = -_tmp2262 - _tmp2263 + _tmp2264 - _tmp2265;
  const Scalar _tmp2319 = _tmp2255 + _tmp2318 * _tmp728;
  const Scalar _tmp2320 = _tmp2253 + _tmp2317 * _tmp734 + _tmp2319;
  const Scalar _tmp2321 = _tmp2318 * _tmp722;
  const Scalar _tmp2322 = _tmp2270 - _tmp2317 * _tmp716 - _tmp2321;
  const Scalar _tmp2323 = _tmp2318 * _tmp716;
  const Scalar _tmp2324 = _tmp2272 - _tmp2273 + _tmp2317 * _tmp722 - _tmp2323;
  const Scalar _tmp2325 = _tmp2276 + _tmp2318 * _tmp734;
  const Scalar _tmp2326 = _tmp2277 - _tmp2317 * _tmp728 + _tmp2325;
  const Scalar _tmp2327 = _tmp880 * (-_a_T_b[0] * _tmp2320 - _a_T_b[1] * _tmp2322 +
                                     _a_T_b[2] * _tmp2326 + _a_T_b[3] * _tmp2324);
  const Scalar _tmp2328 =
      _a_T_b[0] * _tmp2324 + _a_T_b[1] * _tmp2326 + _a_T_b[2] * _tmp2322 + _a_T_b[3] * _tmp2320;
  const Scalar _tmp2329 = _tmp2328 * _tmp905;
  const Scalar _tmp2330 = _tmp2329 * _tmp775;
  const Scalar _tmp2331 = _tmp2330 * _tmp768;
  const Scalar _tmp2332 =
      _a_T_b[0] * _tmp2322 - _a_T_b[1] * _tmp2320 - _a_T_b[2] * _tmp2324 + _a_T_b[3] * _tmp2326;
  const Scalar _tmp2333 = _tmp2318 * _tmp801;
  const Scalar _tmp2334 = _tmp2317 * _tmp796 + _tmp2333;
  const Scalar _tmp2335 = _tmp2301 + _tmp2303 + _tmp2334;
  const Scalar _tmp2336 = _tmp2318 * _tmp798;
  const Scalar _tmp2337 = _tmp2317 * _tmp800;
  const Scalar _tmp2338 = -_tmp2285 + _tmp2286 - _tmp2336 + _tmp2337;
  const Scalar _tmp2339 = -_tmp2318 * _tmp812;
  const Scalar _tmp2340 = -_tmp2254 * _tmp814;
  const Scalar _tmp2341 = _tmp2339 + _tmp2340;
  const Scalar _tmp2342 = -_tmp2335 * _tmp820 + _tmp2335 * _tmp872 - _tmp2338 * _tmp795 +
                          _tmp2338 * _tmp851 - _tmp2341 * _tmp811 + _tmp2341 * _tmp868;
  const Scalar _tmp2343 = _tmp2328 * _tmp883;
  const Scalar _tmp2344 = _tmp2330 * _tmp882;
  const Scalar _tmp2345 = _tmp2328 * _tmp901;
  const Scalar _tmp2346 = _tmp2287 + _tmp2336 + _tmp2337;
  const Scalar _tmp2347 = -_tmp2317 * _tmp896;
  const Scalar _tmp2348 = _tmp2339 + _tmp2347;
  const Scalar _tmp2349 = _tmp2317 * _tmp798;
  const Scalar _tmp2350 = _tmp2252 * _tmp801;
  const Scalar _tmp2351 = _tmp2254 * _tmp796;
  const Scalar _tmp2352 = _tmp2318 * _tmp800;
  const Scalar _tmp2353 = _tmp2351 + _tmp2352;
  const Scalar _tmp2354 = -_tmp2349 - _tmp2350 + _tmp2353;
  const Scalar _tmp2355 = -_tmp2346 * _tmp811 + _tmp2346 * _tmp868 - _tmp2348 * _tmp795 +
                          _tmp2348 * _tmp851 - _tmp2354 * _tmp820 + _tmp2354 * _tmp872;
  const Scalar _tmp2356 = _tmp2349 + _tmp2350 + _tmp2353;
  const Scalar _tmp2357 = _tmp2340 + _tmp2347;
  const Scalar _tmp2358 = -_tmp2301 + _tmp2312 + _tmp2334;
  const Scalar _tmp2359 = -_tmp2356 * _tmp795 + _tmp2356 * _tmp851 - _tmp2357 * _tmp820 +
                          _tmp2357 * _tmp872 - _tmp2358 * _tmp811 + _tmp2358 * _tmp868;
  const Scalar _tmp2360 = _tmp2328 * _tmp782;
  const Scalar _tmp2361 =
      -_a_T_b[0] * _tmp2326 + _a_T_b[1] * _tmp2324 - _a_T_b[2] * _tmp2320 + _a_T_b[3] * _tmp2322;
  const Scalar _tmp2362 = _tmp2329 * _tmp900;
  const Scalar _tmp2363 = _tmp2248 - _tmp2249 + _tmp2250 + _tmp2251;
  const Scalar _tmp2364 = -_tmp2261 + _tmp2319 - _tmp2363 * _tmp716;
  const Scalar _tmp2365 = -_tmp2268 - _tmp2269 + _tmp2321 + _tmp2363 * _tmp734;
  const Scalar _tmp2366 = _tmp2274 + _tmp2323 + _tmp2363 * _tmp728;
  const Scalar _tmp2367 = _tmp2278 + _tmp2325 - _tmp2363 * _tmp722;
  const Scalar _tmp2368 =
      _a_T_b[0] * _tmp2367 - _a_T_b[1] * _tmp2366 - _a_T_b[2] * _tmp2364 + _a_T_b[3] * _tmp2365;
  const Scalar _tmp2369 =
      _a_T_b[0] * _tmp2364 + _a_T_b[1] * _tmp2365 + _a_T_b[2] * _tmp2367 + _a_T_b[3] * _tmp2366;
  const Scalar _tmp2370 = -_tmp2363 * _tmp812;
  const Scalar _tmp2371 = -_tmp2260 * _tmp814;
  const Scalar _tmp2372 = _tmp2370 + _tmp2371;
  const Scalar _tmp2373 = _tmp2363 * _tmp798;
  const Scalar _tmp2374 = _tmp2318 * _tmp796;
  const Scalar _tmp2375 = _tmp2293 - _tmp2373 - _tmp2374;
  const Scalar _tmp2376 = _tmp2260 * _tmp798;
  const Scalar _tmp2377 = _tmp2351 + _tmp2363 * _tmp801;
  const Scalar _tmp2378 = _tmp2352 + _tmp2376 + _tmp2377;
  const Scalar _tmp2379 = -_tmp2372 * _tmp811 + _tmp2372 * _tmp868 - _tmp2375 * _tmp795 +
                          _tmp2375 * _tmp851 - _tmp2378 * _tmp820 + _tmp2378 * _tmp872;
  const Scalar _tmp2380 = _tmp2369 * _tmp782;
  const Scalar _tmp2381 = _tmp2293 + _tmp2373 + _tmp2374;
  const Scalar _tmp2382 = _tmp2363 * _tmp800;
  const Scalar _tmp2383 = _tmp2304 + _tmp2312 - _tmp2333 + _tmp2382;
  const Scalar _tmp2384 = -_tmp2254 * _tmp896;
  const Scalar _tmp2385 = _tmp2370 + _tmp2384;
  const Scalar _tmp2386 = -_tmp2381 * _tmp811 + _tmp2381 * _tmp868 - _tmp2383 * _tmp820 +
                          _tmp2383 * _tmp872 - _tmp2385 * _tmp795 + _tmp2385 * _tmp851;
  const Scalar _tmp2387 =
      -_a_T_b[0] * _tmp2365 + _a_T_b[1] * _tmp2364 - _a_T_b[2] * _tmp2366 + _a_T_b[3] * _tmp2367;
  const Scalar _tmp2388 = _tmp2387 * _tmp880;
  const Scalar _tmp2389 = _tmp2369 * _tmp883;
  const Scalar _tmp2390 = _tmp2369 * _tmp901;
  const Scalar _tmp2391 = -_tmp2352 - _tmp2376 + _tmp2377;
  const Scalar _tmp2392 = _tmp2305 + _tmp2333 + _tmp2382;
  const Scalar _tmp2393 = _tmp2371 + _tmp2384;
  const Scalar _tmp2394 = -_tmp2391 * _tmp811 + _tmp2391 * _tmp868 - _tmp2392 * _tmp795 +
                          _tmp2392 * _tmp851 - _tmp2393 * _tmp820 + _tmp2393 * _tmp872;
  const Scalar _tmp2395 = _tmp880 * (-_a_T_b[0] * _tmp2366 - _a_T_b[1] * _tmp2367 +
                                     _a_T_b[2] * _tmp2365 + _a_T_b[3] * _tmp2364);
  const Scalar _tmp2396 = _tmp2369 * _tmp910;
  const Scalar _tmp2397 = -_tmp794 * _tmp876 - _tmp810 * _tmp827 - _tmp817 * _tmp860;
  const Scalar _tmp2398 = -_tmp794 * _tmp895 - _tmp810 * _tmp892 - _tmp817 * _tmp891;
  const Scalar _tmp2399 = -_tmp794 * _tmp918 - _tmp810 * _tmp916 - _tmp817 * _tmp919;
  const Scalar _tmp2400 = -_tmp786 * _tmp895 - _tmp806 * _tmp892 - _tmp818 * _tmp891;
  const Scalar _tmp2401 = -_tmp786 * _tmp918 - _tmp806 * _tmp916 - _tmp818 * _tmp919;
  const Scalar _tmp2402 = -_tmp786 * _tmp876 - _tmp806 * _tmp827 - _tmp818 * _tmp860;
  const Scalar _tmp2403 = -_tmp791 * _tmp876 - _tmp805 * _tmp827 - _tmp819 * _tmp860;
  const Scalar _tmp2404 = -_tmp791 * _tmp895 - _tmp805 * _tmp892 - _tmp819 * _tmp891;
  const Scalar _tmp2405 = -_tmp791 * _tmp918 - _tmp805 * _tmp916 - _tmp819 * _tmp919;
  const Scalar _tmp2406 = std::fabs(_tmp240 + _tmp241 + _tmp242 + _tmp243);
  const Scalar _tmp2407 = std::min<Scalar>(_tmp14, _tmp2406);
  const Scalar _tmp2408 = 1 - std::pow(_tmp2407, Scalar(2));
  const Scalar _tmp2409 = Scalar(1.0) / (_tmp2408);
  const Scalar _tmp2410 = std::acos(_tmp2407);
  const Scalar _tmp2411 = std::pow(_tmp2410, Scalar(2));
  const Scalar _tmp2412 = _tmp2409 * _tmp2411;
  const Scalar _tmp2413 = _tmp2412 * _tmp264 + _tmp2412 * _tmp265 + _tmp2412 * _tmp271 + _tmp31;
  const Scalar _tmp2414 = std::sqrt(_tmp2413);
  const Scalar _tmp2415 = (Scalar(1) / Scalar(2)) * _tmp2414;
  const Scalar _tmp2416 = std::sin(_tmp2415);
  const Scalar _tmp2417 = _tmp2416 / _tmp2414;
  const Scalar _tmp2418 = _tmp2410 / std::sqrt(_tmp2408);
  const Scalar _tmp2419 = _tmp2418 * _tmp685;
  const Scalar _tmp2420 = _tmp2417 * _tmp2419;
  const Scalar _tmp2421 = std::cos(_tmp2415);
  const Scalar _tmp2422 = _tmp2421 * _tmp696;
  const Scalar _tmp2423 = _tmp2418 * _tmp697;
  const Scalar _tmp2424 = _tmp2417 * _tmp2423;
  const Scalar _tmp2425 = _tmp2424 * _tmp249;
  const Scalar _tmp2426 = _tmp2418 * _tmp699;
  const Scalar _tmp2427 = _tmp2417 * _tmp2426;
  const Scalar _tmp2428 = _tmp2427 * _tmp249;
  const Scalar _tmp2429 = -_tmp239 * _tmp2428 + _tmp2420 * _tmp292 + _tmp2422 + _tmp2425 * _tmp261;
  const Scalar _tmp2430 = _tmp2429 * _y0[0];
  const Scalar _tmp2431 = (Scalar(1) / Scalar(2)) * _tmp2430;
  const Scalar _tmp2432 = -_tmp2431;
  const Scalar _tmp2433 = _tmp2417 * _tmp696;
  const Scalar _tmp2434 = _tmp2418 * _tmp2433;
  const Scalar _tmp2435 = _tmp2421 * _tmp685;
  const Scalar _tmp2436 = -_tmp239 * _tmp2425 - _tmp2428 * _tmp261 - _tmp2434 * _tmp292 + _tmp2435;
  const Scalar _tmp2437 = _tmp2436 * _y0[2];
  const Scalar _tmp2438 = (Scalar(1) / Scalar(2)) * _tmp2437;
  const Scalar _tmp2439 = ((((_tmp14 - _tmp2406) > 0) - ((_tmp14 - _tmp2406) < 0)) + 1) *
                          (((-_tmp240 + _tmp244) > 0) - ((-_tmp240 + _tmp244) < 0));
  const Scalar _tmp2440 = _tmp2410 * _tmp2439 / (_tmp2408 * std::sqrt(_tmp2408));
  const Scalar _tmp2441 = (Scalar(1) / Scalar(2)) * _tmp235;
  const Scalar _tmp2442 = (Scalar(1) / Scalar(2)) * _tmp236;
  const Scalar _tmp2443 = (Scalar(1) / Scalar(2)) * _tmp237;
  const Scalar _tmp2444 = (Scalar(1) / Scalar(2)) * _tmp238;
  const Scalar _tmp2445 = -_tmp2441 + _tmp2442 + _tmp2443 - _tmp2444;
  const Scalar _tmp2446 = _tmp2445 * _tmp264;
  const Scalar _tmp2447 = (Scalar(1) / Scalar(2)) * _tmp241;
  const Scalar _tmp2448 = (Scalar(1) / Scalar(2)) * _tmp242;
  const Scalar _tmp2449 = (Scalar(1) / Scalar(2)) * _tmp243;
  const Scalar _tmp2450 = (Scalar(1) / Scalar(2)) * _tmp240;
  const Scalar _tmp2451 = -_tmp2447 - _tmp2448 - _tmp2449 - _tmp2450;
  const Scalar _tmp2452 = 8 * _tmp262;
  const Scalar _tmp2453 = _tmp2412 * _tmp2452;
  const Scalar _tmp2454 = _tmp2451 * _tmp2453;
  const Scalar _tmp2455 = _tmp2407 * _tmp2411 * _tmp2439 / std::pow(_tmp2408, Scalar(2));
  const Scalar _tmp2456 = _tmp2445 * _tmp271;
  const Scalar _tmp2457 = (Scalar(1) / Scalar(2)) * _tmp257;
  const Scalar _tmp2458 = (Scalar(1) / Scalar(2)) * _tmp258;
  const Scalar _tmp2459 = (Scalar(1) / Scalar(2)) * _tmp259;
  const Scalar _tmp2460 = (Scalar(1) / Scalar(2)) * _tmp260;
  const Scalar _tmp2461 = -_tmp2457 - _tmp2458 + _tmp2459 + _tmp2460;
  const Scalar _tmp2462 = _tmp2453 * _tmp270;
  const Scalar _tmp2463 = _tmp2445 * _tmp265;
  const Scalar _tmp2464 = (Scalar(1) / Scalar(2)) * _tmp266;
  const Scalar _tmp2465 = (Scalar(1) / Scalar(2)) * _tmp267;
  const Scalar _tmp2466 = (Scalar(1) / Scalar(2)) * _tmp268;
  const Scalar _tmp2467 = (Scalar(1) / Scalar(2)) * _tmp269;
  const Scalar _tmp2468 = _tmp2464 - _tmp2465 + _tmp2466 - _tmp2467;
  const Scalar _tmp2469 = _tmp2453 * _tmp261;
  const Scalar _tmp2470 = _tmp239 * _tmp2454 - _tmp2440 * _tmp2446 - _tmp2440 * _tmp2456 -
                          _tmp2440 * _tmp2463 + _tmp2446 * _tmp2455 + _tmp2455 * _tmp2456 +
                          _tmp2455 * _tmp2463 + _tmp2461 * _tmp2462 + _tmp2468 * _tmp2469;
  const Scalar _tmp2471 = _tmp2416 / (_tmp2413 * std::sqrt(_tmp2413));
  const Scalar _tmp2472 = _tmp2470 * _tmp2471;
  const Scalar _tmp2473 = _tmp2419 * _tmp248;
  const Scalar _tmp2474 = _tmp2473 * _tmp270;
  const Scalar _tmp2475 = _tmp2409 * _tmp2439;
  const Scalar _tmp2476 = _tmp2417 * _tmp2475;
  const Scalar _tmp2477 = _tmp2445 * _tmp2476;
  const Scalar _tmp2478 = _tmp248 * _tmp261;
  const Scalar _tmp2479 = _tmp2478 * _tmp697;
  const Scalar _tmp2480 = _tmp2426 * _tmp248;
  const Scalar _tmp2481 = _tmp239 * _tmp2480;
  const Scalar _tmp2482 = (Scalar(1) / Scalar(4)) * _tmp696;
  const Scalar _tmp2483 = _tmp2417 * _tmp2470;
  const Scalar _tmp2484 = _tmp248 * _tmp270;
  const Scalar _tmp2485 = (Scalar(1) / Scalar(2)) * _tmp2418 / _tmp2413;
  const Scalar _tmp2486 = _tmp2484 * _tmp2485;
  const Scalar _tmp2487 = _tmp2470 * _tmp2486;
  const Scalar _tmp2488 = _tmp2484 * _tmp685;
  const Scalar _tmp2489 = _tmp239 * _tmp248;
  const Scalar _tmp2490 = _tmp2489 * _tmp699;
  const Scalar _tmp2491 = _tmp2407 * _tmp2417;
  const Scalar _tmp2492 = _tmp2440 * _tmp2491;
  const Scalar _tmp2493 = _tmp2445 * _tmp2492;
  const Scalar _tmp2494 = _tmp2472 * _tmp2478;
  const Scalar _tmp2495 = _tmp2428 * _tmp2451;
  const Scalar _tmp2496 = -_tmp2495;
  const Scalar _tmp2497 = _tmp2421 * _tmp699;
  const Scalar _tmp2498 = _tmp2485 * _tmp2489;
  const Scalar _tmp2499 = _tmp2470 * _tmp2498;
  const Scalar _tmp2500 = _tmp2421 * _tmp697;
  const Scalar _tmp2501 = _tmp2478 * _tmp2485;
  const Scalar _tmp2502 = _tmp2470 * _tmp2501;
  const Scalar _tmp2503 = _tmp2461 * _tmp249;
  const Scalar _tmp2504 =
      _tmp2420 * _tmp2503 - _tmp2423 * _tmp2494 + _tmp2425 * _tmp2468 + _tmp2435 * _tmp2487 -
      _tmp2472 * _tmp2474 + _tmp2472 * _tmp2481 - _tmp2477 * _tmp2479 - _tmp2477 * _tmp2488 +
      _tmp2477 * _tmp2490 + _tmp2479 * _tmp2493 - _tmp2482 * _tmp2483 + _tmp2488 * _tmp2493 -
      _tmp2490 * _tmp2493 + _tmp2496 - _tmp2497 * _tmp2499 + _tmp2500 * _tmp2502;
  const Scalar _tmp2505 = _tmp2489 * _tmp685;
  const Scalar _tmp2506 = _tmp2484 * _tmp699;
  const Scalar _tmp2507 = _tmp2445 * _tmp2506;
  const Scalar _tmp2508 = _tmp2420 * _tmp249;
  const Scalar _tmp2509 = _tmp2451 * _tmp2508;
  const Scalar _tmp2510 = (Scalar(1) / Scalar(4)) * _tmp697;
  const Scalar _tmp2511 = _tmp2433 * _tmp2475;
  const Scalar _tmp2512 = _tmp2478 * _tmp2511;
  const Scalar _tmp2513 = _tmp2407 * _tmp2433;
  const Scalar _tmp2514 = _tmp2478 * _tmp2513;
  const Scalar _tmp2515 = _tmp2440 * _tmp2514;
  const Scalar _tmp2516 = _tmp2418 * _tmp696;
  const Scalar _tmp2517 = _tmp2480 * _tmp270;
  const Scalar _tmp2518 = _tmp2434 * _tmp249;
  const Scalar _tmp2519 = _tmp239 * _tmp2473;
  const Scalar _tmp2520 =
      -_tmp2422 * _tmp2502 + _tmp2427 * _tmp2503 + _tmp2435 * _tmp2499 + _tmp2445 * _tmp2512 -
      _tmp2445 * _tmp2515 - _tmp2468 * _tmp2518 - _tmp2472 * _tmp2517 - _tmp2472 * _tmp2519 -
      _tmp2477 * _tmp2505 - _tmp2477 * _tmp2506 - _tmp2483 * _tmp2510 + _tmp2487 * _tmp2497 +
      _tmp2492 * _tmp2507 + _tmp2493 * _tmp2505 + _tmp2494 * _tmp2516 + _tmp2509;
  const Scalar _tmp2521 = _tmp2423 * _tmp2472;
  const Scalar _tmp2522 = _tmp2484 * _tmp2511;
  const Scalar _tmp2523 = _tmp2484 * _tmp696;
  const Scalar _tmp2524 = _tmp2425 * _tmp2451;
  const Scalar _tmp2525 = -_tmp2524;
  const Scalar _tmp2526 = _tmp2478 * _tmp699;
  const Scalar _tmp2527 = _tmp2489 * _tmp697;
  const Scalar _tmp2528 = _tmp2440 * _tmp2513;
  const Scalar _tmp2529 = _tmp2445 * _tmp2528;
  const Scalar _tmp2530 = (Scalar(1) / Scalar(4)) * _tmp685;
  const Scalar _tmp2531 = _tmp2418 * _tmp2472 * _tmp2523 - _tmp2422 * _tmp2487 +
                          _tmp2426 * _tmp2494 - _tmp2428 * _tmp2468 - _tmp2434 * _tmp2503 +
                          _tmp2445 * _tmp2522 + _tmp2477 * _tmp2526 + _tmp2477 * _tmp2527 -
                          _tmp2483 * _tmp2530 - _tmp2484 * _tmp2529 + _tmp2489 * _tmp2521 -
                          _tmp2493 * _tmp2526 - _tmp2493 * _tmp2527 - _tmp2497 * _tmp2502 -
                          _tmp2499 * _tmp2500 + _tmp2525;
  const Scalar _tmp2532 = _tmp2451 * _tmp2518;
  const Scalar _tmp2533 = _tmp2478 * _tmp685;
  const Scalar _tmp2534 = _tmp2489 * _tmp696;
  const Scalar _tmp2535 = _tmp2418 * _tmp2534;
  const Scalar _tmp2536 = _tmp2484 * _tmp697;
  const Scalar _tmp2537 = (Scalar(1) / Scalar(4)) * _tmp699;
  const Scalar _tmp2538 = _tmp2489 * _tmp2511;
  const Scalar _tmp2539 = _tmp2422 * _tmp2498;
  const Scalar _tmp2540 =
      -_tmp2419 * _tmp2494 - _tmp2424 * _tmp2503 + _tmp2435 * _tmp2502 - _tmp2445 * _tmp2538 +
      _tmp2468 * _tmp2508 + _tmp2470 * _tmp2539 - _tmp2472 * _tmp2535 - _tmp2477 * _tmp2533 +
      _tmp2477 * _tmp2536 - _tmp2483 * _tmp2537 + _tmp2484 * _tmp2521 - _tmp2487 * _tmp2500 +
      _tmp2489 * _tmp2529 + _tmp2493 * _tmp2533 - _tmp2493 * _tmp2536 + _tmp2532;
  const Scalar _tmp2541 = _tmp239 * _tmp2508 + _tmp2427 * _tmp292 + _tmp2500 - _tmp2518 * _tmp261;
  const Scalar _tmp2542 = _tmp2541 * _y0[1];
  const Scalar _tmp2543 = -Scalar(1) / Scalar(2) * _tmp2542;
  const Scalar _tmp2544 = _tmp239 * _tmp2518 - _tmp2424 * _tmp292 + _tmp2497 + _tmp2508 * _tmp261;
  const Scalar _tmp2545 = _tmp2544 * _y0[3];
  const Scalar _tmp2546 = (Scalar(1) / Scalar(2)) * _tmp2545;
  const Scalar _tmp2547 = _tmp2543 - _tmp2546;
  const Scalar _tmp2548 = _tmp2432 + _tmp2438 + _tmp2504 * _y0[3] + _tmp2520 * _y0[2] +
                          _tmp2531 * _y0[1] - _tmp2540 * _y0[0] + _tmp2547;
  const Scalar _tmp2549 = _tmp2429 * _y0[3];
  const Scalar _tmp2550 = (Scalar(1) / Scalar(2)) * _tmp2549;
  const Scalar _tmp2551 = _tmp2436 * _y0[1];
  const Scalar _tmp2552 = (Scalar(1) / Scalar(2)) * _tmp2551;
  const Scalar _tmp2553 = -_tmp2552;
  const Scalar _tmp2554 = _tmp2541 * _y0[2];
  const Scalar _tmp2555 = (Scalar(1) / Scalar(2)) * _tmp2554;
  const Scalar _tmp2556 = _tmp2544 * _y0[0];
  const Scalar _tmp2557 = -Scalar(1) / Scalar(2) * _tmp2556;
  const Scalar _tmp2558 = -_tmp2555 + _tmp2557;
  const Scalar _tmp2559 = _tmp2504 * _y0[0] - _tmp2520 * _y0[1] + _tmp2531 * _y0[2] +
                          _tmp2540 * _y0[3] + _tmp2550 + _tmp2553 + _tmp2558;
  const Scalar _tmp2560 = _tmp2541 * _y0[0];
  const Scalar _tmp2561 = (Scalar(1) / Scalar(2)) * _tmp2560;
  const Scalar _tmp2562 = _tmp2544 * _y0[2];
  const Scalar _tmp2563 = (Scalar(1) / Scalar(2)) * _tmp2562;
  const Scalar _tmp2564 = _tmp2429 * _y0[1];
  const Scalar _tmp2565 = (Scalar(1) / Scalar(2)) * _tmp2564;
  const Scalar _tmp2566 = _tmp2436 * _y0[3];
  const Scalar _tmp2567 = (Scalar(1) / Scalar(2)) * _tmp2566;
  const Scalar _tmp2568 = _tmp2565 + _tmp2567;
  const Scalar _tmp2569 = -_tmp2504 * _y0[2] + _tmp2520 * _y0[3] + _tmp2531 * _y0[0] +
                          _tmp2540 * _y0[1] - _tmp2561 + _tmp2563 + _tmp2568;
  const Scalar _tmp2570 = _tmp2541 * _y0[3];
  const Scalar _tmp2571 = (Scalar(1) / Scalar(2)) * _tmp2570;
  const Scalar _tmp2572 = -_tmp2571;
  const Scalar _tmp2573 = _tmp2544 * _y0[1];
  const Scalar _tmp2574 = (Scalar(1) / Scalar(2)) * _tmp2573;
  const Scalar _tmp2575 = _tmp2429 * _y0[2];
  const Scalar _tmp2576 = -Scalar(1) / Scalar(2) * _tmp2575;
  const Scalar _tmp2577 = _tmp2436 * _y0[0];
  const Scalar _tmp2578 = (Scalar(1) / Scalar(2)) * _tmp2577;
  const Scalar _tmp2579 = _tmp2576 - _tmp2578;
  const Scalar _tmp2580 = -_tmp2504 * _y0[1] - _tmp2520 * _y0[0] + _tmp2531 * _y0[3] -
                          _tmp2540 * _y0[2] + _tmp2572 + _tmp2574 + _tmp2579;
  const Scalar _tmp2581 =
      _tmp2548 * _y_T_b[2] - _tmp2559 * _y_T_b[1] + _tmp2569 * _y_T_b[3] + _tmp2580 * _y_T_b[0];
  const Scalar _tmp2582 =
      -_tmp2548 * _y_T_b[1] - _tmp2559 * _y_T_b[2] - _tmp2569 * _y_T_b[0] + _tmp2580 * _y_T_b[3];
  const Scalar _tmp2583 =
      _tmp2548 * _y_T_b[3] + _tmp2559 * _y_T_b[0] - _tmp2569 * _y_T_b[2] + _tmp2580 * _y_T_b[1];
  const Scalar _tmp2584 =
      -_tmp2548 * _y_T_b[0] + _tmp2559 * _y_T_b[3] + _tmp2569 * _y_T_b[1] + _tmp2580 * _y_T_b[2];
  const Scalar _tmp2585 =
      _tmp2581 * _tmp748 - _tmp2582 * _tmp758 + _tmp2583 * _tmp753 - _tmp2584 * _tmp763;
  const Scalar _tmp2586 =
      _tmp2581 * _tmp758 + _tmp2582 * _tmp748 + _tmp2583 * _tmp763 + _tmp2584 * _tmp753;
  const Scalar _tmp2587 =
      _tmp2581 * _tmp763 - _tmp2582 * _tmp753 - _tmp2583 * _tmp758 + _tmp2584 * _tmp748;
  const Scalar _tmp2588 =
      -_tmp2581 * _tmp753 - _tmp2582 * _tmp763 + _tmp2583 * _tmp748 + _tmp2584 * _tmp758;
  const Scalar _tmp2589 = -_tmp2560 - _tmp2562 - _tmp2564 + _tmp2566;
  const Scalar _tmp2590 = _tmp2430 + _tmp2437 - _tmp2542 + _tmp2545;
  const Scalar _tmp2591 = _tmp2570 + _tmp2573 - _tmp2575 + _tmp2577;
  const Scalar _tmp2592 = _tmp2549 + _tmp2551 + _tmp2554 - _tmp2556;
  const Scalar _tmp2593 =
      _tmp2589 * _y_T_b[0] - _tmp2590 * _y_T_b[1] + _tmp2591 * _y_T_b[3] + _tmp2592 * _y_T_b[2];
  const Scalar _tmp2594 =
      _tmp2589 * _y_T_b[1] + _tmp2590 * _y_T_b[0] - _tmp2591 * _y_T_b[2] + _tmp2592 * _y_T_b[3];
  const Scalar _tmp2595 =
      _tmp2589 * _y_T_b[2] + _tmp2590 * _y_T_b[3] + _tmp2591 * _y_T_b[1] - _tmp2592 * _y_T_b[0];
  const Scalar _tmp2596 =
      _tmp2589 * _y_T_b[3] - _tmp2590 * _y_T_b[2] - _tmp2591 * _y_T_b[0] - _tmp2592 * _y_T_b[1];
  const Scalar _tmp2597 =
      _tmp2593 * _tmp763 - _tmp2594 * _tmp758 + _tmp2595 * _tmp748 - _tmp2596 * _tmp753;
  const Scalar _tmp2598 = _a_T_b[2] * _tmp2597;
  const Scalar _tmp2599 =
      _tmp2593 * _tmp748 + _tmp2594 * _tmp753 - _tmp2595 * _tmp763 - _tmp2596 * _tmp758;
  const Scalar _tmp2600 = _a_T_b[0] * _tmp2599;
  const Scalar _tmp2601 =
      -_tmp2593 * _tmp753 + _tmp2594 * _tmp748 + _tmp2595 * _tmp758 - _tmp2596 * _tmp763;
  const Scalar _tmp2602 = _a_T_b[1] * _tmp2601;
  const Scalar _tmp2603 =
      _tmp2593 * _tmp758 + _tmp2594 * _tmp763 + _tmp2595 * _tmp753 + _tmp2596 * _tmp748;
  const Scalar _tmp2604 = _a_T_b[3] * _tmp2603;
  const Scalar _tmp2605 = _tmp2598 + _tmp2600 + _tmp2602 + _tmp2604;
  const Scalar _tmp2606 = std::fabs(_tmp2605);
  const Scalar _tmp2607 = std::min<Scalar>(_tmp14, _tmp2606);
  const Scalar _tmp2608 = 1 - std::pow(_tmp2607, Scalar(2));
  const Scalar _tmp2609 =
      2 * std::min<Scalar>(0, (((_tmp2598 + _tmp2600 + _tmp2602 + _tmp2604) > 0) -
                               ((_tmp2598 + _tmp2600 + _tmp2602 + _tmp2604) < 0))) +
      1;
  const Scalar _tmp2610 = _tmp2609 * std::acos(_tmp2607);
  const Scalar _tmp2611 = _tmp2610 / std::sqrt(_tmp2608);
  const Scalar _tmp2612 = 2 * _tmp2611;
  const Scalar _tmp2613 = _tmp2612 * (-_a_T_b[0] * _tmp2586 - _a_T_b[1] * _tmp2587 +
                                      _a_T_b[2] * _tmp2588 + _a_T_b[3] * _tmp2585);
  const Scalar _tmp2614 = ((((_tmp14 - _tmp2606) > 0) - ((_tmp14 - _tmp2606) < 0)) + 1) *
                          (((_tmp2605) > 0) - ((_tmp2605) < 0));
  const Scalar _tmp2615 = _tmp2614 * (-_a_T_b[0] * _tmp2603 - _a_T_b[1] * _tmp2597 +
                                      _a_T_b[2] * _tmp2601 + _a_T_b[3] * _tmp2599);
  const Scalar _tmp2616 =
      _a_T_b[0] * _tmp2585 + _a_T_b[1] * _tmp2588 + _a_T_b[2] * _tmp2587 + _a_T_b[3] * _tmp2586;
  const Scalar _tmp2617 = _tmp2607 * _tmp2610 / (_tmp2608 * std::sqrt(_tmp2608));
  const Scalar _tmp2618 = _tmp2616 * _tmp2617;
  const Scalar _tmp2619 = _tmp2615 * _tmp2618;
  const Scalar _tmp2620 = _tmp2614 * (_a_T_b[0] * _tmp2597 - _a_T_b[1] * _tmp2603 -
                                      _a_T_b[2] * _tmp2599 + _a_T_b[3] * _tmp2601);
  const Scalar _tmp2621 = _tmp2620 * sqrt_info(0, 1);
  const Scalar _tmp2622 = _tmp2609 / _tmp2608;
  const Scalar _tmp2623 = _tmp2616 * _tmp2622;
  const Scalar _tmp2624 = 4 * _tmp2592;
  const Scalar _tmp2625 = -_tmp2548 * _tmp2624;
  const Scalar _tmp2626 = 4 * _tmp2590;
  const Scalar _tmp2627 = -_tmp2559 * _tmp2626;
  const Scalar _tmp2628 = 2 * _tmp2590;
  const Scalar _tmp2629 = _tmp2580 * _tmp2628;
  const Scalar _tmp2630 = 2 * _tmp2589;
  const Scalar _tmp2631 = _tmp2559 * _tmp2630;
  const Scalar _tmp2632 = 2 * _tmp2592;
  const Scalar _tmp2633 = 2 * _tmp2591;
  const Scalar _tmp2634 = _tmp2548 * _tmp2633 + _tmp2569 * _tmp2632;
  const Scalar _tmp2635 = _tmp2580 * _tmp2632;
  const Scalar _tmp2636 = _tmp2548 * _tmp2630;
  const Scalar _tmp2637 = _tmp2559 * _tmp2633 + _tmp2569 * _tmp2628;
  const Scalar _tmp2638 = _y_T_b[4] * (_tmp2625 + _tmp2627) +
                          _y_T_b[5] * (-_tmp2629 - _tmp2631 + _tmp2634) +
                          _y_T_b[6] * (_tmp2635 + _tmp2636 + _tmp2637);
  const Scalar _tmp2639 = _tmp2580 * _tmp2633;
  const Scalar _tmp2640 = _tmp2569 * _tmp2630;
  const Scalar _tmp2641 = _tmp2548 * _tmp2628 + _tmp2559 * _tmp2632;
  const Scalar _tmp2642 = 4 * _tmp2591;
  const Scalar _tmp2643 = -_tmp2569 * _tmp2642;
  const Scalar _tmp2644 = _y_T_b[4] * (_tmp2629 + _tmp2631 + _tmp2634) +
                          _y_T_b[5] * (_tmp2627 + _tmp2643) +
                          _y_T_b[6] * (-_tmp2639 - _tmp2640 + _tmp2641);
  const Scalar _tmp2645 = _y_T_b[4] * (-_tmp2635 - _tmp2636 + _tmp2637) +
                          _y_T_b[5] * (_tmp2639 + _tmp2640 + _tmp2641) +
                          _y_T_b[6] * (_tmp2625 + _tmp2643);
  const Scalar _tmp2646 = _tmp2638 * _tmp919 + _tmp2644 * _tmp918 + _tmp2645 * _tmp916;
  const Scalar _tmp2647 = _tmp2611 * (-_a_T_b[0] * _tmp2588 + _a_T_b[1] * _tmp2585 -
                                      _a_T_b[2] * _tmp2586 + _a_T_b[3] * _tmp2587);
  const Scalar _tmp2648 = 2 * _tmp2647;
  const Scalar _tmp2649 =
      _a_T_b[0] * _tmp2587 - _a_T_b[1] * _tmp2586 - _a_T_b[2] * _tmp2585 + _a_T_b[3] * _tmp2588;
  const Scalar _tmp2650 = _tmp2612 * _tmp2649;
  const Scalar _tmp2651 = _tmp2615 * _tmp2623;
  const Scalar _tmp2652 = _tmp2614 * (-_a_T_b[0] * _tmp2601 + _a_T_b[1] * _tmp2599 -
                                      _a_T_b[2] * _tmp2603 + _a_T_b[3] * _tmp2597);
  const Scalar _tmp2653 = _tmp2618 * _tmp2652;
  const Scalar _tmp2654 = _tmp2623 * _tmp2652;
  const Scalar _tmp2655 = _tmp2638 * _tmp860 + _tmp2644 * _tmp876 + _tmp2645 * _tmp827;
  const Scalar _tmp2656 = _tmp2638 * _tmp891 + _tmp2644 * _tmp895 + _tmp2645 * _tmp892;
  const Scalar _tmp2657 = _tmp2620 * _tmp2623;
  const Scalar _tmp2658 = _tmp2611 * _tmp2649;
  const Scalar _tmp2659 = _tmp2618 * _tmp2620;
  const Scalar _tmp2660 = _tmp2652 * sqrt_info(2, 2);
  const Scalar _tmp2661 = _tmp2615 * sqrt_info(4, 0);
  const Scalar _tmp2662 = -_tmp2550;
  const Scalar _tmp2663 = _tmp2468 * _tmp265;
  const Scalar _tmp2664 = _tmp2468 * _tmp264;
  const Scalar _tmp2665 = _tmp2468 * _tmp271;
  const Scalar _tmp2666 = _tmp2441 - _tmp2442 - _tmp2443 + _tmp2444;
  const Scalar _tmp2667 = _tmp2457 + _tmp2458 - _tmp2459 - _tmp2460;
  const Scalar _tmp2668 = _tmp239 * _tmp2667;
  const Scalar _tmp2669 = -_tmp2440 * _tmp2663 - _tmp2440 * _tmp2664 - _tmp2440 * _tmp2665 +
                          _tmp2453 * _tmp2668 + _tmp2454 * _tmp270 + _tmp2455 * _tmp2663 +
                          _tmp2455 * _tmp2664 + _tmp2455 * _tmp2665 + _tmp2469 * _tmp2666;
  const Scalar _tmp2670 = _tmp2471 * _tmp2669;
  const Scalar _tmp2671 = _tmp2478 * _tmp2670;
  const Scalar _tmp2672 = _tmp2435 * _tmp2669;
  const Scalar _tmp2673 = _tmp2468 * _tmp2476;
  const Scalar _tmp2674 = _tmp2670 * _tmp270;
  const Scalar _tmp2675 = _tmp248 * _tmp2674;
  const Scalar _tmp2676 = _tmp2468 * _tmp2492;
  const Scalar _tmp2677 = _tmp2486 * _tmp2669;
  const Scalar _tmp2678 = _tmp249 * _tmp2667;
  const Scalar _tmp2679 = _tmp2468 * _tmp2528;
  const Scalar _tmp2680 = _tmp2417 * _tmp2669;
  const Scalar _tmp2681 = (Scalar(1) / Scalar(4)) * _tmp2680;
  const Scalar _tmp2682 =
      -_tmp2419 * _tmp2671 + _tmp2423 * _tmp2675 + _tmp2434 * _tmp2678 - _tmp2468 * _tmp2538 +
      _tmp2489 * _tmp2679 - _tmp2500 * _tmp2677 + _tmp2501 * _tmp2672 + _tmp2508 * _tmp2666 +
      _tmp2525 - _tmp2533 * _tmp2673 + _tmp2533 * _tmp2676 - _tmp2535 * _tmp2670 +
      _tmp2536 * _tmp2673 - _tmp2536 * _tmp2676 + _tmp2539 * _tmp2669 - _tmp2681 * _tmp699;
  const Scalar _tmp2683 = _tmp2501 * _tmp2669;
  const Scalar _tmp2684 =
      _tmp2420 * _tmp2678 - _tmp2422 * _tmp2683 + _tmp2468 * _tmp2512 - _tmp2468 * _tmp2515 -
      _tmp2480 * _tmp2674 + _tmp2495 + _tmp2497 * _tmp2677 + _tmp2498 * _tmp2672 -
      _tmp2505 * _tmp2673 + _tmp2505 * _tmp2676 - _tmp2506 * _tmp2673 + _tmp2506 * _tmp2676 -
      _tmp2510 * _tmp2680 + _tmp2516 * _tmp2671 - _tmp2518 * _tmp2666 - _tmp2519 * _tmp2670;
  const Scalar _tmp2685 = -_tmp2532;
  const Scalar _tmp2686 = _tmp2500 * _tmp2669;
  const Scalar _tmp2687 = -_tmp2422 * _tmp2677 + _tmp2423 * _tmp2489 * _tmp2670 -
                          _tmp2424 * _tmp2678 + _tmp2426 * _tmp2671 - _tmp2428 * _tmp2666 +
                          _tmp2468 * _tmp2522 - _tmp2484 * _tmp2679 - _tmp2497 * _tmp2683 -
                          _tmp2498 * _tmp2686 + _tmp2516 * _tmp2675 + _tmp2526 * _tmp2673 -
                          _tmp2526 * _tmp2676 + _tmp2527 * _tmp2673 - _tmp2527 * _tmp2676 -
                          _tmp2681 * _tmp685 + _tmp2685;
  const Scalar _tmp2688 = _tmp2497 * _tmp2498;
  const Scalar _tmp2689 = _tmp2468 * _tmp2488;
  const Scalar _tmp2690 =
      -_tmp2423 * _tmp2671 + _tmp2425 * _tmp2666 - _tmp2427 * _tmp2678 + _tmp2435 * _tmp2677 -
      _tmp2473 * _tmp2674 - _tmp2476 * _tmp2689 - _tmp2479 * _tmp2673 + _tmp2479 * _tmp2676 +
      _tmp2481 * _tmp2670 - _tmp2482 * _tmp2680 + _tmp2490 * _tmp2673 - _tmp2490 * _tmp2676 +
      _tmp2492 * _tmp2689 + _tmp2501 * _tmp2686 + _tmp2509 - _tmp2669 * _tmp2688;
  const Scalar _tmp2691 = _tmp2553 + _tmp2555 + _tmp2557 + _tmp2662 - _tmp2682 * _y0[2] -
                          _tmp2684 * _y0[0] + _tmp2687 * _y0[3] - _tmp2690 * _y0[1];
  const Scalar _tmp2692 = _tmp2633 * _tmp2691;
  const Scalar _tmp2693 = -_tmp2438;
  const Scalar _tmp2694 = _tmp2432 + _tmp2543 + _tmp2546 + _tmp2682 * _y0[1] + _tmp2684 * _y0[3] +
                          _tmp2687 * _y0[0] - _tmp2690 * _y0[2] + _tmp2693;
  const Scalar _tmp2695 = _tmp2630 * _tmp2694;
  const Scalar _tmp2696 = -_tmp2574;
  const Scalar _tmp2697 = _tmp2572 + _tmp2576 + _tmp2578 + _tmp2682 * _y0[3] - _tmp2684 * _y0[1] +
                          _tmp2687 * _y0[2] + _tmp2690 * _y0[0] + _tmp2696;
  const Scalar _tmp2698 = _tmp2561 + _tmp2563 - _tmp2565 + _tmp2567 - _tmp2682 * _y0[0] +
                          _tmp2684 * _y0[2] + _tmp2687 * _y0[1] + _tmp2690 * _y0[3];
  const Scalar _tmp2699 = _tmp2628 * _tmp2698 + _tmp2632 * _tmp2697;
  const Scalar _tmp2700 = _tmp2628 * _tmp2691;
  const Scalar _tmp2701 = _tmp2630 * _tmp2697;
  const Scalar _tmp2702 = _tmp2632 * _tmp2694 + _tmp2633 * _tmp2698;
  const Scalar _tmp2703 = -_tmp2642 * _tmp2694;
  const Scalar _tmp2704 = -_tmp2626 * _tmp2697;
  const Scalar _tmp2705 = _y_T_b[4] * (_tmp2700 + _tmp2701 + _tmp2702) +
                          _y_T_b[5] * (_tmp2703 + _tmp2704) +
                          _y_T_b[6] * (-_tmp2692 - _tmp2695 + _tmp2699);
  const Scalar _tmp2706 = -_tmp2624 * _tmp2698;
  const Scalar _tmp2707 = _tmp2632 * _tmp2691;
  const Scalar _tmp2708 = _tmp2630 * _tmp2698;
  const Scalar _tmp2709 = _tmp2628 * _tmp2694 + _tmp2633 * _tmp2697;
  const Scalar _tmp2710 = _y_T_b[4] * (-_tmp2707 - _tmp2708 + _tmp2709) +
                          _y_T_b[5] * (_tmp2692 + _tmp2695 + _tmp2699) +
                          _y_T_b[6] * (_tmp2703 + _tmp2706);
  const Scalar _tmp2711 = _y_T_b[4] * (_tmp2704 + _tmp2706) +
                          _y_T_b[5] * (-_tmp2700 - _tmp2701 + _tmp2702) +
                          _y_T_b[6] * (_tmp2707 + _tmp2708 + _tmp2709);
  const Scalar _tmp2712 = _tmp2705 * _tmp918 + _tmp2710 * _tmp916 + _tmp2711 * _tmp919;
  const Scalar _tmp2713 = _tmp2705 * _tmp876 + _tmp2710 * _tmp827 + _tmp2711 * _tmp860;
  const Scalar _tmp2714 =
      _tmp2691 * _y_T_b[3] - _tmp2694 * _y_T_b[0] - _tmp2697 * _y_T_b[2] - _tmp2698 * _y_T_b[1];
  const Scalar _tmp2715 =
      _tmp2691 * _y_T_b[0] + _tmp2694 * _y_T_b[3] - _tmp2697 * _y_T_b[1] + _tmp2698 * _y_T_b[2];
  const Scalar _tmp2716 =
      _tmp2691 * _y_T_b[2] + _tmp2694 * _y_T_b[1] + _tmp2697 * _y_T_b[3] - _tmp2698 * _y_T_b[0];
  const Scalar _tmp2717 =
      _tmp2691 * _y_T_b[1] - _tmp2694 * _y_T_b[2] + _tmp2697 * _y_T_b[0] + _tmp2698 * _y_T_b[3];
  const Scalar _tmp2718 =
      _tmp2714 * _tmp748 + _tmp2715 * _tmp758 + _tmp2716 * _tmp753 + _tmp2717 * _tmp763;
  const Scalar _tmp2719 =
      -_tmp2714 * _tmp763 - _tmp2715 * _tmp753 + _tmp2716 * _tmp758 + _tmp2717 * _tmp748;
  const Scalar _tmp2720 =
      -_tmp2714 * _tmp758 + _tmp2715 * _tmp748 - _tmp2716 * _tmp763 + _tmp2717 * _tmp753;
  const Scalar _tmp2721 =
      -_tmp2714 * _tmp753 + _tmp2715 * _tmp763 + _tmp2716 * _tmp748 - _tmp2717 * _tmp758;
  const Scalar _tmp2722 =
      _a_T_b[0] * _tmp2720 + _a_T_b[1] * _tmp2719 + _a_T_b[2] * _tmp2721 + _a_T_b[3] * _tmp2718;
  const Scalar _tmp2723 = _tmp2622 * _tmp2722;
  const Scalar _tmp2724 = _tmp2615 * _tmp2723;
  const Scalar _tmp2725 =
      _a_T_b[0] * _tmp2721 - _a_T_b[1] * _tmp2718 - _a_T_b[2] * _tmp2720 + _a_T_b[3] * _tmp2719;
  const Scalar _tmp2726 = _tmp2612 * _tmp2725;
  const Scalar _tmp2727 = _tmp2705 * _tmp895 + _tmp2710 * _tmp892 + _tmp2711 * _tmp891;
  const Scalar _tmp2728 = _tmp2617 * _tmp2722;
  const Scalar _tmp2729 = _tmp2615 * _tmp2728;
  const Scalar _tmp2730 = _tmp2652 * _tmp2723;
  const Scalar _tmp2731 =
      -_a_T_b[0] * _tmp2719 + _a_T_b[1] * _tmp2720 - _a_T_b[2] * _tmp2718 + _a_T_b[3] * _tmp2721;
  const Scalar _tmp2732 = _tmp2612 * _tmp2731;
  const Scalar _tmp2733 = _tmp2612 * (-_a_T_b[0] * _tmp2718 - _a_T_b[1] * _tmp2721 +
                                      _a_T_b[2] * _tmp2719 + _a_T_b[3] * _tmp2720);
  const Scalar _tmp2734 = _tmp2652 * _tmp2728;
  const Scalar _tmp2735 = _tmp2611 * _tmp2725;
  const Scalar _tmp2736 = _tmp2611 * _tmp382;
  const Scalar _tmp2737 = _tmp2620 * _tmp2723;
  const Scalar _tmp2738 = _tmp2620 * _tmp2728;
  const Scalar _tmp2739 = _tmp248 * _tmp2668;
  const Scalar _tmp2740 = _tmp2440 * _tmp2667;
  const Scalar _tmp2741 = _tmp264 * _tmp2667;
  const Scalar _tmp2742 = -_tmp2464 + _tmp2465 - _tmp2466 + _tmp2467;
  const Scalar _tmp2743 = _tmp239 * _tmp2742;
  const Scalar _tmp2744 = _tmp2455 * _tmp2667;
  const Scalar _tmp2745 = _tmp2445 * _tmp2462 + _tmp2453 * _tmp2743 + _tmp2454 * _tmp261 +
                          _tmp2455 * _tmp2741 - _tmp264 * _tmp2740 - _tmp265 * _tmp2740 +
                          _tmp265 * _tmp2744 - _tmp271 * _tmp2740 + _tmp271 * _tmp2744;
  const Scalar _tmp2746 = _tmp2500 * _tmp2745;
  const Scalar _tmp2747 = _tmp2476 * _tmp2667;
  const Scalar _tmp2748 = _tmp2491 * _tmp2740;
  const Scalar _tmp2749 = _tmp2471 * _tmp2745;
  const Scalar _tmp2750 = _tmp2418 * _tmp2749;
  const Scalar _tmp2751 = _tmp2417 * _tmp2745;
  const Scalar _tmp2752 = _tmp2478 * _tmp2749;
  const Scalar _tmp2753 = _tmp2501 * _tmp2745;
  const Scalar _tmp2754 = _tmp2423 * _tmp2749;
  const Scalar _tmp2755 =
      -_tmp2419 * _tmp2752 - _tmp2425 * _tmp2445 + _tmp2435 * _tmp2753 + _tmp2484 * _tmp2754 -
      _tmp2486 * _tmp2746 + _tmp2509 - _tmp2511 * _tmp2739 + _tmp2518 * _tmp2742 +
      _tmp2528 * _tmp2739 - _tmp2533 * _tmp2747 + _tmp2533 * _tmp2748 - _tmp2534 * _tmp2750 +
      _tmp2536 * _tmp2747 - _tmp2536 * _tmp2748 - _tmp2537 * _tmp2751 + _tmp2539 * _tmp2745;
  const Scalar _tmp2756 = _tmp2486 * _tmp2745;
  const Scalar _tmp2757 = _tmp2488 * _tmp2667;
  const Scalar _tmp2758 = _tmp2476 * _tmp2739;
  const Scalar _tmp2759 = _tmp2492 * _tmp2739;
  const Scalar _tmp2760 = -_tmp2428 * _tmp2742 + _tmp2435 * _tmp2756 + _tmp2445 * _tmp2508 -
                          _tmp2474 * _tmp2749 - _tmp2476 * _tmp2757 - _tmp2478 * _tmp2754 -
                          _tmp2479 * _tmp2747 + _tmp2479 * _tmp2748 + _tmp2481 * _tmp2749 -
                          _tmp2482 * _tmp2751 + _tmp2488 * _tmp2748 + _tmp2501 * _tmp2746 +
                          _tmp2524 - _tmp2688 * _tmp2745 + _tmp2758 * _tmp699 - _tmp2759 * _tmp699;
  const Scalar _tmp2761 =
      -_tmp2422 * _tmp2756 - _tmp2425 * _tmp2742 + _tmp2426 * _tmp2752 - _tmp2445 * _tmp2518 -
      _tmp2484 * _tmp2513 * _tmp2740 + _tmp2489 * _tmp2754 + _tmp2496 - _tmp2497 * _tmp2753 -
      _tmp2498 * _tmp2746 + _tmp2522 * _tmp2667 + _tmp2523 * _tmp2750 + _tmp2526 * _tmp2747 -
      _tmp2526 * _tmp2748 - _tmp2530 * _tmp2751 + _tmp2758 * _tmp697 - _tmp2759 * _tmp697;
  const Scalar _tmp2762 = _tmp2478 * _tmp696;
  const Scalar _tmp2763 = -_tmp2422 * _tmp2753 + _tmp2428 * _tmp2445 +
                          _tmp2435 * _tmp2498 * _tmp2745 + _tmp2497 * _tmp2756 -
                          _tmp2506 * _tmp2747 + _tmp2506 * _tmp2748 + _tmp2508 * _tmp2742 -
                          _tmp2510 * _tmp2751 + _tmp2512 * _tmp2667 - _tmp2514 * _tmp2740 -
                          _tmp2517 * _tmp2749 - _tmp2519 * _tmp2749 + _tmp2685 +
                          _tmp2750 * _tmp2762 - _tmp2758 * _tmp685 + _tmp2759 * _tmp685;
  const Scalar _tmp2764 = _tmp2561 - _tmp2563 + _tmp2568 + _tmp2755 * _y0[3] + _tmp2760 * _y0[0] +
                          _tmp2761 * _y0[2] - _tmp2763 * _y0[1];
  const Scalar _tmp2765 = -_tmp2626 * _tmp2764;
  const Scalar _tmp2766 = _tmp2552 + _tmp2558 + _tmp2662 + _tmp2755 * _y0[1] - _tmp2760 * _y0[2] +
                          _tmp2761 * _y0[0] + _tmp2763 * _y0[3];
  const Scalar _tmp2767 = -_tmp2642 * _tmp2766;
  const Scalar _tmp2768 = _tmp2431 + _tmp2547 + _tmp2693 - _tmp2755 * _y0[2] - _tmp2760 * _y0[1] +
                          _tmp2761 * _y0[3] - _tmp2763 * _y0[0];
  const Scalar _tmp2769 = _tmp2628 * _tmp2768;
  const Scalar _tmp2770 = _tmp2630 * _tmp2764;
  const Scalar _tmp2771 = _tmp2571 + _tmp2579 + _tmp2696 - _tmp2755 * _y0[0] + _tmp2760 * _y0[3] +
                          _tmp2761 * _y0[1] + _tmp2763 * _y0[2];
  const Scalar _tmp2772 = _tmp2632 * _tmp2766 + _tmp2633 * _tmp2771;
  const Scalar _tmp2773 = _tmp2633 * _tmp2768;
  const Scalar _tmp2774 = _tmp2630 * _tmp2766;
  const Scalar _tmp2775 = _tmp2628 * _tmp2771 + _tmp2632 * _tmp2764;
  const Scalar _tmp2776 = _y_T_b[4] * (_tmp2769 + _tmp2770 + _tmp2772) +
                          _y_T_b[5] * (_tmp2765 + _tmp2767) +
                          _y_T_b[6] * (-_tmp2773 - _tmp2774 + _tmp2775);
  const Scalar _tmp2777 = _tmp2632 * _tmp2768;
  const Scalar _tmp2778 = _tmp2630 * _tmp2771;
  const Scalar _tmp2779 = _tmp2628 * _tmp2766 + _tmp2633 * _tmp2764;
  const Scalar _tmp2780 = -_tmp2624 * _tmp2771;
  const Scalar _tmp2781 = _y_T_b[4] * (_tmp2765 + _tmp2780) +
                          _y_T_b[5] * (-_tmp2769 - _tmp2770 + _tmp2772) +
                          _y_T_b[6] * (_tmp2777 + _tmp2778 + _tmp2779);
  const Scalar _tmp2782 = _y_T_b[4] * (-_tmp2777 - _tmp2778 + _tmp2779) +
                          _y_T_b[5] * (_tmp2773 + _tmp2774 + _tmp2775) +
                          _y_T_b[6] * (_tmp2767 + _tmp2780);
  const Scalar _tmp2783 = _tmp2776 * _tmp876 + _tmp2781 * _tmp860 + _tmp2782 * _tmp827;
  const Scalar _tmp2784 =
      _tmp2764 * _y_T_b[0] - _tmp2766 * _y_T_b[2] + _tmp2768 * _y_T_b[1] + _tmp2771 * _y_T_b[3];
  const Scalar _tmp2785 =
      _tmp2764 * _y_T_b[3] + _tmp2766 * _y_T_b[1] + _tmp2768 * _y_T_b[2] - _tmp2771 * _y_T_b[0];
  const Scalar _tmp2786 =
      -_tmp2764 * _y_T_b[1] + _tmp2766 * _y_T_b[3] + _tmp2768 * _y_T_b[0] + _tmp2771 * _y_T_b[2];
  const Scalar _tmp2787 =
      -_tmp2764 * _y_T_b[2] - _tmp2766 * _y_T_b[0] + _tmp2768 * _y_T_b[3] - _tmp2771 * _y_T_b[1];
  const Scalar _tmp2788 =
      _tmp2784 * _tmp763 + _tmp2785 * _tmp753 + _tmp2786 * _tmp758 + _tmp2787 * _tmp748;
  const Scalar _tmp2789 =
      _tmp2784 * _tmp748 + _tmp2785 * _tmp758 - _tmp2786 * _tmp753 - _tmp2787 * _tmp763;
  const Scalar _tmp2790 =
      _tmp2784 * _tmp753 - _tmp2785 * _tmp763 + _tmp2786 * _tmp748 - _tmp2787 * _tmp758;
  const Scalar _tmp2791 =
      -_tmp2784 * _tmp758 + _tmp2785 * _tmp748 + _tmp2786 * _tmp763 - _tmp2787 * _tmp753;
  const Scalar _tmp2792 =
      _a_T_b[0] * _tmp2790 + _a_T_b[1] * _tmp2789 + _a_T_b[2] * _tmp2791 + _a_T_b[3] * _tmp2788;
  const Scalar _tmp2793 = _tmp2617 * _tmp2792;
  const Scalar _tmp2794 = _tmp2615 * _tmp2793;
  const Scalar _tmp2795 = _tmp2776 * _tmp918 + _tmp2781 * _tmp919 + _tmp2782 * _tmp916;
  const Scalar _tmp2796 = _tmp2622 * _tmp2792;
  const Scalar _tmp2797 = _tmp2615 * _tmp2796;
  const Scalar _tmp2798 = _tmp2776 * _tmp895 + _tmp2781 * _tmp891 + _tmp2782 * _tmp892;
  const Scalar _tmp2799 = _tmp2652 * _tmp2793;
  const Scalar _tmp2800 = _tmp2652 * _tmp2796;
  const Scalar _tmp2801 =
      -_a_T_b[0] * _tmp2789 + _a_T_b[1] * _tmp2790 - _a_T_b[2] * _tmp2788 + _a_T_b[3] * _tmp2791;
  const Scalar _tmp2802 = _tmp2612 * _tmp2801;
  const Scalar _tmp2803 =
      _a_T_b[0] * _tmp2791 - _a_T_b[1] * _tmp2788 - _a_T_b[2] * _tmp2790 + _a_T_b[3] * _tmp2789;
  const Scalar _tmp2804 = _tmp2612 * _tmp2803;
  const Scalar _tmp2805 = _tmp2612 * (-_a_T_b[0] * _tmp2788 - _a_T_b[1] * _tmp2791 +
                                      _a_T_b[2] * _tmp2789 + _a_T_b[3] * _tmp2790);
  const Scalar _tmp2806 = _tmp2620 * _tmp2793;
  const Scalar _tmp2807 = _tmp2620 * _tmp2796;
  const Scalar _tmp2808 = _tmp2611 * _tmp2803;
  const Scalar _tmp2809 = 1 - lambdas_y(0, 0);
  const Scalar _tmp2810 = _tmp2809 * _tmp891;
  const Scalar _tmp2811 = _tmp2809 * _tmp919;
  const Scalar _tmp2812 = _tmp2809 * _tmp860;
  const Scalar _tmp2813 = _tmp2809 * sqrt_info(1, 3);
  const Scalar _tmp2814 = _tmp2809 * _tmp895;
  const Scalar _tmp2815 = _tmp2809 * _tmp918;
  const Scalar _tmp2816 = _tmp2809 * _tmp876;
  const Scalar _tmp2817 = _tmp2809 * _tmp827;
  const Scalar _tmp2818 = _tmp2809 * _tmp892;
  const Scalar _tmp2819 = (Scalar(1) / Scalar(2)) * _tmp155;
  const Scalar _tmp2820 = (Scalar(1) / Scalar(2)) * _tmp156;
  const Scalar _tmp2821 = (Scalar(1) / Scalar(2)) * _tmp159;
  const Scalar _tmp2822 = (Scalar(1) / Scalar(2)) * _tmp157;
  const Scalar _tmp2823 = -_tmp2819 - _tmp2820 - _tmp2821 - _tmp2822;
  const Scalar _tmp2824 = _tmp668 * _tmp678;
  const Scalar _tmp2825 = _tmp2823 * _tmp2824;
  const Scalar _tmp2826 = _tmp225 * _tmp2825;
  const Scalar _tmp2827 = -_tmp2826;
  const Scalar _tmp2828 = (Scalar(1) / Scalar(2)) * _tmp207;
  const Scalar _tmp2829 = (Scalar(1) / Scalar(2)) * _tmp208;
  const Scalar _tmp2830 = (Scalar(1) / Scalar(2)) * _tmp209;
  const Scalar _tmp2831 = (Scalar(1) / Scalar(2)) * _tmp210;
  const Scalar _tmp2832 = -_tmp2828 + _tmp2829 + _tmp2830 - _tmp2831;
  const Scalar _tmp2833 = ((((_tmp14 - _tmp641) > 0) - ((_tmp14 - _tmp641) < 0)) + 1) *
                          (((_tmp640) > 0) - ((_tmp640) < 0));
  const Scalar _tmp2834 = _tmp645 / (_tmp643 * std::sqrt(_tmp643));
  const Scalar _tmp2835 = _tmp2833 * _tmp2834;
  const Scalar _tmp2836 = _tmp218 * _tmp2835;
  const Scalar _tmp2837 = _tmp212 * _tmp2835;
  const Scalar _tmp2838 = 8 * _tmp204 * _tmp647;
  const Scalar _tmp2839 = _tmp211 * _tmp2838;
  const Scalar _tmp2840 = _tmp642 * _tmp646 / std::pow(_tmp643, Scalar(2));
  const Scalar _tmp2841 = _tmp212 * _tmp2840;
  const Scalar _tmp2842 = _tmp2833 * _tmp2841;
  const Scalar _tmp2843 = _tmp206 * _tmp2833;
  const Scalar _tmp2844 = _tmp2834 * _tmp2843;
  const Scalar _tmp2845 = _tmp218 * _tmp2840;
  const Scalar _tmp2846 = _tmp2833 * _tmp2845;
  const Scalar _tmp2847 = _tmp2840 * _tmp2843;
  const Scalar _tmp2848 = (Scalar(1) / Scalar(2)) * _tmp213;
  const Scalar _tmp2849 = (Scalar(1) / Scalar(2)) * _tmp214;
  const Scalar _tmp2850 = (Scalar(1) / Scalar(2)) * _tmp215;
  const Scalar _tmp2851 = (Scalar(1) / Scalar(2)) * _tmp216;
  const Scalar _tmp2852 = _tmp2848 + _tmp2849 - _tmp2850 - _tmp2851;
  const Scalar _tmp2853 = _tmp154 * _tmp2838;
  const Scalar _tmp2854 = (Scalar(1) / Scalar(2)) * _tmp150;
  const Scalar _tmp2855 = (Scalar(1) / Scalar(2)) * _tmp151;
  const Scalar _tmp2856 = (Scalar(1) / Scalar(2)) * _tmp152;
  const Scalar _tmp2857 = (Scalar(1) / Scalar(2)) * _tmp153;
  const Scalar _tmp2858 = _tmp2854 - _tmp2855 + _tmp2856 - _tmp2857;
  const Scalar _tmp2859 = _tmp217 * _tmp2838;
  const Scalar _tmp2860 = _tmp2852 * _tmp2853 + _tmp2858 * _tmp2859;
  const Scalar _tmp2861 = _tmp2823 * _tmp2839 - _tmp2832 * _tmp2836 - _tmp2832 * _tmp2837 +
                          _tmp2832 * _tmp2842 - _tmp2832 * _tmp2844 + _tmp2832 * _tmp2846 +
                          _tmp2832 * _tmp2847 + _tmp2860;
  const Scalar _tmp2862 = Scalar(1.0) / (_tmp648);
  const Scalar _tmp2863 = _tmp2861 * _tmp2862;
  const Scalar _tmp2864 = _tmp681 * _tmp698;
  const Scalar _tmp2865 = (Scalar(1) / Scalar(4)) * _tmp688;
  const Scalar _tmp2866 = _tmp2833 * _tmp644;
  const Scalar _tmp2867 = _tmp2832 * _tmp2866;
  const Scalar _tmp2868 = _tmp224 * _tmp678;
  const Scalar _tmp2869 = _tmp283 * _tmp2868;
  const Scalar _tmp2870 = std::pow(_tmp648, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp2871 = _tmp2861 * _tmp2870;
  const Scalar _tmp2872 = _tmp2871 * _tmp673 * _tmp675 * _tmp676;
  const Scalar _tmp2873 = _tmp282 * _tmp667;
  const Scalar _tmp2874 = _tmp154 * _tmp2873;
  const Scalar _tmp2875 = _tmp175 * _tmp2874;
  const Scalar _tmp2876 = _tmp217 * _tmp228;
  const Scalar _tmp2877 = _tmp282 * _tmp678;
  const Scalar _tmp2878 = _tmp2876 * _tmp2877;
  const Scalar _tmp2879 = _tmp175 * _tmp2877;
  const Scalar _tmp2880 = _tmp154 * _tmp2879;
  const Scalar _tmp2881 = _tmp2835 * _tmp642;
  const Scalar _tmp2882 = _tmp2832 * _tmp2881;
  const Scalar _tmp2883 = _tmp195 * _tmp693;
  const Scalar _tmp2884 = _tmp2863 * _tmp2883;
  const Scalar _tmp2885 = _tmp217 * _tmp2873;
  const Scalar _tmp2886 = _tmp228 * _tmp2885;
  const Scalar _tmp2887 = _tmp183 * _tmp693;
  const Scalar _tmp2888 = _tmp669 * _tmp673;
  const Scalar _tmp2889 = _tmp2887 * _tmp2888;
  const Scalar _tmp2890 = _tmp283 * _tmp667;
  const Scalar _tmp2891 = _tmp224 * _tmp2890;
  const Scalar _tmp2892 = _tmp176 * _tmp2824;
  const Scalar _tmp2893 = _tmp229 * _tmp2824;
  const Scalar _tmp2894 = -_tmp2852 * _tmp2892 - _tmp2858 * _tmp2893;
  const Scalar _tmp2895 = _tmp2827 - _tmp2861 * _tmp2865 - _tmp2863 * _tmp2864 -
                          _tmp2863 * _tmp2889 + _tmp2867 * _tmp2869 + _tmp2867 * _tmp2878 +
                          _tmp2867 * _tmp2880 - _tmp2869 * _tmp2882 + _tmp2872 * _tmp2875 +
                          _tmp2872 * _tmp2886 + _tmp2872 * _tmp2891 - _tmp2878 * _tmp2882 -
                          _tmp2880 * _tmp2882 - _tmp2884 * _tmp683 + _tmp2894;
  const Scalar _tmp2896 = _tmp246 * ((((_tmp14 - _tmp250) > 0) - ((_tmp14 - _tmp250) < 0)) + 1);
  const Scalar _tmp2897 = _tmp251 * _tmp253 * _tmp2896 / std::pow(_tmp254, Scalar(2));
  const Scalar _tmp2898 = _tmp252 * _tmp2896 / (_tmp254 * std::sqrt(_tmp254));
  const Scalar _tmp2899 = _tmp264 * _tmp2898;
  const Scalar _tmp2900 = _tmp2447 + _tmp2448 + _tmp2449 + _tmp2450;
  const Scalar _tmp2901 = _tmp2452 * _tmp256;
  const Scalar _tmp2902 = _tmp2900 * _tmp2901;
  const Scalar _tmp2903 = _tmp270 * _tmp2901;
  const Scalar _tmp2904 = _tmp261 * _tmp2901;
  const Scalar _tmp2905 = _tmp239 * _tmp2902 - _tmp2445 * _tmp2899 + _tmp2446 * _tmp2897 +
                          _tmp2456 * _tmp2897 - _tmp2456 * _tmp2898 + _tmp2461 * _tmp2903 +
                          _tmp2463 * _tmp2897 - _tmp2463 * _tmp2898 + _tmp2468 * _tmp2904;
  const Scalar _tmp2906 = _tmp275 / (_tmp272 * std::sqrt(_tmp272));
  const Scalar _tmp2907 = _tmp277 * _tmp2906;
  const Scalar _tmp2908 = _tmp2905 * _tmp2907;
  const Scalar _tmp2909 = _tmp2908 * _tmp685;
  const Scalar _tmp2910 = _tmp277 * _tmp2905;
  const Scalar _tmp2911 = (Scalar(1) / Scalar(2)) / _tmp272;
  const Scalar _tmp2912 = _tmp2478 * _tmp2911;
  const Scalar _tmp2913 = _tmp2910 * _tmp2912;
  const Scalar _tmp2914 = _tmp2489 * _tmp2911;
  const Scalar _tmp2915 = _tmp2914 * _tmp704;
  const Scalar _tmp2916 = _tmp251 * _tmp276;
  const Scalar _tmp2917 = _tmp2898 * _tmp2916;
  const Scalar _tmp2918 = _tmp2445 * _tmp2917;
  const Scalar _tmp2919 = _tmp279 * _tmp685;
  const Scalar _tmp2920 = _tmp2823 * _tmp690;
  const Scalar _tmp2921 = _tmp161 * _tmp688;
  const Scalar _tmp2922 = _tmp211 * _tmp2921;
  const Scalar _tmp2923 = _tmp154 * _tmp228;
  const Scalar _tmp2924 = _tmp2877 * _tmp2923;
  const Scalar _tmp2925 = (Scalar(1) / Scalar(2)) * _tmp677;
  const Scalar _tmp2926 = _tmp2925 * _tmp673;
  const Scalar _tmp2927 = _tmp2861 * _tmp2926;
  const Scalar _tmp2928 = _tmp673 * _tmp680;
  const Scalar _tmp2929 = _tmp175 * _tmp698;
  const Scalar _tmp2930 = _tmp2929 * _tmp682;
  const Scalar _tmp2931 = _tmp217 * _tmp2879;
  const Scalar _tmp2932 = _tmp2871 * _tmp687;
  const Scalar _tmp2933 = _tmp2881 * _tmp2924;
  const Scalar _tmp2934 = _tmp175 * _tmp2885;
  const Scalar _tmp2935 = _tmp228 * _tmp2874;
  const Scalar _tmp2936 = _tmp2881 * _tmp2931;
  const Scalar _tmp2937 = (Scalar(1) / Scalar(2)) * _tmp666;
  const Scalar _tmp2938 = _tmp2862 * _tmp2937;
  const Scalar _tmp2939 = _tmp2938 * _tmp669;
  const Scalar _tmp2940 = _tmp2881 * _tmp2922;
  const Scalar _tmp2941 = -_tmp2852 * _tmp2893 + _tmp2858 * _tmp2892;
  const Scalar _tmp2942 = -_tmp224 * _tmp2927 - _tmp2832 * _tmp2933 + _tmp2832 * _tmp2936 +
                          _tmp2832 * _tmp2940 + _tmp2861 * _tmp2939 + _tmp2863 * _tmp2930 -
                          _tmp2867 * _tmp2922 + _tmp2867 * _tmp2924 - _tmp2867 * _tmp2931 -
                          _tmp2872 * _tmp2934 + _tmp2872 * _tmp2935 - _tmp2884 * _tmp2928 +
                          _tmp2920 - _tmp2932 * _tmp669 + _tmp2941;
  const Scalar _tmp2943 = _tmp2900 * _tmp702;
  const Scalar _tmp2944 = -_tmp2943;
  const Scalar _tmp2945 = _tmp2484 * _tmp2911;
  const Scalar _tmp2946 = _tmp2910 * _tmp2945;
  const Scalar _tmp2947 = _tmp276 * _tmp2905;
  const Scalar _tmp2948 = _tmp255 * _tmp276 * _tmp2896;
  const Scalar _tmp2949 = _tmp2445 * _tmp2948;
  const Scalar _tmp2950 = _tmp176 * _tmp2825;
  const Scalar _tmp2951 = -_tmp2950;
  const Scalar _tmp2952 = _tmp175 * _tmp283;
  const Scalar _tmp2953 = _tmp2952 * _tmp678;
  const Scalar _tmp2954 = _tmp175 * _tmp2890;
  const Scalar _tmp2955 = _tmp2938 * _tmp682;
  const Scalar _tmp2956 = _tmp2887 * _tmp2928;
  const Scalar _tmp2957 = _tmp282 * _tmp2868;
  const Scalar _tmp2958 = _tmp154 * _tmp2957;
  const Scalar _tmp2959 = _tmp2881 * _tmp2958;
  const Scalar _tmp2960 = _tmp2929 * _tmp669;
  const Scalar _tmp2961 = _tmp217 * _tmp2921;
  const Scalar _tmp2962 = _tmp2881 * _tmp2961;
  const Scalar _tmp2963 = _tmp224 * _tmp2874;
  const Scalar _tmp2964 = _tmp225 * _tmp2824;
  const Scalar _tmp2965 = _tmp2852 * _tmp2964 + _tmp2858 * _tmp690;
  const Scalar _tmp2966 = -_tmp228 * _tmp2927 + _tmp2832 * _tmp2959 + _tmp2832 * _tmp2962 +
                          _tmp2861 * _tmp2955 + _tmp2863 * _tmp2956 - _tmp2863 * _tmp2960 +
                          _tmp2867 * _tmp2953 - _tmp2867 * _tmp2958 - _tmp2867 * _tmp2961 +
                          _tmp2872 * _tmp2954 - _tmp2872 * _tmp2963 - _tmp2882 * _tmp2953 -
                          _tmp2932 * _tmp682 + _tmp2951 + _tmp2965;
  const Scalar _tmp2967 = _tmp279 * _tmp697;
  const Scalar _tmp2968 = _tmp2908 * _tmp697;
  const Scalar _tmp2969 = _tmp217 * _tmp2957;
  const Scalar _tmp2970 = _tmp2881 * _tmp2969;
  const Scalar _tmp2971 = _tmp228 * _tmp283;
  const Scalar _tmp2972 = _tmp2971 * _tmp678;
  const Scalar _tmp2973 = _tmp2881 * _tmp2972;
  const Scalar _tmp2974 = _tmp154 * _tmp2921;
  const Scalar _tmp2975 = _tmp224 * _tmp2885;
  const Scalar _tmp2976 = _tmp229 * _tmp2825;
  const Scalar _tmp2977 = _tmp2887 * _tmp683;
  const Scalar _tmp2978 = _tmp2938 * _tmp680;
  const Scalar _tmp2979 = _tmp2881 * _tmp2974;
  const Scalar _tmp2980 = _tmp228 * _tmp2890;
  const Scalar _tmp2981 = _tmp2852 * _tmp690 - _tmp2858 * _tmp2964;
  const Scalar _tmp2982 = -_tmp175 * _tmp2927 - _tmp2832 * _tmp2970 + _tmp2832 * _tmp2973 +
                          _tmp2832 * _tmp2979 + _tmp2861 * _tmp2978 - _tmp2863 * _tmp2977 +
                          _tmp2867 * _tmp2969 - _tmp2867 * _tmp2972 - _tmp2867 * _tmp2974 +
                          _tmp2872 * _tmp2975 - _tmp2872 * _tmp2980 + _tmp2884 * _tmp2888 -
                          _tmp2932 * _tmp680 + _tmp2976 + _tmp2981;
  const Scalar _tmp2983 =
      _tmp2461 * _tmp2919 + _tmp2468 * _tmp2967 - _tmp2478 * _tmp2968 + _tmp2479 * _tmp2918 -
      _tmp2479 * _tmp2949 - _tmp2482 * _tmp2947 - _tmp2484 * _tmp2909 + _tmp2488 * _tmp2918 -
      _tmp2488 * _tmp2949 + _tmp2490 * _tmp2908 - _tmp2490 * _tmp2918 + _tmp2490 * _tmp2949 -
      _tmp280 * _tmp2982 + _tmp288 * _tmp2966 + _tmp2895 * _tmp293 - _tmp2910 * _tmp2915 +
      _tmp2913 * _tmp706 + _tmp2942 * _tmp295 + _tmp2944 + _tmp2946 * _tmp686;
  const Scalar _tmp2984 = _tmp277 * _tmp701;
  const Scalar _tmp2985 = _tmp2905 * _tmp2984;
  const Scalar _tmp2986 = _tmp279 * _tmp696;
  const Scalar _tmp2987 = _tmp2900 * _tmp2986;
  const Scalar _tmp2988 =
      -_tmp2461 * _tmp2967 + _tmp2468 * _tmp2919 - _tmp2478 * _tmp2909 + _tmp2484 * _tmp2968 +
      _tmp2533 * _tmp2918 - _tmp2533 * _tmp2949 - _tmp2534 * _tmp2908 + _tmp2534 * _tmp2918 -
      _tmp2534 * _tmp2949 - _tmp2536 * _tmp2918 + _tmp2536 * _tmp2949 - _tmp2537 * _tmp2947 +
      _tmp280 * _tmp2966 + _tmp288 * _tmp2982 + _tmp2895 * _tmp295 + _tmp2913 * _tmp686 +
      _tmp2914 * _tmp2985 - _tmp293 * _tmp2942 - _tmp2946 * _tmp706 + _tmp2987;
  const Scalar _tmp2989 = _tmp2900 * _tmp2967;
  const Scalar _tmp2990 = -_tmp2989;
  const Scalar _tmp2991 = _tmp2914 * _tmp706;
  const Scalar _tmp2992 =
      -_tmp2461 * _tmp2986 - _tmp2468 * _tmp702 + _tmp2489 * _tmp2968 + _tmp2523 * _tmp2908 -
      _tmp2523 * _tmp2918 + _tmp2523 * _tmp2949 + _tmp2526 * _tmp2908 - _tmp2526 * _tmp2918 +
      _tmp2526 * _tmp2949 - _tmp2527 * _tmp2918 + _tmp2527 * _tmp2949 - _tmp2530 * _tmp2947 -
      _tmp280 * _tmp2942 + _tmp288 * _tmp2895 - _tmp2910 * _tmp2991 - _tmp2913 * _tmp704 -
      _tmp293 * _tmp2966 - _tmp2945 * _tmp2985 - _tmp295 * _tmp2982 + _tmp2990;
  const Scalar _tmp2993 = _tmp2900 * _tmp2919;
  const Scalar _tmp2994 = _tmp2914 * _tmp686;
  const Scalar _tmp2995 = _tmp2510 * _tmp276;
  const Scalar _tmp2996 =
      _tmp2461 * _tmp702 - _tmp2468 * _tmp2986 - _tmp2489 * _tmp2909 + _tmp2505 * _tmp2918 -
      _tmp2505 * _tmp2949 - _tmp2506 * _tmp2908 - _tmp2506 * _tmp2949 + _tmp2507 * _tmp2917 +
      _tmp2762 * _tmp2908 - _tmp2762 * _tmp2918 + _tmp2762 * _tmp2949 + _tmp280 * _tmp2895 +
      _tmp288 * _tmp2942 - _tmp2905 * _tmp2995 + _tmp2910 * _tmp2994 - _tmp2912 * _tmp2985 +
      _tmp293 * _tmp2982 + _tmp2946 * _tmp704 - _tmp295 * _tmp2966 + _tmp2993;
  const Scalar _tmp2997 =
      _tmp2983 * _y0[0] + _tmp2988 * _y0[3] + _tmp2992 * _y0[2] - _tmp2996 * _y0[1];
  const Scalar _tmp2998 =
      -_tmp2983 * _y0[2] + _tmp2988 * _y0[1] + _tmp2992 * _y0[0] + _tmp2996 * _y0[3];
  const Scalar _tmp2999 =
      -_tmp2983 * _y0[1] - _tmp2988 * _y0[2] + _tmp2992 * _y0[3] - _tmp2996 * _y0[0];
  const Scalar _tmp3000 =
      _tmp2983 * _y0[3] - _tmp2988 * _y0[0] + _tmp2992 * _y0[1] + _tmp2996 * _y0[2];
  const Scalar _tmp3001 =
      -_tmp2997 * _y_T_b[1] + _tmp2998 * _y_T_b[3] + _tmp2999 * _y_T_b[0] + _tmp3000 * _y_T_b[2];
  const Scalar _tmp3002 =
      _tmp2997 * _y_T_b[3] + _tmp2998 * _y_T_b[1] + _tmp2999 * _y_T_b[2] - _tmp3000 * _y_T_b[0];
  const Scalar _tmp3003 =
      _tmp2997 * _y_T_b[0] - _tmp2998 * _y_T_b[2] + _tmp2999 * _y_T_b[1] + _tmp3000 * _y_T_b[3];
  const Scalar _tmp3004 =
      -_tmp2997 * _y_T_b[2] - _tmp2998 * _y_T_b[0] + _tmp2999 * _y_T_b[3] - _tmp3000 * _y_T_b[1];
  const Scalar _tmp3005 =
      _tmp3001 * _tmp758 + _tmp3002 * _tmp753 + _tmp3003 * _tmp763 + _tmp3004 * _tmp748;
  const Scalar _tmp3006 =
      _tmp3001 * _tmp763 + _tmp3002 * _tmp748 - _tmp3003 * _tmp758 - _tmp3004 * _tmp753;
  const Scalar _tmp3007 =
      _tmp3001 * _tmp748 - _tmp3002 * _tmp763 + _tmp3003 * _tmp753 - _tmp3004 * _tmp758;
  const Scalar _tmp3008 =
      -_tmp3001 * _tmp753 + _tmp3002 * _tmp758 + _tmp3003 * _tmp748 - _tmp3004 * _tmp763;
  const Scalar _tmp3009 =
      _a_T_b[0] * _tmp3007 + _a_T_b[1] * _tmp3008 + _a_T_b[2] * _tmp3006 + _a_T_b[3] * _tmp3005;
  const Scalar _tmp3010 = _tmp3009 * _tmp782;
  const Scalar _tmp3011 = _tmp3000 * _tmp845;
  const Scalar _tmp3012 = _tmp2999 * _tmp843;
  const Scalar _tmp3013 = 2 * _tmp714;
  const Scalar _tmp3014 = _tmp2997 * _tmp864 + _tmp2998 * _tmp3013;
  const Scalar _tmp3015 = 4 * _tmp710;
  const Scalar _tmp3016 = -_tmp3000 * _tmp3015;
  const Scalar _tmp3017 = 4 * _tmp714;
  const Scalar _tmp3018 = -_tmp2997 * _tmp3017;
  const Scalar _tmp3019 = _tmp2997 * _tmp845;
  const Scalar _tmp3020 = _tmp2999 * _tmp3013;
  const Scalar _tmp3021 = _tmp2998 * _tmp843 + _tmp3000 * _tmp864;
  const Scalar _tmp3022 = _y_T_b[4] * (_tmp3016 + _tmp3018) +
                          _y_T_b[5] * (-_tmp3019 - _tmp3020 + _tmp3021) +
                          _y_T_b[6] * (_tmp3011 + _tmp3012 + _tmp3014);
  const Scalar _tmp3023 = _tmp2998 * _tmp845;
  const Scalar _tmp3024 = _tmp2999 * _tmp864;
  const Scalar _tmp3025 = _tmp2997 * _tmp843 + _tmp3000 * _tmp3013;
  const Scalar _tmp3026 = 4 * _tmp712;
  const Scalar _tmp3027 = -_tmp2998 * _tmp3026;
  const Scalar _tmp3028 = _y_T_b[4] * (_tmp3019 + _tmp3020 + _tmp3021) +
                          _y_T_b[5] * (_tmp3018 + _tmp3027) +
                          _y_T_b[6] * (-_tmp3023 - _tmp3024 + _tmp3025);
  const Scalar _tmp3029 = _y_T_b[4] * (-_tmp3011 - _tmp3012 + _tmp3014) +
                          _y_T_b[5] * (_tmp3023 + _tmp3024 + _tmp3025) +
                          _y_T_b[6] * (_tmp3016 + _tmp3027);
  const Scalar _tmp3030 = _tmp3022 * _tmp860 + _tmp3028 * _tmp876 + _tmp3029 * _tmp827;
  const Scalar _tmp3031 = _tmp3009 * _tmp901;
  const Scalar _tmp3032 = _tmp3022 * _tmp919 + _tmp3028 * _tmp918 + _tmp3029 * _tmp916;
  const Scalar _tmp3033 = _tmp3022 * _tmp891 + _tmp3028 * _tmp895 + _tmp3029 * _tmp892;
  const Scalar _tmp3034 = _tmp880 * (-_a_T_b[0] * _tmp3005 - _a_T_b[1] * _tmp3006 +
                                     _a_T_b[2] * _tmp3008 + _a_T_b[3] * _tmp3007);
  const Scalar _tmp3035 =
      -_a_T_b[0] * _tmp3008 + _a_T_b[1] * _tmp3007 - _a_T_b[2] * _tmp3005 + _a_T_b[3] * _tmp3006;
  const Scalar _tmp3036 =
      _a_T_b[0] * _tmp3006 - _a_T_b[1] * _tmp3005 - _a_T_b[2] * _tmp3007 + _a_T_b[3] * _tmp3008;
  const Scalar _tmp3037 = _tmp3035 * _tmp880;
  const Scalar _tmp3038 = -_tmp2468 * _tmp2899 + _tmp2663 * _tmp2897 - _tmp2663 * _tmp2898 +
                          _tmp2664 * _tmp2897 + _tmp2665 * _tmp2897 - _tmp2665 * _tmp2898 +
                          _tmp2666 * _tmp2904 + _tmp2668 * _tmp2901 + _tmp270 * _tmp2902;
  const Scalar _tmp3039 = _tmp277 * _tmp3038;
  const Scalar _tmp3040 = -_tmp2848 - _tmp2849 + _tmp2850 + _tmp2851;
  const Scalar _tmp3041 = -_tmp2854 + _tmp2855 - _tmp2856 + _tmp2857;
  const Scalar _tmp3042 = _tmp2832 * _tmp2853 + _tmp2839 * _tmp3041;
  const Scalar _tmp3043 = _tmp2823 * _tmp2859 - _tmp2836 * _tmp3040 - _tmp2837 * _tmp3040 +
                          _tmp2842 * _tmp3040 - _tmp2844 * _tmp3040 + _tmp2846 * _tmp3040 +
                          _tmp2847 * _tmp3040 + _tmp3042;
  const Scalar _tmp3044 = _tmp2870 * _tmp687;
  const Scalar _tmp3045 = _tmp3044 * _tmp682;
  const Scalar _tmp3046 = _tmp2870 * _tmp675 * _tmp676;
  const Scalar _tmp3047 = _tmp3046 * _tmp673;
  const Scalar _tmp3048 = _tmp3043 * _tmp3047;
  const Scalar _tmp3049 = _tmp2866 * _tmp3040;
  const Scalar _tmp3050 = _tmp3040 * _tmp678;
  const Scalar _tmp3051 = _tmp2881 * _tmp3050;
  const Scalar _tmp3052 = _tmp228 * _tmp2926;
  const Scalar _tmp3053 = _tmp2862 * _tmp3043;
  const Scalar _tmp3054 = _tmp282 * _tmp3051;
  const Scalar _tmp3055 = _tmp2824 * _tmp2832;
  const Scalar _tmp3056 = _tmp225 * _tmp3055 - _tmp2892 * _tmp3041;
  const Scalar _tmp3057 = _tmp154 * _tmp224 * _tmp3054 + _tmp2920 - _tmp2952 * _tmp3051 +
                          _tmp2953 * _tmp3049 + _tmp2954 * _tmp3048 + _tmp2955 * _tmp3043 +
                          _tmp2956 * _tmp3053 - _tmp2958 * _tmp3049 - _tmp2960 * _tmp3053 -
                          _tmp2961 * _tmp3049 + _tmp2962 * _tmp3040 - _tmp2963 * _tmp3048 -
                          _tmp3043 * _tmp3045 - _tmp3043 * _tmp3052 + _tmp3056;
  const Scalar _tmp3058 = -_tmp2976;
  const Scalar _tmp3059 = _tmp175 * _tmp3054;
  const Scalar _tmp3060 = _tmp2862 * _tmp2883;
  const Scalar _tmp3061 = _tmp3043 * _tmp3060;
  const Scalar _tmp3062 = _tmp2862 * _tmp2889;
  const Scalar _tmp3063 = _tmp224 * _tmp283;
  const Scalar _tmp3064 = -_tmp176 * _tmp3055 - _tmp2964 * _tmp3041;
  const Scalar _tmp3065 = -_tmp154 * _tmp3059 - _tmp2864 * _tmp3053 - _tmp2865 * _tmp3043 +
                          _tmp2869 * _tmp3049 + _tmp2875 * _tmp3048 - _tmp2876 * _tmp3054 +
                          _tmp2878 * _tmp3049 + _tmp2880 * _tmp3049 + _tmp2886 * _tmp3048 +
                          _tmp2891 * _tmp3048 - _tmp3043 * _tmp3062 - _tmp3051 * _tmp3063 +
                          _tmp3058 - _tmp3061 * _tmp683 + _tmp3064;
  const Scalar _tmp3066 = _tmp2906 * _tmp3039;
  const Scalar _tmp3067 = _tmp2489 * _tmp3066;
  const Scalar _tmp3068 = _tmp2478 * _tmp3066;
  const Scalar _tmp3069 = _tmp2468 * _tmp2948;
  const Scalar _tmp3070 = _tmp2945 * _tmp3039;
  const Scalar _tmp3071 = _tmp276 * _tmp3038;
  const Scalar _tmp3072 = _tmp175 * _tmp2926;
  const Scalar _tmp3073 = _tmp3044 * _tmp680;
  const Scalar _tmp3074 = _tmp217 * _tmp224;
  const Scalar _tmp3075 = _tmp2832 * _tmp690 + _tmp2893 * _tmp3041;
  const Scalar _tmp3076 = _tmp2827 + _tmp2888 * _tmp3061 + _tmp2969 * _tmp3049 +
                          _tmp2971 * _tmp3051 - _tmp2972 * _tmp3049 - _tmp2974 * _tmp3049 +
                          _tmp2975 * _tmp3048 - _tmp2977 * _tmp3053 + _tmp2978 * _tmp3043 +
                          _tmp2979 * _tmp3040 - _tmp2980 * _tmp3048 - _tmp3043 * _tmp3072 -
                          _tmp3043 * _tmp3073 - _tmp3054 * _tmp3074 + _tmp3075;
  const Scalar _tmp3077 = _tmp224 * _tmp2926;
  const Scalar _tmp3078 = _tmp3044 * _tmp669;
  const Scalar _tmp3079 = -_tmp229 * _tmp3055 + _tmp3041 * _tmp690;
  const Scalar _tmp3080 = _tmp217 * _tmp3059 - _tmp2922 * _tmp3049 - _tmp2923 * _tmp3054 +
                          _tmp2924 * _tmp3049 - _tmp2928 * _tmp3061 + _tmp2930 * _tmp3053 -
                          _tmp2931 * _tmp3049 - _tmp2934 * _tmp3048 + _tmp2935 * _tmp3048 +
                          _tmp2939 * _tmp3043 + _tmp2940 * _tmp3040 + _tmp2950 -
                          _tmp3043 * _tmp3077 - _tmp3043 * _tmp3078 + _tmp3079;
  const Scalar _tmp3081 = _tmp2468 * _tmp2917;
  const Scalar _tmp3082 =
      -_tmp2479 * _tmp3069 + _tmp2479 * _tmp3081 - _tmp2482 * _tmp3071 - _tmp2488 * _tmp3066 +
      _tmp2490 * _tmp3069 - _tmp2490 * _tmp3081 + _tmp2666 * _tmp2967 - _tmp2667 * _tmp702 +
      _tmp2689 * _tmp2917 - _tmp2689 * _tmp2948 - _tmp280 * _tmp3076 + _tmp288 * _tmp3057 +
      _tmp2912 * _tmp3039 * _tmp706 - _tmp2915 * _tmp3039 + _tmp293 * _tmp3065 +
      _tmp295 * _tmp3080 + _tmp2993 + _tmp3067 * _tmp699 - _tmp3068 * _tmp697 + _tmp3070 * _tmp686;
  const Scalar _tmp3083 = _tmp2912 * _tmp704;
  const Scalar _tmp3084 = -_tmp2987;
  const Scalar _tmp3085 =
      _tmp2523 * _tmp3066 + _tmp2523 * _tmp3069 - _tmp2523 * _tmp3081 + _tmp2526 * _tmp3066 +
      _tmp2526 * _tmp3069 - _tmp2526 * _tmp3081 + _tmp2527 * _tmp3069 - _tmp2527 * _tmp3081 -
      _tmp2530 * _tmp3071 - _tmp2666 * _tmp702 - _tmp2667 * _tmp2967 - _tmp280 * _tmp3080 +
      _tmp288 * _tmp3065 - _tmp293 * _tmp3057 - _tmp295 * _tmp3076 - _tmp2991 * _tmp3039 -
      _tmp3039 * _tmp3083 + _tmp3067 * _tmp697 - _tmp3070 * _tmp701 + _tmp3084;
  const Scalar _tmp3086 = _tmp2912 * _tmp686;
  const Scalar _tmp3087 = _tmp3039 * _tmp701;
  const Scalar _tmp3088 = _tmp2537 * _tmp276;
  const Scalar _tmp3089 =
      -_tmp2533 * _tmp3069 + _tmp2533 * _tmp3081 - _tmp2534 * _tmp3069 + _tmp2534 * _tmp3081 +
      _tmp2536 * _tmp3066 + _tmp2536 * _tmp3069 - _tmp2536 * _tmp3081 + _tmp2666 * _tmp2919 +
      _tmp2667 * _tmp2986 + _tmp280 * _tmp3057 + _tmp288 * _tmp3076 + _tmp2914 * _tmp3087 -
      _tmp293 * _tmp3080 + _tmp295 * _tmp3065 + _tmp2990 - _tmp3038 * _tmp3088 +
      _tmp3039 * _tmp3086 - _tmp3067 * _tmp696 - _tmp3068 * _tmp685 - _tmp3070 * _tmp706;
  const Scalar _tmp3090 =
      -_tmp2505 * _tmp3069 + _tmp2505 * _tmp3081 - _tmp2506 * _tmp3066 - _tmp2506 * _tmp3069 +
      _tmp2506 * _tmp3081 - _tmp2666 * _tmp2986 + _tmp2667 * _tmp2919 + _tmp2762 * _tmp3066 +
      _tmp2762 * _tmp3069 - _tmp2762 * _tmp3081 + _tmp280 * _tmp3065 + _tmp288 * _tmp3080 -
      _tmp2912 * _tmp3087 + _tmp293 * _tmp3076 + _tmp2943 - _tmp295 * _tmp3057 +
      _tmp2994 * _tmp3039 - _tmp2995 * _tmp3038 - _tmp3067 * _tmp685 + _tmp3070 * _tmp704;
  const Scalar _tmp3091 =
      -_tmp3082 * _y0[1] + _tmp3085 * _y0[3] - _tmp3089 * _y0[2] - _tmp3090 * _y0[0];
  const Scalar _tmp3092 =
      _tmp3082 * _y0[3] + _tmp3085 * _y0[1] - _tmp3089 * _y0[0] + _tmp3090 * _y0[2];
  const Scalar _tmp3093 =
      _tmp3082 * _y0[0] + _tmp3085 * _y0[2] + _tmp3089 * _y0[3] - _tmp3090 * _y0[1];
  const Scalar _tmp3094 =
      -_tmp3082 * _y0[2] + _tmp3085 * _y0[0] + _tmp3089 * _y0[1] + _tmp3090 * _y0[3];
  const Scalar _tmp3095 =
      _tmp3091 * _y_T_b[2] - _tmp3092 * _y_T_b[0] + _tmp3093 * _y_T_b[3] + _tmp3094 * _y_T_b[1];
  const Scalar _tmp3096 =
      _tmp3091 * _y_T_b[1] + _tmp3092 * _y_T_b[3] + _tmp3093 * _y_T_b[0] - _tmp3094 * _y_T_b[2];
  const Scalar _tmp3097 =
      _tmp3091 * _y_T_b[0] + _tmp3092 * _y_T_b[2] - _tmp3093 * _y_T_b[1] + _tmp3094 * _y_T_b[3];
  const Scalar _tmp3098 =
      _tmp3091 * _y_T_b[3] - _tmp3092 * _y_T_b[1] - _tmp3093 * _y_T_b[2] - _tmp3094 * _y_T_b[0];
  const Scalar _tmp3099 =
      _tmp3095 * _tmp748 - _tmp3096 * _tmp758 + _tmp3097 * _tmp763 - _tmp3098 * _tmp753;
  const Scalar _tmp3100 =
      _tmp3095 * _tmp758 + _tmp3096 * _tmp748 - _tmp3097 * _tmp753 - _tmp3098 * _tmp763;
  const Scalar _tmp3101 =
      _tmp3095 * _tmp753 + _tmp3096 * _tmp763 + _tmp3097 * _tmp758 + _tmp3098 * _tmp748;
  const Scalar _tmp3102 =
      -_tmp3095 * _tmp763 + _tmp3096 * _tmp753 + _tmp3097 * _tmp748 - _tmp3098 * _tmp758;
  const Scalar _tmp3103 =
      _a_T_b[0] * _tmp3099 - _a_T_b[1] * _tmp3101 - _a_T_b[2] * _tmp3102 + _a_T_b[3] * _tmp3100;
  const Scalar _tmp3104 =
      _a_T_b[0] * _tmp3102 + _a_T_b[1] * _tmp3100 + _a_T_b[2] * _tmp3099 + _a_T_b[3] * _tmp3101;
  const Scalar _tmp3105 = _tmp880 * (-_a_T_b[0] * _tmp3101 - _a_T_b[1] * _tmp3099 +
                                     _a_T_b[2] * _tmp3100 + _a_T_b[3] * _tmp3102);
  const Scalar _tmp3106 = _tmp3093 * _tmp845;
  const Scalar _tmp3107 = _tmp3013 * _tmp3091;
  const Scalar _tmp3108 = _tmp3092 * _tmp864 + _tmp3094 * _tmp843;
  const Scalar _tmp3109 = -_tmp3017 * _tmp3093;
  const Scalar _tmp3110 = -_tmp3015 * _tmp3092;
  const Scalar _tmp3111 = _tmp3092 * _tmp845;
  const Scalar _tmp3112 = _tmp3091 * _tmp843;
  const Scalar _tmp3113 = _tmp3013 * _tmp3094 + _tmp3093 * _tmp864;
  const Scalar _tmp3114 = _y_T_b[4] * (_tmp3109 + _tmp3110) +
                          _y_T_b[5] * (-_tmp3106 - _tmp3107 + _tmp3108) +
                          _y_T_b[6] * (_tmp3111 + _tmp3112 + _tmp3113);
  const Scalar _tmp3115 = _tmp3094 * _tmp845;
  const Scalar _tmp3116 = _tmp3091 * _tmp864;
  const Scalar _tmp3117 = _tmp3013 * _tmp3092 + _tmp3093 * _tmp843;
  const Scalar _tmp3118 = -_tmp3026 * _tmp3094;
  const Scalar _tmp3119 = _y_T_b[4] * (_tmp3106 + _tmp3107 + _tmp3108) +
                          _y_T_b[5] * (_tmp3109 + _tmp3118) +
                          _y_T_b[6] * (-_tmp3115 - _tmp3116 + _tmp3117);
  const Scalar _tmp3120 = _y_T_b[4] * (-_tmp3111 - _tmp3112 + _tmp3113) +
                          _y_T_b[5] * (_tmp3115 + _tmp3116 + _tmp3117) +
                          _y_T_b[6] * (_tmp3110 + _tmp3118);
  const Scalar _tmp3121 = _tmp3114 * _tmp891 + _tmp3119 * _tmp895 + _tmp3120 * _tmp892;
  const Scalar _tmp3122 = _tmp3104 * _tmp901;
  const Scalar _tmp3123 = _tmp3114 * _tmp919 + _tmp3119 * _tmp918 + _tmp3120 * _tmp916;
  const Scalar _tmp3124 = _tmp3114 * _tmp860 + _tmp3119 * _tmp876 + _tmp3120 * _tmp827;
  const Scalar _tmp3125 =
      -_a_T_b[0] * _tmp3100 + _a_T_b[1] * _tmp3102 - _a_T_b[2] * _tmp3101 + _a_T_b[3] * _tmp3099;
  const Scalar _tmp3126 = _tmp2667 * _tmp2898;
  const Scalar _tmp3127 = _tmp2667 * _tmp2897;
  const Scalar _tmp3128 = _tmp2445 * _tmp2903 + _tmp261 * _tmp2902 - _tmp265 * _tmp3126 +
                          _tmp265 * _tmp3127 - _tmp2667 * _tmp2899 - _tmp271 * _tmp3126 +
                          _tmp271 * _tmp3127 + _tmp2741 * _tmp2897 + _tmp2743 * _tmp2901;
  const Scalar _tmp3129 = _tmp277 * _tmp3128;
  const Scalar _tmp3130 = _tmp2945 * _tmp3129;
  const Scalar _tmp3131 = _tmp2907 * _tmp3128;
  const Scalar _tmp3132 = _tmp2489 * _tmp3131;
  const Scalar _tmp3133 = _tmp2828 - _tmp2829 - _tmp2830 + _tmp2831;
  const Scalar _tmp3134 = _tmp2839 * _tmp3040 + _tmp2859 * _tmp3133;
  const Scalar _tmp3135 = _tmp2823 * _tmp2853 - _tmp2836 * _tmp2858 - _tmp2837 * _tmp2858 +
                          _tmp2842 * _tmp2858 - _tmp2844 * _tmp2858 + _tmp2846 * _tmp2858 +
                          _tmp2847 * _tmp2858 + _tmp3134;
  const Scalar _tmp3136 = _tmp3135 * _tmp673;
  const Scalar _tmp3137 = _tmp3046 * _tmp3136;
  const Scalar _tmp3138 = _tmp228 * _tmp3136;
  const Scalar _tmp3139 = _tmp3046 * _tmp3138;
  const Scalar _tmp3140 = _tmp2858 * _tmp2866;
  const Scalar _tmp3141 = _tmp3044 * _tmp3135;
  const Scalar _tmp3142 = _tmp2862 * _tmp2887 * _tmp3136;
  const Scalar _tmp3143 = _tmp2925 * _tmp3136;
  const Scalar _tmp3144 = _tmp3060 * _tmp3136;
  const Scalar _tmp3145 = _tmp3050 * _tmp668;
  const Scalar _tmp3146 = _tmp2824 * _tmp3133;
  const Scalar _tmp3147 = -_tmp225 * _tmp3146 + _tmp229 * _tmp3145;
  const Scalar _tmp3148 = -_tmp175 * _tmp3143 - _tmp2858 * _tmp2970 + _tmp2858 * _tmp2973 +
                          _tmp2858 * _tmp2979 - _tmp2890 * _tmp3139 + _tmp2920 +
                          _tmp2969 * _tmp3140 - _tmp2972 * _tmp3140 - _tmp2974 * _tmp3140 +
                          _tmp2975 * _tmp3137 + _tmp2978 * _tmp3135 - _tmp3141 * _tmp680 -
                          _tmp3142 * _tmp682 + _tmp3144 * _tmp669 + _tmp3147;
  const Scalar _tmp3149 = _tmp2858 * _tmp2881;
  const Scalar _tmp3150 = _tmp2862 * _tmp3135;
  const Scalar _tmp3151 = _tmp3140 * _tmp678;
  const Scalar _tmp3152 = _tmp282 * _tmp3151;
  const Scalar _tmp3153 = _tmp175 * _tmp3152;
  const Scalar _tmp3154 = _tmp176 * _tmp3146 + _tmp3040 * _tmp690;
  const Scalar _tmp3155 = -_tmp217 * _tmp3153 - _tmp224 * _tmp3143 + _tmp2858 * _tmp2940 +
                          _tmp2874 * _tmp3139 - _tmp2922 * _tmp3140 + _tmp2923 * _tmp3152 -
                          _tmp2924 * _tmp3149 + _tmp2930 * _tmp3150 + _tmp2931 * _tmp3149 -
                          _tmp2934 * _tmp3137 + _tmp2939 * _tmp3135 + _tmp3058 -
                          _tmp3141 * _tmp669 - _tmp3144 * _tmp680 + _tmp3154;
  const Scalar _tmp3156 = _tmp2667 * _tmp2948;
  const Scalar _tmp3157 = _tmp2916 * _tmp3126;
  const Scalar _tmp3158 = -_tmp176 * _tmp3145 + _tmp3133 * _tmp690;
  const Scalar _tmp3159 = _tmp2826 + _tmp2858 * _tmp2959 + _tmp2858 * _tmp2962 -
                          _tmp2925 * _tmp3138 + _tmp2952 * _tmp3151 - _tmp2953 * _tmp3149 +
                          _tmp2954 * _tmp3137 + _tmp2955 * _tmp3135 - _tmp2958 * _tmp3140 -
                          _tmp2960 * _tmp3150 - _tmp2961 * _tmp3140 - _tmp2963 * _tmp3137 -
                          _tmp3141 * _tmp682 + _tmp3142 * _tmp680 + _tmp3158;
  const Scalar _tmp3160 = -_tmp225 * _tmp3145 - _tmp229 * _tmp3146;
  const Scalar _tmp3161 = _tmp154 * _tmp3153 - _tmp2864 * _tmp3150 - _tmp2865 * _tmp3135 +
                          _tmp2869 * _tmp3140 - _tmp2869 * _tmp3149 + _tmp2875 * _tmp3137 +
                          _tmp2876 * _tmp3152 - _tmp2878 * _tmp3149 - _tmp2880 * _tmp3149 +
                          _tmp2885 * _tmp3139 + _tmp2891 * _tmp3137 + _tmp2951 -
                          _tmp3142 * _tmp669 - _tmp3144 * _tmp682 + _tmp3160;
  const Scalar _tmp3162 = _tmp2739 * _tmp2917;
  const Scalar _tmp3163 = _tmp2984 * _tmp3128;
  const Scalar _tmp3164 = _tmp2739 * _tmp2948;
  const Scalar _tmp3165 =
      _tmp2445 * _tmp702 - _tmp2506 * _tmp3131 - _tmp2506 * _tmp3156 + _tmp2506 * _tmp3157 +
      _tmp2742 * _tmp2919 + _tmp2762 * _tmp3131 + _tmp2762 * _tmp3156 - _tmp2762 * _tmp3157 +
      _tmp280 * _tmp3161 + _tmp288 * _tmp3155 - _tmp2912 * _tmp3163 + _tmp293 * _tmp3148 -
      _tmp295 * _tmp3159 + _tmp2994 * _tmp3129 - _tmp2995 * _tmp3128 + _tmp3084 +
      _tmp3130 * _tmp704 - _tmp3132 * _tmp685 + _tmp3162 * _tmp685 - _tmp3164 * _tmp685;
  const Scalar _tmp3166 = _tmp2478 * _tmp3131;
  const Scalar _tmp3167 = _tmp276 * _tmp3128;
  const Scalar _tmp3168 = _tmp3129 * _tmp706;
  const Scalar _tmp3169 =
      _tmp2445 * _tmp2919 - _tmp2479 * _tmp3156 + _tmp2479 * _tmp3157 - _tmp2482 * _tmp3167 -
      _tmp2488 * _tmp3131 + _tmp2488 * _tmp3157 - _tmp2742 * _tmp702 - _tmp2757 * _tmp2948 -
      _tmp280 * _tmp3148 + _tmp288 * _tmp3159 + _tmp2912 * _tmp3168 - _tmp2915 * _tmp3129 +
      _tmp293 * _tmp3161 + _tmp295 * _tmp3155 + _tmp2989 + _tmp3130 * _tmp686 + _tmp3132 * _tmp699 -
      _tmp3162 * _tmp699 + _tmp3164 * _tmp699 - _tmp3166 * _tmp697;
  const Scalar _tmp3170 =
      -_tmp2445 * _tmp2986 + _tmp2523 * _tmp3131 + _tmp2523 * _tmp3156 - _tmp2523 * _tmp3157 +
      _tmp2526 * _tmp3131 + _tmp2526 * _tmp3156 - _tmp2526 * _tmp3157 - _tmp2530 * _tmp3167 -
      _tmp2742 * _tmp2967 - _tmp280 * _tmp3155 + _tmp288 * _tmp3161 - _tmp293 * _tmp3159 +
      _tmp2944 - _tmp2945 * _tmp3163 - _tmp295 * _tmp3148 - _tmp2991 * _tmp3129 -
      _tmp3083 * _tmp3129 + _tmp3132 * _tmp697 - _tmp3162 * _tmp697 + _tmp3164 * _tmp697;
  const Scalar _tmp3171 =
      -_tmp2445 * _tmp2967 - _tmp2533 * _tmp3156 + _tmp2533 * _tmp3157 - _tmp2534 * _tmp3131 +
      _tmp2536 * _tmp3131 + _tmp2536 * _tmp3156 - _tmp2536 * _tmp3157 + _tmp2742 * _tmp2986 +
      _tmp280 * _tmp3159 + _tmp288 * _tmp3148 + _tmp2914 * _tmp3163 - _tmp293 * _tmp3155 -
      _tmp2945 * _tmp3168 + _tmp295 * _tmp3161 + _tmp2993 + _tmp3086 * _tmp3129 -
      _tmp3088 * _tmp3128 + _tmp3162 * _tmp696 - _tmp3164 * _tmp696 - _tmp3166 * _tmp685;
  const Scalar _tmp3172 =
      _tmp3165 * _y0[2] + _tmp3169 * _y0[3] + _tmp3170 * _y0[1] - _tmp3171 * _y0[0];
  const Scalar _tmp3173 =
      -_tmp3165 * _y0[0] - _tmp3169 * _y0[1] + _tmp3170 * _y0[3] - _tmp3171 * _y0[2];
  const Scalar _tmp3174 =
      _tmp3165 * _y0[3] - _tmp3169 * _y0[2] + _tmp3170 * _y0[0] + _tmp3171 * _y0[1];
  const Scalar _tmp3175 =
      -_tmp3165 * _y0[1] + _tmp3169 * _y0[0] + _tmp3170 * _y0[2] + _tmp3171 * _y0[3];
  const Scalar _tmp3176 =
      _tmp3172 * _y_T_b[2] + _tmp3173 * _y_T_b[0] + _tmp3174 * _y_T_b[3] - _tmp3175 * _y_T_b[1];
  const Scalar _tmp3177 =
      -_tmp3172 * _y_T_b[0] + _tmp3173 * _y_T_b[2] + _tmp3174 * _y_T_b[1] + _tmp3175 * _y_T_b[3];
  const Scalar _tmp3178 =
      -_tmp3172 * _y_T_b[1] + _tmp3173 * _y_T_b[3] - _tmp3174 * _y_T_b[0] - _tmp3175 * _y_T_b[2];
  const Scalar _tmp3179 =
      _tmp3172 * _y_T_b[3] + _tmp3173 * _y_T_b[1] - _tmp3174 * _y_T_b[2] + _tmp3175 * _y_T_b[0];
  const Scalar _tmp3180 =
      _tmp3176 * _tmp748 - _tmp3177 * _tmp763 - _tmp3178 * _tmp758 + _tmp3179 * _tmp753;
  const Scalar _tmp3181 =
      _tmp3176 * _tmp758 + _tmp3177 * _tmp753 + _tmp3178 * _tmp748 + _tmp3179 * _tmp763;
  const Scalar _tmp3182 =
      -_tmp3176 * _tmp753 + _tmp3177 * _tmp758 - _tmp3178 * _tmp763 + _tmp3179 * _tmp748;
  const Scalar _tmp3183 =
      _tmp3176 * _tmp763 + _tmp3177 * _tmp748 - _tmp3178 * _tmp753 - _tmp3179 * _tmp758;
  const Scalar _tmp3184 =
      _a_T_b[0] * _tmp3180 + _a_T_b[1] * _tmp3182 + _a_T_b[2] * _tmp3183 + _a_T_b[3] * _tmp3181;
  const Scalar _tmp3185 =
      _a_T_b[0] * _tmp3183 - _a_T_b[1] * _tmp3181 - _a_T_b[2] * _tmp3180 + _a_T_b[3] * _tmp3182;
  const Scalar _tmp3186 = _tmp3185 * _tmp880;
  const Scalar _tmp3187 = _tmp3175 * _tmp845;
  const Scalar _tmp3188 = _tmp3013 * _tmp3173;
  const Scalar _tmp3189 = _tmp3172 * _tmp864 + _tmp3174 * _tmp843;
  const Scalar _tmp3190 = _tmp3174 * _tmp845;
  const Scalar _tmp3191 = _tmp3173 * _tmp864;
  const Scalar _tmp3192 = _tmp3013 * _tmp3172 + _tmp3175 * _tmp843;
  const Scalar _tmp3193 = -_tmp3017 * _tmp3175;
  const Scalar _tmp3194 = -_tmp3026 * _tmp3174;
  const Scalar _tmp3195 = _y_T_b[4] * (_tmp3187 + _tmp3188 + _tmp3189) +
                          _y_T_b[5] * (_tmp3193 + _tmp3194) +
                          _y_T_b[6] * (-_tmp3190 - _tmp3191 + _tmp3192);
  const Scalar _tmp3196 = -_tmp3015 * _tmp3172;
  const Scalar _tmp3197 = _tmp3172 * _tmp845;
  const Scalar _tmp3198 = _tmp3173 * _tmp843;
  const Scalar _tmp3199 = _tmp3013 * _tmp3174 + _tmp3175 * _tmp864;
  const Scalar _tmp3200 = _y_T_b[4] * (_tmp3193 + _tmp3196) +
                          _y_T_b[5] * (-_tmp3187 - _tmp3188 + _tmp3189) +
                          _y_T_b[6] * (_tmp3197 + _tmp3198 + _tmp3199);
  const Scalar _tmp3201 = _y_T_b[4] * (-_tmp3197 - _tmp3198 + _tmp3199) +
                          _y_T_b[5] * (_tmp3190 + _tmp3191 + _tmp3192) +
                          _y_T_b[6] * (_tmp3194 + _tmp3196);
  const Scalar _tmp3202 = _tmp3195 * _tmp876 + _tmp3200 * _tmp860 + _tmp3201 * _tmp827;
  const Scalar _tmp3203 = _tmp3195 * _tmp918 + _tmp3200 * _tmp919 + _tmp3201 * _tmp916;
  const Scalar _tmp3204 =
      -_a_T_b[0] * _tmp3182 + _a_T_b[1] * _tmp3180 - _a_T_b[2] * _tmp3181 + _a_T_b[3] * _tmp3183;
  const Scalar _tmp3205 = _tmp3184 * _tmp901;
  const Scalar _tmp3206 = _tmp3195 * _tmp895 + _tmp3200 * _tmp891 + _tmp3201 * _tmp892;
  const Scalar _tmp3207 = _tmp3184 * _tmp782;
  const Scalar _tmp3208 = _tmp880 * (-_a_T_b[0] * _tmp3181 - _a_T_b[1] * _tmp3183 +
                                     _a_T_b[2] * _tmp3182 + _a_T_b[3] * _tmp3180);
  const Scalar _tmp3209 = _tmp3184 * _tmp912;
  const Scalar _tmp3210 = _tmp3185 * _tmp879;
  const Scalar _tmp3211 = lambdas_y(0, 0) - lambdas_y(1, 0);
  const Scalar _tmp3212 = _tmp3211 * _tmp876;
  const Scalar _tmp3213 = _tmp3211 * _tmp918;
  const Scalar _tmp3214 = _tmp3211 * _tmp827;
  const Scalar _tmp3215 = _tmp3211 * _tmp892;
  const Scalar _tmp3216 = _tmp3211 * _tmp916;
  const Scalar _tmp3217 = _tmp2819 + _tmp2820 + _tmp2821 + _tmp2822;
  const Scalar _tmp3218 = _tmp2833 * _tmp3133;
  const Scalar _tmp3219 = -_tmp2836 * _tmp3133 - _tmp2837 * _tmp3133 + _tmp2839 * _tmp3217 +
                          _tmp2841 * _tmp3218 - _tmp2844 * _tmp3133 + _tmp2845 * _tmp3218 +
                          _tmp2847 * _tmp3133 + _tmp2860;
  const Scalar _tmp3220 = _tmp2862 * _tmp3219;
  const Scalar _tmp3221 = _tmp2883 * _tmp3220;
  const Scalar _tmp3222 = _tmp2929 * _tmp3220;
  const Scalar _tmp3223 = _tmp3218 * _tmp644;
  const Scalar _tmp3224 = (Scalar(1) / Scalar(2)) * _tmp179;
  const Scalar _tmp3225 = (Scalar(1) / Scalar(2)) * _tmp180;
  const Scalar _tmp3226 = (Scalar(1) / Scalar(2)) * _tmp181;
  const Scalar _tmp3227 = (Scalar(1) / Scalar(2)) * _tmp182;
  const Scalar _tmp3228 = _tmp3224 - _tmp3225 - _tmp3226 + _tmp3227;
  const Scalar _tmp3229 = std::pow(_tmp655, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp3230 = ((((_tmp14 - _tmp653) > 0) - ((_tmp14 - _tmp653) < 0)) + 1) *
                          (((_tmp652) > 0) - ((_tmp652) < 0));
  const Scalar _tmp3231 = _tmp3229 * _tmp3230;
  const Scalar _tmp3232 = _tmp3231 * _tmp661;
  const Scalar _tmp3233 = _tmp3232 * _tmp657;
  const Scalar _tmp3234 = _tmp654 * _tmp658 / std::pow(_tmp655, Scalar(2));
  const Scalar _tmp3235 = _tmp3234 * _tmp661;
  const Scalar _tmp3236 = _tmp3230 * _tmp3235;
  const Scalar _tmp3237 = (Scalar(1) / Scalar(2)) * _tmp168;
  const Scalar _tmp3238 = (Scalar(1) / Scalar(2)) * _tmp169;
  const Scalar _tmp3239 = (Scalar(1) / Scalar(2)) * _tmp170;
  const Scalar _tmp3240 = (Scalar(1) / Scalar(2)) * _tmp172;
  const Scalar _tmp3241 = -_tmp3237 - _tmp3238 - _tmp3239 - _tmp3240;
  const Scalar _tmp3242 = 8 * _tmp185 * _tmp659;
  const Scalar _tmp3243 = _tmp183 * _tmp3242;
  const Scalar _tmp3244 = _tmp3231 * _tmp660;
  const Scalar _tmp3245 = _tmp3244 * _tmp657;
  const Scalar _tmp3246 = _tmp3234 * _tmp660;
  const Scalar _tmp3247 = _tmp3230 * _tmp3246;
  const Scalar _tmp3248 = _tmp190 * _tmp3230;
  const Scalar _tmp3249 = _tmp3229 * _tmp3248;
  const Scalar _tmp3250 = _tmp3249 * _tmp657;
  const Scalar _tmp3251 = _tmp3234 * _tmp3248;
  const Scalar _tmp3252 = (Scalar(1) / Scalar(2)) * _tmp191;
  const Scalar _tmp3253 = (Scalar(1) / Scalar(2)) * _tmp192;
  const Scalar _tmp3254 = (Scalar(1) / Scalar(2)) * _tmp193;
  const Scalar _tmp3255 = (Scalar(1) / Scalar(2)) * _tmp194;
  const Scalar _tmp3256 = _tmp3252 + _tmp3253 - _tmp3254 - _tmp3255;
  const Scalar _tmp3257 = _tmp167 * _tmp3242;
  const Scalar _tmp3258 = (Scalar(1) / Scalar(2)) * _tmp163;
  const Scalar _tmp3259 = (Scalar(1) / Scalar(2)) * _tmp164;
  const Scalar _tmp3260 = (Scalar(1) / Scalar(2)) * _tmp165;
  const Scalar _tmp3261 = (Scalar(1) / Scalar(2)) * _tmp166;
  const Scalar _tmp3262 = -_tmp3258 + _tmp3259 - _tmp3260 + _tmp3261;
  const Scalar _tmp3263 = _tmp195 * _tmp3242;
  const Scalar _tmp3264 = _tmp3256 * _tmp3257 + _tmp3262 * _tmp3263;
  const Scalar _tmp3265 = -_tmp3228 * _tmp3233 + _tmp3228 * _tmp3236 - _tmp3228 * _tmp3245 +
                          _tmp3228 * _tmp3247 - _tmp3228 * _tmp3250 + _tmp3228 * _tmp3251 +
                          _tmp3241 * _tmp3243 + _tmp3264;
  const Scalar _tmp3266 = _tmp175 * _tmp689;
  const Scalar _tmp3267 = _tmp672 / _tmp662;
  const Scalar _tmp3268 = _tmp230 * _tmp3267;
  const Scalar _tmp3269 = _tmp3266 * _tmp3268;
  const Scalar _tmp3270 = _tmp224 * _tmp2937;
  const Scalar _tmp3271 = _tmp3267 * _tmp3270;
  const Scalar _tmp3272 = _tmp3231 * _tmp654;
  const Scalar _tmp3273 = _tmp3272 * _tmp670;
  const Scalar _tmp3274 = _tmp3273 * _tmp657;
  const Scalar _tmp3275 = _tmp3228 * _tmp3274;
  const Scalar _tmp3276 = _tmp3275 * _tmp677;
  const Scalar _tmp3277 = _tmp656 * _tmp670;
  const Scalar _tmp3278 = _tmp3230 * _tmp3277;
  const Scalar _tmp3279 = _tmp3278 * _tmp693;
  const Scalar _tmp3280 = _tmp183 * _tmp3279;
  const Scalar _tmp3281 = _tmp2935 * _tmp677;
  const Scalar _tmp3282 = _tmp2881 * _tmp3133;
  const Scalar _tmp3283 = _tmp3047 * _tmp3219;
  const Scalar _tmp3284 = _tmp3278 * _tmp677;
  const Scalar _tmp3285 = _tmp3228 * _tmp3284;
  const Scalar _tmp3286 = _tmp2925 * _tmp670;
  const Scalar _tmp3287 = _tmp3286 * _tmp669;
  const Scalar _tmp3288 = _tmp3044 * _tmp3219;
  const Scalar _tmp3289 = _tmp672 / (_tmp662 * std::sqrt(_tmp662));
  const Scalar _tmp3290 = _tmp195 * _tmp3289;
  const Scalar _tmp3291 = _tmp174 * _tmp677;
  const Scalar _tmp3292 = _tmp3290 * _tmp3291;
  const Scalar _tmp3293 = _tmp2874 * _tmp3292;
  const Scalar _tmp3294 = _tmp175 * _tmp3289;
  const Scalar _tmp3295 = _tmp3294 * _tmp677;
  const Scalar _tmp3296 = _tmp2885 * _tmp3295;
  const Scalar _tmp3297 = _tmp183 * _tmp3289;
  const Scalar _tmp3298 = _tmp3297 * _tmp693;
  const Scalar _tmp3299 = _tmp228 * _tmp689;
  const Scalar _tmp3300 = _tmp162 * _tmp3267;
  const Scalar _tmp3301 = _tmp3265 * _tmp3300;
  const Scalar _tmp3302 = 4 * _tmp3291;
  const Scalar _tmp3303 = _tmp2928 * _tmp3302;
  const Scalar _tmp3304 = _tmp3302 * _tmp683;
  const Scalar _tmp3305 = _tmp3256 * _tmp3304 - _tmp3262 * _tmp3303;
  const Scalar _tmp3306 = _tmp3217 * _tmp690 + _tmp3241 * _tmp695;
  const Scalar _tmp3307 =
      _tmp2887 * _tmp3275 - _tmp2922 * _tmp3223 + _tmp2924 * _tmp3223 - _tmp2924 * _tmp3282 -
      _tmp2928 * _tmp3221 - _tmp2931 * _tmp3223 + _tmp2931 * _tmp3282 + _tmp2934 * _tmp3276 -
      _tmp2934 * _tmp3283 - _tmp2934 * _tmp3285 + _tmp2935 * _tmp3283 + _tmp2935 * _tmp3285 +
      _tmp2939 * _tmp3219 + _tmp2940 * _tmp3133 + _tmp2941 - _tmp3077 * _tmp3219 +
      _tmp3222 * _tmp682 - _tmp3228 * _tmp3280 + _tmp3265 * _tmp3269 + _tmp3265 * _tmp3271 -
      _tmp3265 * _tmp3287 + _tmp3265 * _tmp3293 - _tmp3265 * _tmp3296 - _tmp3265 * _tmp3298 -
      _tmp3275 * _tmp3281 - _tmp3288 * _tmp669 - _tmp3299 * _tmp3301 + _tmp3305 + _tmp3306;
  const Scalar _tmp3308 = _tmp2824 * _tmp3217;
  const Scalar _tmp3309 = _tmp176 * _tmp3308;
  const Scalar _tmp3310 = -_tmp3309;
  const Scalar _tmp3311 = _tmp2963 * _tmp677;
  const Scalar _tmp3312 = _tmp3241 * _tmp3303;
  const Scalar _tmp3313 = _tmp226 * _tmp3267;
  const Scalar _tmp3314 = _tmp3266 * _tmp3313;
  const Scalar _tmp3315 = _tmp224 * _tmp689;
  const Scalar _tmp3316 = _tmp2890 * _tmp3295;
  const Scalar _tmp3317 = _tmp2887 * _tmp3220;
  const Scalar _tmp3318 = _tmp2937 * _tmp3267;
  const Scalar _tmp3319 = _tmp228 * _tmp3318;
  const Scalar _tmp3320 = _tmp2954 * _tmp677;
  const Scalar _tmp3321 = _tmp3290 * _tmp693;
  const Scalar _tmp3322 = _tmp195 * _tmp3279;
  const Scalar _tmp3323 = _tmp2874 * _tmp3297;
  const Scalar _tmp3324 = _tmp3291 * _tmp3323;
  const Scalar _tmp3325 = _tmp3286 * _tmp682;
  const Scalar _tmp3326 = _tmp2888 * _tmp3302;
  const Scalar _tmp3327 = -_tmp3256 * _tmp3326 + _tmp3262 * _tmp695;
  const Scalar _tmp3328 =
      _tmp2883 * _tmp3275 + _tmp2928 * _tmp3317 + _tmp2953 * _tmp3223 - _tmp2953 * _tmp3282 +
      _tmp2954 * _tmp3283 + _tmp2954 * _tmp3285 + _tmp2955 * _tmp3219 - _tmp2958 * _tmp3223 +
      _tmp2959 * _tmp3133 - _tmp2961 * _tmp3223 + _tmp2962 * _tmp3133 - _tmp2963 * _tmp3283 -
      _tmp2963 * _tmp3285 + _tmp2965 - _tmp3052 * _tmp3219 - _tmp3222 * _tmp669 -
      _tmp3228 * _tmp3322 - _tmp3265 * _tmp3314 + _tmp3265 * _tmp3316 + _tmp3265 * _tmp3319 -
      _tmp3265 * _tmp3321 - _tmp3265 * _tmp3324 - _tmp3265 * _tmp3325 + _tmp3275 * _tmp3311 -
      _tmp3275 * _tmp3320 - _tmp3288 * _tmp682 + _tmp3301 * _tmp3315 + _tmp3310 + _tmp3312 +
      _tmp3327;
  const Scalar _tmp3329 = _tmp225 * _tmp3308;
  const Scalar _tmp3330 = -_tmp3329;
  const Scalar _tmp3331 = _tmp2886 * _tmp677;
  const Scalar _tmp3332 = (Scalar(1) / Scalar(4)) * _tmp670;
  const Scalar _tmp3333 = _tmp3332 * _tmp692;
  const Scalar _tmp3334 = _tmp3313 * _tmp3315;
  const Scalar _tmp3335 = _tmp2875 * _tmp677;
  const Scalar _tmp3336 = _tmp224 * _tmp3283;
  const Scalar _tmp3337 = _tmp3241 * _tmp3326;
  const Scalar _tmp3338 = -_tmp3337;
  const Scalar _tmp3339 = _tmp3291 * _tmp3297;
  const Scalar _tmp3340 = _tmp2890 * _tmp3265;
  const Scalar _tmp3341 = _tmp2874 * _tmp3295;
  const Scalar _tmp3342 = _tmp3268 * _tmp3299;
  const Scalar _tmp3343 = -_tmp3256 * _tmp3303 - _tmp3262 * _tmp3304;
  const Scalar _tmp3344 =
      -_tmp2864 * _tmp3220 - _tmp2865 * _tmp3219 + _tmp2869 * _tmp3223 - _tmp2869 * _tmp3282 +
      _tmp2875 * _tmp3283 + _tmp2875 * _tmp3285 + _tmp2878 * _tmp3223 - _tmp2878 * _tmp3282 +
      _tmp2880 * _tmp3223 - _tmp2880 * _tmp3282 + _tmp2885 * _tmp3265 * _tmp3292 +
      _tmp2886 * _tmp3283 + _tmp2886 * _tmp3285 - _tmp2889 * _tmp3220 + _tmp2890 * _tmp3336 -
      _tmp2891 * _tmp3276 + _tmp2891 * _tmp3285 + _tmp2894 - _tmp3221 * _tmp683 -
      _tmp3265 * _tmp3333 - _tmp3265 * _tmp3334 + _tmp3265 * _tmp3341 - _tmp3265 * _tmp3342 -
      _tmp3266 * _tmp3301 - _tmp3275 * _tmp3331 - _tmp3275 * _tmp3335 + _tmp3330 + _tmp3338 +
      _tmp3339 * _tmp3340 + _tmp3343;
  const Scalar _tmp3345 = _tmp3241 * _tmp3304;
  const Scalar _tmp3346 = -_tmp3345;
  const Scalar _tmp3347 = _tmp175 * _tmp692;
  const Scalar _tmp3348 = _tmp3228 * _tmp3347;
  const Scalar _tmp3349 = _tmp2885 * _tmp3339;
  const Scalar _tmp3350 = _tmp3268 * _tmp3315;
  const Scalar _tmp3351 = _tmp3294 * _tmp692;
  const Scalar _tmp3352 = _tmp175 * _tmp3318;
  const Scalar _tmp3353 = _tmp2975 * _tmp677;
  const Scalar _tmp3354 = _tmp229 * _tmp3308;
  const Scalar _tmp3355 = _tmp3286 * _tmp680;
  const Scalar _tmp3356 = _tmp3299 * _tmp3313;
  const Scalar _tmp3357 = _tmp3256 * _tmp695 + _tmp3262 * _tmp3326;
  const Scalar _tmp3358 =
      _tmp2885 * _tmp3336 + _tmp2888 * _tmp3221 + _tmp2969 * _tmp3223 - _tmp2970 * _tmp3133 -
      _tmp2972 * _tmp3223 + _tmp2973 * _tmp3133 - _tmp2974 * _tmp3223 + _tmp2975 * _tmp3285 +
      _tmp2978 * _tmp3219 + _tmp2979 * _tmp3133 + _tmp2980 * _tmp3276 - _tmp2980 * _tmp3283 -
      _tmp2980 * _tmp3285 + _tmp2981 - _tmp3072 * _tmp3219 + _tmp3265 * _tmp3349 -
      _tmp3265 * _tmp3350 - _tmp3265 * _tmp3351 + _tmp3265 * _tmp3352 - _tmp3265 * _tmp3355 +
      _tmp3265 * _tmp3356 + _tmp3274 * _tmp3348 - _tmp3275 * _tmp3353 - _tmp3278 * _tmp3348 -
      _tmp3288 * _tmp680 - _tmp3292 * _tmp3340 - _tmp3317 * _tmp683 + _tmp3346 + _tmp3354 +
      _tmp3357;
  const Scalar _tmp3359 =
      _tmp280 * _tmp3328 + _tmp288 * _tmp3358 - _tmp293 * _tmp3307 + _tmp295 * _tmp3344;
  const Scalar _tmp3360 =
      _tmp280 * _tmp3344 + _tmp288 * _tmp3307 + _tmp293 * _tmp3358 - _tmp295 * _tmp3328;
  const Scalar _tmp3361 =
      -_tmp280 * _tmp3307 + _tmp288 * _tmp3344 - _tmp293 * _tmp3328 - _tmp295 * _tmp3358;
  const Scalar _tmp3362 =
      -_tmp280 * _tmp3358 + _tmp288 * _tmp3328 + _tmp293 * _tmp3344 + _tmp295 * _tmp3307;
  const Scalar _tmp3363 =
      -_tmp3359 * _y0[0] + _tmp3360 * _y0[2] + _tmp3361 * _y0[1] + _tmp3362 * _y0[3];
  const Scalar _tmp3364 =
      -_tmp3359 * _y0[2] - _tmp3360 * _y0[0] + _tmp3361 * _y0[3] - _tmp3362 * _y0[1];
  const Scalar _tmp3365 =
      _tmp3359 * _y0[1] + _tmp3360 * _y0[3] + _tmp3361 * _y0[0] - _tmp3362 * _y0[2];
  const Scalar _tmp3366 =
      _tmp3359 * _y0[3] - _tmp3360 * _y0[1] + _tmp3361 * _y0[2] + _tmp3362 * _y0[0];
  const Scalar _tmp3367 =
      _tmp3363 * _y_T_b[3] + _tmp3364 * _y_T_b[1] - _tmp3365 * _y_T_b[2] + _tmp3366 * _y_T_b[0];
  const Scalar _tmp3368 =
      -_tmp3363 * _y_T_b[0] + _tmp3364 * _y_T_b[2] + _tmp3365 * _y_T_b[1] + _tmp3366 * _y_T_b[3];
  const Scalar _tmp3369 =
      -_tmp3363 * _y_T_b[1] + _tmp3364 * _y_T_b[3] - _tmp3365 * _y_T_b[0] - _tmp3366 * _y_T_b[2];
  const Scalar _tmp3370 =
      _tmp3363 * _y_T_b[2] + _tmp3364 * _y_T_b[0] + _tmp3365 * _y_T_b[3] - _tmp3366 * _y_T_b[1];
  const Scalar _tmp3371 =
      _tmp3367 * _tmp748 + _tmp3368 * _tmp758 - _tmp3369 * _tmp763 - _tmp3370 * _tmp753;
  const Scalar _tmp3372 =
      _tmp3367 * _tmp753 - _tmp3368 * _tmp763 - _tmp3369 * _tmp758 + _tmp3370 * _tmp748;
  const Scalar _tmp3373 =
      -_tmp3367 * _tmp758 + _tmp3368 * _tmp748 - _tmp3369 * _tmp753 + _tmp3370 * _tmp763;
  const Scalar _tmp3374 =
      _tmp3367 * _tmp763 + _tmp3368 * _tmp753 + _tmp3369 * _tmp748 + _tmp3370 * _tmp758;
  const Scalar _tmp3375 =
      _a_T_b[0] * _tmp3372 + _a_T_b[1] * _tmp3371 + _a_T_b[2] * _tmp3373 + _a_T_b[3] * _tmp3374;
  const Scalar _tmp3376 = _tmp3375 * _tmp883;
  const Scalar _tmp3377 = _tmp3365 * _tmp845;
  const Scalar _tmp3378 = _tmp3364 * _tmp864;
  const Scalar _tmp3379 = _tmp3013 * _tmp3363 + _tmp3366 * _tmp843;
  const Scalar _tmp3380 = _tmp3366 * _tmp845;
  const Scalar _tmp3381 = _tmp3013 * _tmp3364;
  const Scalar _tmp3382 = _tmp3363 * _tmp864 + _tmp3365 * _tmp843;
  const Scalar _tmp3383 = -_tmp3026 * _tmp3365;
  const Scalar _tmp3384 = -_tmp3017 * _tmp3366;
  const Scalar _tmp3385 = _y_T_b[4] * (_tmp3380 + _tmp3381 + _tmp3382) +
                          _y_T_b[5] * (_tmp3383 + _tmp3384) +
                          _y_T_b[6] * (-_tmp3377 - _tmp3378 + _tmp3379);
  const Scalar _tmp3386 = _tmp3363 * _tmp845;
  const Scalar _tmp3387 = _tmp3364 * _tmp843;
  const Scalar _tmp3388 = _tmp3013 * _tmp3365 + _tmp3366 * _tmp864;
  const Scalar _tmp3389 = -_tmp3015 * _tmp3363;
  const Scalar _tmp3390 = _y_T_b[4] * (_tmp3384 + _tmp3389) +
                          _y_T_b[5] * (-_tmp3380 - _tmp3381 + _tmp3382) +
                          _y_T_b[6] * (_tmp3386 + _tmp3387 + _tmp3388);
  const Scalar _tmp3391 = _y_T_b[4] * (-_tmp3386 - _tmp3387 + _tmp3388) +
                          _y_T_b[5] * (_tmp3377 + _tmp3378 + _tmp3379) +
                          _y_T_b[6] * (_tmp3383 + _tmp3389);
  const Scalar _tmp3392 = _tmp3385 * _tmp918 + _tmp3390 * _tmp919 + _tmp3391 * _tmp916;
  const Scalar _tmp3393 = _tmp3385 * _tmp876 + _tmp3390 * _tmp860 + _tmp3391 * _tmp827;
  const Scalar _tmp3394 = _tmp3385 * _tmp895 + _tmp3390 * _tmp891 + _tmp3391 * _tmp892;
  const Scalar _tmp3395 =
      -_a_T_b[0] * _tmp3371 + _a_T_b[1] * _tmp3372 - _a_T_b[2] * _tmp3374 + _a_T_b[3] * _tmp3373;
  const Scalar _tmp3396 =
      _a_T_b[0] * _tmp3373 - _a_T_b[1] * _tmp3374 - _a_T_b[2] * _tmp3372 + _a_T_b[3] * _tmp3371;
  const Scalar _tmp3397 = _tmp3375 * _tmp907;
  const Scalar _tmp3398 = _tmp3375 * _tmp901;
  const Scalar _tmp3399 = _tmp3375 * _tmp782;
  const Scalar _tmp3400 = _tmp880 * (-_a_T_b[0] * _tmp3374 - _a_T_b[1] * _tmp3373 +
                                     _a_T_b[2] * _tmp3371 + _a_T_b[3] * _tmp3372);
  const Scalar _tmp3401 = _tmp3375 * _tmp910;
  const Scalar _tmp3402 = -_tmp2836 * _tmp2852 - _tmp2837 * _tmp2852 + _tmp2842 * _tmp2852 -
                          _tmp2844 * _tmp2852 + _tmp2846 * _tmp2852 + _tmp2847 * _tmp2852 +
                          _tmp2859 * _tmp3217 + _tmp3042;
  const Scalar _tmp3403 = _tmp2862 * _tmp3402;
  const Scalar _tmp3404 = _tmp2852 * _tmp2881;
  const Scalar _tmp3405 = -_tmp3252 - _tmp3253 + _tmp3254 + _tmp3255;
  const Scalar _tmp3406 = _tmp3284 * _tmp3405;
  const Scalar _tmp3407 = _tmp2852 * _tmp2866;
  const Scalar _tmp3408 = _tmp3407 * _tmp678;
  const Scalar _tmp3409 = _tmp282 * _tmp3408;
  const Scalar _tmp3410 = _tmp154 * _tmp3409;
  const Scalar _tmp3411 = _tmp3405 * _tmp657;
  const Scalar _tmp3412 = _tmp3258 - _tmp3259 + _tmp3260 - _tmp3261;
  const Scalar _tmp3413 = _tmp3228 * _tmp3257 + _tmp3243 * _tmp3412;
  const Scalar _tmp3414 = -_tmp3232 * _tmp3411 + _tmp3236 * _tmp3405 + _tmp3241 * _tmp3263 -
                          _tmp3244 * _tmp3411 + _tmp3247 * _tmp3405 - _tmp3249 * _tmp3411 +
                          _tmp3251 * _tmp3405 + _tmp3413;
  const Scalar _tmp3415 = _tmp3273 * _tmp3411;
  const Scalar _tmp3416 = _tmp3415 * _tmp677;
  const Scalar _tmp3417 = _tmp3047 * _tmp3402;
  const Scalar _tmp3418 = _tmp3300 * _tmp3315;
  const Scalar _tmp3419 = _tmp3291 * _tmp3414;
  const Scalar _tmp3420 = -_tmp3228 * _tmp3326 + _tmp3303 * _tmp3412;
  const Scalar _tmp3421 =
      -_tmp224 * _tmp3410 + _tmp2852 * _tmp2959 + _tmp2852 * _tmp2962 + _tmp2883 * _tmp3415 +
      _tmp2952 * _tmp3408 - _tmp2953 * _tmp3404 + _tmp2954 * _tmp3406 - _tmp2954 * _tmp3416 +
      _tmp2954 * _tmp3417 + _tmp2955 * _tmp3402 + _tmp2956 * _tmp3403 - _tmp2960 * _tmp3403 -
      _tmp2961 * _tmp3407 - _tmp2963 * _tmp3406 + _tmp2963 * _tmp3416 - _tmp2963 * _tmp3417 -
      _tmp3045 * _tmp3402 - _tmp3052 * _tmp3402 + _tmp3056 + _tmp3306 - _tmp3314 * _tmp3414 +
      _tmp3316 * _tmp3414 + _tmp3319 * _tmp3414 - _tmp3321 * _tmp3414 - _tmp3322 * _tmp3405 -
      _tmp3323 * _tmp3419 - _tmp3325 * _tmp3414 + _tmp3414 * _tmp3418 + _tmp3420;
  const Scalar _tmp3422 = -_tmp3312;
  const Scalar _tmp3423 = _tmp3060 * _tmp3402;
  const Scalar _tmp3424 = _tmp175 * _tmp3409;
  const Scalar _tmp3425 = _tmp3299 * _tmp3300;
  const Scalar _tmp3426 = _tmp3290 * _tmp3419;
  const Scalar _tmp3427 = _tmp3228 * _tmp3304 + _tmp3412 * _tmp695;
  const Scalar _tmp3428 =
      -_tmp217 * _tmp3424 + _tmp228 * _tmp3410 - _tmp2852 * _tmp2933 + _tmp2852 * _tmp2936 +
      _tmp2852 * _tmp2940 + _tmp2874 * _tmp3426 + _tmp2887 * _tmp3415 - _tmp2922 * _tmp3407 -
      _tmp2928 * _tmp3423 + _tmp2930 * _tmp3403 - _tmp2934 * _tmp3406 + _tmp2934 * _tmp3416 -
      _tmp2934 * _tmp3417 + _tmp2935 * _tmp3406 - _tmp2935 * _tmp3416 + _tmp2935 * _tmp3417 +
      _tmp2939 * _tmp3402 - _tmp3077 * _tmp3402 - _tmp3078 * _tmp3402 + _tmp3079 +
      _tmp3269 * _tmp3414 + _tmp3271 * _tmp3414 - _tmp3280 * _tmp3405 - _tmp3287 * _tmp3414 -
      _tmp3296 * _tmp3414 - _tmp3298 * _tmp3414 + _tmp3309 - _tmp3414 * _tmp3425 + _tmp3422 +
      _tmp3427;
  const Scalar _tmp3429 = -_tmp3354;
  const Scalar _tmp3430 = _tmp2890 * _tmp3419;
  const Scalar _tmp3431 = _tmp3266 * _tmp3300;
  const Scalar _tmp3432 = -_tmp3228 * _tmp3303 - _tmp3326 * _tmp3412;
  const Scalar _tmp3433 =
      _tmp154 * _tmp3424 - _tmp2864 * _tmp3403 - _tmp2865 * _tmp3402 - _tmp2869 * _tmp3404 +
      _tmp2875 * _tmp3406 - _tmp2875 * _tmp3416 + _tmp2875 * _tmp3417 + _tmp2876 * _tmp3409 -
      _tmp2878 * _tmp3404 - _tmp2880 * _tmp3404 + _tmp2885 * _tmp3426 + _tmp2886 * _tmp3406 -
      _tmp2886 * _tmp3416 + _tmp2886 * _tmp3417 + _tmp2891 * _tmp3406 - _tmp2891 * _tmp3416 +
      _tmp2891 * _tmp3417 - _tmp3062 * _tmp3402 + _tmp3063 * _tmp3408 + _tmp3064 +
      _tmp3297 * _tmp3430 - _tmp3333 * _tmp3414 - _tmp3334 * _tmp3414 + _tmp3341 * _tmp3414 -
      _tmp3342 * _tmp3414 + _tmp3346 - _tmp3414 * _tmp3431 - _tmp3423 * _tmp683 + _tmp3429 +
      _tmp3432;
  const Scalar _tmp3434 = _tmp3278 * _tmp3347;
  const Scalar _tmp3435 = _tmp3228 * _tmp695 - _tmp3304 * _tmp3412;
  const Scalar _tmp3436 =
      -_tmp2852 * _tmp2970 + _tmp2852 * _tmp2973 + _tmp2852 * _tmp2979 +
      _tmp2885 * _tmp3297 * _tmp3419 + _tmp2888 * _tmp3423 - _tmp2971 * _tmp3408 -
      _tmp2974 * _tmp3407 + _tmp2975 * _tmp3406 - _tmp2975 * _tmp3416 + _tmp2975 * _tmp3417 -
      _tmp2977 * _tmp3403 + _tmp2978 * _tmp3402 - _tmp2980 * _tmp3406 + _tmp2980 * _tmp3416 -
      _tmp2980 * _tmp3417 - _tmp3072 * _tmp3402 - _tmp3073 * _tmp3402 + _tmp3074 * _tmp3409 +
      _tmp3075 - _tmp3290 * _tmp3430 + _tmp3330 + _tmp3337 + _tmp3347 * _tmp3415 -
      _tmp3350 * _tmp3414 - _tmp3351 * _tmp3414 + _tmp3352 * _tmp3414 - _tmp3355 * _tmp3414 +
      _tmp3356 * _tmp3414 - _tmp3405 * _tmp3434 + _tmp3435;
  const Scalar _tmp3437 =
      -_tmp280 * _tmp3436 + _tmp288 * _tmp3421 + _tmp293 * _tmp3433 + _tmp295 * _tmp3428;
  const Scalar _tmp3438 =
      -_tmp280 * _tmp3428 + _tmp288 * _tmp3433 - _tmp293 * _tmp3421 - _tmp295 * _tmp3436;
  const Scalar _tmp3439 =
      _tmp280 * _tmp3433 + _tmp288 * _tmp3428 + _tmp293 * _tmp3436 - _tmp295 * _tmp3421;
  const Scalar _tmp3440 =
      _tmp280 * _tmp3421 + _tmp288 * _tmp3436 - _tmp293 * _tmp3428 + _tmp295 * _tmp3433;
  const Scalar _tmp3441 =
      _tmp3437 * _y0[0] + _tmp3438 * _y0[2] - _tmp3439 * _y0[1] + _tmp3440 * _y0[3];
  const Scalar _tmp3442 =
      -_tmp3437 * _y0[1] + _tmp3438 * _y0[3] - _tmp3439 * _y0[0] - _tmp3440 * _y0[2];
  const Scalar _tmp3443 =
      -_tmp3437 * _y0[2] + _tmp3438 * _y0[0] + _tmp3439 * _y0[3] + _tmp3440 * _y0[1];
  const Scalar _tmp3444 =
      _tmp3437 * _y0[3] + _tmp3438 * _y0[1] + _tmp3439 * _y0[2] - _tmp3440 * _y0[0];
  const Scalar _tmp3445 =
      -_tmp3441 * _y_T_b[1] + _tmp3442 * _y_T_b[0] + _tmp3443 * _y_T_b[3] + _tmp3444 * _y_T_b[2];
  const Scalar _tmp3446 =
      _tmp3441 * _y_T_b[3] + _tmp3442 * _y_T_b[2] + _tmp3443 * _y_T_b[1] - _tmp3444 * _y_T_b[0];
  const Scalar _tmp3447 =
      _tmp3441 * _y_T_b[0] + _tmp3442 * _y_T_b[1] - _tmp3443 * _y_T_b[2] + _tmp3444 * _y_T_b[3];
  const Scalar _tmp3448 =
      -_tmp3441 * _y_T_b[2] + _tmp3442 * _y_T_b[3] - _tmp3443 * _y_T_b[0] - _tmp3444 * _y_T_b[1];
  const Scalar _tmp3449 =
      _tmp3445 * _tmp748 - _tmp3446 * _tmp763 + _tmp3447 * _tmp753 - _tmp3448 * _tmp758;
  const Scalar _tmp3450 =
      _tmp3445 * _tmp763 + _tmp3446 * _tmp748 - _tmp3447 * _tmp758 - _tmp3448 * _tmp753;
  const Scalar _tmp3451 =
      -_tmp3445 * _tmp753 + _tmp3446 * _tmp758 + _tmp3447 * _tmp748 - _tmp3448 * _tmp763;
  const Scalar _tmp3452 =
      _tmp3445 * _tmp758 + _tmp3446 * _tmp753 + _tmp3447 * _tmp763 + _tmp3448 * _tmp748;
  const Scalar _tmp3453 =
      _a_T_b[0] * _tmp3449 + _a_T_b[1] * _tmp3451 + _a_T_b[2] * _tmp3450 + _a_T_b[3] * _tmp3452;
  const Scalar _tmp3454 = _tmp3013 * _tmp3442;
  const Scalar _tmp3455 = _tmp3441 * _tmp845;
  const Scalar _tmp3456 = _tmp3443 * _tmp843 + _tmp3444 * _tmp864;
  const Scalar _tmp3457 = _tmp3442 * _tmp843;
  const Scalar _tmp3458 = _tmp3444 * _tmp845;
  const Scalar _tmp3459 = _tmp3013 * _tmp3443 + _tmp3441 * _tmp864;
  const Scalar _tmp3460 = -_tmp3015 * _tmp3444;
  const Scalar _tmp3461 = -_tmp3017 * _tmp3441;
  const Scalar _tmp3462 = _y_T_b[4] * (_tmp3460 + _tmp3461) +
                          _y_T_b[5] * (-_tmp3454 - _tmp3455 + _tmp3456) +
                          _y_T_b[6] * (_tmp3457 + _tmp3458 + _tmp3459);
  const Scalar _tmp3463 = _tmp3442 * _tmp864;
  const Scalar _tmp3464 = _tmp3443 * _tmp845;
  const Scalar _tmp3465 = _tmp3013 * _tmp3444 + _tmp3441 * _tmp843;
  const Scalar _tmp3466 = -_tmp3026 * _tmp3443;
  const Scalar _tmp3467 = _y_T_b[4] * (_tmp3454 + _tmp3455 + _tmp3456) +
                          _y_T_b[5] * (_tmp3461 + _tmp3466) +
                          _y_T_b[6] * (-_tmp3463 - _tmp3464 + _tmp3465);
  const Scalar _tmp3468 = _y_T_b[4] * (-_tmp3457 - _tmp3458 + _tmp3459) +
                          _y_T_b[5] * (_tmp3463 + _tmp3464 + _tmp3465) +
                          _y_T_b[6] * (_tmp3460 + _tmp3466);
  const Scalar _tmp3469 = _tmp3462 * _tmp891 + _tmp3467 * _tmp895 + _tmp3468 * _tmp892;
  const Scalar _tmp3470 = _tmp3462 * _tmp860 + _tmp3467 * _tmp876 + _tmp3468 * _tmp827;
  const Scalar _tmp3471 =
      -_a_T_b[0] * _tmp3451 + _a_T_b[1] * _tmp3449 - _a_T_b[2] * _tmp3452 + _a_T_b[3] * _tmp3450;
  const Scalar _tmp3472 =
      _a_T_b[0] * _tmp3450 - _a_T_b[1] * _tmp3452 - _a_T_b[2] * _tmp3449 + _a_T_b[3] * _tmp3451;
  const Scalar _tmp3473 = _tmp880 * (-_a_T_b[0] * _tmp3452 - _a_T_b[1] * _tmp3450 +
                                     _a_T_b[2] * _tmp3451 + _a_T_b[3] * _tmp3449);
  const Scalar _tmp3474 = _tmp3462 * _tmp919 + _tmp3467 * _tmp918 + _tmp3468 * _tmp916;
  const Scalar _tmp3475 = _tmp3453 * _tmp901;
  const Scalar _tmp3476 = _tmp3262 * _tmp657;
  const Scalar _tmp3477 = _tmp3273 * _tmp3476;
  const Scalar _tmp3478 = _tmp2843 * _tmp3041;
  const Scalar _tmp3479 = -_tmp2834 * _tmp3478 - _tmp2836 * _tmp3041 - _tmp2837 * _tmp3041 +
                          _tmp2840 * _tmp3478 + _tmp2842 * _tmp3041 + _tmp2846 * _tmp3041 +
                          _tmp2853 * _tmp3217 + _tmp3134;
  const Scalar _tmp3480 = _tmp3047 * _tmp3479;
  const Scalar _tmp3481 = _tmp3262 * _tmp3284;
  const Scalar _tmp3482 = _tmp2862 * _tmp3479;
  const Scalar _tmp3483 = -_tmp3224 + _tmp3225 + _tmp3226 - _tmp3227;
  const Scalar _tmp3484 = _tmp195 * _tmp3483;
  const Scalar _tmp3485 = _tmp3242 * _tmp3484 + _tmp3243 * _tmp3405;
  const Scalar _tmp3486 = -_tmp3232 * _tmp3476 + _tmp3236 * _tmp3262 + _tmp3241 * _tmp3257 -
                          _tmp3244 * _tmp3476 + _tmp3247 * _tmp3262 - _tmp3249 * _tmp3476 +
                          _tmp3251 * _tmp3262 + _tmp3485;
  const Scalar _tmp3487 = _tmp3477 * _tmp677;
  const Scalar _tmp3488 = _tmp2890 * _tmp3486;
  const Scalar _tmp3489 = _tmp3299 * _tmp3486;
  const Scalar _tmp3490 = _tmp2866 * _tmp3041;
  const Scalar _tmp3491 = _tmp3060 * _tmp3479;
  const Scalar _tmp3492 = _tmp3486 * _tmp692;
  const Scalar _tmp3493 = _tmp2926 * _tmp3479;
  const Scalar _tmp3494 = _tmp3483 * _tmp657;
  const Scalar _tmp3495 = _tmp3494 * _tmp670;
  const Scalar _tmp3496 = _tmp3495 * _tmp671;
  const Scalar _tmp3497 = _tmp3302 * _tmp3496;
  const Scalar _tmp3498 = -_tmp3304 * _tmp3405 + _tmp3497 * _tmp669;
  const Scalar _tmp3499 =
      -_tmp175 * _tmp3493 + _tmp2888 * _tmp3491 + _tmp2969 * _tmp3490 - _tmp2970 * _tmp3041 -
      _tmp2972 * _tmp3490 + _tmp2973 * _tmp3041 - _tmp2974 * _tmp3490 + _tmp2975 * _tmp3480 +
      _tmp2975 * _tmp3481 - _tmp2977 * _tmp3482 + _tmp2978 * _tmp3479 + _tmp2979 * _tmp3041 -
      _tmp2980 * _tmp3480 - _tmp2980 * _tmp3481 + _tmp2980 * _tmp3487 - _tmp3073 * _tmp3479 +
      _tmp3147 - _tmp3262 * _tmp3434 - _tmp3292 * _tmp3488 - _tmp3294 * _tmp3492 + _tmp3306 +
      _tmp3313 * _tmp3489 + _tmp3347 * _tmp3477 + _tmp3349 * _tmp3486 - _tmp3350 * _tmp3486 +
      _tmp3352 * _tmp3486 - _tmp3353 * _tmp3477 - _tmp3355 * _tmp3486 + _tmp3498;
  const Scalar _tmp3500 = _tmp2881 * _tmp3041;
  const Scalar _tmp3501 = _tmp3292 * _tmp3486;
  const Scalar _tmp3502 = _tmp3302 * _tmp682;
  const Scalar _tmp3503 = -_tmp3326 * _tmp3405 - _tmp3496 * _tmp3502;
  const Scalar _tmp3504 =
      -_tmp2864 * _tmp3482 - _tmp2865 * _tmp3479 + _tmp2869 * _tmp3490 - _tmp2869 * _tmp3500 +
      _tmp2875 * _tmp3480 + _tmp2875 * _tmp3481 + _tmp2878 * _tmp3490 - _tmp2878 * _tmp3500 +
      _tmp2880 * _tmp3490 - _tmp2880 * _tmp3500 + _tmp2885 * _tmp3501 + _tmp2886 * _tmp3480 +
      _tmp2886 * _tmp3481 + _tmp2891 * _tmp3480 + _tmp2891 * _tmp3481 - _tmp2891 * _tmp3487 -
      _tmp3062 * _tmp3479 + _tmp3160 - _tmp3268 * _tmp3489 + _tmp3310 - _tmp3331 * _tmp3477 -
      _tmp3332 * _tmp3492 - _tmp3334 * _tmp3486 - _tmp3335 * _tmp3477 + _tmp3339 * _tmp3488 +
      _tmp3341 * _tmp3486 + _tmp3422 - _tmp3431 * _tmp3486 - _tmp3491 * _tmp683 + _tmp3503;
  const Scalar _tmp3505 = _tmp3262 * _tmp3279;
  const Scalar _tmp3506 = _tmp2929 * _tmp3482;
  const Scalar _tmp3507 = _tmp174 * _tmp3492;
  const Scalar _tmp3508 = _tmp2887 * _tmp3273;
  const Scalar _tmp3509 = _tmp3405 * _tmp695 - _tmp3497 * _tmp680;
  const Scalar _tmp3510 =
      -_tmp183 * _tmp3505 - _tmp224 * _tmp3493 + _tmp2874 * _tmp3501 - _tmp2922 * _tmp3490 +
      _tmp2924 * _tmp3490 - _tmp2928 * _tmp3491 - _tmp2931 * _tmp3490 - _tmp2933 * _tmp3041 -
      _tmp2934 * _tmp3480 - _tmp2934 * _tmp3481 + _tmp2934 * _tmp3487 + _tmp2935 * _tmp3480 +
      _tmp2935 * _tmp3481 + _tmp2936 * _tmp3041 + _tmp2939 * _tmp3479 + _tmp2940 * _tmp3041 -
      _tmp3078 * _tmp3479 + _tmp3154 + _tmp3269 * _tmp3486 + _tmp3271 * _tmp3486 -
      _tmp3281 * _tmp3477 - _tmp3287 * _tmp3486 - _tmp3296 * _tmp3486 - _tmp3297 * _tmp3507 -
      _tmp3300 * _tmp3489 + _tmp3345 + _tmp3429 + _tmp3476 * _tmp3508 + _tmp3506 * _tmp682 +
      _tmp3509;
  const Scalar _tmp3511 = _tmp3303 * _tmp3405 + _tmp3496 * _tmp694;
  const Scalar _tmp3512 =
      -_tmp195 * _tmp3505 - _tmp228 * _tmp3493 + _tmp2883 * _tmp3477 + _tmp2953 * _tmp3490 -
      _tmp2953 * _tmp3500 + _tmp2954 * _tmp3480 + _tmp2954 * _tmp3481 + _tmp2955 * _tmp3479 +
      _tmp2956 * _tmp3482 - _tmp2958 * _tmp3490 + _tmp2959 * _tmp3041 - _tmp2961 * _tmp3490 +
      _tmp2962 * _tmp3041 - _tmp2963 * _tmp3480 - _tmp2963 * _tmp3481 - _tmp3045 * _tmp3479 +
      _tmp3158 - _tmp3290 * _tmp3507 + _tmp3295 * _tmp3488 + _tmp3311 * _tmp3477 -
      _tmp3314 * _tmp3486 + _tmp3319 * _tmp3486 - _tmp3320 * _tmp3477 - _tmp3324 * _tmp3486 -
      _tmp3325 * _tmp3486 + _tmp3329 + _tmp3338 + _tmp3418 * _tmp3486 - _tmp3506 * _tmp669 +
      _tmp3511;
  const Scalar _tmp3513 =
      -_tmp280 * _tmp3510 + _tmp288 * _tmp3504 - _tmp293 * _tmp3512 - _tmp295 * _tmp3499;
  const Scalar _tmp3514 =
      -_tmp280 * _tmp3499 + _tmp288 * _tmp3512 + _tmp293 * _tmp3504 + _tmp295 * _tmp3510;
  const Scalar _tmp3515 =
      _tmp280 * _tmp3504 + _tmp288 * _tmp3510 + _tmp293 * _tmp3499 - _tmp295 * _tmp3512;
  const Scalar _tmp3516 =
      _tmp280 * _tmp3512 + _tmp288 * _tmp3499 - _tmp293 * _tmp3510 + _tmp295 * _tmp3504;
  const Scalar _tmp3517 =
      _tmp3513 * _y0[3] - _tmp3514 * _y0[1] - _tmp3515 * _y0[0] - _tmp3516 * _y0[2];
  const Scalar _tmp3518 =
      _tmp3513 * _y0[1] + _tmp3514 * _y0[3] + _tmp3515 * _y0[2] - _tmp3516 * _y0[0];
  const Scalar _tmp3519 =
      _tmp3513 * _y0[2] + _tmp3514 * _y0[0] - _tmp3515 * _y0[1] + _tmp3516 * _y0[3];
  const Scalar _tmp3520 =
      _tmp3513 * _y0[0] - _tmp3514 * _y0[2] + _tmp3515 * _y0[3] + _tmp3516 * _y0[1];
  const Scalar _tmp3521 =
      _tmp3517 * _y_T_b[0] + _tmp3518 * _y_T_b[2] - _tmp3519 * _y_T_b[1] + _tmp3520 * _y_T_b[3];
  const Scalar _tmp3522 =
      _tmp3517 * _y_T_b[2] - _tmp3518 * _y_T_b[0] + _tmp3519 * _y_T_b[3] + _tmp3520 * _y_T_b[1];
  const Scalar _tmp3523 =
      _tmp3517 * _y_T_b[3] - _tmp3518 * _y_T_b[1] - _tmp3519 * _y_T_b[2] - _tmp3520 * _y_T_b[0];
  const Scalar _tmp3524 =
      _tmp3517 * _y_T_b[1] + _tmp3518 * _y_T_b[3] + _tmp3519 * _y_T_b[0] - _tmp3520 * _y_T_b[2];
  const Scalar _tmp3525 =
      -_tmp3521 * _tmp753 + _tmp3522 * _tmp758 - _tmp3523 * _tmp763 + _tmp3524 * _tmp748;
  const Scalar _tmp3526 =
      _tmp3521 * _tmp758 + _tmp3522 * _tmp753 + _tmp3523 * _tmp748 + _tmp3524 * _tmp763;
  const Scalar _tmp3527 =
      _tmp3521 * _tmp763 + _tmp3522 * _tmp748 - _tmp3523 * _tmp753 - _tmp3524 * _tmp758;
  const Scalar _tmp3528 =
      _tmp3521 * _tmp748 - _tmp3522 * _tmp763 - _tmp3523 * _tmp758 + _tmp3524 * _tmp753;
  const Scalar _tmp3529 =
      _a_T_b[0] * _tmp3528 + _a_T_b[1] * _tmp3525 + _a_T_b[2] * _tmp3527 + _a_T_b[3] * _tmp3526;
  const Scalar _tmp3530 = _tmp3529 * _tmp782;
  const Scalar _tmp3531 = _tmp3520 * _tmp845;
  const Scalar _tmp3532 = _tmp3517 * _tmp864;
  const Scalar _tmp3533 = _tmp3013 * _tmp3518 + _tmp3519 * _tmp843;
  const Scalar _tmp3534 = _tmp3518 * _tmp845;
  const Scalar _tmp3535 = _tmp3517 * _tmp843;
  const Scalar _tmp3536 = _tmp3013 * _tmp3520 + _tmp3519 * _tmp864;
  const Scalar _tmp3537 = -_tmp3026 * _tmp3520;
  const Scalar _tmp3538 = -_tmp3015 * _tmp3518;
  const Scalar _tmp3539 = _y_T_b[4] * (-_tmp3534 - _tmp3535 + _tmp3536) +
                          _y_T_b[5] * (_tmp3531 + _tmp3532 + _tmp3533) +
                          _y_T_b[6] * (_tmp3537 + _tmp3538);
  const Scalar _tmp3540 = _tmp3519 * _tmp845;
  const Scalar _tmp3541 = _tmp3013 * _tmp3517;
  const Scalar _tmp3542 = _tmp3518 * _tmp864 + _tmp3520 * _tmp843;
  const Scalar _tmp3543 = -_tmp3017 * _tmp3519;
  const Scalar _tmp3544 = _y_T_b[4] * (_tmp3540 + _tmp3541 + _tmp3542) +
                          _y_T_b[5] * (_tmp3537 + _tmp3543) +
                          _y_T_b[6] * (-_tmp3531 - _tmp3532 + _tmp3533);
  const Scalar _tmp3545 = _y_T_b[4] * (_tmp3538 + _tmp3543) +
                          _y_T_b[5] * (-_tmp3540 - _tmp3541 + _tmp3542) +
                          _y_T_b[6] * (_tmp3534 + _tmp3535 + _tmp3536);
  const Scalar _tmp3546 = _tmp3539 * _tmp827 + _tmp3544 * _tmp876 + _tmp3545 * _tmp860;
  const Scalar _tmp3547 = _tmp3539 * _tmp892 + _tmp3544 * _tmp895 + _tmp3545 * _tmp891;
  const Scalar _tmp3548 = _tmp880 * (-_a_T_b[0] * _tmp3526 - _a_T_b[1] * _tmp3527 +
                                     _a_T_b[2] * _tmp3525 + _a_T_b[3] * _tmp3528);
  const Scalar _tmp3549 =
      _a_T_b[0] * _tmp3527 - _a_T_b[1] * _tmp3526 - _a_T_b[2] * _tmp3528 + _a_T_b[3] * _tmp3525;
  const Scalar _tmp3550 = _tmp3549 * _tmp880;
  const Scalar _tmp3551 =
      -_a_T_b[0] * _tmp3525 + _a_T_b[1] * _tmp3528 - _a_T_b[2] * _tmp3526 + _a_T_b[3] * _tmp3527;
  const Scalar _tmp3552 = _tmp3539 * _tmp916 + _tmp3544 * _tmp918 + _tmp3545 * _tmp919;
  const Scalar _tmp3553 = _tmp3529 * _tmp901;
  const Scalar _tmp3554 = _tmp3549 * _tmp879;
  const Scalar _tmp3555 = lambdas_y(1, 0) - lambdas_y(2, 0);
  const Scalar _tmp3556 = _tmp3555 * _tmp860;
  const Scalar _tmp3557 = _tmp3555 * _tmp918;
  const Scalar _tmp3558 = _tmp3555 * _tmp876;
  const Scalar _tmp3559 = _tmp3555 * _tmp827;
  const Scalar _tmp3560 = _tmp3555 * _tmp892;
  const Scalar _tmp3561 = _tmp3237 + _tmp3238 + _tmp3239 + _tmp3240;
  const Scalar _tmp3562 = -_tmp3232 * _tmp3494 + _tmp3236 * _tmp3483 + _tmp3243 * _tmp3561 -
                          _tmp3244 * _tmp3494 + _tmp3247 * _tmp3483 - _tmp3249 * _tmp3494 +
                          _tmp3251 * _tmp3483 + _tmp3264;
  const Scalar _tmp3563 = _tmp2885 * _tmp3562;
  const Scalar _tmp3564 = _tmp3284 * _tmp3483;
  const Scalar _tmp3565 = _tmp3274 * _tmp3484;
  const Scalar _tmp3566 = _tmp3291 * _tmp3565;
  const Scalar _tmp3567 = _tmp3278 * _tmp3484;
  const Scalar _tmp3568 = _tmp3291 * _tmp3567;
  const Scalar _tmp3569 = _tmp3272 * _tmp3495;
  const Scalar _tmp3570 = _tmp3268 * _tmp3562;
  const Scalar _tmp3571 = _tmp3561 * _tmp673;
  const Scalar _tmp3572 = _tmp3502 * _tmp3571;
  const Scalar _tmp3573 = -_tmp3572;
  const Scalar _tmp3574 = _tmp2890 * _tmp3292;
  const Scalar _tmp3575 = _tmp2890 * _tmp3566 - _tmp2890 * _tmp3568 + _tmp2975 * _tmp3564 -
                          _tmp3315 * _tmp3570 + _tmp3339 * _tmp3563 + _tmp3347 * _tmp3569 -
                          _tmp3351 * _tmp3562 + _tmp3352 * _tmp3562 - _tmp3353 * _tmp3569 -
                          _tmp3355 * _tmp3562 + _tmp3356 * _tmp3562 + _tmp3357 -
                          _tmp3434 * _tmp3483 - _tmp3562 * _tmp3574 + _tmp3573;
  const Scalar _tmp3576 = _tmp3302 * _tmp3571;
  const Scalar _tmp3577 = _tmp3576 * _tmp680;
  const Scalar _tmp3578 = _tmp2874 * _tmp3562;
  const Scalar _tmp3579 = _tmp2954 * _tmp3564 - _tmp2963 * _tmp3564 - _tmp3279 * _tmp3484 +
                          _tmp3311 * _tmp3569 - _tmp3314 * _tmp3562 + _tmp3316 * _tmp3562 +
                          _tmp3319 * _tmp3562 - _tmp3320 * _tmp3569 - _tmp3321 * _tmp3562 -
                          _tmp3325 * _tmp3562 + _tmp3327 - _tmp3339 * _tmp3578 +
                          _tmp3418 * _tmp3562 + _tmp3565 * _tmp693 + _tmp3577;
  const Scalar _tmp3580 = _tmp3571 * _tmp694;
  const Scalar _tmp3581 = _tmp3569 * _tmp677;
  const Scalar _tmp3582 = -_tmp2874 * _tmp3566 + _tmp2874 * _tmp3568 + _tmp2887 * _tmp3569 -
                          _tmp2934 * _tmp3564 + _tmp2934 * _tmp3581 + _tmp3266 * _tmp3570 +
                          _tmp3271 * _tmp3562 - _tmp3280 * _tmp3483 - _tmp3287 * _tmp3562 +
                          _tmp3292 * _tmp3578 - _tmp3296 * _tmp3562 - _tmp3298 * _tmp3562 +
                          _tmp3305 - _tmp3425 * _tmp3562 + _tmp3580;
  const Scalar _tmp3583 = _tmp2885 * _tmp3291;
  const Scalar _tmp3584 = _tmp3576 * _tmp669;
  const Scalar _tmp3585 = -_tmp3584;
  const Scalar _tmp3586 = _tmp2890 * _tmp3339;
  const Scalar _tmp3587 = _tmp2875 * _tmp3564 + _tmp2891 * _tmp3564 - _tmp2891 * _tmp3581 +
                          _tmp3292 * _tmp3563 + _tmp3295 * _tmp3578 - _tmp3299 * _tmp3570 -
                          _tmp3333 * _tmp3562 - _tmp3334 * _tmp3562 - _tmp3335 * _tmp3569 +
                          _tmp3343 - _tmp3431 * _tmp3562 + _tmp3562 * _tmp3586 -
                          _tmp3565 * _tmp3583 + _tmp3567 * _tmp3583 + _tmp3585;
  const Scalar _tmp3588 =
      -_tmp280 * _tmp3575 + _tmp288 * _tmp3579 + _tmp293 * _tmp3587 + _tmp295 * _tmp3582;
  const Scalar _tmp3589 =
      -_tmp280 * _tmp3582 + _tmp288 * _tmp3587 - _tmp293 * _tmp3579 - _tmp295 * _tmp3575;
  const Scalar _tmp3590 =
      _tmp280 * _tmp3587 + _tmp288 * _tmp3582 + _tmp293 * _tmp3575 - _tmp295 * _tmp3579;
  const Scalar _tmp3591 =
      _tmp280 * _tmp3579 + _tmp288 * _tmp3575 - _tmp293 * _tmp3582 + _tmp295 * _tmp3587;
  const Scalar _tmp3592 =
      -_tmp3588 * _y0[1] + _tmp3589 * _y0[3] - _tmp3590 * _y0[0] - _tmp3591 * _y0[2];
  const Scalar _tmp3593 =
      _tmp3588 * _y0[0] + _tmp3589 * _y0[2] - _tmp3590 * _y0[1] + _tmp3591 * _y0[3];
  const Scalar _tmp3594 =
      -_tmp3588 * _y0[2] + _tmp3589 * _y0[0] + _tmp3590 * _y0[3] + _tmp3591 * _y0[1];
  const Scalar _tmp3595 =
      _tmp3588 * _y0[3] + _tmp3589 * _y0[1] + _tmp3590 * _y0[2] - _tmp3591 * _y0[0];
  const Scalar _tmp3596 =
      _tmp3592 * _y_T_b[0] - _tmp3593 * _y_T_b[1] + _tmp3594 * _y_T_b[3] + _tmp3595 * _y_T_b[2];
  const Scalar _tmp3597 =
      _tmp3592 * _y_T_b[2] + _tmp3593 * _y_T_b[3] + _tmp3594 * _y_T_b[1] - _tmp3595 * _y_T_b[0];
  const Scalar _tmp3598 =
      _tmp3592 * _y_T_b[1] + _tmp3593 * _y_T_b[0] - _tmp3594 * _y_T_b[2] + _tmp3595 * _y_T_b[3];
  const Scalar _tmp3599 =
      _tmp3592 * _y_T_b[3] - _tmp3593 * _y_T_b[2] - _tmp3594 * _y_T_b[0] - _tmp3595 * _y_T_b[1];
  const Scalar _tmp3600 =
      _tmp3596 * _tmp763 + _tmp3597 * _tmp748 - _tmp3598 * _tmp758 - _tmp3599 * _tmp753;
  const Scalar _tmp3601 =
      -_tmp3596 * _tmp753 + _tmp3597 * _tmp758 + _tmp3598 * _tmp748 - _tmp3599 * _tmp763;
  const Scalar _tmp3602 =
      _tmp3596 * _tmp758 + _tmp3597 * _tmp753 + _tmp3598 * _tmp763 + _tmp3599 * _tmp748;
  const Scalar _tmp3603 =
      _tmp3596 * _tmp748 - _tmp3597 * _tmp763 + _tmp3598 * _tmp753 - _tmp3599 * _tmp758;
  const Scalar _tmp3604 =
      _a_T_b[0] * _tmp3603 + _a_T_b[1] * _tmp3601 + _a_T_b[2] * _tmp3600 + _a_T_b[3] * _tmp3602;
  const Scalar _tmp3605 = _tmp3604 * _tmp907;
  const Scalar _tmp3606 =
      _a_T_b[0] * _tmp3600 - _a_T_b[1] * _tmp3602 - _a_T_b[2] * _tmp3603 + _a_T_b[3] * _tmp3601;
  const Scalar _tmp3607 = -_tmp3017 * _tmp3593;
  const Scalar _tmp3608 = -_tmp3026 * _tmp3594;
  const Scalar _tmp3609 = _tmp3594 * _tmp845;
  const Scalar _tmp3610 = _tmp3592 * _tmp864;
  const Scalar _tmp3611 = _tmp3013 * _tmp3595 + _tmp3593 * _tmp843;
  const Scalar _tmp3612 = _tmp3593 * _tmp845;
  const Scalar _tmp3613 = _tmp3013 * _tmp3592;
  const Scalar _tmp3614 = _tmp3594 * _tmp843 + _tmp3595 * _tmp864;
  const Scalar _tmp3615 = _y_T_b[4] * (_tmp3612 + _tmp3613 + _tmp3614) +
                          _y_T_b[5] * (_tmp3607 + _tmp3608) +
                          _y_T_b[6] * (-_tmp3609 - _tmp3610 + _tmp3611);
  const Scalar _tmp3616 = -_tmp3015 * _tmp3595;
  const Scalar _tmp3617 = _tmp3595 * _tmp845;
  const Scalar _tmp3618 = _tmp3592 * _tmp843;
  const Scalar _tmp3619 = _tmp3013 * _tmp3594 + _tmp3593 * _tmp864;
  const Scalar _tmp3620 = _y_T_b[4] * (_tmp3607 + _tmp3616) +
                          _y_T_b[5] * (-_tmp3612 - _tmp3613 + _tmp3614) +
                          _y_T_b[6] * (_tmp3617 + _tmp3618 + _tmp3619);
  const Scalar _tmp3621 = _y_T_b[4] * (-_tmp3617 - _tmp3618 + _tmp3619) +
                          _y_T_b[5] * (_tmp3609 + _tmp3610 + _tmp3611) +
                          _y_T_b[6] * (_tmp3608 + _tmp3616);
  const Scalar _tmp3622 = _tmp3615 * _tmp918 + _tmp3620 * _tmp919 + _tmp3621 * _tmp916;
  const Scalar _tmp3623 = _tmp880 * (-_a_T_b[0] * _tmp3602 - _a_T_b[1] * _tmp3600 +
                                     _a_T_b[2] * _tmp3601 + _a_T_b[3] * _tmp3603);
  const Scalar _tmp3624 =
      -_a_T_b[0] * _tmp3601 + _a_T_b[1] * _tmp3603 - _a_T_b[2] * _tmp3602 + _a_T_b[3] * _tmp3600;
  const Scalar _tmp3625 = _tmp3615 * _tmp876 + _tmp3620 * _tmp860 + _tmp3621 * _tmp827;
  const Scalar _tmp3626 = _tmp3604 * _tmp901;
  const Scalar _tmp3627 = _tmp3604 * _tmp883;
  const Scalar _tmp3628 = _tmp3615 * _tmp895 + _tmp3620 * _tmp891 + _tmp3621 * _tmp892;
  const Scalar _tmp3629 = _tmp3256 * _tmp657;
  const Scalar _tmp3630 = _tmp3230 * _tmp3256;
  const Scalar _tmp3631 = -_tmp3232 * _tmp3629 + _tmp3235 * _tmp3630 - _tmp3244 * _tmp3629 +
                          _tmp3246 * _tmp3630 - _tmp3249 * _tmp3629 + _tmp3251 * _tmp3256 +
                          _tmp3263 * _tmp3561 + _tmp3413;
  const Scalar _tmp3632 = _tmp3277 * _tmp3630;
  const Scalar _tmp3633 = _tmp3632 * _tmp677;
  const Scalar _tmp3634 = _tmp3273 * _tmp3629;
  const Scalar _tmp3635 = _tmp3634 * _tmp677;
  const Scalar _tmp3636 = _tmp2885 * _tmp3631;
  const Scalar _tmp3637 = _tmp2975 * _tmp3633 - _tmp2980 * _tmp3633 + _tmp2980 * _tmp3635 +
                          _tmp3339 * _tmp3636 - _tmp3347 * _tmp3632 + _tmp3347 * _tmp3634 -
                          _tmp3350 * _tmp3631 - _tmp3351 * _tmp3631 + _tmp3352 * _tmp3631 -
                          _tmp3353 * _tmp3634 - _tmp3355 * _tmp3631 + _tmp3356 * _tmp3631 +
                          _tmp3435 - _tmp3574 * _tmp3631 + _tmp3584;
  const Scalar _tmp3638 = _tmp2875 * _tmp3633 + _tmp2886 * _tmp3633 + _tmp2891 * _tmp3633 -
                          _tmp2891 * _tmp3635 + _tmp3292 * _tmp3636 - _tmp3331 * _tmp3634 -
                          _tmp3333 * _tmp3631 - _tmp3334 * _tmp3631 - _tmp3335 * _tmp3634 +
                          _tmp3341 * _tmp3631 - _tmp3342 * _tmp3631 - _tmp3431 * _tmp3631 +
                          _tmp3432 + _tmp3573 + _tmp3586 * _tmp3631;
  const Scalar _tmp3639 = -_tmp2883 * _tmp3632 + _tmp2883 * _tmp3634 + _tmp2954 * _tmp3633 -
                          _tmp2963 * _tmp3633 + _tmp3311 * _tmp3634 - _tmp3314 * _tmp3631 +
                          _tmp3316 * _tmp3631 + _tmp3319 * _tmp3631 - _tmp3320 * _tmp3634 -
                          _tmp3321 * _tmp3631 - _tmp3324 * _tmp3631 - _tmp3325 * _tmp3631 +
                          _tmp3418 * _tmp3631 + _tmp3420 + _tmp3580;
  const Scalar _tmp3640 = -_tmp3577;
  const Scalar _tmp3641 = -_tmp2887 * _tmp3632 - _tmp2934 * _tmp3633 + _tmp2934 * _tmp3635 +
                          _tmp2935 * _tmp3633 + _tmp3269 * _tmp3631 + _tmp3271 * _tmp3631 -
                          _tmp3281 * _tmp3634 - _tmp3287 * _tmp3631 + _tmp3293 * _tmp3631 -
                          _tmp3295 * _tmp3636 - _tmp3298 * _tmp3631 - _tmp3425 * _tmp3631 +
                          _tmp3427 + _tmp3508 * _tmp3629 + _tmp3640;
  const Scalar _tmp3642 =
      _tmp280 * _tmp3639 + _tmp288 * _tmp3637 - _tmp293 * _tmp3641 + _tmp295 * _tmp3638;
  const Scalar _tmp3643 =
      _tmp280 * _tmp3638 + _tmp288 * _tmp3641 + _tmp293 * _tmp3637 - _tmp295 * _tmp3639;
  const Scalar _tmp3644 =
      -_tmp280 * _tmp3641 + _tmp288 * _tmp3638 - _tmp293 * _tmp3639 - _tmp295 * _tmp3637;
  const Scalar _tmp3645 =
      -_tmp280 * _tmp3637 + _tmp288 * _tmp3639 + _tmp293 * _tmp3638 + _tmp295 * _tmp3641;
  const Scalar _tmp3646 =
      _tmp3642 * _y0[3] - _tmp3643 * _y0[1] + _tmp3644 * _y0[2] + _tmp3645 * _y0[0];
  const Scalar _tmp3647 =
      _tmp3642 * _y0[1] + _tmp3643 * _y0[3] + _tmp3644 * _y0[0] - _tmp3645 * _y0[2];
  const Scalar _tmp3648 =
      -_tmp3642 * _y0[2] - _tmp3643 * _y0[0] + _tmp3644 * _y0[3] - _tmp3645 * _y0[1];
  const Scalar _tmp3649 =
      -_tmp3642 * _y0[0] + _tmp3643 * _y0[2] + _tmp3644 * _y0[1] + _tmp3645 * _y0[3];
  const Scalar _tmp3650 =
      -_tmp3646 * _y_T_b[2] - _tmp3647 * _y_T_b[0] + _tmp3648 * _y_T_b[3] - _tmp3649 * _y_T_b[1];
  const Scalar _tmp3651 =
      _tmp3646 * _y_T_b[0] - _tmp3647 * _y_T_b[2] + _tmp3648 * _y_T_b[1] + _tmp3649 * _y_T_b[3];
  const Scalar _tmp3652 =
      -_tmp3646 * _y_T_b[1] + _tmp3647 * _y_T_b[3] + _tmp3648 * _y_T_b[0] + _tmp3649 * _y_T_b[2];
  const Scalar _tmp3653 =
      _tmp3646 * _y_T_b[3] + _tmp3647 * _y_T_b[1] + _tmp3648 * _y_T_b[2] - _tmp3649 * _y_T_b[0];
  const Scalar _tmp3654 =
      _tmp3650 * _tmp748 + _tmp3651 * _tmp763 + _tmp3652 * _tmp758 + _tmp3653 * _tmp753;
  const Scalar _tmp3655 =
      -_tmp3650 * _tmp758 + _tmp3651 * _tmp753 + _tmp3652 * _tmp748 - _tmp3653 * _tmp763;
  const Scalar _tmp3656 =
      -_tmp3650 * _tmp763 + _tmp3651 * _tmp748 - _tmp3652 * _tmp753 + _tmp3653 * _tmp758;
  const Scalar _tmp3657 =
      -_tmp3650 * _tmp753 - _tmp3651 * _tmp758 + _tmp3652 * _tmp763 + _tmp3653 * _tmp748;
  const Scalar _tmp3658 = _tmp880 * (-_a_T_b[0] * _tmp3654 - _a_T_b[1] * _tmp3657 +
                                     _a_T_b[2] * _tmp3656 + _a_T_b[3] * _tmp3655);
  const Scalar _tmp3659 =
      _a_T_b[0] * _tmp3655 + _a_T_b[1] * _tmp3656 + _a_T_b[2] * _tmp3657 + _a_T_b[3] * _tmp3654;
  const Scalar _tmp3660 = _tmp3659 * _tmp901;
  const Scalar _tmp3661 =
      -_a_T_b[0] * _tmp3656 + _a_T_b[1] * _tmp3655 - _a_T_b[2] * _tmp3654 + _a_T_b[3] * _tmp3657;
  const Scalar _tmp3662 = -_tmp3026 * _tmp3647;
  const Scalar _tmp3663 = -_tmp3017 * _tmp3646;
  const Scalar _tmp3664 = _tmp3646 * _tmp845;
  const Scalar _tmp3665 = _tmp3013 * _tmp3648;
  const Scalar _tmp3666 = _tmp3647 * _tmp843 + _tmp3649 * _tmp864;
  const Scalar _tmp3667 = _tmp3647 * _tmp845;
  const Scalar _tmp3668 = _tmp3648 * _tmp864;
  const Scalar _tmp3669 = _tmp3013 * _tmp3649 + _tmp3646 * _tmp843;
  const Scalar _tmp3670 = _y_T_b[4] * (_tmp3664 + _tmp3665 + _tmp3666) +
                          _y_T_b[5] * (_tmp3662 + _tmp3663) +
                          _y_T_b[6] * (-_tmp3667 - _tmp3668 + _tmp3669);
  const Scalar _tmp3671 = -_tmp3015 * _tmp3649;
  const Scalar _tmp3672 = _tmp3649 * _tmp845;
  const Scalar _tmp3673 = _tmp3648 * _tmp843;
  const Scalar _tmp3674 = _tmp3013 * _tmp3647 + _tmp3646 * _tmp864;
  const Scalar _tmp3675 = _y_T_b[4] * (_tmp3663 + _tmp3671) +
                          _y_T_b[5] * (-_tmp3664 - _tmp3665 + _tmp3666) +
                          _y_T_b[6] * (_tmp3672 + _tmp3673 + _tmp3674);
  const Scalar _tmp3676 = _y_T_b[4] * (-_tmp3672 - _tmp3673 + _tmp3674) +
                          _y_T_b[5] * (_tmp3667 + _tmp3668 + _tmp3669) +
                          _y_T_b[6] * (_tmp3662 + _tmp3671);
  const Scalar _tmp3677 = _tmp3670 * _tmp876 + _tmp3675 * _tmp860 + _tmp3676 * _tmp827;
  const Scalar _tmp3678 = _tmp3670 * _tmp895 + _tmp3675 * _tmp891 + _tmp3676 * _tmp892;
  const Scalar _tmp3679 = _tmp3670 * _tmp918 + _tmp3675 * _tmp919 + _tmp3676 * _tmp916;
  const Scalar _tmp3680 = _tmp3659 * _tmp907;
  const Scalar _tmp3681 = _tmp879 * (_a_T_b[0] * _tmp3657 - _a_T_b[1] * _tmp3654 -
                                     _a_T_b[2] * _tmp3655 + _a_T_b[3] * _tmp3656);
  const Scalar _tmp3682 = 2 * _tmp3681;
  const Scalar _tmp3683 = _tmp3659 * _tmp883;
  const Scalar _tmp3684 = _tmp3659 * _tmp782;
  const Scalar _tmp3685 = _tmp3661 * _tmp880;
  const Scalar _tmp3686 = _tmp3230 * _tmp3412;
  const Scalar _tmp3687 = -_tmp3233 * _tmp3412 + _tmp3235 * _tmp3686 - _tmp3245 * _tmp3412 +
                          _tmp3246 * _tmp3686 - _tmp3250 * _tmp3412 + _tmp3251 * _tmp3412 +
                          _tmp3257 * _tmp3561 + _tmp3485;
  const Scalar _tmp3688 = _tmp3267 * _tmp3687;
  const Scalar _tmp3689 = _tmp175 * _tmp3688;
  const Scalar _tmp3690 = _tmp3689 * _tmp689;
  const Scalar _tmp3691 = _tmp3277 * _tmp3686;
  const Scalar _tmp3692 = _tmp3691 * _tmp677;
  const Scalar _tmp3693 = _tmp3274 * _tmp3412;
  const Scalar _tmp3694 = _tmp3693 * _tmp677;
  const Scalar _tmp3695 = _tmp228 * _tmp3688;
  const Scalar _tmp3696 = _tmp3695 * _tmp689;
  const Scalar _tmp3697 = _tmp3292 * _tmp3687;
  const Scalar _tmp3698 = _tmp3315 * _tmp3688;
  const Scalar _tmp3699 = -_tmp162 * _tmp3690 - _tmp226 * _tmp3698 - _tmp230 * _tmp3696 +
                          _tmp2875 * _tmp3692 + _tmp2885 * _tmp3697 + _tmp2886 * _tmp3692 -
                          _tmp2886 * _tmp3694 + _tmp2891 * _tmp3692 - _tmp2891 * _tmp3694 -
                          _tmp3333 * _tmp3687 - _tmp3335 * _tmp3693 + _tmp3341 * _tmp3687 +
                          _tmp3503 + _tmp3586 * _tmp3687 + _tmp3640;
  const Scalar _tmp3700 = _tmp226 * _tmp3696 - _tmp230 * _tmp3698 - _tmp2890 * _tmp3697 +
                          _tmp2937 * _tmp3689 + _tmp2975 * _tmp3692 - _tmp2980 * _tmp3692 +
                          _tmp2980 * _tmp3694 - _tmp3347 * _tmp3691 + _tmp3347 * _tmp3693 +
                          _tmp3349 * _tmp3687 - _tmp3351 * _tmp3687 - _tmp3353 * _tmp3693 -
                          _tmp3355 * _tmp3687 + _tmp3498 + _tmp3580;
  const Scalar _tmp3701 = -_tmp162 * _tmp3696 + _tmp230 * _tmp3690 + _tmp2874 * _tmp3697 -
                          _tmp2887 * _tmp3691 + _tmp2887 * _tmp3693 - _tmp2934 * _tmp3692 +
                          _tmp2934 * _tmp3694 + _tmp2935 * _tmp3692 + _tmp3270 * _tmp3688 -
                          _tmp3281 * _tmp3693 - _tmp3287 * _tmp3687 - _tmp3296 * _tmp3687 -
                          _tmp3298 * _tmp3687 + _tmp3509 + _tmp3572;
  const Scalar _tmp3702 = _tmp162 * _tmp3698 - _tmp226 * _tmp3690 - _tmp2883 * _tmp3691 +
                          _tmp2883 * _tmp3693 + _tmp2937 * _tmp3695 + _tmp2954 * _tmp3692 -
                          _tmp2963 * _tmp3692 + _tmp3311 * _tmp3693 + _tmp3316 * _tmp3687 -
                          _tmp3320 * _tmp3693 - _tmp3321 * _tmp3687 - _tmp3324 * _tmp3687 -
                          _tmp3325 * _tmp3687 + _tmp3511 + _tmp3585;
  const Scalar _tmp3703 =
      _tmp280 * _tmp3702 + _tmp288 * _tmp3700 - _tmp293 * _tmp3701 + _tmp295 * _tmp3699;
  const Scalar _tmp3704 =
      -_tmp280 * _tmp3701 + _tmp288 * _tmp3699 - _tmp293 * _tmp3702 - _tmp295 * _tmp3700;
  const Scalar _tmp3705 =
      _tmp280 * _tmp3699 + _tmp288 * _tmp3701 + _tmp293 * _tmp3700 - _tmp295 * _tmp3702;
  const Scalar _tmp3706 =
      -_tmp280 * _tmp3700 + _tmp288 * _tmp3702 + _tmp293 * _tmp3699 + _tmp295 * _tmp3701;
  const Scalar _tmp3707 =
      -_tmp3703 * _y0[0] + _tmp3704 * _y0[1] + _tmp3705 * _y0[2] + _tmp3706 * _y0[3];
  const Scalar _tmp3708 = -_tmp3015 * _tmp3707;
  const Scalar _tmp3709 =
      _tmp3703 * _y0[3] + _tmp3704 * _y0[2] - _tmp3705 * _y0[1] + _tmp3706 * _y0[0];
  const Scalar _tmp3710 = -_tmp3017 * _tmp3709;
  const Scalar _tmp3711 =
      -_tmp3703 * _y0[2] + _tmp3704 * _y0[3] - _tmp3705 * _y0[0] - _tmp3706 * _y0[1];
  const Scalar _tmp3712 = _tmp3013 * _tmp3711;
  const Scalar _tmp3713 = _tmp3709 * _tmp845;
  const Scalar _tmp3714 =
      _tmp3703 * _y0[1] + _tmp3704 * _y0[0] + _tmp3705 * _y0[3] - _tmp3706 * _y0[2];
  const Scalar _tmp3715 = _tmp3707 * _tmp864 + _tmp3714 * _tmp843;
  const Scalar _tmp3716 = _tmp3711 * _tmp843;
  const Scalar _tmp3717 = _tmp3707 * _tmp845;
  const Scalar _tmp3718 = _tmp3013 * _tmp3714 + _tmp3709 * _tmp864;
  const Scalar _tmp3719 = _y_T_b[4] * (_tmp3708 + _tmp3710) +
                          _y_T_b[5] * (-_tmp3712 - _tmp3713 + _tmp3715) +
                          _y_T_b[6] * (_tmp3716 + _tmp3717 + _tmp3718);
  const Scalar _tmp3720 = _tmp3711 * _tmp864;
  const Scalar _tmp3721 = _tmp3714 * _tmp845;
  const Scalar _tmp3722 = _tmp3013 * _tmp3707 + _tmp3709 * _tmp843;
  const Scalar _tmp3723 = -_tmp3026 * _tmp3714;
  const Scalar _tmp3724 = _y_T_b[4] * (_tmp3712 + _tmp3713 + _tmp3715) +
                          _y_T_b[5] * (_tmp3710 + _tmp3723) +
                          _y_T_b[6] * (-_tmp3720 - _tmp3721 + _tmp3722);
  const Scalar _tmp3725 = _y_T_b[4] * (-_tmp3716 - _tmp3717 + _tmp3718) +
                          _y_T_b[5] * (_tmp3720 + _tmp3721 + _tmp3722) +
                          _y_T_b[6] * (_tmp3708 + _tmp3723);
  const Scalar _tmp3726 = _tmp3719 * _tmp860 + _tmp3724 * _tmp876 + _tmp3725 * _tmp827;
  const Scalar _tmp3727 =
      -_tmp3707 * _y_T_b[0] + _tmp3709 * _y_T_b[3] + _tmp3711 * _y_T_b[2] + _tmp3714 * _y_T_b[1];
  const Scalar _tmp3728 =
      -_tmp3707 * _y_T_b[1] - _tmp3709 * _y_T_b[2] + _tmp3711 * _y_T_b[3] - _tmp3714 * _y_T_b[0];
  const Scalar _tmp3729 =
      _tmp3707 * _y_T_b[3] + _tmp3709 * _y_T_b[0] + _tmp3711 * _y_T_b[1] - _tmp3714 * _y_T_b[2];
  const Scalar _tmp3730 =
      _tmp3707 * _y_T_b[2] - _tmp3709 * _y_T_b[1] + _tmp3711 * _y_T_b[0] + _tmp3714 * _y_T_b[3];
  const Scalar _tmp3731 =
      -_tmp3727 * _tmp763 - _tmp3728 * _tmp758 + _tmp3729 * _tmp753 + _tmp3730 * _tmp748;
  const Scalar _tmp3732 =
      _tmp3727 * _tmp753 + _tmp3728 * _tmp748 + _tmp3729 * _tmp763 + _tmp3730 * _tmp758;
  const Scalar _tmp3733 =
      _tmp3727 * _tmp748 - _tmp3728 * _tmp753 - _tmp3729 * _tmp758 + _tmp3730 * _tmp763;
  const Scalar _tmp3734 =
      _tmp3727 * _tmp758 - _tmp3728 * _tmp763 + _tmp3729 * _tmp748 - _tmp3730 * _tmp753;
  const Scalar _tmp3735 = _tmp880 * (-_a_T_b[0] * _tmp3732 - _a_T_b[1] * _tmp3733 +
                                     _a_T_b[2] * _tmp3734 + _a_T_b[3] * _tmp3731);
  const Scalar _tmp3736 =
      _a_T_b[0] * _tmp3731 + _a_T_b[1] * _tmp3734 + _a_T_b[2] * _tmp3733 + _a_T_b[3] * _tmp3732;
  const Scalar _tmp3737 = _tmp3736 * _tmp782;
  const Scalar _tmp3738 =
      _a_T_b[0] * _tmp3733 - _a_T_b[1] * _tmp3732 - _a_T_b[2] * _tmp3731 + _a_T_b[3] * _tmp3734;
  const Scalar _tmp3739 = _tmp3736 * _tmp883;
  const Scalar _tmp3740 = _tmp3719 * _tmp919 + _tmp3724 * _tmp918 + _tmp3725 * _tmp916;
  const Scalar _tmp3741 =
      -_a_T_b[0] * _tmp3734 + _a_T_b[1] * _tmp3731 - _a_T_b[2] * _tmp3732 + _a_T_b[3] * _tmp3733;
  const Scalar _tmp3742 = _tmp3719 * _tmp891 + _tmp3724 * _tmp895 + _tmp3725 * _tmp892;
  const Scalar _tmp3743 = _tmp3736 * _tmp907;
  const Scalar _tmp3744 = _tmp3736 * _tmp780;
  const Scalar _tmp3745 = _tmp3744 * _tmp900;
  const Scalar _tmp3746 = _tmp3738 * _tmp880;
  const Scalar _tmp3747 = _tmp919 * lambdas_y(2, 0);
  const Scalar _tmp3748 = _tmp895 * lambdas_y(2, 0);
  const Scalar _tmp3749 = _tmp876 * lambdas_y(2, 0);
  const Scalar _tmp3750 = _tmp918 * lambdas_y(2, 0);
  const Scalar _tmp3751 = _tmp892 * lambdas_y(2, 0);
  const Scalar _tmp3752 = _tmp827 * lambdas_y(2, 0);
  const Scalar _tmp3753 = (Scalar(1) / Scalar(2)) * _tmp724;
  const Scalar _tmp3754 = (Scalar(1) / Scalar(2)) * _tmp725;
  const Scalar _tmp3755 = (Scalar(1) / Scalar(2)) * _tmp726;
  const Scalar _tmp3756 = (Scalar(1) / Scalar(2)) * _tmp727;
  const Scalar _tmp3757 = -_tmp3753 + _tmp3754 - _tmp3755 - _tmp3756;
  const Scalar _tmp3758 = _tmp3757 * _tmp753;
  const Scalar _tmp3759 = (Scalar(1) / Scalar(2)) * _tmp730;
  const Scalar _tmp3760 = (Scalar(1) / Scalar(2)) * _tmp731;
  const Scalar _tmp3761 = (Scalar(1) / Scalar(2)) * _tmp732;
  const Scalar _tmp3762 = (Scalar(1) / Scalar(2)) * _tmp733;
  const Scalar _tmp3763 = -_tmp3759 + _tmp3760 + _tmp3761 + _tmp3762;
  const Scalar _tmp3764 = (Scalar(1) / Scalar(2)) * _tmp709 - Scalar(1) / Scalar(2) * _tmp711 -
                          Scalar(1) / Scalar(2) * _tmp713 - Scalar(1) / Scalar(2) * _tmp715;
  const Scalar _tmp3765 = _tmp3764 * _tmp763;
  const Scalar _tmp3766 = (Scalar(1) / Scalar(2)) * _tmp718;
  const Scalar _tmp3767 = (Scalar(1) / Scalar(2)) * _tmp719;
  const Scalar _tmp3768 = (Scalar(1) / Scalar(2)) * _tmp720;
  const Scalar _tmp3769 = (Scalar(1) / Scalar(2)) * _tmp721;
  const Scalar _tmp3770 = -_tmp3766 + _tmp3767 - _tmp3768 - _tmp3769;
  const Scalar _tmp3771 = _tmp3765 + _tmp3770 * _tmp748;
  const Scalar _tmp3772 = -_tmp3758 - _tmp3763 * _tmp758 + _tmp3771;
  const Scalar _tmp3773 = _tmp3770 * _tmp753;
  const Scalar _tmp3774 = _tmp3764 * _tmp758;
  const Scalar _tmp3775 = _tmp3757 * _tmp748 + _tmp3774;
  const Scalar _tmp3776 = _tmp3763 * _tmp763 + _tmp3773 + _tmp3775;
  const Scalar _tmp3777 = -_tmp3757 * _tmp758;
  const Scalar _tmp3778 = _tmp3764 * _tmp748;
  const Scalar _tmp3779 = -_tmp3770 * _tmp763 + _tmp3778;
  const Scalar _tmp3780 = _tmp3763 * _tmp753 + _tmp3777 + _tmp3779;
  const Scalar _tmp3781 = _tmp3764 * _tmp753;
  const Scalar _tmp3782 = _tmp3757 * _tmp763;
  const Scalar _tmp3783 = _tmp3770 * _tmp758;
  const Scalar _tmp3784 = _tmp3763 * _tmp748 - _tmp3781 - _tmp3782 + _tmp3783;
  const Scalar _tmp3785 =
      _a_T_b[0] * _tmp3780 + _a_T_b[1] * _tmp3784 + _a_T_b[2] * _tmp3772 + _a_T_b[3] * _tmp3776;
  const Scalar _tmp3786 = _tmp3785 * _tmp782;
  const Scalar _tmp3787 =
      _a_T_b[0] * _tmp3772 - _a_T_b[1] * _tmp3776 - _a_T_b[2] * _tmp3780 + _a_T_b[3] * _tmp3784;
  const Scalar _tmp3788 = _tmp880 * (-_a_T_b[0] * _tmp3776 - _a_T_b[1] * _tmp3772 +
                                     _a_T_b[2] * _tmp3784 + _a_T_b[3] * _tmp3780);
  const Scalar _tmp3789 =
      -_a_T_b[0] * _tmp3784 + _a_T_b[1] * _tmp3780 - _a_T_b[2] * _tmp3776 + _a_T_b[3] * _tmp3772;
  const Scalar _tmp3790 = _tmp3785 * _tmp883;
  const Scalar _tmp3791 = _tmp3785 * _tmp910;
  const Scalar _tmp3792 = _tmp3753 - _tmp3754 + _tmp3755 + _tmp3756;
  const Scalar _tmp3793 = _tmp3759 - _tmp3760 - _tmp3761 - _tmp3762;
  const Scalar _tmp3794 = _tmp3793 * _tmp758;
  const Scalar _tmp3795 = _tmp3771 + _tmp3792 * _tmp753 + _tmp3794;
  const Scalar _tmp3796 = _tmp3793 * _tmp763;
  const Scalar _tmp3797 = -_tmp3773 - _tmp3774 + _tmp3792 * _tmp748 + _tmp3796;
  const Scalar _tmp3798 = -_tmp3793 * _tmp753;
  const Scalar _tmp3799 = _tmp3779 + _tmp3792 * _tmp758 + _tmp3798;
  const Scalar _tmp3800 = _tmp3781 + _tmp3793 * _tmp748;
  const Scalar _tmp3801 = -_tmp3783 - _tmp3792 * _tmp763 + _tmp3800;
  const Scalar _tmp3802 =
      _a_T_b[0] * _tmp3801 + _a_T_b[1] * _tmp3799 + _a_T_b[2] * _tmp3797 + _a_T_b[3] * _tmp3795;
  const Scalar _tmp3803 = _tmp3802 * _tmp901;
  const Scalar _tmp3804 = _tmp3802 * _tmp883;
  const Scalar _tmp3805 =
      _a_T_b[0] * _tmp3797 - _a_T_b[1] * _tmp3795 - _a_T_b[2] * _tmp3801 + _a_T_b[3] * _tmp3799;
  const Scalar _tmp3806 = _tmp3802 * _tmp782;
  const Scalar _tmp3807 = _tmp880 * (-_a_T_b[0] * _tmp3795 - _a_T_b[1] * _tmp3797 +
                                     _a_T_b[2] * _tmp3799 + _a_T_b[3] * _tmp3801);
  const Scalar _tmp3808 =
      -_a_T_b[0] * _tmp3799 + _a_T_b[1] * _tmp3801 - _a_T_b[2] * _tmp3795 + _a_T_b[3] * _tmp3797;
  const Scalar _tmp3809 = _tmp3802 * _tmp910;
  const Scalar _tmp3810 = _tmp3808 * _tmp880;
  const Scalar _tmp3811 = _tmp3766 - _tmp3767 + _tmp3768 + _tmp3769;
  const Scalar _tmp3812 = _tmp3758 - _tmp3765 - _tmp3794 + _tmp3811 * _tmp748;
  const Scalar _tmp3813 = _tmp3775 - _tmp3796 - _tmp3811 * _tmp753;
  const Scalar _tmp3814 = _tmp3777 + _tmp3778 + _tmp3798 + _tmp3811 * _tmp763;
  const Scalar _tmp3815 = _tmp3782 + _tmp3800 + _tmp3811 * _tmp758;
  const Scalar _tmp3816 =
      _a_T_b[0] * _tmp3814 - _a_T_b[1] * _tmp3815 - _a_T_b[2] * _tmp3812 + _a_T_b[3] * _tmp3813;
  const Scalar _tmp3817 =
      _a_T_b[0] * _tmp3812 + _a_T_b[1] * _tmp3813 + _a_T_b[2] * _tmp3814 + _a_T_b[3] * _tmp3815;
  const Scalar _tmp3818 = _tmp3817 * _tmp907;
  const Scalar _tmp3819 = _tmp880 * (-_a_T_b[0] * _tmp3815 - _a_T_b[1] * _tmp3814 +
                                     _a_T_b[2] * _tmp3813 + _a_T_b[3] * _tmp3812);
  const Scalar _tmp3820 = _tmp3817 * _tmp883;
  const Scalar _tmp3821 = _tmp3817 * _tmp782;
  const Scalar _tmp3822 = _tmp3817 * _tmp901;
  const Scalar _tmp3823 =
      -_a_T_b[0] * _tmp3813 + _a_T_b[1] * _tmp3812 - _a_T_b[2] * _tmp3815 + _a_T_b[3] * _tmp3814;
  const Scalar _tmp3824 = _tmp850 * _tmp895 + _tmp867 * _tmp892 + _tmp869 * _tmp891;
  const Scalar _tmp3825 = _tmp827 * _tmp867 + _tmp850 * _tmp876 + _tmp860 * _tmp869;
  const Scalar _tmp3826 = _tmp850 * _tmp918 + _tmp867 * _tmp916 + _tmp869 * _tmp919;
  const Scalar _tmp3827 = _tmp842 * _tmp918 + _tmp863 * _tmp916 + _tmp871 * _tmp919;
  const Scalar _tmp3828 = _tmp827 * _tmp863 + _tmp842 * _tmp876 + _tmp860 * _tmp871;
  const Scalar _tmp3829 = _tmp842 * _tmp895 + _tmp863 * _tmp892 + _tmp871 * _tmp891;
  const Scalar _tmp3830 = _tmp847 * _tmp918 + _tmp862 * _tmp916 + _tmp870 * _tmp919;
  const Scalar _tmp3831 = _tmp827 * _tmp862 + _tmp847 * _tmp876 + _tmp860 * _tmp870;
  const Scalar _tmp3832 = _tmp847 * _tmp895 + _tmp862 * _tmp892 + _tmp870 * _tmp891;

  // Output terms (11)
  Eigen::Matrix<Scalar, 6, 1> _res;

  _res(0, 0) = _tmp320 * sqrt_info(0, 0) + _tmp366 * sqrt_info(0, 4) + _tmp368 * sqrt_info(0, 2) +
               _tmp370 * sqrt_info(0, 1) + _tmp377 * sqrt_info(0, 3) + _tmp381 * sqrt_info(0, 5);
  _res(1, 0) = _tmp318 * _tmp367 * _tmp382 + _tmp320 * sqrt_info(1, 0) + _tmp366 * sqrt_info(1, 4) +
               _tmp369 * _tmp383 + _tmp377 * sqrt_info(1, 3) + _tmp381 * sqrt_info(1, 5);
  _res(2, 0) = _tmp320 * sqrt_info(2, 0) + _tmp366 * sqrt_info(2, 4) + _tmp368 * sqrt_info(2, 2) +
               _tmp370 * sqrt_info(2, 1) + _tmp377 * sqrt_info(2, 3) + _tmp381 * sqrt_info(2, 5);
  _res(3, 0) = _tmp320 * sqrt_info(3, 0) + _tmp366 * sqrt_info(3, 4) + _tmp368 * sqrt_info(3, 2) +
               _tmp369 * _tmp384 + _tmp377 * sqrt_info(3, 3) + _tmp381 * sqrt_info(3, 5);
  _res(4, 0) = _tmp320 * sqrt_info(4, 0) + _tmp366 * sqrt_info(4, 4) + _tmp368 * sqrt_info(4, 2) +
               _tmp370 * sqrt_info(4, 1) + _tmp377 * sqrt_info(4, 3) + _tmp381 * sqrt_info(4, 5);
  _res(5, 0) = _tmp320 * sqrt_info(5, 0) + _tmp366 * sqrt_info(5, 4) + _tmp368 * sqrt_info(5, 2) +
               _tmp369 * _tmp385 + _tmp377 * sqrt_info(5, 3) + _tmp381 * sqrt_info(5, 5);

  if (res_D_x0 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x0{res_D_x0};

    _res_D_x0(0, 0) = _tmp739 * _tmp783 + _tmp739 * _tmp884 - _tmp739 * _tmp908 -
                      _tmp739 * _tmp911 - _tmp739 * _tmp913 + _tmp877 * sqrt_info(0, 5) +
                      _tmp878 * _tmp881 + _tmp899 * sqrt_info(0, 3) + _tmp902 * sqrt_info(0, 1) +
                      _tmp904 * sqrt_info(0, 1) + _tmp909 * sqrt_info(0, 0) +
                      _tmp920 * sqrt_info(0, 4);
    _res_D_x0(1, 0) = _tmp739 * _tmp921 + _tmp739 * _tmp923 - _tmp739 * _tmp925 -
                      _tmp739 * _tmp926 - _tmp739 * _tmp927 + _tmp877 * sqrt_info(1, 5) +
                      _tmp878 * _tmp922 + _tmp899 * sqrt_info(1, 3) + _tmp902 * sqrt_info(1, 1) +
                      _tmp903 * _tmp924 + _tmp909 * sqrt_info(1, 0) + _tmp920 * sqrt_info(1, 4);
    _res_D_x0(2, 0) = _tmp739 * _tmp928 + _tmp739 * _tmp930 - _tmp739 * _tmp931 -
                      _tmp739 * _tmp932 - _tmp739 * _tmp933 + _tmp877 * sqrt_info(2, 5) +
                      _tmp878 * _tmp929 + _tmp899 * sqrt_info(2, 3) + _tmp902 * sqrt_info(2, 1) +
                      _tmp904 * sqrt_info(2, 1) + _tmp909 * sqrt_info(2, 0) +
                      _tmp920 * sqrt_info(2, 4);
    _res_D_x0(3, 0) = _tmp384 * _tmp937 + _tmp739 * _tmp934 + _tmp739 * _tmp936 -
                      _tmp739 * _tmp938 - _tmp739 * _tmp939 - _tmp739 * _tmp940 +
                      _tmp877 * sqrt_info(3, 5) + _tmp878 * _tmp935 + _tmp899 * sqrt_info(3, 3) +
                      _tmp902 * sqrt_info(3, 1) + _tmp909 * sqrt_info(3, 0) +
                      _tmp920 * sqrt_info(3, 4);
    _res_D_x0(4, 0) = _tmp739 * _tmp941 + _tmp739 * _tmp943 - _tmp739 * _tmp944 -
                      _tmp739 * _tmp945 - _tmp739 * _tmp946 + _tmp877 * sqrt_info(4, 5) +
                      _tmp899 * sqrt_info(4, 3) + _tmp902 * sqrt_info(4, 1) +
                      _tmp904 * sqrt_info(4, 1) + _tmp909 * sqrt_info(4, 0) +
                      _tmp920 * sqrt_info(4, 4) + _tmp942 * sqrt_info(4, 2);
    _res_D_x0(5, 0) = _tmp385 * _tmp937 + _tmp739 * _tmp947 + _tmp739 * _tmp948 +
                      _tmp739 * _tmp950 - _tmp739 * _tmp951 - _tmp739 * _tmp952 -
                      _tmp739 * _tmp953 + _tmp877 * sqrt_info(5, 5) + _tmp899 * sqrt_info(5, 3) +
                      _tmp909 * sqrt_info(5, 0) + _tmp920 * sqrt_info(5, 4) +
                      _tmp942 * sqrt_info(5, 2);
    _res_D_x0(0, 1) = _tmp1003 * _tmp783 - _tmp1003 * _tmp908 - _tmp1003 * _tmp911 -
                      _tmp1003 * _tmp913 + _tmp1004 * sqrt_info(0, 0) + _tmp1005 * sqrt_info(0, 1) +
                      _tmp1006 * _tmp881 + _tmp1033 * sqrt_info(0, 3) + _tmp1041 * sqrt_info(0, 4) +
                      _tmp1042 * _tmp1043 + _tmp1047 * sqrt_info(0, 5) + _tmp1048 * sqrt_info(0, 2);
    _res_D_x0(1, 1) = _tmp1003 * _tmp921 - _tmp1003 * _tmp925 - _tmp1003 * _tmp926 -
                      _tmp1003 * _tmp927 + _tmp1004 * sqrt_info(1, 0) + _tmp1005 * sqrt_info(1, 1) +
                      _tmp1006 * _tmp922 + _tmp1033 * sqrt_info(1, 3) + _tmp1041 * sqrt_info(1, 4) +
                      _tmp1042 * _tmp924 + _tmp1047 * sqrt_info(1, 5) + _tmp1048 * sqrt_info(1, 2);
    _res_D_x0(2, 1) = _tmp1003 * _tmp1049 + _tmp1003 * _tmp928 - _tmp1003 * _tmp931 -
                      _tmp1003 * _tmp932 - _tmp1003 * _tmp933 + _tmp1004 * sqrt_info(2, 0) +
                      _tmp1006 * _tmp929 + _tmp1033 * sqrt_info(2, 3) + _tmp1041 * sqrt_info(2, 4) +
                      _tmp1042 * _tmp1050 + _tmp1047 * sqrt_info(2, 5) + _tmp1048 * sqrt_info(2, 2);
    _res_D_x0(3, 1) = _tmp1003 * _tmp934 + _tmp1003 * _tmp936 - _tmp1003 * _tmp938 -
                      _tmp1003 * _tmp939 - _tmp1003 * _tmp940 + _tmp1004 * sqrt_info(3, 0) +
                      _tmp1005 * sqrt_info(3, 1) + _tmp1006 * _tmp935 + _tmp1033 * sqrt_info(3, 3) +
                      _tmp1041 * sqrt_info(3, 4) + _tmp1042 * _tmp1051 + _tmp1047 * sqrt_info(3, 5);
    _res_D_x0(4, 1) = _tmp1003 * _tmp941 + _tmp1003 * _tmp943 - _tmp1003 * _tmp944 -
                      _tmp1003 * _tmp945 - _tmp1003 * _tmp946 + _tmp1004 * sqrt_info(4, 0) +
                      _tmp1005 * sqrt_info(4, 1) + _tmp1006 * _tmp1052 +
                      _tmp1033 * sqrt_info(4, 3) + _tmp1041 * sqrt_info(4, 4) +
                      _tmp1042 * _tmp1053 + _tmp1047 * sqrt_info(4, 5);
    _res_D_x0(5, 1) = _tmp1003 * _tmp947 + _tmp1003 * _tmp948 + _tmp1003 * _tmp950 -
                      _tmp1003 * _tmp951 - _tmp1003 * _tmp952 - _tmp1003 * _tmp953 +
                      _tmp1004 * sqrt_info(5, 0) + _tmp1006 * _tmp1054 +
                      _tmp1033 * sqrt_info(5, 3) + _tmp1041 * sqrt_info(5, 4) +
                      _tmp1042 * _tmp1055 + _tmp1047 * sqrt_info(5, 5);
    _res_D_x0(0, 2) = _tmp1043 * _tmp1138 + _tmp1094 * _tmp881 + _tmp1095 * sqrt_info(0, 0) +
                      _tmp1122 * sqrt_info(0, 3) + _tmp1123 * _tmp783 - _tmp1123 * _tmp911 -
                      _tmp1123 * _tmp913 - _tmp1124 * sqrt_info(0, 0) + _tmp1132 * sqrt_info(0, 4) +
                      _tmp1136 * sqrt_info(0, 5) + _tmp1137 * sqrt_info(0, 2) +
                      _tmp1139 * sqrt_info(0, 1);
    _res_D_x0(1, 2) = _tmp1094 * _tmp922 + _tmp1095 * sqrt_info(1, 0) + _tmp1122 * sqrt_info(1, 3) +
                      _tmp1123 * _tmp921 - _tmp1123 * _tmp925 - _tmp1123 * _tmp927 +
                      _tmp1132 * sqrt_info(1, 4) + _tmp1136 * sqrt_info(1, 5) +
                      _tmp1137 * sqrt_info(1, 2) + _tmp1138 * _tmp924 + _tmp1139 * sqrt_info(1, 1) -
                      _tmp1140 * sqrt_info(1, 1);
    _res_D_x0(2, 2) = _tmp1050 * _tmp1138 + _tmp1094 * _tmp929 + _tmp1095 * sqrt_info(2, 0) +
                      _tmp1122 * sqrt_info(2, 3) + _tmp1123 * _tmp928 - _tmp1123 * _tmp931 -
                      _tmp1123 * _tmp933 + _tmp1132 * sqrt_info(2, 4) + _tmp1136 * sqrt_info(2, 5) +
                      _tmp1137 * sqrt_info(2, 2) + _tmp1139 * sqrt_info(2, 1) -
                      _tmp1140 * sqrt_info(2, 1);
    _res_D_x0(3, 2) = _tmp1051 * _tmp1138 + _tmp1094 * _tmp935 + _tmp1095 * sqrt_info(3, 0) +
                      _tmp1122 * sqrt_info(3, 3) + _tmp1123 * _tmp934 + _tmp1123 * _tmp936 -
                      _tmp1123 * _tmp938 - _tmp1123 * _tmp939 - _tmp1123 * _tmp940 +
                      _tmp1132 * sqrt_info(3, 4) + _tmp1136 * sqrt_info(3, 5) +
                      _tmp1139 * sqrt_info(3, 1);
    _res_D_x0(4, 2) = _tmp1052 * _tmp1094 + _tmp1053 * _tmp1138 + _tmp1095 * sqrt_info(4, 0) +
                      _tmp1122 * sqrt_info(4, 3) + _tmp1123 * _tmp941 + _tmp1123 * _tmp943 -
                      _tmp1123 * _tmp944 - _tmp1123 * _tmp945 - _tmp1123 * _tmp946 +
                      _tmp1132 * sqrt_info(4, 4) + _tmp1136 * sqrt_info(4, 5) +
                      _tmp1139 * sqrt_info(4, 1);
    _res_D_x0(5, 2) = _tmp1054 * _tmp1094 + _tmp1055 * _tmp1138 + _tmp1095 * sqrt_info(5, 0) +
                      _tmp1122 * sqrt_info(5, 3) + _tmp1123 * _tmp947 + _tmp1123 * _tmp948 +
                      _tmp1123 * _tmp950 - _tmp1123 * _tmp952 - _tmp1123 * _tmp953 -
                      _tmp1124 * sqrt_info(5, 0) + _tmp1132 * sqrt_info(5, 4) +
                      _tmp1136 * sqrt_info(5, 5);
    _res_D_x0(0, 3) =
        -_tmp1142 * sqrt_info(0, 3) - _tmp1143 * sqrt_info(0, 4) - _tmp1144 * sqrt_info(0, 5);
    _res_D_x0(1, 3) =
        -_tmp1142 * sqrt_info(1, 3) - _tmp1143 * sqrt_info(1, 4) - _tmp1144 * sqrt_info(1, 5);
    _res_D_x0(2, 3) =
        -_tmp1142 * sqrt_info(2, 3) - _tmp1143 * sqrt_info(2, 4) - _tmp1144 * sqrt_info(2, 5);
    _res_D_x0(3, 3) =
        -_tmp1142 * sqrt_info(3, 3) - _tmp1143 * sqrt_info(3, 4) - _tmp1144 * sqrt_info(3, 5);
    _res_D_x0(4, 3) = -_tmp1143 * sqrt_info(4, 4) - _tmp1144 * sqrt_info(4, 5) - _tmp1145 * _tmp891;
    _res_D_x0(5, 3) =
        -_tmp1142 * sqrt_info(5, 3) - _tmp1143 * sqrt_info(5, 4) - _tmp1144 * sqrt_info(5, 5);
    _res_D_x0(0, 4) = -_tmp1141 * _tmp1147 - _tmp1141 * _tmp1148 - _tmp1146 * sqrt_info(0, 3);
    _res_D_x0(1, 4) =
        -_tmp1146 * sqrt_info(1, 3) - _tmp1149 * sqrt_info(1, 4) - _tmp1150 * sqrt_info(1, 5);
    _res_D_x0(2, 4) =
        -_tmp1146 * sqrt_info(2, 3) - _tmp1149 * sqrt_info(2, 4) - _tmp1150 * sqrt_info(2, 5);
    _res_D_x0(3, 4) =
        -_tmp1141 * _tmp1151 - _tmp1146 * sqrt_info(3, 3) - _tmp1150 * sqrt_info(3, 5);
    _res_D_x0(4, 4) = -_tmp1141 * _tmp1152 - _tmp1141 * _tmp1153 - _tmp1145 * _tmp895;
    _res_D_x0(5, 4) = -_tmp1141 * _tmp1154 - _tmp1141 * _tmp1155 - _tmp1146 * sqrt_info(5, 3);
    _res_D_x0(0, 5) =
        -_tmp1141 * _tmp1156 - _tmp1157 * sqrt_info(0, 5) - _tmp1158 * sqrt_info(0, 3);
    _res_D_x0(1, 5) =
        -_tmp1141 * _tmp1159 - _tmp1157 * sqrt_info(1, 5) - _tmp1158 * sqrt_info(1, 3);
    _res_D_x0(2, 5) =
        -_tmp1141 * _tmp1160 - _tmp1157 * sqrt_info(2, 5) - _tmp1158 * sqrt_info(2, 3);
    _res_D_x0(3, 5) =
        -_tmp1141 * _tmp1161 - _tmp1157 * sqrt_info(3, 5) - _tmp1158 * sqrt_info(3, 3);
    _res_D_x0(4, 5) = -_tmp1141 * _tmp1162 - _tmp1141 * _tmp1163 - _tmp1145 * _tmp892;
    _res_D_x0(5, 5) =
        -_tmp1141 * _tmp1164 - _tmp1157 * sqrt_info(5, 5) - _tmp1158 * sqrt_info(5, 3);
  }

  if (res_D_x1 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x1{res_D_x1};

    _res_D_x1(0, 0) = _tmp1043 * _tmp1372 + _tmp1350 * sqrt_info(0, 3) +
                      _tmp1358 * sqrt_info(0, 4) + _tmp1363 * _tmp783 - _tmp1363 * _tmp911 -
                      _tmp1363 * _tmp913 - _tmp1364 * sqrt_info(0, 0) + _tmp1365 * sqrt_info(0, 1) +
                      _tmp1366 * sqrt_info(0, 0) + _tmp1367 * sqrt_info(0, 2) +
                      _tmp1371 * sqrt_info(0, 5) + _tmp1373 * _tmp881;
    _res_D_x1(1, 0) = _tmp1350 * sqrt_info(1, 3) + _tmp1358 * sqrt_info(1, 4) + _tmp1363 * _tmp921 -
                      _tmp1363 * _tmp925 - _tmp1363 * _tmp926 - _tmp1363 * _tmp927 +
                      _tmp1365 * sqrt_info(1, 1) + _tmp1366 * sqrt_info(1, 0) +
                      _tmp1367 * sqrt_info(1, 2) + _tmp1371 * sqrt_info(1, 5) + _tmp1372 * _tmp924 +
                      _tmp1373 * _tmp922;
    _res_D_x1(2, 0) = _tmp1049 * _tmp1363 + _tmp1050 * _tmp1372 + _tmp1350 * sqrt_info(2, 3) +
                      _tmp1358 * sqrt_info(2, 4) + _tmp1363 * _tmp928 - _tmp1363 * _tmp931 -
                      _tmp1363 * _tmp932 - _tmp1363 * _tmp933 + _tmp1366 * sqrt_info(2, 0) +
                      _tmp1367 * sqrt_info(2, 2) + _tmp1371 * sqrt_info(2, 5) + _tmp1373 * _tmp929;
    _res_D_x1(3, 0) = _tmp1051 * _tmp1372 + _tmp1350 * sqrt_info(3, 3) +
                      _tmp1358 * sqrt_info(3, 4) + _tmp1363 * _tmp934 + _tmp1363 * _tmp936 -
                      _tmp1363 * _tmp938 - _tmp1363 * _tmp939 - _tmp1363 * _tmp940 +
                      _tmp1365 * sqrt_info(3, 1) + _tmp1366 * sqrt_info(3, 0) +
                      _tmp1371 * sqrt_info(3, 5) + _tmp1373 * _tmp935;
    _res_D_x1(4, 0) = _tmp1052 * _tmp1373 + _tmp1053 * _tmp1372 + _tmp1350 * sqrt_info(4, 3) +
                      _tmp1358 * sqrt_info(4, 4) + _tmp1363 * _tmp941 + _tmp1363 * _tmp943 -
                      _tmp1363 * _tmp944 - _tmp1363 * _tmp945 - _tmp1363 * _tmp946 +
                      _tmp1365 * sqrt_info(4, 1) + _tmp1366 * sqrt_info(4, 0) +
                      _tmp1371 * sqrt_info(4, 5);
    _res_D_x1(5, 0) = _tmp1054 * _tmp1373 + _tmp1055 * _tmp1372 + _tmp1350 * sqrt_info(5, 3) +
                      _tmp1358 * sqrt_info(5, 4) + _tmp1363 * _tmp947 + _tmp1363 * _tmp948 +
                      _tmp1363 * _tmp950 - _tmp1363 * _tmp952 - _tmp1363 * _tmp953 -
                      _tmp1364 * sqrt_info(5, 0) + _tmp1366 * sqrt_info(5, 0) +
                      _tmp1371 * sqrt_info(5, 5);
    _res_D_x1(0, 1) = _tmp1043 * _tmp1436 + _tmp1430 * _tmp1435 + _tmp1430 * _tmp884 -
                      _tmp1430 * _tmp911 - _tmp1430 * _tmp913 - _tmp1431 * sqrt_info(0, 0) +
                      _tmp1432 * sqrt_info(0, 0) + _tmp1433 * sqrt_info(0, 0) + _tmp1434 * _tmp881 +
                      _tmp1463 * sqrt_info(0, 3) + _tmp1471 * sqrt_info(0, 4) +
                      _tmp1475 * sqrt_info(0, 5);
    _res_D_x1(1, 1) = _tmp1430 * _tmp1476 + _tmp1430 * _tmp921 + _tmp1430 * _tmp923 -
                      _tmp1430 * _tmp925 - _tmp1430 * _tmp926 - _tmp1430 * _tmp927 +
                      _tmp1432 * sqrt_info(1, 0) + _tmp1434 * _tmp922 + _tmp1436 * _tmp924 +
                      _tmp1463 * sqrt_info(1, 3) + _tmp1471 * sqrt_info(1, 4) +
                      _tmp1475 * sqrt_info(1, 5);
    _res_D_x1(2, 1) = _tmp1049 * _tmp1430 + _tmp1050 * _tmp1436 + _tmp1430 * _tmp930 -
                      _tmp1430 * _tmp932 - _tmp1430 * _tmp933 - _tmp1431 * sqrt_info(2, 0) +
                      _tmp1432 * sqrt_info(2, 0) + _tmp1433 * sqrt_info(2, 0) + _tmp1434 * _tmp929 +
                      _tmp1463 * sqrt_info(2, 3) + _tmp1471 * sqrt_info(2, 4) +
                      _tmp1475 * sqrt_info(2, 5);
    _res_D_x1(3, 1) = _tmp1051 * _tmp1436 + _tmp1430 * _tmp1477 + _tmp1430 * _tmp934 +
                      _tmp1430 * _tmp936 - _tmp1430 * _tmp938 - _tmp1430 * _tmp939 -
                      _tmp1430 * _tmp940 + _tmp1432 * sqrt_info(3, 0) + _tmp1434 * _tmp935 +
                      _tmp1463 * sqrt_info(3, 3) + _tmp1471 * sqrt_info(3, 4) +
                      _tmp1475 * sqrt_info(3, 5);
    _res_D_x1(4, 1) = _tmp1053 * _tmp1436 + _tmp1430 * _tmp1479 + _tmp1430 * _tmp941 +
                      _tmp1430 * _tmp943 - _tmp1430 * _tmp945 - _tmp1430 * _tmp946 -
                      _tmp1431 * sqrt_info(4, 0) + _tmp1432 * sqrt_info(4, 0) +
                      _tmp1463 * sqrt_info(4, 3) + _tmp1471 * sqrt_info(4, 4) +
                      _tmp1475 * sqrt_info(4, 5) + _tmp1478 * sqrt_info(4, 2);
    _res_D_x1(5, 1) = _tmp1055 * _tmp1436 + _tmp1430 * _tmp947 + _tmp1430 * _tmp948 +
                      _tmp1430 * _tmp950 - _tmp1430 * _tmp952 - _tmp1430 * _tmp953 -
                      _tmp1431 * sqrt_info(5, 0) + _tmp1432 * sqrt_info(5, 0) +
                      _tmp1463 * sqrt_info(5, 3) + _tmp1471 * sqrt_info(5, 4) +
                      _tmp1475 * sqrt_info(5, 5) + _tmp1478 * sqrt_info(5, 2);
    _res_D_x1(0, 2) = _tmp1043 * _tmp1577 + _tmp1535 * _tmp884 - _tmp1535 * _tmp908 -
                      _tmp1535 * _tmp911 + _tmp1536 * sqrt_info(0, 1) + _tmp1563 * sqrt_info(0, 5) +
                      _tmp1564 * sqrt_info(0, 0) + _tmp1572 * sqrt_info(0, 4) +
                      _tmp1576 * sqrt_info(0, 3) + _tmp1578 * sqrt_info(0, 0) -
                      _tmp1579 * sqrt_info(0, 2) + _tmp1580 * _tmp881;
    _res_D_x1(1, 2) = _tmp1535 * _tmp921 + _tmp1535 * _tmp923 - _tmp1535 * _tmp925 -
                      _tmp1535 * _tmp926 + _tmp1536 * sqrt_info(1, 1) + _tmp1563 * sqrt_info(1, 5) +
                      _tmp1572 * sqrt_info(1, 4) + _tmp1576 * sqrt_info(1, 3) + _tmp1577 * _tmp924 +
                      _tmp1578 * sqrt_info(1, 0) - _tmp1579 * sqrt_info(1, 2) + _tmp1580 * _tmp922;
    _res_D_x1(2, 2) = _tmp1049 * _tmp1535 + _tmp1050 * _tmp1577 + _tmp1535 * _tmp930 -
                      _tmp1535 * _tmp931 - _tmp1535 * _tmp932 + _tmp1563 * sqrt_info(2, 5) +
                      _tmp1564 * sqrt_info(2, 0) + _tmp1572 * sqrt_info(2, 4) +
                      _tmp1576 * sqrt_info(2, 3) + _tmp1578 * sqrt_info(2, 0) -
                      _tmp1579 * sqrt_info(2, 2) + _tmp1580 * _tmp929;
    _res_D_x1(3, 2) = _tmp1051 * _tmp1577 + _tmp1535 * _tmp934 + _tmp1535 * _tmp936 -
                      _tmp1535 * _tmp938 - _tmp1535 * _tmp939 + _tmp1536 * sqrt_info(3, 1) +
                      _tmp1563 * sqrt_info(3, 5) + _tmp1572 * sqrt_info(3, 4) +
                      _tmp1576 * sqrt_info(3, 3) + _tmp1578 * sqrt_info(3, 0) -
                      _tmp1579 * sqrt_info(3, 2) + _tmp1580 * _tmp935;
    _res_D_x1(4, 2) = _tmp1052 * _tmp1580 + _tmp1053 * _tmp1577 + _tmp1535 * _tmp941 +
                      _tmp1535 * _tmp943 - _tmp1535 * _tmp944 - _tmp1535 * _tmp945 +
                      _tmp1536 * sqrt_info(4, 1) + _tmp1563 * sqrt_info(4, 5) +
                      _tmp1572 * sqrt_info(4, 4) + _tmp1576 * sqrt_info(4, 3) +
                      _tmp1578 * sqrt_info(4, 0) - _tmp1579 * sqrt_info(4, 2);
    _res_D_x1(5, 2) = _tmp1054 * _tmp1580 + _tmp1055 * _tmp1577 + _tmp1535 * _tmp947 +
                      _tmp1535 * _tmp948 + _tmp1535 * _tmp950 - _tmp1535 * _tmp951 -
                      _tmp1535 * _tmp952 + _tmp1563 * sqrt_info(5, 5) + _tmp1572 * sqrt_info(5, 4) +
                      _tmp1576 * sqrt_info(5, 3) + _tmp1578 * sqrt_info(5, 0) -
                      _tmp1579 * sqrt_info(5, 2);
    _res_D_x1(0, 3) = -_tmp1581 * _tmp1582 - _tmp1581 * _tmp1583 - _tmp1581 * _tmp1584;
    _res_D_x1(1, 3) = -_tmp1581 * _tmp1585 - _tmp1581 * _tmp1586 - _tmp1581 * _tmp1587;
    _res_D_x1(2, 3) = -_tmp1581 * _tmp1588 - _tmp1581 * _tmp1589 - _tmp1581 * _tmp1590;
    _res_D_x1(3, 3) = -_tmp1581 * _tmp1591 - _tmp1581 * _tmp1592 - _tmp1581 * _tmp1593;
    _res_D_x1(4, 3) = -_tmp1581 * _tmp1594 - _tmp1581 * _tmp1595 - _tmp1581 * _tmp1596;
    _res_D_x1(5, 3) = -_tmp1581 * _tmp1597 - _tmp1581 * _tmp1598 - _tmp1581 * _tmp1599;
    _res_D_x1(0, 4) = -_tmp1148 * _tmp1581 - _tmp1581 * _tmp1601 - _tmp1600 * sqrt_info(0, 4);
    _res_D_x1(1, 4) =
        -_tmp1581 * _tmp1602 - _tmp1600 * sqrt_info(1, 4) - _tmp1603 * sqrt_info(1, 5);
    _res_D_x1(2, 4) =
        -_tmp1581 * _tmp1604 - _tmp1600 * sqrt_info(2, 4) - _tmp1603 * sqrt_info(2, 5);
    _res_D_x1(3, 4) = -_tmp1151 * _tmp1581 - _tmp1581 * _tmp1605 - _tmp1603 * sqrt_info(3, 5);
    _res_D_x1(4, 4) = -_tmp1153 * _tmp1581 - _tmp1581 * _tmp1606 - _tmp1600 * sqrt_info(4, 4);
    _res_D_x1(5, 4) = -_tmp1154 * _tmp1581 - _tmp1155 * _tmp1581 - _tmp1581 * _tmp1607;
    _res_D_x1(0, 5) =
        -_tmp1608 * sqrt_info(0, 5) - _tmp1609 * sqrt_info(0, 3) - _tmp1610 * sqrt_info(0, 4);
    _res_D_x1(1, 5) =
        -_tmp1608 * sqrt_info(1, 5) - _tmp1609 * sqrt_info(1, 3) - _tmp1610 * sqrt_info(1, 4);
    _res_D_x1(2, 5) =
        -_tmp1608 * sqrt_info(2, 5) - _tmp1609 * sqrt_info(2, 3) - _tmp1610 * sqrt_info(2, 4);
    _res_D_x1(3, 5) =
        -_tmp1608 * sqrt_info(3, 5) - _tmp1609 * sqrt_info(3, 3) - _tmp1610 * sqrt_info(3, 4);
    _res_D_x1(4, 5) =
        -_tmp1162 * _tmp1581 - _tmp1608 * sqrt_info(4, 5) - _tmp1609 * sqrt_info(4, 3);
    _res_D_x1(5, 5) =
        -_tmp1164 * _tmp1581 - _tmp1608 * sqrt_info(5, 5) - _tmp1609 * sqrt_info(5, 3);
  }

  if (res_D_x2 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x2{res_D_x2};

    _res_D_x2(0, 0) = _tmp1748 * _tmp884 - _tmp1748 * _tmp908 - _tmp1748 * _tmp911 +
                      _tmp1749 * sqrt_info(0, 1) + _tmp1750 * _tmp881 + _tmp1752 * sqrt_info(0, 1) -
                      _tmp1753 * sqrt_info(0, 2) + _tmp1754 * sqrt_info(0, 0) +
                      _tmp1781 * sqrt_info(0, 3) + _tmp1782 * sqrt_info(0, 0) +
                      _tmp1790 * sqrt_info(0, 5) + _tmp1794 * sqrt_info(0, 4);
    _res_D_x2(1, 0) = _tmp1748 * _tmp921 + _tmp1748 * _tmp923 - _tmp1748 * _tmp925 -
                      _tmp1748 * _tmp926 + _tmp1749 * sqrt_info(1, 1) + _tmp1750 * _tmp922 +
                      _tmp1751 * _tmp383 - _tmp1753 * sqrt_info(1, 2) + _tmp1781 * sqrt_info(1, 3) +
                      _tmp1782 * sqrt_info(1, 0) + _tmp1790 * sqrt_info(1, 5) +
                      _tmp1794 * sqrt_info(1, 4);
    _res_D_x2(2, 0) = _tmp1049 * _tmp1748 + _tmp1748 * _tmp930 - _tmp1748 * _tmp931 -
                      _tmp1748 * _tmp932 + _tmp1750 * _tmp929 + _tmp1752 * sqrt_info(2, 1) -
                      _tmp1753 * sqrt_info(2, 2) + _tmp1754 * sqrt_info(2, 0) +
                      _tmp1781 * sqrt_info(2, 3) + _tmp1782 * sqrt_info(2, 0) +
                      _tmp1790 * sqrt_info(2, 5) + _tmp1794 * sqrt_info(2, 4);
    _res_D_x2(3, 0) = _tmp1748 * _tmp934 + _tmp1748 * _tmp936 - _tmp1748 * _tmp938 -
                      _tmp1748 * _tmp939 + _tmp1749 * sqrt_info(3, 1) + _tmp1750 * _tmp935 +
                      _tmp1751 * _tmp384 - _tmp1753 * sqrt_info(3, 2) + _tmp1781 * sqrt_info(3, 3) +
                      _tmp1782 * sqrt_info(3, 0) + _tmp1790 * sqrt_info(3, 5) +
                      _tmp1794 * sqrt_info(3, 4);
    _res_D_x2(4, 0) = _tmp1052 * _tmp1750 + _tmp1748 * _tmp941 + _tmp1748 * _tmp943 -
                      _tmp1748 * _tmp944 - _tmp1748 * _tmp945 + _tmp1749 * sqrt_info(4, 1) +
                      _tmp1752 * sqrt_info(4, 1) - _tmp1753 * sqrt_info(4, 2) +
                      _tmp1781 * sqrt_info(4, 3) + _tmp1782 * sqrt_info(4, 0) +
                      _tmp1790 * sqrt_info(4, 5) + _tmp1794 * sqrt_info(4, 4);
    _res_D_x2(5, 0) = _tmp1054 * _tmp1750 + _tmp1748 * _tmp948 + _tmp1748 * _tmp950 -
                      _tmp1748 * _tmp951 - _tmp1748 * _tmp952 + _tmp1751 * _tmp385 -
                      _tmp1753 * sqrt_info(5, 2) + _tmp1754 * sqrt_info(5, 0) +
                      _tmp1781 * sqrt_info(5, 3) + _tmp1782 * sqrt_info(5, 0) +
                      _tmp1790 * sqrt_info(5, 5) + _tmp1794 * sqrt_info(5, 4);
    _res_D_x2(0, 1) = _tmp1043 * _tmp1897 + _tmp1887 * sqrt_info(0, 5) - _tmp1892 * _tmp908 -
                      _tmp1892 * _tmp911 - _tmp1892 * _tmp913 + _tmp1893 * sqrt_info(0, 0) +
                      _tmp1894 * sqrt_info(0, 0) + _tmp1896 * sqrt_info(0, 2) +
                      _tmp1898 * sqrt_info(0, 2) + _tmp1906 * sqrt_info(0, 4) +
                      _tmp1910 * sqrt_info(0, 3) + _tmp1911 * sqrt_info(0, 1);
    _res_D_x2(1, 1) = _tmp1887 * sqrt_info(1, 5) + _tmp1892 * _tmp921 - _tmp1892 * _tmp925 -
                      _tmp1892 * _tmp926 - _tmp1892 * _tmp927 + _tmp1894 * sqrt_info(1, 0) +
                      _tmp1896 * sqrt_info(1, 2) + _tmp1897 * _tmp924 + _tmp1898 * sqrt_info(1, 2) +
                      _tmp1906 * sqrt_info(1, 4) + _tmp1910 * sqrt_info(1, 3) +
                      _tmp1911 * sqrt_info(1, 1);
    _res_D_x2(2, 1) = _tmp1050 * _tmp1897 + _tmp1887 * sqrt_info(2, 5) - _tmp1892 * _tmp931 -
                      _tmp1892 * _tmp932 - _tmp1892 * _tmp933 + _tmp1893 * sqrt_info(2, 0) +
                      _tmp1894 * sqrt_info(2, 0) + _tmp1895 * _tmp929 + _tmp1898 * sqrt_info(2, 2) +
                      _tmp1906 * sqrt_info(2, 4) + _tmp1910 * sqrt_info(2, 3) +
                      _tmp1911 * sqrt_info(2, 1);
    _res_D_x2(3, 1) = _tmp1051 * _tmp1897 + _tmp1887 * sqrt_info(3, 5) + _tmp1892 * _tmp934 -
                      _tmp1892 * _tmp938 - _tmp1892 * _tmp939 - _tmp1892 * _tmp940 +
                      _tmp1894 * sqrt_info(3, 0) + _tmp1896 * sqrt_info(3, 2) +
                      _tmp1898 * sqrt_info(3, 2) + _tmp1906 * sqrt_info(3, 4) +
                      _tmp1910 * sqrt_info(3, 3) + _tmp1911 * sqrt_info(3, 1);
    _res_D_x2(4, 1) = _tmp1053 * _tmp1897 + _tmp1887 * sqrt_info(4, 5) + _tmp1892 * _tmp941 -
                      _tmp1892 * _tmp944 - _tmp1892 * _tmp945 - _tmp1892 * _tmp946 +
                      _tmp1894 * sqrt_info(4, 0) + _tmp1896 * sqrt_info(4, 2) +
                      _tmp1898 * sqrt_info(4, 2) + _tmp1906 * sqrt_info(4, 4) +
                      _tmp1910 * sqrt_info(4, 3) + _tmp1911 * sqrt_info(4, 1);
    _res_D_x2(5, 1) = _tmp1055 * _tmp1897 + _tmp1887 * sqrt_info(5, 5) + _tmp1892 * _tmp950 -
                      _tmp1892 * _tmp951 - _tmp1892 * _tmp952 - _tmp1892 * _tmp953 +
                      _tmp1893 * sqrt_info(5, 0) + _tmp1894 * sqrt_info(5, 0) +
                      _tmp1896 * sqrt_info(5, 2) + _tmp1898 * sqrt_info(5, 2) +
                      _tmp1906 * sqrt_info(5, 4) + _tmp1910 * sqrt_info(5, 3);
    _res_D_x2(0, 2) = _tmp1955 * _tmp884 - _tmp1955 * _tmp908 - _tmp1955 * _tmp911 -
                      _tmp1955 * _tmp913 + _tmp1956 * sqrt_info(0, 0) + _tmp1983 * sqrt_info(0, 5) +
                      _tmp1991 * sqrt_info(0, 3) + _tmp1992 * sqrt_info(0, 1) +
                      _tmp1993 * sqrt_info(0, 0) + _tmp1994 * _tmp881 + _tmp1996 * sqrt_info(0, 1) +
                      _tmp2000 * sqrt_info(0, 4);
    _res_D_x2(1, 2) = _tmp1955 * _tmp921 + _tmp1955 * _tmp923 - _tmp1955 * _tmp925 -
                      _tmp1955 * _tmp926 - _tmp1955 * _tmp927 + _tmp1983 * sqrt_info(1, 5) +
                      _tmp1991 * sqrt_info(1, 3) + _tmp1992 * sqrt_info(1, 1) +
                      _tmp1993 * sqrt_info(1, 0) + _tmp1994 * _tmp922 + _tmp1995 * _tmp924 +
                      _tmp2000 * sqrt_info(1, 4);
    _res_D_x2(2, 2) = _tmp1049 * _tmp1955 + _tmp1955 * _tmp930 - _tmp1955 * _tmp931 -
                      _tmp1955 * _tmp932 - _tmp1955 * _tmp933 + _tmp1956 * sqrt_info(2, 0) +
                      _tmp1983 * sqrt_info(2, 5) + _tmp1991 * sqrt_info(2, 3) +
                      _tmp1993 * sqrt_info(2, 0) + _tmp1994 * _tmp929 + _tmp1996 * sqrt_info(2, 1) +
                      _tmp2000 * sqrt_info(2, 4);
    _res_D_x2(3, 2) = _tmp1051 * _tmp1995 + _tmp1955 * _tmp936 - _tmp1955 * _tmp938 -
                      _tmp1955 * _tmp939 - _tmp1955 * _tmp940 + _tmp1956 * sqrt_info(3, 0) +
                      _tmp1983 * sqrt_info(3, 5) + _tmp1991 * sqrt_info(3, 3) +
                      _tmp1992 * sqrt_info(3, 1) + _tmp1993 * sqrt_info(3, 0) + _tmp1994 * _tmp935 +
                      _tmp2000 * sqrt_info(3, 4);
    _res_D_x2(4, 2) = _tmp1052 * _tmp1994 + _tmp1955 * _tmp941 + _tmp1955 * _tmp943 -
                      _tmp1955 * _tmp944 - _tmp1955 * _tmp945 - _tmp1955 * _tmp946 +
                      _tmp1983 * sqrt_info(4, 5) + _tmp1991 * sqrt_info(4, 3) +
                      _tmp1992 * sqrt_info(4, 1) + _tmp1993 * sqrt_info(4, 0) +
                      _tmp1996 * sqrt_info(4, 1) + _tmp2000 * sqrt_info(4, 4);
    _res_D_x2(5, 2) = _tmp1054 * _tmp1994 + _tmp1055 * _tmp1995 + _tmp1955 * _tmp948 +
                      _tmp1955 * _tmp950 - _tmp1955 * _tmp951 - _tmp1955 * _tmp952 -
                      _tmp1955 * _tmp953 + _tmp1956 * sqrt_info(5, 0) + _tmp1983 * sqrt_info(5, 5) +
                      _tmp1991 * sqrt_info(5, 3) + _tmp1993 * sqrt_info(5, 0) +
                      _tmp2000 * sqrt_info(5, 4);
    _res_D_x2(0, 3) = -_tmp1582 * _tmp2001 - _tmp1584 * _tmp2001 - _tmp2002 * sqrt_info(0, 5);
    _res_D_x2(1, 3) = -_tmp1585 * _tmp2001 - _tmp1587 * _tmp2001 - _tmp2002 * sqrt_info(1, 5);
    _res_D_x2(2, 3) = -_tmp1588 * _tmp2001 - _tmp1590 * _tmp2001 - _tmp2002 * sqrt_info(2, 5);
    _res_D_x2(3, 3) = -_tmp1591 * _tmp2001 - _tmp1593 * _tmp2001 - _tmp2002 * sqrt_info(3, 5);
    _res_D_x2(4, 3) = -_tmp1594 * _tmp2001 - _tmp1596 * _tmp2001 - _tmp2002 * sqrt_info(4, 5);
    _res_D_x2(5, 3) = -_tmp1597 * _tmp2001 - _tmp1599 * _tmp2001 - _tmp2002 * sqrt_info(5, 5);
    _res_D_x2(0, 4) = -_tmp1147 * _tmp2001 - _tmp1148 * _tmp2001 - _tmp1601 * _tmp2001;
    _res_D_x2(1, 4) =
        -_tmp1602 * _tmp2001 - _tmp2003 * sqrt_info(1, 4) - _tmp2004 * sqrt_info(1, 5);
    _res_D_x2(2, 4) =
        -_tmp1604 * _tmp2001 - _tmp2003 * sqrt_info(2, 4) - _tmp2004 * sqrt_info(2, 5);
    _res_D_x2(3, 4) = -_tmp1151 * _tmp2001 - _tmp1605 * _tmp2001 - _tmp2004 * sqrt_info(3, 5);
    _res_D_x2(4, 4) = -_tmp1152 * _tmp2001 - _tmp1153 * _tmp2001 - _tmp1606 * _tmp2001;
    _res_D_x2(5, 4) = -_tmp1154 * _tmp2001 - _tmp1155 * _tmp2001 - _tmp1607 * _tmp2001;
    _res_D_x2(0, 5) =
        -_tmp1156 * _tmp2001 - _tmp2005 * sqrt_info(0, 5) - _tmp2006 * sqrt_info(0, 3);
    _res_D_x2(1, 5) =
        -_tmp1159 * _tmp2001 - _tmp2005 * sqrt_info(1, 5) - _tmp2006 * sqrt_info(1, 3);
    _res_D_x2(2, 5) =
        -_tmp1160 * _tmp2001 - _tmp2005 * sqrt_info(2, 5) - _tmp2006 * sqrt_info(2, 3);
    _res_D_x2(3, 5) =
        -_tmp1161 * _tmp2001 - _tmp2005 * sqrt_info(3, 5) - _tmp2006 * sqrt_info(3, 3);
    _res_D_x2(4, 5) =
        -_tmp1162 * _tmp2001 - _tmp2005 * sqrt_info(4, 5) - _tmp2006 * sqrt_info(4, 3);
    _res_D_x2(5, 5) =
        -_tmp1164 * _tmp2001 - _tmp2005 * sqrt_info(5, 5) - _tmp2006 * sqrt_info(5, 3);
  }

  if (res_D_x3 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x3{res_D_x3};

    _res_D_x3(0, 0) = _tmp1043 * _tmp2075 - _tmp2046 * _tmp911 - _tmp2046 * _tmp913 +
                      _tmp2047 * sqrt_info(0, 1) + _tmp2074 * sqrt_info(0, 3) +
                      _tmp2076 * sqrt_info(0, 0) + _tmp2084 * sqrt_info(0, 5) + _tmp2085 * _tmp881 +
                      _tmp2086 * sqrt_info(0, 0) - _tmp2087 * sqrt_info(0, 0) +
                      _tmp2088 * sqrt_info(0, 2) + _tmp2092 * sqrt_info(0, 4);
    _res_D_x3(1, 0) = _tmp1476 * _tmp2046 + _tmp2046 * _tmp921 - _tmp2046 * _tmp926 -
                      _tmp2046 * _tmp927 + _tmp2074 * sqrt_info(1, 3) + _tmp2075 * _tmp924 +
                      _tmp2076 * sqrt_info(1, 0) + _tmp2084 * sqrt_info(1, 5) + _tmp2085 * _tmp922 -
                      _tmp2087 * sqrt_info(1, 0) + _tmp2088 * sqrt_info(1, 2) +
                      _tmp2092 * sqrt_info(1, 4);
    _res_D_x3(2, 0) = _tmp1049 * _tmp2046 + _tmp1050 * _tmp2075 - _tmp2046 * _tmp932 -
                      _tmp2046 * _tmp933 + _tmp2074 * sqrt_info(2, 3) + _tmp2076 * sqrt_info(2, 0) +
                      _tmp2084 * sqrt_info(2, 5) + _tmp2085 * _tmp929 + _tmp2086 * sqrt_info(2, 0) -
                      _tmp2087 * sqrt_info(2, 0) + _tmp2088 * sqrt_info(2, 2) +
                      _tmp2092 * sqrt_info(2, 4);
    _res_D_x3(3, 0) = _tmp1051 * _tmp2075 - _tmp2046 * _tmp938 - _tmp2046 * _tmp939 -
                      _tmp2046 * _tmp940 + _tmp2047 * sqrt_info(3, 1) + _tmp2074 * sqrt_info(3, 3) +
                      _tmp2076 * sqrt_info(3, 0) + _tmp2084 * sqrt_info(3, 5) + _tmp2085 * _tmp935 +
                      _tmp2086 * sqrt_info(3, 0) + _tmp2088 * sqrt_info(3, 2) +
                      _tmp2092 * sqrt_info(3, 4);
    _res_D_x3(4, 0) = _tmp1052 * _tmp2085 + _tmp1053 * _tmp2075 + _tmp1479 * _tmp2046 +
                      _tmp2046 * _tmp943 - _tmp2046 * _tmp945 - _tmp2046 * _tmp946 +
                      _tmp2074 * sqrt_info(4, 3) + _tmp2076 * sqrt_info(4, 0) +
                      _tmp2084 * sqrt_info(4, 5) + _tmp2086 * sqrt_info(4, 0) -
                      _tmp2087 * sqrt_info(4, 0) + _tmp2092 * sqrt_info(4, 4);
    _res_D_x3(5, 0) = _tmp1054 * _tmp2085 + _tmp1055 * _tmp2075 + _tmp2046 * _tmp948 +
                      _tmp2046 * _tmp950 - _tmp2046 * _tmp952 - _tmp2046 * _tmp953 +
                      _tmp2074 * sqrt_info(5, 3) + _tmp2076 * sqrt_info(5, 0) +
                      _tmp2084 * sqrt_info(5, 5) + _tmp2086 * sqrt_info(5, 0) -
                      _tmp2087 * sqrt_info(5, 0) + _tmp2092 * sqrt_info(5, 4);
    _res_D_x3(0, 1) = _tmp2120 * _tmp783 + _tmp2120 * _tmp884 - _tmp2120 * _tmp911 -
                      _tmp2120 * _tmp913 + _tmp2121 * sqrt_info(0, 0) + _tmp2148 * sqrt_info(0, 5) +
                      _tmp2150 * sqrt_info(0, 1) + _tmp2158 * sqrt_info(0, 3) -
                      _tmp2159 * sqrt_info(0, 0) + _tmp2160 * _tmp881 + _tmp2164 * sqrt_info(0, 4) +
                      _tmp2165 * sqrt_info(0, 1);
    _res_D_x3(1, 1) = _tmp2120 * _tmp921 + _tmp2120 * _tmp923 - _tmp2120 * _tmp926 -
                      _tmp2120 * _tmp927 + _tmp2121 * sqrt_info(1, 0) + _tmp2148 * sqrt_info(1, 5) +
                      _tmp2158 * sqrt_info(1, 3) - _tmp2159 * sqrt_info(1, 0) + _tmp2160 * _tmp922 +
                      _tmp2164 * sqrt_info(1, 4) + _tmp2165 * sqrt_info(1, 1) + _tmp2166 * _tmp383;
    _res_D_x3(2, 1) = _tmp2120 * _tmp928 + _tmp2120 * _tmp930 - _tmp2120 * _tmp932 -
                      _tmp2120 * _tmp933 + _tmp2121 * sqrt_info(2, 0) + _tmp2148 * sqrt_info(2, 5) +
                      _tmp2150 * sqrt_info(2, 1) + _tmp2158 * sqrt_info(2, 3) -
                      _tmp2159 * sqrt_info(2, 0) + _tmp2160 * _tmp929 + _tmp2164 * sqrt_info(2, 4) +
                      _tmp2165 * sqrt_info(2, 1);
    _res_D_x3(3, 1) = _tmp2120 * _tmp934 + _tmp2120 * _tmp936 - _tmp2120 * _tmp939 -
                      _tmp2120 * _tmp940 + _tmp2121 * sqrt_info(3, 0) + _tmp2148 * sqrt_info(3, 5) +
                      _tmp2158 * sqrt_info(3, 3) - _tmp2159 * sqrt_info(3, 0) + _tmp2160 * _tmp935 +
                      _tmp2164 * sqrt_info(3, 4) + _tmp2165 * sqrt_info(3, 1) + _tmp2166 * _tmp384;
    _res_D_x3(4, 1) = _tmp1052 * _tmp2160 + _tmp2120 * _tmp941 + _tmp2120 * _tmp943 -
                      _tmp2120 * _tmp945 - _tmp2120 * _tmp946 + _tmp2121 * sqrt_info(4, 0) +
                      _tmp2148 * sqrt_info(4, 5) + _tmp2150 * sqrt_info(4, 1) +
                      _tmp2158 * sqrt_info(4, 3) - _tmp2159 * sqrt_info(4, 0) +
                      _tmp2164 * sqrt_info(4, 4) + _tmp2165 * sqrt_info(4, 1);
    _res_D_x3(5, 1) = _tmp1054 * _tmp2160 + _tmp2120 * _tmp947 + _tmp2120 * _tmp948 +
                      _tmp2120 * _tmp950 - _tmp2120 * _tmp952 - _tmp2120 * _tmp953 +
                      _tmp2121 * sqrt_info(5, 0) + _tmp2148 * sqrt_info(5, 5) +
                      _tmp2158 * sqrt_info(5, 3) - _tmp2159 * sqrt_info(5, 0) +
                      _tmp2164 * sqrt_info(5, 4) + _tmp2166 * _tmp385;
    _res_D_x3(0, 2) = _tmp1043 * _tmp2196 + _tmp2195 * sqrt_info(0, 0) + _tmp2197 * _tmp884 -
                      _tmp2197 * _tmp911 + _tmp2198 * sqrt_info(0, 0) - _tmp2199 * sqrt_info(0, 0) -
                      _tmp2200 * sqrt_info(0, 2) + _tmp2201 * _tmp881 + _tmp2228 * sqrt_info(0, 5) +
                      _tmp2236 * sqrt_info(0, 4) + _tmp2237 * sqrt_info(0, 1) +
                      _tmp2241 * sqrt_info(0, 3);
    _res_D_x3(1, 2) = _tmp2195 * sqrt_info(1, 0) + _tmp2196 * _tmp924 + _tmp2197 * _tmp921 +
                      _tmp2197 * _tmp923 - _tmp2197 * _tmp925 - _tmp2197 * _tmp926 -
                      _tmp2200 * sqrt_info(1, 2) + _tmp2201 * _tmp922 + _tmp2228 * sqrt_info(1, 5) +
                      _tmp2236 * sqrt_info(1, 4) + _tmp2237 * sqrt_info(1, 1) +
                      _tmp2241 * sqrt_info(1, 3);
    _res_D_x3(2, 2) = _tmp1049 * _tmp2197 + _tmp1050 * _tmp2196 + _tmp2195 * sqrt_info(2, 0) +
                      _tmp2197 * _tmp930 - _tmp2197 * _tmp931 - _tmp2197 * _tmp932 +
                      _tmp2198 * sqrt_info(2, 0) - _tmp2200 * sqrt_info(2, 2) + _tmp2201 * _tmp929 +
                      _tmp2228 * sqrt_info(2, 5) + _tmp2236 * sqrt_info(2, 4) +
                      _tmp2241 * sqrt_info(2, 3);
    _res_D_x3(3, 2) = _tmp1051 * _tmp2196 + _tmp2195 * sqrt_info(3, 0) + _tmp2197 * _tmp934 +
                      _tmp2197 * _tmp936 - _tmp2197 * _tmp938 - _tmp2197 * _tmp939 -
                      _tmp2200 * sqrt_info(3, 2) + _tmp2201 * _tmp935 + _tmp2228 * sqrt_info(3, 5) +
                      _tmp2236 * sqrt_info(3, 4) + _tmp2237 * sqrt_info(3, 1) +
                      _tmp2241 * sqrt_info(3, 3);
    _res_D_x3(4, 2) = _tmp1052 * _tmp2201 + _tmp1053 * _tmp2196 + _tmp2195 * sqrt_info(4, 0) +
                      _tmp2197 * _tmp941 + _tmp2197 * _tmp943 - _tmp2197 * _tmp944 -
                      _tmp2197 * _tmp945 - _tmp2200 * sqrt_info(4, 2) + _tmp2228 * sqrt_info(4, 5) +
                      _tmp2236 * sqrt_info(4, 4) + _tmp2237 * sqrt_info(4, 1) +
                      _tmp2241 * sqrt_info(4, 3);
    _res_D_x3(5, 2) = _tmp1054 * _tmp2201 + _tmp1055 * _tmp2196 + _tmp2195 * sqrt_info(5, 0) +
                      _tmp2197 * _tmp948 + _tmp2197 * _tmp950 - _tmp2197 * _tmp952 +
                      _tmp2198 * sqrt_info(5, 0) - _tmp2199 * sqrt_info(5, 0) -
                      _tmp2200 * sqrt_info(5, 2) + _tmp2228 * sqrt_info(5, 5) +
                      _tmp2236 * sqrt_info(5, 4) + _tmp2241 * sqrt_info(5, 3);
    _res_D_x3(0, 3) =
        -_tmp1583 * lambdas_x(2, 0) - _tmp1584 * lambdas_x(2, 0) - _tmp2242 * sqrt_info(0, 4);
    _res_D_x3(1, 3) =
        -_tmp1585 * lambdas_x(2, 0) - _tmp1586 * lambdas_x(2, 0) - _tmp1587 * lambdas_x(2, 0);
    _res_D_x3(2, 3) =
        -_tmp1589 * lambdas_x(2, 0) - _tmp1590 * lambdas_x(2, 0) - _tmp2242 * sqrt_info(2, 4);
    _res_D_x3(3, 3) =
        -_tmp1592 * lambdas_x(2, 0) - _tmp1593 * lambdas_x(2, 0) - _tmp2242 * sqrt_info(3, 4);
    _res_D_x3(4, 3) =
        -_tmp1595 * lambdas_x(2, 0) - _tmp1596 * lambdas_x(2, 0) - _tmp2242 * sqrt_info(4, 4);
    _res_D_x3(5, 3) =
        -_tmp1598 * lambdas_x(2, 0) - _tmp1599 * lambdas_x(2, 0) - _tmp2242 * sqrt_info(5, 4);
    _res_D_x3(0, 4) =
        -_tmp1147 * lambdas_x(2, 0) - _tmp1148 * lambdas_x(2, 0) - _tmp2243 * sqrt_info(0, 3);
    _res_D_x3(1, 4) =
        -_tmp2243 * sqrt_info(1, 3) - _tmp2244 * sqrt_info(1, 5) - _tmp2245 * sqrt_info(1, 4);
    _res_D_x3(2, 4) =
        -_tmp2243 * sqrt_info(2, 3) - _tmp2244 * sqrt_info(2, 5) - _tmp2245 * sqrt_info(2, 4);
    _res_D_x3(3, 4) =
        -_tmp1151 * lambdas_x(2, 0) - _tmp2243 * sqrt_info(3, 3) - _tmp2244 * sqrt_info(3, 5);
    _res_D_x3(4, 4) =
        -_tmp1152 * lambdas_x(2, 0) - _tmp1153 * lambdas_x(2, 0) - _tmp2243 * sqrt_info(4, 3);
    _res_D_x3(5, 4) =
        -_tmp1154 * lambdas_x(2, 0) - _tmp1155 * lambdas_x(2, 0) - _tmp2243 * sqrt_info(5, 3);
    _res_D_x3(0, 5) =
        -_tmp1156 * lambdas_x(2, 0) - _tmp2246 * sqrt_info(0, 3) - _tmp2247 * sqrt_info(0, 5);
    _res_D_x3(1, 5) =
        -_tmp1159 * lambdas_x(2, 0) - _tmp2246 * sqrt_info(1, 3) - _tmp2247 * sqrt_info(1, 5);
    _res_D_x3(2, 5) =
        -_tmp1160 * lambdas_x(2, 0) - _tmp2246 * sqrt_info(2, 3) - _tmp2247 * sqrt_info(2, 5);
    _res_D_x3(3, 5) =
        -_tmp1161 * lambdas_x(2, 0) - _tmp2246 * sqrt_info(3, 3) - _tmp2247 * sqrt_info(3, 5);
    _res_D_x3(4, 5) =
        -_tmp1162 * lambdas_x(2, 0) - _tmp1163 * lambdas_x(2, 0) - _tmp2246 * sqrt_info(4, 3);
    _res_D_x3(5, 5) =
        -_tmp1164 * lambdas_x(2, 0) - _tmp2246 * sqrt_info(5, 3) - _tmp2247 * sqrt_info(5, 5);
  }

  if (res_D_x_T_a != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x_T_a{res_D_x_T_a};

    _res_D_x_T_a(0, 0) = _tmp1043 * _tmp2310 + _tmp2280 * _tmp881 + _tmp2281 * _tmp783 -
                         _tmp2281 * _tmp908 - _tmp2281 * _tmp911 - _tmp2281 * _tmp913 +
                         _tmp2282 * sqrt_info(0, 2) + _tmp2298 * sqrt_info(0, 3) +
                         _tmp2308 * sqrt_info(0, 4) + _tmp2309 * sqrt_info(0, 1) +
                         _tmp2311 * sqrt_info(0, 0) + _tmp2316 * sqrt_info(0, 5);
    _res_D_x_T_a(1, 0) = _tmp2280 * _tmp922 + _tmp2281 * _tmp921 - _tmp2281 * _tmp925 -
                         _tmp2281 * _tmp926 - _tmp2281 * _tmp927 + _tmp2282 * sqrt_info(1, 2) +
                         _tmp2298 * sqrt_info(1, 3) + _tmp2308 * sqrt_info(1, 4) +
                         _tmp2309 * sqrt_info(1, 1) + _tmp2310 * _tmp924 +
                         _tmp2311 * sqrt_info(1, 0) + _tmp2316 * sqrt_info(1, 5);
    _res_D_x_T_a(2, 0) = _tmp1050 * _tmp2310 + _tmp2280 * _tmp929 + _tmp2281 * _tmp928 -
                         _tmp2281 * _tmp931 - _tmp2281 * _tmp932 - _tmp2281 * _tmp933 +
                         _tmp2282 * sqrt_info(2, 2) + _tmp2298 * sqrt_info(2, 3) +
                         _tmp2308 * sqrt_info(2, 4) + _tmp2309 * sqrt_info(2, 1) +
                         _tmp2311 * sqrt_info(2, 0) + _tmp2316 * sqrt_info(2, 5);
    _res_D_x_T_a(3, 0) = _tmp1051 * _tmp2310 + _tmp2280 * _tmp935 + _tmp2281 * _tmp934 +
                         _tmp2281 * _tmp936 - _tmp2281 * _tmp938 - _tmp2281 * _tmp939 -
                         _tmp2281 * _tmp940 + _tmp2298 * sqrt_info(3, 3) +
                         _tmp2308 * sqrt_info(3, 4) + _tmp2309 * sqrt_info(3, 1) +
                         _tmp2311 * sqrt_info(3, 0) + _tmp2316 * sqrt_info(3, 5);
    _res_D_x_T_a(4, 0) = _tmp1052 * _tmp2280 + _tmp1053 * _tmp2310 + _tmp2281 * _tmp941 +
                         _tmp2281 * _tmp943 - _tmp2281 * _tmp944 - _tmp2281 * _tmp945 -
                         _tmp2281 * _tmp946 + _tmp2298 * sqrt_info(4, 3) +
                         _tmp2308 * sqrt_info(4, 4) + _tmp2309 * sqrt_info(4, 1) +
                         _tmp2311 * sqrt_info(4, 0) + _tmp2316 * sqrt_info(4, 5);
    _res_D_x_T_a(5, 0) = _tmp1054 * _tmp2280 + _tmp1055 * _tmp2310 + _tmp2281 * _tmp947 +
                         _tmp2281 * _tmp948 + _tmp2281 * _tmp950 - _tmp2281 * _tmp951 -
                         _tmp2281 * _tmp952 - _tmp2281 * _tmp953 + _tmp2298 * sqrt_info(5, 3) +
                         _tmp2308 * sqrt_info(5, 4) + _tmp2311 * sqrt_info(5, 0) +
                         _tmp2316 * sqrt_info(5, 5);
    _res_D_x_T_a(0, 1) =
        _tmp1043 * _tmp2332 + _tmp2327 * sqrt_info(0, 0) - _tmp2331 * sqrt_info(0, 0) +
        _tmp2342 * sqrt_info(0, 5) + _tmp2343 * sqrt_info(0, 2) - _tmp2344 * sqrt_info(0, 2) +
        _tmp2345 * sqrt_info(0, 1) + _tmp2355 * sqrt_info(0, 4) + _tmp2359 * sqrt_info(0, 3) +
        _tmp2360 * sqrt_info(0, 0) + _tmp2361 * _tmp881 - _tmp2362 * sqrt_info(0, 1);
    _res_D_x_T_a(1, 1) = _tmp1476 * _tmp2328 + _tmp2327 * sqrt_info(1, 0) + _tmp2328 * _tmp921 +
                         _tmp2328 * _tmp923 - _tmp2331 * sqrt_info(1, 0) + _tmp2332 * _tmp924 +
                         _tmp2342 * sqrt_info(1, 5) - _tmp2344 * sqrt_info(1, 2) +
                         _tmp2355 * sqrt_info(1, 4) + _tmp2359 * sqrt_info(1, 3) +
                         _tmp2361 * _tmp922 - _tmp2362 * sqrt_info(1, 1);
    _res_D_x_T_a(2, 1) =
        _tmp1049 * _tmp2328 + _tmp1050 * _tmp2332 + _tmp2327 * sqrt_info(2, 0) -
        _tmp2331 * sqrt_info(2, 0) + _tmp2342 * sqrt_info(2, 5) + _tmp2343 * sqrt_info(2, 2) -
        _tmp2344 * sqrt_info(2, 2) + _tmp2355 * sqrt_info(2, 4) + _tmp2359 * sqrt_info(2, 3) +
        _tmp2360 * sqrt_info(2, 0) + _tmp2361 * _tmp929 - _tmp2362 * sqrt_info(2, 1);
    _res_D_x_T_a(3, 1) =
        _tmp1051 * _tmp2332 + _tmp2327 * sqrt_info(3, 0) + _tmp2328 * _tmp936 -
        _tmp2331 * sqrt_info(3, 0) + _tmp2342 * sqrt_info(3, 5) - _tmp2344 * sqrt_info(3, 2) +
        _tmp2345 * sqrt_info(3, 1) + _tmp2355 * sqrt_info(3, 4) + _tmp2359 * sqrt_info(3, 3) +
        _tmp2360 * sqrt_info(3, 0) + _tmp2361 * _tmp935 - _tmp2362 * sqrt_info(3, 1);
    _res_D_x_T_a(4, 1) = _tmp1052 * _tmp2361 + _tmp1053 * _tmp2332 + _tmp1479 * _tmp2328 +
                         _tmp2327 * sqrt_info(4, 0) + _tmp2328 * _tmp941 + _tmp2328 * _tmp943 -
                         _tmp2331 * sqrt_info(4, 0) + _tmp2342 * sqrt_info(4, 5) -
                         _tmp2344 * sqrt_info(4, 2) + _tmp2355 * sqrt_info(4, 4) +
                         _tmp2359 * sqrt_info(4, 3) - _tmp2362 * sqrt_info(4, 1);
    _res_D_x_T_a(5, 1) = _tmp1054 * _tmp2361 + _tmp1055 * _tmp2332 + _tmp2327 * sqrt_info(5, 0) +
                         _tmp2328 * _tmp948 + _tmp2328 * _tmp950 - _tmp2329 * _tmp949 -
                         _tmp2331 * sqrt_info(5, 0) + _tmp2342 * sqrt_info(5, 5) -
                         _tmp2344 * sqrt_info(5, 2) + _tmp2355 * sqrt_info(5, 4) +
                         _tmp2359 * sqrt_info(5, 3) + _tmp2360 * sqrt_info(5, 0);
    _res_D_x_T_a(0, 2) =
        _tmp1043 * _tmp2368 - _tmp2369 * _tmp908 - _tmp2369 * _tmp911 - _tmp2369 * _tmp913 +
        _tmp2379 * sqrt_info(0, 5) + _tmp2380 * sqrt_info(0, 0) + _tmp2386 * sqrt_info(0, 4) +
        _tmp2388 * sqrt_info(0, 2) + _tmp2389 * sqrt_info(0, 2) + _tmp2390 * sqrt_info(0, 1) +
        _tmp2394 * sqrt_info(0, 3) + _tmp2395 * sqrt_info(0, 0);
    _res_D_x_T_a(1, 2) =
        _tmp2368 * _tmp924 + _tmp2369 * _tmp921 - _tmp2369 * _tmp925 - _tmp2369 * _tmp927 +
        _tmp2379 * sqrt_info(1, 5) + _tmp2386 * sqrt_info(1, 4) + _tmp2388 * sqrt_info(1, 2) +
        _tmp2389 * sqrt_info(1, 2) + _tmp2390 * sqrt_info(1, 1) + _tmp2394 * sqrt_info(1, 3) +
        _tmp2395 * sqrt_info(1, 0) - _tmp2396 * sqrt_info(1, 1);
    _res_D_x_T_a(2, 2) =
        _tmp1050 * _tmp2368 - _tmp2369 * _tmp931 - _tmp2369 * _tmp933 + _tmp2379 * sqrt_info(2, 5) +
        _tmp2380 * sqrt_info(2, 0) + _tmp2386 * sqrt_info(2, 4) + _tmp2387 * _tmp929 +
        _tmp2389 * sqrt_info(2, 2) + _tmp2390 * sqrt_info(2, 1) + _tmp2394 * sqrt_info(2, 3) +
        _tmp2395 * sqrt_info(2, 0) - _tmp2396 * sqrt_info(2, 1);
    _res_D_x_T_a(3, 2) = _tmp1051 * _tmp2368 + _tmp2369 * _tmp934 + _tmp2369 * _tmp936 -
                         _tmp2369 * _tmp938 - _tmp2369 * _tmp939 - _tmp2369 * _tmp940 +
                         _tmp2379 * sqrt_info(3, 5) + _tmp2386 * sqrt_info(3, 4) +
                         _tmp2388 * sqrt_info(3, 2) + _tmp2390 * sqrt_info(3, 1) +
                         _tmp2394 * sqrt_info(3, 3) + _tmp2395 * sqrt_info(3, 0);
    _res_D_x_T_a(4, 2) = _tmp1053 * _tmp2368 + _tmp2369 * _tmp941 + _tmp2369 * _tmp943 -
                         _tmp2369 * _tmp944 - _tmp2369 * _tmp946 + _tmp2379 * sqrt_info(4, 5) +
                         _tmp2386 * sqrt_info(4, 4) + _tmp2388 * sqrt_info(4, 2) +
                         _tmp2390 * sqrt_info(4, 1) + _tmp2394 * sqrt_info(4, 3) +
                         _tmp2395 * sqrt_info(4, 0) - _tmp2396 * sqrt_info(4, 1);
    _res_D_x_T_a(5, 2) = _tmp1055 * _tmp2368 + _tmp2369 * _tmp948 + _tmp2369 * _tmp950 -
                         _tmp2369 * _tmp951 - _tmp2369 * _tmp952 - _tmp2369 * _tmp953 +
                         _tmp2379 * sqrt_info(5, 5) + _tmp2380 * sqrt_info(5, 0) +
                         _tmp2386 * sqrt_info(5, 4) + _tmp2388 * sqrt_info(5, 2) +
                         _tmp2394 * sqrt_info(5, 3) + _tmp2395 * sqrt_info(5, 0);
    _res_D_x_T_a(0, 3) =
        _tmp2397 * sqrt_info(0, 5) + _tmp2398 * sqrt_info(0, 3) + _tmp2399 * sqrt_info(0, 4);
    _res_D_x_T_a(1, 3) =
        _tmp2397 * sqrt_info(1, 5) + _tmp2398 * sqrt_info(1, 3) + _tmp2399 * sqrt_info(1, 4);
    _res_D_x_T_a(2, 3) =
        _tmp2397 * sqrt_info(2, 5) + _tmp2398 * sqrt_info(2, 3) + _tmp2399 * sqrt_info(2, 4);
    _res_D_x_T_a(3, 3) =
        _tmp2397 * sqrt_info(3, 5) + _tmp2398 * sqrt_info(3, 3) + _tmp2399 * sqrt_info(3, 4);
    _res_D_x_T_a(4, 3) =
        _tmp2397 * sqrt_info(4, 5) + _tmp2398 * sqrt_info(4, 3) + _tmp2399 * sqrt_info(4, 4);
    _res_D_x_T_a(5, 3) =
        _tmp2397 * sqrt_info(5, 5) + _tmp2398 * sqrt_info(5, 3) + _tmp2399 * sqrt_info(5, 4);
    _res_D_x_T_a(0, 4) =
        _tmp2400 * sqrt_info(0, 3) + _tmp2401 * sqrt_info(0, 4) + _tmp2402 * sqrt_info(0, 5);
    _res_D_x_T_a(1, 4) =
        _tmp2400 * sqrt_info(1, 3) + _tmp2401 * sqrt_info(1, 4) + _tmp2402 * sqrt_info(1, 5);
    _res_D_x_T_a(2, 4) =
        _tmp2400 * sqrt_info(2, 3) + _tmp2401 * sqrt_info(2, 4) + _tmp2402 * sqrt_info(2, 5);
    _res_D_x_T_a(3, 4) =
        _tmp2400 * sqrt_info(3, 3) + _tmp2401 * sqrt_info(3, 4) + _tmp2402 * sqrt_info(3, 5);
    _res_D_x_T_a(4, 4) =
        _tmp2400 * sqrt_info(4, 3) + _tmp2401 * sqrt_info(4, 4) + _tmp2402 * sqrt_info(4, 5);
    _res_D_x_T_a(5, 4) =
        _tmp2400 * sqrt_info(5, 3) + _tmp2401 * sqrt_info(5, 4) + _tmp2402 * sqrt_info(5, 5);
    _res_D_x_T_a(0, 5) =
        _tmp2403 * sqrt_info(0, 5) + _tmp2404 * sqrt_info(0, 3) + _tmp2405 * sqrt_info(0, 4);
    _res_D_x_T_a(1, 5) =
        _tmp2403 * sqrt_info(1, 5) + _tmp2404 * sqrt_info(1, 3) + _tmp2405 * sqrt_info(1, 4);
    _res_D_x_T_a(2, 5) =
        _tmp2403 * sqrt_info(2, 5) + _tmp2404 * sqrt_info(2, 3) + _tmp2405 * sqrt_info(2, 4);
    _res_D_x_T_a(3, 5) =
        _tmp2403 * sqrt_info(3, 5) + _tmp2404 * sqrt_info(3, 3) + _tmp2405 * sqrt_info(3, 4);
    _res_D_x_T_a(4, 5) =
        _tmp2403 * sqrt_info(4, 5) + _tmp2404 * sqrt_info(4, 3) + _tmp2405 * sqrt_info(4, 4);
    _res_D_x_T_a(5, 5) =
        _tmp2403 * sqrt_info(5, 5) + _tmp2404 * sqrt_info(5, 3) + _tmp2405 * sqrt_info(5, 4);
  }

  if (res_D_y0 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_y0{res_D_y0};

    _res_D_y0(0, 0) =
        _tmp2613 * sqrt_info(0, 0) + _tmp2618 * _tmp2621 + _tmp2619 * sqrt_info(0, 0) -
        _tmp2621 * _tmp2623 + _tmp2646 * sqrt_info(0, 4) + _tmp2648 * sqrt_info(0, 2) +
        _tmp2650 * sqrt_info(0, 1) - _tmp2651 * sqrt_info(0, 0) + _tmp2653 * sqrt_info(0, 2) -
        _tmp2654 * sqrt_info(0, 2) + _tmp2655 * sqrt_info(0, 5) + _tmp2656 * sqrt_info(0, 3);
    _res_D_y0(1, 0) = _tmp2613 * sqrt_info(1, 0) + _tmp2619 * sqrt_info(1, 0) +
                      _tmp2646 * sqrt_info(1, 4) + _tmp2647 * _tmp382 - _tmp2651 * sqrt_info(1, 0) +
                      _tmp2653 * sqrt_info(1, 2) - _tmp2654 * sqrt_info(1, 2) +
                      _tmp2655 * sqrt_info(1, 5) + _tmp2656 * sqrt_info(1, 3) -
                      _tmp2657 * sqrt_info(1, 1) + _tmp2658 * _tmp383 + _tmp2659 * sqrt_info(1, 1);
    _res_D_y0(2, 0) =
        _tmp2613 * sqrt_info(2, 0) + _tmp2618 * _tmp2660 + _tmp2619 * sqrt_info(2, 0) -
        _tmp2623 * _tmp2660 + _tmp2646 * sqrt_info(2, 4) + _tmp2648 * sqrt_info(2, 2) +
        _tmp2650 * sqrt_info(2, 1) - _tmp2651 * sqrt_info(2, 0) + _tmp2655 * sqrt_info(2, 5) +
        _tmp2656 * sqrt_info(2, 3) - _tmp2657 * sqrt_info(2, 1) + _tmp2659 * sqrt_info(2, 1);
    _res_D_y0(3, 0) =
        _tmp2613 * sqrt_info(3, 0) + _tmp2619 * sqrt_info(3, 0) + _tmp2646 * sqrt_info(3, 4) +
        _tmp2648 * sqrt_info(3, 2) - _tmp2651 * sqrt_info(3, 0) + _tmp2653 * sqrt_info(3, 2) -
        _tmp2654 * sqrt_info(3, 2) + _tmp2655 * sqrt_info(3, 5) + _tmp2656 * sqrt_info(3, 3) -
        _tmp2657 * sqrt_info(3, 1) + _tmp2658 * _tmp384 + _tmp2659 * sqrt_info(3, 1);
    _res_D_y0(4, 0) =
        _tmp2613 * sqrt_info(4, 0) + _tmp2618 * _tmp2661 - _tmp2623 * _tmp2661 +
        _tmp2646 * sqrt_info(4, 4) + _tmp2648 * sqrt_info(4, 2) + _tmp2650 * sqrt_info(4, 1) +
        _tmp2653 * sqrt_info(4, 2) - _tmp2654 * sqrt_info(4, 2) + _tmp2655 * sqrt_info(4, 5) +
        _tmp2656 * sqrt_info(4, 3) - _tmp2657 * sqrt_info(4, 1) + _tmp2659 * sqrt_info(4, 1);
    _res_D_y0(5, 0) =
        _tmp2613 * sqrt_info(5, 0) + _tmp2619 * sqrt_info(5, 0) + _tmp2646 * sqrt_info(5, 4) +
        _tmp2648 * sqrt_info(5, 2) - _tmp2651 * sqrt_info(5, 0) + _tmp2653 * sqrt_info(5, 2) -
        _tmp2654 * sqrt_info(5, 2) + _tmp2655 * sqrt_info(5, 5) + _tmp2656 * sqrt_info(5, 3) -
        _tmp2657 * sqrt_info(5, 1) + _tmp2658 * _tmp385 + _tmp2659 * sqrt_info(5, 1);
    _res_D_y0(0, 1) =
        -_tmp2621 * _tmp2723 + _tmp2621 * _tmp2728 + _tmp2712 * sqrt_info(0, 4) +
        _tmp2713 * sqrt_info(0, 5) - _tmp2724 * sqrt_info(0, 0) + _tmp2726 * sqrt_info(0, 1) +
        _tmp2727 * sqrt_info(0, 3) + _tmp2729 * sqrt_info(0, 0) - _tmp2730 * sqrt_info(0, 2) +
        _tmp2732 * sqrt_info(0, 2) + _tmp2733 * sqrt_info(0, 0) + _tmp2734 * sqrt_info(0, 2);
    _res_D_y0(1, 1) =
        _tmp2712 * sqrt_info(1, 4) + _tmp2713 * sqrt_info(1, 5) - _tmp2724 * sqrt_info(1, 0) +
        _tmp2727 * sqrt_info(1, 3) + _tmp2729 * sqrt_info(1, 0) - _tmp2730 * sqrt_info(1, 2) +
        _tmp2731 * _tmp2736 + _tmp2733 * sqrt_info(1, 0) + _tmp2734 * sqrt_info(1, 2) +
        _tmp2735 * _tmp383 - _tmp2737 * sqrt_info(1, 1) + _tmp2738 * sqrt_info(1, 1);
    _res_D_y0(2, 1) =
        -_tmp2660 * _tmp2723 + _tmp2660 * _tmp2728 + _tmp2712 * sqrt_info(2, 4) +
        _tmp2713 * sqrt_info(2, 5) - _tmp2724 * sqrt_info(2, 0) + _tmp2726 * sqrt_info(2, 1) +
        _tmp2727 * sqrt_info(2, 3) + _tmp2729 * sqrt_info(2, 0) + _tmp2732 * sqrt_info(2, 2) +
        _tmp2733 * sqrt_info(2, 0) - _tmp2737 * sqrt_info(2, 1) + _tmp2738 * sqrt_info(2, 1);
    _res_D_y0(3, 1) =
        _tmp2712 * sqrt_info(3, 4) + _tmp2713 * sqrt_info(3, 5) - _tmp2724 * sqrt_info(3, 0) +
        _tmp2727 * sqrt_info(3, 3) + _tmp2729 * sqrt_info(3, 0) - _tmp2730 * sqrt_info(3, 2) +
        _tmp2732 * sqrt_info(3, 2) + _tmp2733 * sqrt_info(3, 0) + _tmp2734 * sqrt_info(3, 2) +
        _tmp2735 * _tmp384 - _tmp2737 * sqrt_info(3, 1) + _tmp2738 * sqrt_info(3, 1);
    _res_D_y0(4, 1) =
        -_tmp2661 * _tmp2723 + _tmp2661 * _tmp2728 + _tmp2712 * sqrt_info(4, 4) +
        _tmp2713 * sqrt_info(4, 5) + _tmp2726 * sqrt_info(4, 1) + _tmp2727 * sqrt_info(4, 3) -
        _tmp2730 * sqrt_info(4, 2) + _tmp2732 * sqrt_info(4, 2) + _tmp2733 * sqrt_info(4, 0) +
        _tmp2734 * sqrt_info(4, 2) - _tmp2737 * sqrt_info(4, 1) + _tmp2738 * sqrt_info(4, 1);
    _res_D_y0(5, 1) =
        _tmp2712 * sqrt_info(5, 4) + _tmp2713 * sqrt_info(5, 5) - _tmp2724 * sqrt_info(5, 0) +
        _tmp2727 * sqrt_info(5, 3) + _tmp2729 * sqrt_info(5, 0) - _tmp2730 * sqrt_info(5, 2) +
        _tmp2732 * sqrt_info(5, 2) + _tmp2733 * sqrt_info(5, 0) + _tmp2734 * sqrt_info(5, 2) +
        _tmp2735 * _tmp385 - _tmp2737 * sqrt_info(5, 1) + _tmp2738 * sqrt_info(5, 1);
    _res_D_y0(0, 2) =
        _tmp2621 * _tmp2793 - _tmp2621 * _tmp2796 + _tmp2783 * sqrt_info(0, 5) +
        _tmp2794 * sqrt_info(0, 0) + _tmp2795 * sqrt_info(0, 4) - _tmp2797 * sqrt_info(0, 0) +
        _tmp2798 * sqrt_info(0, 3) + _tmp2799 * sqrt_info(0, 2) - _tmp2800 * sqrt_info(0, 2) +
        _tmp2802 * sqrt_info(0, 2) + _tmp2804 * sqrt_info(0, 1) + _tmp2805 * sqrt_info(0, 0);
    _res_D_y0(1, 2) =
        _tmp2736 * _tmp2801 + _tmp2783 * sqrt_info(1, 5) + _tmp2794 * sqrt_info(1, 0) +
        _tmp2795 * sqrt_info(1, 4) - _tmp2797 * sqrt_info(1, 0) + _tmp2798 * sqrt_info(1, 3) +
        _tmp2799 * sqrt_info(1, 2) - _tmp2800 * sqrt_info(1, 2) + _tmp2805 * sqrt_info(1, 0) +
        _tmp2806 * sqrt_info(1, 1) - _tmp2807 * sqrt_info(1, 1) + _tmp2808 * _tmp383;
    _res_D_y0(2, 2) =
        _tmp2660 * _tmp2793 - _tmp2660 * _tmp2796 + _tmp2783 * sqrt_info(2, 5) +
        _tmp2794 * sqrt_info(2, 0) + _tmp2795 * sqrt_info(2, 4) - _tmp2797 * sqrt_info(2, 0) +
        _tmp2798 * sqrt_info(2, 3) + _tmp2802 * sqrt_info(2, 2) + _tmp2804 * sqrt_info(2, 1) +
        _tmp2805 * sqrt_info(2, 0) + _tmp2806 * sqrt_info(2, 1) - _tmp2807 * sqrt_info(2, 1);
    _res_D_y0(3, 2) =
        _tmp2783 * sqrt_info(3, 5) + _tmp2794 * sqrt_info(3, 0) + _tmp2795 * sqrt_info(3, 4) -
        _tmp2797 * sqrt_info(3, 0) + _tmp2798 * sqrt_info(3, 3) + _tmp2799 * sqrt_info(3, 2) -
        _tmp2800 * sqrt_info(3, 2) + _tmp2802 * sqrt_info(3, 2) + _tmp2805 * sqrt_info(3, 0) +
        _tmp2806 * sqrt_info(3, 1) - _tmp2807 * sqrt_info(3, 1) + _tmp2808 * _tmp384;
    _res_D_y0(4, 2) =
        _tmp2661 * _tmp2793 - _tmp2661 * _tmp2796 + _tmp2783 * sqrt_info(4, 5) +
        _tmp2795 * sqrt_info(4, 4) + _tmp2798 * sqrt_info(4, 3) + _tmp2799 * sqrt_info(4, 2) -
        _tmp2800 * sqrt_info(4, 2) + _tmp2802 * sqrt_info(4, 2) + _tmp2804 * sqrt_info(4, 1) +
        _tmp2805 * sqrt_info(4, 0) + _tmp2806 * sqrt_info(4, 1) - _tmp2807 * sqrt_info(4, 1);
    _res_D_y0(5, 2) =
        _tmp2783 * sqrt_info(5, 5) + _tmp2794 * sqrt_info(5, 0) + _tmp2795 * sqrt_info(5, 4) -
        _tmp2797 * sqrt_info(5, 0) + _tmp2798 * sqrt_info(5, 3) + _tmp2799 * sqrt_info(5, 2) -
        _tmp2800 * sqrt_info(5, 2) + _tmp2802 * sqrt_info(5, 2) + _tmp2805 * sqrt_info(5, 0) +
        _tmp2806 * sqrt_info(5, 1) - _tmp2807 * sqrt_info(5, 1) + _tmp2808 * _tmp385;
    _res_D_y0(0, 3) =
        _tmp2810 * sqrt_info(0, 3) + _tmp2811 * sqrt_info(0, 4) + _tmp2812 * sqrt_info(0, 5);
    _res_D_y0(1, 3) = _tmp2811 * sqrt_info(1, 4) + _tmp2812 * sqrt_info(1, 5) + _tmp2813 * _tmp891;
    _res_D_y0(2, 3) =
        _tmp2810 * sqrt_info(2, 3) + _tmp2811 * sqrt_info(2, 4) + _tmp2812 * sqrt_info(2, 5);
    _res_D_y0(3, 3) =
        _tmp2810 * sqrt_info(3, 3) + _tmp2811 * sqrt_info(3, 4) + _tmp2812 * sqrt_info(3, 5);
    _res_D_y0(4, 3) =
        _tmp2810 * sqrt_info(4, 3) + _tmp2811 * sqrt_info(4, 4) + _tmp2812 * sqrt_info(4, 5);
    _res_D_y0(5, 3) =
        _tmp2810 * sqrt_info(5, 3) + _tmp2811 * sqrt_info(5, 4) + _tmp2812 * sqrt_info(5, 5);
    _res_D_y0(0, 4) = _tmp1147 * _tmp2809 + _tmp1148 * _tmp2809 + _tmp2814 * sqrt_info(0, 3);
    _res_D_y0(1, 4) =
        _tmp2814 * sqrt_info(1, 3) + _tmp2815 * sqrt_info(1, 4) + _tmp2816 * sqrt_info(1, 5);
    _res_D_y0(2, 4) =
        _tmp2814 * sqrt_info(2, 3) + _tmp2815 * sqrt_info(2, 4) + _tmp2816 * sqrt_info(2, 5);
    _res_D_y0(3, 4) = _tmp1151 * _tmp2809 + _tmp2814 * sqrt_info(3, 3) + _tmp2816 * sqrt_info(3, 5);
    _res_D_y0(4, 4) = _tmp1152 * _tmp2809 + _tmp1153 * _tmp2809 + _tmp2814 * sqrt_info(4, 3);
    _res_D_y0(5, 4) = _tmp1154 * _tmp2809 + _tmp1155 * _tmp2809 + _tmp2814 * sqrt_info(5, 3);
    _res_D_y0(0, 5) = _tmp1156 * _tmp2809 + _tmp2817 * sqrt_info(0, 5) + _tmp2818 * sqrt_info(0, 3);
    _res_D_y0(1, 5) = _tmp1159 * _tmp2809 + _tmp2813 * _tmp892 + _tmp2817 * sqrt_info(1, 5);
    _res_D_y0(2, 5) = _tmp1160 * _tmp2809 + _tmp2817 * sqrt_info(2, 5) + _tmp2818 * sqrt_info(2, 3);
    _res_D_y0(3, 5) = _tmp1161 * _tmp2809 + _tmp2817 * sqrt_info(3, 5) + _tmp2818 * sqrt_info(3, 3);
    _res_D_y0(4, 5) = _tmp1162 * _tmp2809 + _tmp1163 * _tmp2809 + _tmp2818 * sqrt_info(4, 3);
    _res_D_y0(5, 5) = _tmp1164 * _tmp2809 + _tmp2817 * sqrt_info(5, 5) + _tmp2818 * sqrt_info(5, 3);
  }

  if (res_D_y1 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_y1{res_D_y1};

    _res_D_y1(0, 0) = _tmp1043 * _tmp3036 + _tmp3009 * _tmp884 - _tmp3009 * _tmp908 -
                      _tmp3009 * _tmp911 - _tmp3009 * _tmp913 + _tmp3010 * sqrt_info(0, 0) +
                      _tmp3030 * sqrt_info(0, 5) + _tmp3031 * sqrt_info(0, 1) +
                      _tmp3032 * sqrt_info(0, 4) + _tmp3033 * sqrt_info(0, 3) +
                      _tmp3034 * sqrt_info(0, 0) + _tmp3035 * _tmp881;
    _res_D_y1(1, 0) = _tmp1476 * _tmp3009 + _tmp3009 * _tmp921 + _tmp3009 * _tmp923 -
                      _tmp3009 * _tmp925 - _tmp3009 * _tmp926 - _tmp3009 * _tmp927 +
                      _tmp3030 * sqrt_info(1, 5) + _tmp3032 * sqrt_info(1, 4) +
                      _tmp3033 * sqrt_info(1, 3) + _tmp3034 * sqrt_info(1, 0) + _tmp3035 * _tmp922 +
                      _tmp3036 * _tmp924;
    _res_D_y1(2, 0) = _tmp1049 * _tmp3009 + _tmp1050 * _tmp3036 + _tmp3009 * _tmp930 -
                      _tmp3009 * _tmp931 - _tmp3009 * _tmp932 - _tmp3009 * _tmp933 +
                      _tmp3010 * sqrt_info(2, 0) + _tmp3030 * sqrt_info(2, 5) +
                      _tmp3032 * sqrt_info(2, 4) + _tmp3033 * sqrt_info(2, 3) +
                      _tmp3034 * sqrt_info(2, 0) + _tmp3035 * _tmp929;
    _res_D_y1(3, 0) = _tmp1051 * _tmp3036 + _tmp3009 * _tmp934 + _tmp3009 * _tmp936 -
                      _tmp3009 * _tmp938 - _tmp3009 * _tmp939 - _tmp3009 * _tmp940 +
                      _tmp3030 * sqrt_info(3, 5) + _tmp3031 * sqrt_info(3, 1) +
                      _tmp3032 * sqrt_info(3, 4) + _tmp3033 * sqrt_info(3, 3) +
                      _tmp3034 * sqrt_info(3, 0) + _tmp3035 * _tmp935;
    _res_D_y1(4, 0) = _tmp1053 * _tmp3036 + _tmp1479 * _tmp3009 + _tmp3009 * _tmp941 +
                      _tmp3009 * _tmp943 - _tmp3009 * _tmp944 - _tmp3009 * _tmp945 -
                      _tmp3009 * _tmp946 + _tmp3030 * sqrt_info(4, 5) + _tmp3032 * sqrt_info(4, 4) +
                      _tmp3033 * sqrt_info(4, 3) + _tmp3034 * sqrt_info(4, 0) +
                      _tmp3037 * sqrt_info(4, 2);
    _res_D_y1(5, 0) = _tmp1055 * _tmp3036 + _tmp3009 * _tmp947 + _tmp3009 * _tmp948 +
                      _tmp3009 * _tmp950 - _tmp3009 * _tmp951 - _tmp3009 * _tmp952 -
                      _tmp3009 * _tmp953 + _tmp3030 * sqrt_info(5, 5) + _tmp3032 * sqrt_info(5, 4) +
                      _tmp3033 * sqrt_info(5, 3) + _tmp3034 * sqrt_info(5, 0) +
                      _tmp3037 * sqrt_info(5, 2);
    _res_D_y1(0, 1) = _tmp1043 * _tmp3103 + _tmp3104 * _tmp783 + _tmp3104 * _tmp884 -
                      _tmp3104 * _tmp908 - _tmp3104 * _tmp911 - _tmp3104 * _tmp913 +
                      _tmp3105 * sqrt_info(0, 0) + _tmp3121 * sqrt_info(0, 3) +
                      _tmp3122 * sqrt_info(0, 1) + _tmp3123 * sqrt_info(0, 4) +
                      _tmp3124 * sqrt_info(0, 5) + _tmp3125 * _tmp881;
    _res_D_y1(1, 1) = _tmp3103 * _tmp924 + _tmp3104 * _tmp921 + _tmp3104 * _tmp923 -
                      _tmp3104 * _tmp925 - _tmp3104 * _tmp926 - _tmp3104 * _tmp927 +
                      _tmp3105 * sqrt_info(1, 0) + _tmp3121 * sqrt_info(1, 3) +
                      _tmp3122 * sqrt_info(1, 1) + _tmp3123 * sqrt_info(1, 4) +
                      _tmp3124 * sqrt_info(1, 5) + _tmp3125 * _tmp922;
    _res_D_y1(2, 1) = _tmp1049 * _tmp3104 + _tmp1050 * _tmp3103 + _tmp3104 * _tmp928 +
                      _tmp3104 * _tmp930 - _tmp3104 * _tmp931 - _tmp3104 * _tmp932 -
                      _tmp3104 * _tmp933 + _tmp3105 * sqrt_info(2, 0) + _tmp3121 * sqrt_info(2, 3) +
                      _tmp3123 * sqrt_info(2, 4) + _tmp3124 * sqrt_info(2, 5) + _tmp3125 * _tmp929;
    _res_D_y1(3, 1) = _tmp1051 * _tmp3103 + _tmp3104 * _tmp934 + _tmp3104 * _tmp936 -
                      _tmp3104 * _tmp938 - _tmp3104 * _tmp939 - _tmp3104 * _tmp940 +
                      _tmp3105 * sqrt_info(3, 0) + _tmp3121 * sqrt_info(3, 3) +
                      _tmp3122 * sqrt_info(3, 1) + _tmp3123 * sqrt_info(3, 4) +
                      _tmp3124 * sqrt_info(3, 5) + _tmp3125 * _tmp935;
    _res_D_y1(4, 1) = _tmp1052 * _tmp3125 + _tmp1053 * _tmp3103 + _tmp3104 * _tmp941 +
                      _tmp3104 * _tmp943 - _tmp3104 * _tmp944 - _tmp3104 * _tmp945 -
                      _tmp3104 * _tmp946 + _tmp3105 * sqrt_info(4, 0) + _tmp3121 * sqrt_info(4, 3) +
                      _tmp3122 * sqrt_info(4, 1) + _tmp3123 * sqrt_info(4, 4) +
                      _tmp3124 * sqrt_info(4, 5);
    _res_D_y1(5, 1) = _tmp1054 * _tmp3125 + _tmp1055 * _tmp3103 + _tmp3104 * _tmp947 +
                      _tmp3104 * _tmp948 + _tmp3104 * _tmp950 - _tmp3104 * _tmp951 -
                      _tmp3104 * _tmp952 - _tmp3104 * _tmp953 + _tmp3105 * sqrt_info(5, 0) +
                      _tmp3121 * sqrt_info(5, 3) + _tmp3123 * sqrt_info(5, 4) +
                      _tmp3124 * sqrt_info(5, 5);
    _res_D_y1(0, 2) = _tmp3184 * _tmp884 - _tmp3184 * _tmp908 - _tmp3184 * _tmp911 -
                      _tmp3184 * _tmp913 + _tmp3186 * sqrt_info(0, 1) + _tmp3202 * sqrt_info(0, 5) +
                      _tmp3203 * sqrt_info(0, 4) + _tmp3204 * _tmp881 + _tmp3205 * sqrt_info(0, 1) +
                      _tmp3206 * sqrt_info(0, 3) + _tmp3207 * sqrt_info(0, 0) +
                      _tmp3208 * sqrt_info(0, 0);
    _res_D_y1(1, 2) = _tmp3184 * _tmp921 + _tmp3184 * _tmp923 - _tmp3184 * _tmp925 -
                      _tmp3184 * _tmp926 - _tmp3184 * _tmp927 + _tmp3185 * _tmp924 +
                      _tmp3202 * sqrt_info(1, 5) + _tmp3203 * sqrt_info(1, 4) + _tmp3204 * _tmp922 +
                      _tmp3205 * sqrt_info(1, 1) + _tmp3206 * sqrt_info(1, 3) +
                      _tmp3208 * sqrt_info(1, 0);
    _res_D_y1(2, 2) = _tmp1049 * _tmp3184 + _tmp3184 * _tmp930 - _tmp3184 * _tmp931 -
                      _tmp3184 * _tmp932 - _tmp3184 * _tmp933 + _tmp3186 * sqrt_info(2, 1) +
                      _tmp3202 * sqrt_info(2, 5) + _tmp3203 * sqrt_info(2, 4) + _tmp3204 * _tmp929 +
                      _tmp3206 * sqrt_info(2, 3) + _tmp3207 * sqrt_info(2, 0) +
                      _tmp3208 * sqrt_info(2, 0);
    _res_D_y1(3, 2) = _tmp3184 * _tmp936 - _tmp3184 * _tmp938 - _tmp3184 * _tmp939 +
                      _tmp3202 * sqrt_info(3, 5) + _tmp3203 * sqrt_info(3, 4) + _tmp3204 * _tmp935 +
                      _tmp3205 * sqrt_info(3, 1) + _tmp3206 * sqrt_info(3, 3) +
                      _tmp3207 * sqrt_info(3, 0) + _tmp3208 * sqrt_info(3, 0) -
                      _tmp3209 * sqrt_info(3, 2) + _tmp3210 * _tmp384;
    _res_D_y1(4, 2) = _tmp1052 * _tmp3204 + _tmp3184 * _tmp943 - _tmp3184 * _tmp944 -
                      _tmp3184 * _tmp945 + _tmp3186 * sqrt_info(4, 1) + _tmp3202 * sqrt_info(4, 5) +
                      _tmp3203 * sqrt_info(4, 4) + _tmp3205 * sqrt_info(4, 1) +
                      _tmp3206 * sqrt_info(4, 3) + _tmp3207 * sqrt_info(4, 0) +
                      _tmp3208 * sqrt_info(4, 0) - _tmp3209 * sqrt_info(4, 2);
    _res_D_y1(5, 2) = _tmp1054 * _tmp3204 + _tmp3184 * _tmp948 + _tmp3184 * _tmp950 -
                      _tmp3184 * _tmp951 - _tmp3184 * _tmp952 + _tmp3202 * sqrt_info(5, 5) +
                      _tmp3203 * sqrt_info(5, 4) + _tmp3206 * sqrt_info(5, 3) +
                      _tmp3207 * sqrt_info(5, 0) + _tmp3208 * sqrt_info(5, 0) -
                      _tmp3209 * sqrt_info(5, 2) + _tmp3210 * _tmp385;
    _res_D_y1(0, 3) = _tmp1582 * _tmp3211 + _tmp1583 * _tmp3211 + _tmp1584 * _tmp3211;
    _res_D_y1(1, 3) = _tmp1585 * _tmp3211 + _tmp1586 * _tmp3211 + _tmp1587 * _tmp3211;
    _res_D_y1(2, 3) = _tmp1588 * _tmp3211 + _tmp1589 * _tmp3211 + _tmp1590 * _tmp3211;
    _res_D_y1(3, 3) = _tmp1591 * _tmp3211 + _tmp1592 * _tmp3211 + _tmp1593 * _tmp3211;
    _res_D_y1(4, 3) = _tmp1594 * _tmp3211 + _tmp1595 * _tmp3211 + _tmp1596 * _tmp3211;
    _res_D_y1(5, 3) = _tmp1597 * _tmp3211 + _tmp1598 * _tmp3211 + _tmp1599 * _tmp3211;
    _res_D_y1(0, 4) = _tmp1147 * _tmp3211 + _tmp1601 * _tmp3211 + _tmp3212 * sqrt_info(0, 5);
    _res_D_y1(1, 4) = _tmp1602 * _tmp3211 + _tmp3212 * sqrt_info(1, 5) + _tmp3213 * sqrt_info(1, 4);
    _res_D_y1(2, 4) = _tmp1604 * _tmp3211 + _tmp3212 * sqrt_info(2, 5) + _tmp3213 * sqrt_info(2, 4);
    _res_D_y1(3, 4) = _tmp1151 * _tmp3211 + _tmp1605 * _tmp3211 + _tmp3212 * sqrt_info(3, 5);
    _res_D_y1(4, 4) = _tmp1152 * _tmp3211 + _tmp1153 * _tmp3211 + _tmp1606 * _tmp3211;
    _res_D_y1(5, 4) = _tmp1154 * _tmp3211 + _tmp1155 * _tmp3211 + _tmp1607 * _tmp3211;
    _res_D_y1(0, 5) =
        _tmp3214 * sqrt_info(0, 5) + _tmp3215 * sqrt_info(0, 3) + _tmp3216 * sqrt_info(0, 4);
    _res_D_y1(1, 5) =
        _tmp3214 * sqrt_info(1, 5) + _tmp3215 * sqrt_info(1, 3) + _tmp3216 * sqrt_info(1, 4);
    _res_D_y1(2, 5) =
        _tmp3214 * sqrt_info(2, 5) + _tmp3215 * sqrt_info(2, 3) + _tmp3216 * sqrt_info(2, 4);
    _res_D_y1(3, 5) =
        _tmp3214 * sqrt_info(3, 5) + _tmp3215 * sqrt_info(3, 3) + _tmp3216 * sqrt_info(3, 4);
    _res_D_y1(4, 5) = _tmp1162 * _tmp3211 + _tmp3214 * sqrt_info(4, 5) + _tmp3215 * sqrt_info(4, 3);
    _res_D_y1(5, 5) = _tmp1164 * _tmp3211 + _tmp3214 * sqrt_info(5, 5) + _tmp3215 * sqrt_info(5, 3);
  }

  if (res_D_y2 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_y2{res_D_y2};

    _res_D_y2(0, 0) = _tmp1043 * _tmp3396 - _tmp3375 * _tmp911 - _tmp3375 * _tmp913 +
                      _tmp3376 * sqrt_info(0, 2) + _tmp3392 * sqrt_info(0, 4) +
                      _tmp3393 * sqrt_info(0, 5) + _tmp3394 * sqrt_info(0, 3) + _tmp3395 * _tmp881 -
                      _tmp3397 * sqrt_info(0, 0) + _tmp3398 * sqrt_info(0, 1) +
                      _tmp3399 * sqrt_info(0, 0) + _tmp3400 * sqrt_info(0, 0);
    _res_D_y2(1, 0) = -_tmp3375 * _tmp925 - _tmp3375 * _tmp927 + _tmp3376 * sqrt_info(1, 2) +
                      _tmp3392 * sqrt_info(1, 4) + _tmp3393 * sqrt_info(1, 5) +
                      _tmp3394 * sqrt_info(1, 3) + _tmp3395 * _tmp922 + _tmp3396 * _tmp924 +
                      _tmp3398 * sqrt_info(1, 1) + _tmp3399 * sqrt_info(1, 0) +
                      _tmp3400 * sqrt_info(1, 0) - _tmp3401 * sqrt_info(1, 1);
    _res_D_y2(2, 0) = _tmp1050 * _tmp3396 - _tmp3375 * _tmp931 - _tmp3375 * _tmp933 +
                      _tmp3376 * sqrt_info(2, 2) + _tmp3392 * sqrt_info(2, 4) +
                      _tmp3393 * sqrt_info(2, 5) + _tmp3394 * sqrt_info(2, 3) + _tmp3395 * _tmp929 +
                      _tmp3398 * sqrt_info(2, 1) + _tmp3399 * sqrt_info(2, 0) +
                      _tmp3400 * sqrt_info(2, 0) - _tmp3401 * sqrt_info(2, 1);
    _res_D_y2(3, 0) = _tmp1051 * _tmp3396 + _tmp3375 * _tmp936 - _tmp3375 * _tmp938 -
                      _tmp3375 * _tmp939 - _tmp3375 * _tmp940 + _tmp3392 * sqrt_info(3, 4) +
                      _tmp3393 * sqrt_info(3, 5) + _tmp3394 * sqrt_info(3, 3) + _tmp3395 * _tmp935 +
                      _tmp3398 * sqrt_info(3, 1) + _tmp3399 * sqrt_info(3, 0) +
                      _tmp3400 * sqrt_info(3, 0);
    _res_D_y2(4, 0) = _tmp1052 * _tmp3395 + _tmp1053 * _tmp3396 + _tmp3375 * _tmp943 -
                      _tmp3375 * _tmp945 - _tmp3375 * _tmp946 + _tmp3392 * sqrt_info(4, 4) +
                      _tmp3393 * sqrt_info(4, 5) + _tmp3394 * sqrt_info(4, 3) -
                      _tmp3397 * sqrt_info(4, 0) + _tmp3398 * sqrt_info(4, 1) +
                      _tmp3399 * sqrt_info(4, 0) + _tmp3400 * sqrt_info(4, 0);
    _res_D_y2(5, 0) = _tmp1054 * _tmp3395 + _tmp1055 * _tmp3396 + _tmp3375 * _tmp948 +
                      _tmp3375 * _tmp950 - _tmp3375 * _tmp952 - _tmp3375 * _tmp953 +
                      _tmp3392 * sqrt_info(5, 4) + _tmp3393 * sqrt_info(5, 5) +
                      _tmp3394 * sqrt_info(5, 3) - _tmp3397 * sqrt_info(5, 0) +
                      _tmp3399 * sqrt_info(5, 0) + _tmp3400 * sqrt_info(5, 0);
    _res_D_y2(0, 1) = _tmp1043 * _tmp3472 + _tmp3453 * _tmp783 + _tmp3453 * _tmp884 -
                      _tmp3453 * _tmp908 - _tmp3453 * _tmp911 - _tmp3453 * _tmp913 +
                      _tmp3469 * sqrt_info(0, 3) + _tmp3470 * sqrt_info(0, 5) + _tmp3471 * _tmp881 +
                      _tmp3473 * sqrt_info(0, 0) + _tmp3474 * sqrt_info(0, 4) +
                      _tmp3475 * sqrt_info(0, 1);
    _res_D_y2(1, 1) = _tmp3453 * _tmp921 + _tmp3453 * _tmp923 - _tmp3453 * _tmp925 -
                      _tmp3453 * _tmp926 - _tmp3453 * _tmp927 + _tmp3469 * sqrt_info(1, 3) +
                      _tmp3470 * sqrt_info(1, 5) + _tmp3471 * _tmp922 + _tmp3472 * _tmp924 +
                      _tmp3473 * sqrt_info(1, 0) + _tmp3474 * sqrt_info(1, 4) +
                      _tmp3475 * sqrt_info(1, 1);
    _res_D_y2(2, 1) = _tmp1050 * _tmp3472 + _tmp3453 * _tmp928 + _tmp3453 * _tmp930 -
                      _tmp3453 * _tmp931 - _tmp3453 * _tmp932 - _tmp3453 * _tmp933 +
                      _tmp3469 * sqrt_info(2, 3) + _tmp3470 * sqrt_info(2, 5) + _tmp3471 * _tmp929 +
                      _tmp3473 * sqrt_info(2, 0) + _tmp3474 * sqrt_info(2, 4) +
                      _tmp3475 * sqrt_info(2, 1);
    _res_D_y2(3, 1) = _tmp1051 * _tmp3472 + _tmp3453 * _tmp934 + _tmp3453 * _tmp936 -
                      _tmp3453 * _tmp938 - _tmp3453 * _tmp939 - _tmp3453 * _tmp940 +
                      _tmp3469 * sqrt_info(3, 3) + _tmp3470 * sqrt_info(3, 5) + _tmp3471 * _tmp935 +
                      _tmp3473 * sqrt_info(3, 0) + _tmp3474 * sqrt_info(3, 4) +
                      _tmp3475 * sqrt_info(3, 1);
    _res_D_y2(4, 1) = _tmp1052 * _tmp3471 + _tmp1053 * _tmp3472 + _tmp3453 * _tmp941 +
                      _tmp3453 * _tmp943 - _tmp3453 * _tmp944 - _tmp3453 * _tmp945 -
                      _tmp3453 * _tmp946 + _tmp3469 * sqrt_info(4, 3) + _tmp3470 * sqrt_info(4, 5) +
                      _tmp3473 * sqrt_info(4, 0) + _tmp3474 * sqrt_info(4, 4) +
                      _tmp3475 * sqrt_info(4, 1);
    _res_D_y2(5, 1) = _tmp1054 * _tmp3471 + _tmp1055 * _tmp3472 + _tmp3453 * _tmp947 +
                      _tmp3453 * _tmp948 + _tmp3453 * _tmp950 - _tmp3453 * _tmp951 -
                      _tmp3453 * _tmp952 - _tmp3453 * _tmp953 + _tmp3469 * sqrt_info(5, 3) +
                      _tmp3470 * sqrt_info(5, 5) + _tmp3473 * sqrt_info(5, 0) +
                      _tmp3474 * sqrt_info(5, 4);
    _res_D_y2(0, 2) = _tmp3529 * _tmp884 - _tmp3529 * _tmp908 - _tmp3529 * _tmp911 -
                      _tmp3529 * _tmp913 + _tmp3530 * sqrt_info(0, 0) + _tmp3546 * sqrt_info(0, 5) +
                      _tmp3547 * sqrt_info(0, 3) + _tmp3548 * sqrt_info(0, 0) +
                      _tmp3550 * sqrt_info(0, 1) + _tmp3551 * _tmp881 + _tmp3552 * sqrt_info(0, 4) +
                      _tmp3553 * sqrt_info(0, 1);
    _res_D_y2(1, 2) = _tmp3529 * _tmp921 + _tmp3529 * _tmp923 - _tmp3529 * _tmp925 -
                      _tmp3529 * _tmp926 - _tmp3529 * _tmp927 + _tmp3546 * sqrt_info(1, 5) +
                      _tmp3547 * sqrt_info(1, 3) + _tmp3548 * sqrt_info(1, 0) + _tmp3549 * _tmp924 +
                      _tmp3551 * _tmp922 + _tmp3552 * sqrt_info(1, 4) + _tmp3553 * sqrt_info(1, 1);
    _res_D_y2(2, 2) = _tmp3529 * _tmp930 - _tmp3529 * _tmp931 - _tmp3529 * _tmp932 -
                      _tmp3529 * _tmp933 + _tmp3530 * sqrt_info(2, 0) + _tmp3546 * sqrt_info(2, 5) +
                      _tmp3547 * sqrt_info(2, 3) + _tmp3548 * sqrt_info(2, 0) +
                      _tmp3550 * sqrt_info(2, 1) + _tmp3551 * _tmp929 + _tmp3552 * sqrt_info(2, 4) +
                      _tmp3553 * sqrt_info(2, 1);
    _res_D_y2(3, 2) = _tmp3529 * _tmp934 + _tmp3529 * _tmp936 - _tmp3529 * _tmp938 -
                      _tmp3529 * _tmp939 - _tmp3529 * _tmp940 + _tmp3546 * sqrt_info(3, 5) +
                      _tmp3547 * sqrt_info(3, 3) + _tmp3548 * sqrt_info(3, 0) + _tmp3551 * _tmp935 +
                      _tmp3552 * sqrt_info(3, 4) + _tmp3553 * sqrt_info(3, 1) + _tmp3554 * _tmp384;
    _res_D_y2(4, 2) = _tmp1052 * _tmp3551 + _tmp3529 * _tmp941 + _tmp3529 * _tmp943 -
                      _tmp3529 * _tmp944 - _tmp3529 * _tmp945 - _tmp3529 * _tmp946 +
                      _tmp3546 * sqrt_info(4, 5) + _tmp3547 * sqrt_info(4, 3) +
                      _tmp3548 * sqrt_info(4, 0) + _tmp3550 * sqrt_info(4, 1) +
                      _tmp3552 * sqrt_info(4, 4) + _tmp3553 * sqrt_info(4, 1);
    _res_D_y2(5, 2) = _tmp1054 * _tmp3551 + _tmp3529 * _tmp948 + _tmp3529 * _tmp950 -
                      _tmp3529 * _tmp951 - _tmp3529 * _tmp952 - _tmp3529 * _tmp953 +
                      _tmp3530 * sqrt_info(5, 0) + _tmp3546 * sqrt_info(5, 5) +
                      _tmp3547 * sqrt_info(5, 3) + _tmp3548 * sqrt_info(5, 0) +
                      _tmp3552 * sqrt_info(5, 4) + _tmp3554 * _tmp385;
    _res_D_y2(0, 3) = _tmp1582 * _tmp3555 + _tmp1584 * _tmp3555 + _tmp3556 * sqrt_info(0, 5);
    _res_D_y2(1, 3) = _tmp1585 * _tmp3555 + _tmp1587 * _tmp3555 + _tmp3556 * sqrt_info(1, 5);
    _res_D_y2(2, 3) = _tmp1588 * _tmp3555 + _tmp1590 * _tmp3555 + _tmp3556 * sqrt_info(2, 5);
    _res_D_y2(3, 3) = _tmp1591 * _tmp3555 + _tmp1593 * _tmp3555 + _tmp3556 * sqrt_info(3, 5);
    _res_D_y2(4, 3) = _tmp1594 * _tmp3555 + _tmp1596 * _tmp3555 + _tmp3556 * sqrt_info(4, 5);
    _res_D_y2(5, 3) = _tmp1597 * _tmp3555 + _tmp1599 * _tmp3555 + _tmp3556 * sqrt_info(5, 5);
    _res_D_y2(0, 4) = _tmp1148 * _tmp3555 + _tmp1601 * _tmp3555 + _tmp3557 * sqrt_info(0, 4);
    _res_D_y2(1, 4) = _tmp1602 * _tmp3555 + _tmp3557 * sqrt_info(1, 4) + _tmp3558 * sqrt_info(1, 5);
    _res_D_y2(2, 4) = _tmp1604 * _tmp3555 + _tmp3557 * sqrt_info(2, 4) + _tmp3558 * sqrt_info(2, 5);
    _res_D_y2(3, 4) = _tmp1151 * _tmp3555 + _tmp1605 * _tmp3555 + _tmp3558 * sqrt_info(3, 5);
    _res_D_y2(4, 4) = _tmp1153 * _tmp3555 + _tmp1606 * _tmp3555 + _tmp3557 * sqrt_info(4, 4);
    _res_D_y2(5, 4) = _tmp1154 * _tmp3555 + _tmp1155 * _tmp3555 + _tmp1607 * _tmp3555;
    _res_D_y2(0, 5) = _tmp1156 * _tmp3555 + _tmp3559 * sqrt_info(0, 5) + _tmp3560 * sqrt_info(0, 3);
    _res_D_y2(1, 5) = _tmp1159 * _tmp3555 + _tmp3559 * sqrt_info(1, 5) + _tmp3560 * sqrt_info(1, 3);
    _res_D_y2(2, 5) = _tmp1160 * _tmp3555 + _tmp3559 * sqrt_info(2, 5) + _tmp3560 * sqrt_info(2, 3);
    _res_D_y2(3, 5) = _tmp1161 * _tmp3555 + _tmp3559 * sqrt_info(3, 5) + _tmp3560 * sqrt_info(3, 3);
    _res_D_y2(4, 5) = _tmp1162 * _tmp3555 + _tmp3559 * sqrt_info(4, 5) + _tmp3560 * sqrt_info(4, 3);
    _res_D_y2(5, 5) = _tmp1164 * _tmp3555 + _tmp3559 * sqrt_info(5, 5) + _tmp3560 * sqrt_info(5, 3);
  }

  if (res_D_y3 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_y3{res_D_y3};

    _res_D_y3(0, 0) = _tmp1043 * _tmp3606 + _tmp3604 * _tmp783 - _tmp3604 * _tmp911 -
                      _tmp3604 * _tmp913 - _tmp3605 * sqrt_info(0, 0) + _tmp3622 * sqrt_info(0, 4) +
                      _tmp3623 * sqrt_info(0, 0) + _tmp3624 * _tmp881 + _tmp3625 * sqrt_info(0, 5) +
                      _tmp3626 * sqrt_info(0, 1) + _tmp3627 * sqrt_info(0, 2) +
                      _tmp3628 * sqrt_info(0, 3);
    _res_D_y3(1, 0) = _tmp3604 * _tmp921 - _tmp3604 * _tmp925 - _tmp3604 * _tmp926 -
                      _tmp3604 * _tmp927 + _tmp3606 * _tmp924 + _tmp3622 * sqrt_info(1, 4) +
                      _tmp3623 * sqrt_info(1, 0) + _tmp3624 * _tmp922 + _tmp3625 * sqrt_info(1, 5) +
                      _tmp3626 * sqrt_info(1, 1) + _tmp3627 * sqrt_info(1, 2) +
                      _tmp3628 * sqrt_info(1, 3);
    _res_D_y3(2, 0) = _tmp1050 * _tmp3606 + _tmp3604 * _tmp928 - _tmp3604 * _tmp931 -
                      _tmp3604 * _tmp932 - _tmp3604 * _tmp933 + _tmp3622 * sqrt_info(2, 4) +
                      _tmp3623 * sqrt_info(2, 0) + _tmp3624 * _tmp929 + _tmp3625 * sqrt_info(2, 5) +
                      _tmp3626 * sqrt_info(2, 1) + _tmp3627 * sqrt_info(2, 2) +
                      _tmp3628 * sqrt_info(2, 3);
    _res_D_y3(3, 0) = _tmp1051 * _tmp3606 + _tmp3604 * _tmp934 + _tmp3604 * _tmp936 -
                      _tmp3604 * _tmp938 - _tmp3604 * _tmp939 - _tmp3604 * _tmp940 +
                      _tmp3622 * sqrt_info(3, 4) + _tmp3623 * sqrt_info(3, 0) + _tmp3624 * _tmp935 +
                      _tmp3625 * sqrt_info(3, 5) + _tmp3626 * sqrt_info(3, 1) +
                      _tmp3628 * sqrt_info(3, 3);
    _res_D_y3(4, 0) = _tmp1052 * _tmp3624 + _tmp1053 * _tmp3606 + _tmp3604 * _tmp941 +
                      _tmp3604 * _tmp943 - _tmp3604 * _tmp945 - _tmp3604 * _tmp946 -
                      _tmp3605 * sqrt_info(4, 0) + _tmp3622 * sqrt_info(4, 4) +
                      _tmp3623 * sqrt_info(4, 0) + _tmp3625 * sqrt_info(4, 5) +
                      _tmp3626 * sqrt_info(4, 1) + _tmp3628 * sqrt_info(4, 3);
    _res_D_y3(5, 0) = _tmp1054 * _tmp3624 + _tmp1055 * _tmp3606 + _tmp3604 * _tmp947 +
                      _tmp3604 * _tmp948 + _tmp3604 * _tmp950 - _tmp3604 * _tmp952 -
                      _tmp3604 * _tmp953 - _tmp3605 * sqrt_info(5, 0) + _tmp3622 * sqrt_info(5, 4) +
                      _tmp3623 * sqrt_info(5, 0) + _tmp3625 * sqrt_info(5, 5) +
                      _tmp3628 * sqrt_info(5, 3);
    _res_D_y3(0, 1) = _tmp3658 * sqrt_info(0, 0) - _tmp3659 * _tmp911 - _tmp3659 * _tmp913 +
                      _tmp3660 * sqrt_info(0, 1) + _tmp3661 * _tmp881 + _tmp3677 * sqrt_info(0, 5) +
                      _tmp3678 * sqrt_info(0, 3) + _tmp3679 * sqrt_info(0, 4) -
                      _tmp3680 * sqrt_info(0, 0) + _tmp3682 * sqrt_info(0, 1) +
                      _tmp3683 * sqrt_info(0, 2) + _tmp3684 * sqrt_info(0, 0);
    _res_D_y3(1, 1) = _tmp3658 * sqrt_info(1, 0) + _tmp3659 * _tmp921 - _tmp3659 * _tmp925 -
                      _tmp3659 * _tmp926 - _tmp3659 * _tmp927 + _tmp3660 * sqrt_info(1, 1) +
                      _tmp3677 * sqrt_info(1, 5) + _tmp3678 * sqrt_info(1, 3) +
                      _tmp3679 * sqrt_info(1, 4) + _tmp3681 * _tmp383 + _tmp3683 * sqrt_info(1, 2) +
                      _tmp3685 * sqrt_info(1, 2);
    _res_D_y3(2, 1) = _tmp1049 * _tmp3659 + _tmp3658 * sqrt_info(2, 0) - _tmp3659 * _tmp931 -
                      _tmp3659 * _tmp932 - _tmp3659 * _tmp933 + _tmp3661 * _tmp929 +
                      _tmp3677 * sqrt_info(2, 5) + _tmp3678 * sqrt_info(2, 3) +
                      _tmp3679 * sqrt_info(2, 4) + _tmp3682 * sqrt_info(2, 1) +
                      _tmp3683 * sqrt_info(2, 2) + _tmp3684 * sqrt_info(2, 0);
    _res_D_y3(3, 1) = _tmp3658 * sqrt_info(3, 0) + _tmp3659 * _tmp936 - _tmp3659 * _tmp938 -
                      _tmp3659 * _tmp939 - _tmp3659 * _tmp940 + _tmp3660 * sqrt_info(3, 1) +
                      _tmp3677 * sqrt_info(3, 5) + _tmp3678 * sqrt_info(3, 3) +
                      _tmp3679 * sqrt_info(3, 4) + _tmp3681 * _tmp384 + _tmp3684 * sqrt_info(3, 0) +
                      _tmp3685 * sqrt_info(3, 2);
    _res_D_y3(4, 1) = _tmp3658 * sqrt_info(4, 0) + _tmp3659 * _tmp943 - _tmp3659 * _tmp944 -
                      _tmp3659 * _tmp945 - _tmp3659 * _tmp946 + _tmp3660 * sqrt_info(4, 1) +
                      _tmp3677 * sqrt_info(4, 5) + _tmp3678 * sqrt_info(4, 3) +
                      _tmp3679 * sqrt_info(4, 4) + _tmp3682 * sqrt_info(4, 1) +
                      _tmp3684 * sqrt_info(4, 0) + _tmp3685 * sqrt_info(4, 2);
    _res_D_y3(5, 1) = _tmp3658 * sqrt_info(5, 0) + _tmp3659 * _tmp948 + _tmp3659 * _tmp950 -
                      _tmp3659 * _tmp952 - _tmp3659 * _tmp953 + _tmp3677 * sqrt_info(5, 5) +
                      _tmp3678 * sqrt_info(5, 3) + _tmp3679 * sqrt_info(5, 4) -
                      _tmp3680 * sqrt_info(5, 0) + _tmp3681 * _tmp385 + _tmp3684 * sqrt_info(5, 0) +
                      _tmp3685 * sqrt_info(5, 2);
    _res_D_y3(0, 2) = _tmp1043 * _tmp3738 + _tmp3726 * sqrt_info(0, 5) +
                      _tmp3735 * sqrt_info(0, 0) - _tmp3736 * _tmp911 - _tmp3736 * _tmp913 +
                      _tmp3737 * sqrt_info(0, 0) + _tmp3739 * sqrt_info(0, 2) +
                      _tmp3740 * sqrt_info(0, 4) + _tmp3741 * _tmp881 + _tmp3742 * sqrt_info(0, 3) -
                      _tmp3743 * sqrt_info(0, 0) + _tmp3745 * sqrt_info(0, 1);
    _res_D_y3(1, 2) = _tmp3726 * sqrt_info(1, 5) + _tmp3735 * sqrt_info(1, 0) + _tmp3736 * _tmp921 -
                      _tmp3736 * _tmp926 - _tmp3736 * _tmp927 + _tmp3738 * _tmp924 +
                      _tmp3739 * sqrt_info(1, 2) + _tmp3740 * sqrt_info(1, 4) + _tmp3741 * _tmp922 +
                      _tmp3742 * sqrt_info(1, 3) - _tmp3743 * sqrt_info(1, 0) +
                      _tmp3745 * sqrt_info(1, 1);
    _res_D_y3(2, 2) = _tmp3726 * sqrt_info(2, 5) + _tmp3735 * sqrt_info(2, 0) - _tmp3736 * _tmp932 -
                      _tmp3736 * _tmp933 + _tmp3737 * sqrt_info(2, 0) + _tmp3739 * sqrt_info(2, 2) +
                      _tmp3740 * sqrt_info(2, 4) + _tmp3741 * _tmp929 + _tmp3742 * sqrt_info(2, 3) -
                      _tmp3743 * sqrt_info(2, 0) + _tmp3745 * sqrt_info(2, 1) +
                      _tmp3746 * sqrt_info(2, 1);
    _res_D_y3(3, 2) = _tmp1051 * _tmp3738 + _tmp3726 * sqrt_info(3, 5) +
                      _tmp3735 * sqrt_info(3, 0) + _tmp3736 * _tmp934 + _tmp3736 * _tmp936 -
                      _tmp3736 * _tmp938 - _tmp3736 * _tmp939 - _tmp3736 * _tmp940 +
                      _tmp3740 * sqrt_info(3, 4) + _tmp3741 * _tmp935 + _tmp3742 * sqrt_info(3, 3) +
                      _tmp3745 * sqrt_info(3, 1);
    _res_D_y3(4, 2) = _tmp1052 * _tmp3741 + _tmp3726 * sqrt_info(4, 5) +
                      _tmp3735 * sqrt_info(4, 0) + _tmp3736 * _tmp941 + _tmp3736 * _tmp943 -
                      _tmp3736 * _tmp945 - _tmp3736 * _tmp946 + _tmp3740 * sqrt_info(4, 4) +
                      _tmp3742 * sqrt_info(4, 3) - _tmp3743 * sqrt_info(4, 0) +
                      _tmp3745 * sqrt_info(4, 1) + _tmp3746 * sqrt_info(4, 1);
    _res_D_y3(5, 2) = _tmp1054 * _tmp3741 + _tmp1055 * _tmp3738 + _tmp3726 * sqrt_info(5, 5) +
                      _tmp3735 * sqrt_info(5, 0) + _tmp3736 * _tmp948 - _tmp3736 * _tmp952 -
                      _tmp3736 * _tmp953 + _tmp3737 * sqrt_info(5, 0) + _tmp3740 * sqrt_info(5, 4) +
                      _tmp3742 * sqrt_info(5, 3) - _tmp3743 * sqrt_info(5, 0) + _tmp3744 * _tmp949;
    _res_D_y3(0, 3) =
        _tmp1583 * lambdas_y(2, 0) + _tmp1584 * lambdas_y(2, 0) + _tmp3747 * sqrt_info(0, 4);
    _res_D_y3(1, 3) =
        _tmp1585 * lambdas_y(2, 0) + _tmp1586 * lambdas_y(2, 0) + _tmp1587 * lambdas_y(2, 0);
    _res_D_y3(2, 3) =
        _tmp1589 * lambdas_y(2, 0) + _tmp1590 * lambdas_y(2, 0) + _tmp3747 * sqrt_info(2, 4);
    _res_D_y3(3, 3) =
        _tmp1592 * lambdas_y(2, 0) + _tmp1593 * lambdas_y(2, 0) + _tmp3747 * sqrt_info(3, 4);
    _res_D_y3(4, 3) =
        _tmp1595 * lambdas_y(2, 0) + _tmp1596 * lambdas_y(2, 0) + _tmp3747 * sqrt_info(4, 4);
    _res_D_y3(5, 3) =
        _tmp1598 * lambdas_y(2, 0) + _tmp1599 * lambdas_y(2, 0) + _tmp3747 * sqrt_info(5, 4);
    _res_D_y3(0, 4) =
        _tmp1147 * lambdas_y(2, 0) + _tmp1148 * lambdas_y(2, 0) + _tmp3748 * sqrt_info(0, 3);
    _res_D_y3(1, 4) =
        _tmp3748 * sqrt_info(1, 3) + _tmp3749 * sqrt_info(1, 5) + _tmp3750 * sqrt_info(1, 4);
    _res_D_y3(2, 4) =
        _tmp3748 * sqrt_info(2, 3) + _tmp3749 * sqrt_info(2, 5) + _tmp3750 * sqrt_info(2, 4);
    _res_D_y3(3, 4) =
        _tmp1151 * lambdas_y(2, 0) + _tmp3748 * sqrt_info(3, 3) + _tmp3749 * sqrt_info(3, 5);
    _res_D_y3(4, 4) =
        _tmp1152 * lambdas_y(2, 0) + _tmp1153 * lambdas_y(2, 0) + _tmp3748 * sqrt_info(4, 3);
    _res_D_y3(5, 4) =
        _tmp1154 * lambdas_y(2, 0) + _tmp1155 * lambdas_y(2, 0) + _tmp3748 * sqrt_info(5, 3);
    _res_D_y3(0, 5) =
        _tmp1156 * lambdas_y(2, 0) + _tmp3751 * sqrt_info(0, 3) + _tmp3752 * sqrt_info(0, 5);
    _res_D_y3(1, 5) =
        _tmp1159 * lambdas_y(2, 0) + _tmp3751 * sqrt_info(1, 3) + _tmp3752 * sqrt_info(1, 5);
    _res_D_y3(2, 5) =
        _tmp1160 * lambdas_y(2, 0) + _tmp3751 * sqrt_info(2, 3) + _tmp3752 * sqrt_info(2, 5);
    _res_D_y3(3, 5) =
        _tmp1161 * lambdas_y(2, 0) + _tmp3751 * sqrt_info(3, 3) + _tmp3752 * sqrt_info(3, 5);
    _res_D_y3(4, 5) =
        _tmp1162 * lambdas_y(2, 0) + _tmp1163 * lambdas_y(2, 0) + _tmp3751 * sqrt_info(4, 3);
    _res_D_y3(5, 5) =
        _tmp1164 * lambdas_y(2, 0) + _tmp3751 * sqrt_info(5, 3) + _tmp3752 * sqrt_info(5, 5);
  }

  if (res_D_y_T_b != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_y_T_b{res_D_y_T_b};

    _res_D_y_T_b(0, 0) = _tmp1043 * _tmp3787 + _tmp1435 * _tmp3785 - _tmp3785 * _tmp908 -
                         _tmp3785 * _tmp911 - _tmp3785 * _tmp913 + _tmp3786 * sqrt_info(0, 0) +
                         _tmp3788 * sqrt_info(0, 0) + _tmp3789 * _tmp881 +
                         _tmp3790 * sqrt_info(0, 2);
    _res_D_y_T_b(1, 0) = _tmp1476 * _tmp3785 + _tmp3785 * _tmp921 - _tmp3785 * _tmp925 -
                         _tmp3785 * _tmp927 + _tmp3787 * _tmp924 + _tmp3788 * sqrt_info(1, 0) +
                         _tmp3789 * _tmp922 + _tmp3790 * sqrt_info(1, 2) -
                         _tmp3791 * sqrt_info(1, 1);
    _res_D_y_T_b(2, 0) = _tmp1049 * _tmp3785 + _tmp1050 * _tmp3787 - _tmp3785 * _tmp931 -
                         _tmp3785 * _tmp933 + _tmp3786 * sqrt_info(2, 0) +
                         _tmp3788 * sqrt_info(2, 0) + _tmp3789 * _tmp929 +
                         _tmp3790 * sqrt_info(2, 2) - _tmp3791 * sqrt_info(2, 1);
    _res_D_y_T_b(3, 0) = _tmp1051 * _tmp3787 + _tmp1477 * _tmp3785 + _tmp3785 * _tmp934 +
                         _tmp3785 * _tmp936 - _tmp3785 * _tmp938 - _tmp3785 * _tmp939 -
                         _tmp3785 * _tmp940 + _tmp3788 * sqrt_info(3, 0) + _tmp3789 * _tmp935;
    _res_D_y_T_b(4, 0) = _tmp1052 * _tmp3789 + _tmp1053 * _tmp3787 + _tmp1479 * _tmp3785 +
                         _tmp3785 * _tmp941 + _tmp3785 * _tmp943 - _tmp3785 * _tmp944 -
                         _tmp3785 * _tmp946 + _tmp3788 * sqrt_info(4, 0) -
                         _tmp3791 * sqrt_info(4, 1);
    _res_D_y_T_b(5, 0) = _tmp1054 * _tmp3789 + _tmp1055 * _tmp3787 + _tmp3785 * _tmp948 +
                         _tmp3785 * _tmp950 - _tmp3785 * _tmp951 - _tmp3785 * _tmp952 -
                         _tmp3785 * _tmp953 + _tmp3786 * sqrt_info(5, 0) +
                         _tmp3788 * sqrt_info(5, 0);
    _res_D_y_T_b(0, 1) = _tmp1043 * _tmp3805 - _tmp3802 * _tmp908 - _tmp3802 * _tmp911 -
                         _tmp3802 * _tmp913 + _tmp3803 * sqrt_info(0, 1) +
                         _tmp3804 * sqrt_info(0, 2) + _tmp3806 * sqrt_info(0, 0) +
                         _tmp3807 * sqrt_info(0, 0) + _tmp3808 * _tmp881;
    _res_D_y_T_b(1, 1) = _tmp3802 * _tmp921 - _tmp3802 * _tmp925 - _tmp3802 * _tmp927 +
                         _tmp3803 * sqrt_info(1, 1) + _tmp3804 * sqrt_info(1, 2) +
                         _tmp3805 * _tmp924 + _tmp3807 * sqrt_info(1, 0) + _tmp3808 * _tmp922 -
                         _tmp3809 * sqrt_info(1, 1);
    _res_D_y_T_b(2, 1) = _tmp1049 * _tmp3802 + _tmp1050 * _tmp3805 - _tmp3802 * _tmp931 -
                         _tmp3802 * _tmp933 + _tmp3804 * sqrt_info(2, 2) +
                         _tmp3806 * sqrt_info(2, 0) + _tmp3807 * sqrt_info(2, 0) +
                         _tmp3808 * _tmp929 - _tmp3809 * sqrt_info(2, 1);
    _res_D_y_T_b(3, 1) = _tmp1051 * _tmp3805 + _tmp3802 * _tmp936 - _tmp3802 * _tmp938 -
                         _tmp3802 * _tmp939 - _tmp3802 * _tmp940 + _tmp3803 * sqrt_info(3, 1) +
                         _tmp3806 * sqrt_info(3, 0) + _tmp3807 * sqrt_info(3, 0) +
                         _tmp3808 * _tmp935;
    _res_D_y_T_b(4, 1) = _tmp1053 * _tmp3805 + _tmp3802 * _tmp941 + _tmp3802 * _tmp943 -
                         _tmp3802 * _tmp944 - _tmp3802 * _tmp946 + _tmp3803 * sqrt_info(4, 1) +
                         _tmp3807 * sqrt_info(4, 0) - _tmp3809 * sqrt_info(4, 1) +
                         _tmp3810 * sqrt_info(4, 2);
    _res_D_y_T_b(5, 1) = _tmp1055 * _tmp3805 + _tmp3802 * _tmp948 + _tmp3802 * _tmp950 -
                         _tmp3802 * _tmp951 - _tmp3802 * _tmp952 - _tmp3802 * _tmp953 +
                         _tmp3806 * sqrt_info(5, 0) + _tmp3807 * sqrt_info(5, 0) +
                         _tmp3810 * sqrt_info(5, 2);
    _res_D_y_T_b(0, 2) = _tmp1043 * _tmp3816 - _tmp3817 * _tmp911 - _tmp3817 * _tmp913 -
                         _tmp3818 * sqrt_info(0, 0) + _tmp3819 * sqrt_info(0, 0) +
                         _tmp3820 * sqrt_info(0, 2) + _tmp3821 * sqrt_info(0, 0) +
                         _tmp3822 * sqrt_info(0, 1) + _tmp3823 * _tmp881;
    _res_D_y_T_b(1, 2) = _tmp3816 * _tmp924 - _tmp3817 * _tmp925 - _tmp3817 * _tmp926 -
                         _tmp3817 * _tmp927 + _tmp3819 * sqrt_info(1, 0) +
                         _tmp3820 * sqrt_info(1, 2) + _tmp3821 * sqrt_info(1, 0) +
                         _tmp3822 * sqrt_info(1, 1) + _tmp3823 * _tmp922;
    _res_D_y_T_b(2, 2) = _tmp1050 * _tmp3816 - _tmp3817 * _tmp931 - _tmp3817 * _tmp932 -
                         _tmp3817 * _tmp933 + _tmp3819 * sqrt_info(2, 0) +
                         _tmp3820 * sqrt_info(2, 2) + _tmp3821 * sqrt_info(2, 0) +
                         _tmp3822 * sqrt_info(2, 1) + _tmp3823 * _tmp929;
    _res_D_y_T_b(3, 2) = _tmp1051 * _tmp3816 + _tmp3817 * _tmp936 - _tmp3817 * _tmp938 -
                         _tmp3817 * _tmp939 - _tmp3817 * _tmp940 + _tmp3819 * sqrt_info(3, 0) +
                         _tmp3821 * sqrt_info(3, 0) + _tmp3822 * sqrt_info(3, 1) +
                         _tmp3823 * _tmp935;
    _res_D_y_T_b(4, 2) = _tmp1052 * _tmp3823 + _tmp1053 * _tmp3816 + _tmp3817 * _tmp943 -
                         _tmp3817 * _tmp945 - _tmp3817 * _tmp946 - _tmp3818 * sqrt_info(4, 0) +
                         _tmp3819 * sqrt_info(4, 0) + _tmp3821 * sqrt_info(4, 0) +
                         _tmp3822 * sqrt_info(4, 1);
    _res_D_y_T_b(5, 2) = _tmp1054 * _tmp3823 + _tmp1055 * _tmp3816 + _tmp3817 * _tmp948 +
                         _tmp3817 * _tmp950 - _tmp3817 * _tmp952 - _tmp3817 * _tmp953 -
                         _tmp3818 * sqrt_info(5, 0) + _tmp3819 * sqrt_info(5, 0) +
                         _tmp3821 * sqrt_info(5, 0);
    _res_D_y_T_b(0, 3) =
        _tmp3824 * sqrt_info(0, 3) + _tmp3825 * sqrt_info(0, 5) + _tmp3826 * sqrt_info(0, 4);
    _res_D_y_T_b(1, 3) =
        _tmp3824 * sqrt_info(1, 3) + _tmp3825 * sqrt_info(1, 5) + _tmp3826 * sqrt_info(1, 4);
    _res_D_y_T_b(2, 3) =
        _tmp3824 * sqrt_info(2, 3) + _tmp3825 * sqrt_info(2, 5) + _tmp3826 * sqrt_info(2, 4);
    _res_D_y_T_b(3, 3) =
        _tmp3824 * sqrt_info(3, 3) + _tmp3825 * sqrt_info(3, 5) + _tmp3826 * sqrt_info(3, 4);
    _res_D_y_T_b(4, 3) =
        _tmp3824 * sqrt_info(4, 3) + _tmp3825 * sqrt_info(4, 5) + _tmp3826 * sqrt_info(4, 4);
    _res_D_y_T_b(5, 3) =
        _tmp3824 * sqrt_info(5, 3) + _tmp3825 * sqrt_info(5, 5) + _tmp3826 * sqrt_info(5, 4);
    _res_D_y_T_b(0, 4) =
        _tmp3827 * sqrt_info(0, 4) + _tmp3828 * sqrt_info(0, 5) + _tmp3829 * sqrt_info(0, 3);
    _res_D_y_T_b(1, 4) =
        _tmp3827 * sqrt_info(1, 4) + _tmp3828 * sqrt_info(1, 5) + _tmp3829 * sqrt_info(1, 3);
    _res_D_y_T_b(2, 4) =
        _tmp3827 * sqrt_info(2, 4) + _tmp3828 * sqrt_info(2, 5) + _tmp3829 * sqrt_info(2, 3);
    _res_D_y_T_b(3, 4) =
        _tmp3827 * sqrt_info(3, 4) + _tmp3828 * sqrt_info(3, 5) + _tmp3829 * sqrt_info(3, 3);
    _res_D_y_T_b(4, 4) =
        _tmp3827 * sqrt_info(4, 4) + _tmp3828 * sqrt_info(4, 5) + _tmp3829 * sqrt_info(4, 3);
    _res_D_y_T_b(5, 4) =
        _tmp3827 * sqrt_info(5, 4) + _tmp3828 * sqrt_info(5, 5) + _tmp3829 * sqrt_info(5, 3);
    _res_D_y_T_b(0, 5) =
        _tmp3830 * sqrt_info(0, 4) + _tmp3831 * sqrt_info(0, 5) + _tmp3832 * sqrt_info(0, 3);
    _res_D_y_T_b(1, 5) =
        _tmp3830 * sqrt_info(1, 4) + _tmp3831 * sqrt_info(1, 5) + _tmp3832 * sqrt_info(1, 3);
    _res_D_y_T_b(2, 5) =
        _tmp3830 * sqrt_info(2, 4) + _tmp3831 * sqrt_info(2, 5) + _tmp3832 * sqrt_info(2, 3);
    _res_D_y_T_b(3, 5) =
        _tmp3830 * sqrt_info(3, 4) + _tmp3831 * sqrt_info(3, 5) + _tmp3832 * sqrt_info(3, 3);
    _res_D_y_T_b(4, 5) =
        _tmp3830 * sqrt_info(4, 4) + _tmp3831 * sqrt_info(4, 5) + _tmp3832 * sqrt_info(4, 3);
    _res_D_y_T_b(5, 5) =
        _tmp3830 * sqrt_info(5, 4) + _tmp3831 * sqrt_info(5, 5) + _tmp3832 * sqrt_info(5, 3);
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_hyperion
