// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>

namespace sym_hyperion {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline4_pose3_acceleration_factor
 *
 * Args:
 *     dt: Scalar
 *     lambdas: Matrix43
 *     x0: Pose3
 *     x1: Pose3
 *     x2: Pose3
 *     x3: Pose3
 *     x4: Pose3
 *     acceleration: Matrix61
 *     sqrt_info: Matrix66
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix61
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 6, 1> Spline4Pose3AccelerationLocalFactor(
    const Scalar dt, const Eigen::Matrix<Scalar, 4, 3>& lambdas, const sym::Pose3<Scalar>& x0,
    const sym::Pose3<Scalar>& x1, const sym::Pose3<Scalar>& x2, const sym::Pose3<Scalar>& x3,
    const sym::Pose3<Scalar>& x4, const Eigen::Matrix<Scalar, 6, 1>& acceleration,
    const Eigen::Matrix<Scalar, 6, 6>& sqrt_info, const Scalar epsilon) {
  // Total ops: 868

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x3 = x3.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x4 = x4.Data();

  // Intermediate terms (280)
  const Scalar _tmp0 = std::pow(dt, Scalar(-2));
  const Scalar _tmp1 = _x2[0] * _x3[2] - _x2[1] * _x3[3] - _x2[2] * _x3[0] + _x2[3] * _x3[1];
  const Scalar _tmp2 = -_x2[0] * _x3[3] - _x2[1] * _x3[2] + _x2[2] * _x3[1] + _x2[3] * _x3[0];
  const Scalar _tmp3 = std::pow(_tmp1, Scalar(2));
  const Scalar _tmp4 = 1 - epsilon;
  const Scalar _tmp5 = -_x2[0] * _x3[0] - _x2[1] * _x3[1] - _x2[2] * _x3[2];
  const Scalar _tmp6 = _x2[3] * _x3[3];
  const Scalar _tmp7 = std::min<Scalar>(_tmp4, std::fabs(_tmp5 - _tmp6));
  const Scalar _tmp8 = 1 - std::pow(_tmp7, Scalar(2));
  const Scalar _tmp9 =
      2 * std::min<Scalar>(0, (((-_tmp5 + _tmp6) > 0) - ((-_tmp5 + _tmp6) < 0))) + 1;
  const Scalar _tmp10 = std::acos(_tmp7);
  const Scalar _tmp11 = std::pow(_tmp10, Scalar(2)) * std::pow(_tmp9, Scalar(2)) *
                        std::pow(lambdas(2, 0), Scalar(2)) / _tmp8;
  const Scalar _tmp12 = 4 * _tmp11;
  const Scalar _tmp13 = std::pow(_tmp2, Scalar(2));
  const Scalar _tmp14 = -_x2[0] * _x3[1] + _x2[1] * _x3[0] - _x2[2] * _x3[3] + _x2[3] * _x3[2];
  const Scalar _tmp15 = std::pow(_tmp14, Scalar(2));
  const Scalar _tmp16 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp17 = _tmp12 * _tmp13 + _tmp12 * _tmp15 + _tmp12 * _tmp3 + _tmp16;
  const Scalar _tmp18 = std::sqrt(_tmp17);
  const Scalar _tmp19 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp20 = std::sin(_tmp19);
  const Scalar _tmp21 = 8 * _tmp11 * std::pow(_tmp20, Scalar(2)) / _tmp17;
  const Scalar _tmp22 = _tmp1 * _tmp2 * _tmp21;
  const Scalar _tmp23 = std::cos(_tmp19);
  const Scalar _tmp24 = _tmp10 * _tmp9 / std::sqrt(_tmp8);
  const Scalar _tmp25 = _tmp20 * lambdas(2, 0) / _tmp18;
  const Scalar _tmp26 = 4 * _tmp23 * _tmp24 * _tmp25;
  const Scalar _tmp27 = _tmp14 * _tmp26;
  const Scalar _tmp28 = _tmp22 + _tmp27;
  const Scalar _tmp29 = _x1[0] * _x2[2] - _x1[1] * _x2[3] - _x1[2] * _x2[0] + _x1[3] * _x2[1];
  const Scalar _tmp30 = -_x1[0] * _x2[0] - _x1[1] * _x2[1] - _x1[2] * _x2[2];
  const Scalar _tmp31 = _x1[3] * _x2[3];
  const Scalar _tmp32 = std::min<Scalar>(_tmp4, std::fabs(_tmp30 - _tmp31));
  const Scalar _tmp33 = 1 - std::pow(_tmp32, Scalar(2));
  const Scalar _tmp34 =
      2 * std::min<Scalar>(0, (((-_tmp30 + _tmp31) > 0) - ((-_tmp30 + _tmp31) < 0))) + 1;
  const Scalar _tmp35 = std::acos(_tmp32);
  const Scalar _tmp36 = _tmp34 * _tmp35 / std::sqrt(_tmp33);
  const Scalar _tmp37 = 2 * _tmp36;
  const Scalar _tmp38 = _tmp29 * _tmp37;
  const Scalar _tmp39 = _tmp38 * lambdas(1, 1);
  const Scalar _tmp40 = -_x1[0] * _x2[3] - _x1[1] * _x2[2] + _x1[2] * _x2[1] + _x1[3] * _x2[0];
  const Scalar _tmp41 = std::pow(_tmp40, Scalar(2));
  const Scalar _tmp42 = std::pow(_tmp34, Scalar(2)) * std::pow(_tmp35, Scalar(2)) *
                        std::pow(lambdas(1, 0), Scalar(2)) / _tmp33;
  const Scalar _tmp43 = 4 * _tmp42;
  const Scalar _tmp44 = -_x1[0] * _x2[1] + _x1[1] * _x2[0] - _x1[2] * _x2[3] + _x1[3] * _x2[2];
  const Scalar _tmp45 = std::pow(_tmp44, Scalar(2));
  const Scalar _tmp46 = std::pow(_tmp29, Scalar(2));
  const Scalar _tmp47 = _tmp16 + _tmp41 * _tmp43 + _tmp43 * _tmp45 + _tmp43 * _tmp46;
  const Scalar _tmp48 = std::sqrt(_tmp47);
  const Scalar _tmp49 = (Scalar(1) / Scalar(2)) * _tmp48;
  const Scalar _tmp50 = std::sin(_tmp49);
  const Scalar _tmp51 = 8 * _tmp42 * std::pow(_tmp50, Scalar(2)) / _tmp47;
  const Scalar _tmp52 = _tmp29 * _tmp40 * _tmp51;
  const Scalar _tmp53 = std::cos(_tmp49);
  const Scalar _tmp54 = _tmp50 * lambdas(1, 0) / _tmp48;
  const Scalar _tmp55 = 4 * _tmp36 * _tmp53 * _tmp54;
  const Scalar _tmp56 = _tmp44 * _tmp55;
  const Scalar _tmp57 = _tmp52 - _tmp56;
  const Scalar _tmp58 = -_x0[0] * _x1[3] - _x0[1] * _x1[2] + _x0[2] * _x1[1] + _x0[3] * _x1[0];
  const Scalar _tmp59 = -_x0[0] * _x1[0] - _x0[1] * _x1[1] - _x0[2] * _x1[2];
  const Scalar _tmp60 = _x0[3] * _x1[3];
  const Scalar _tmp61 =
      2 * std::min<Scalar>(0, (((-_tmp59 + _tmp60) > 0) - ((-_tmp59 + _tmp60) < 0))) + 1;
  const Scalar _tmp62 = std::min<Scalar>(_tmp4, std::fabs(_tmp59 - _tmp60));
  const Scalar _tmp63 = std::acos(_tmp62);
  const Scalar _tmp64 = 1 - std::pow(_tmp62, Scalar(2));
  const Scalar _tmp65 = 2 * _tmp61 * _tmp63 / std::sqrt(_tmp64);
  const Scalar _tmp66 = _tmp58 * _tmp65;
  const Scalar _tmp67 = _tmp66 * lambdas(0, 1);
  const Scalar _tmp68 = _tmp44 * _tmp51;
  const Scalar _tmp69 = _tmp29 * _tmp68;
  const Scalar _tmp70 = _tmp40 * _tmp55;
  const Scalar _tmp71 = _tmp69 + _tmp70;
  const Scalar _tmp72 = -_x0[0] * _x1[1] + _x0[1] * _x1[0] - _x0[2] * _x1[3] + _x0[3] * _x1[2];
  const Scalar _tmp73 = _tmp65 * _tmp72;
  const Scalar _tmp74 = _tmp73 * lambdas(0, 1);
  const Scalar _tmp75 = -_tmp41 * _tmp51;
  const Scalar _tmp76 = -_tmp45 * _tmp51 + 1;
  const Scalar _tmp77 = _tmp75 + _tmp76;
  const Scalar _tmp78 = _x0[0] * _x1[2] - _x0[1] * _x1[3] - _x0[2] * _x1[0] + _x0[3] * _x1[1];
  const Scalar _tmp79 = _tmp65 * _tmp78;
  const Scalar _tmp80 = _tmp79 * lambdas(0, 1);
  const Scalar _tmp81 = _tmp57 * _tmp67 + _tmp71 * _tmp74 + _tmp77 * _tmp80;
  const Scalar _tmp82 = _tmp39 + _tmp81;
  const Scalar _tmp83 = _tmp37 * _tmp40;
  const Scalar _tmp84 = _tmp83 * lambdas(1, 1);
  const Scalar _tmp85 = _tmp29 * _tmp55;
  const Scalar _tmp86 = _tmp40 * _tmp68;
  const Scalar _tmp87 = -_tmp85 + _tmp86;
  const Scalar _tmp88 = -_tmp46 * _tmp51;
  const Scalar _tmp89 = _tmp76 + _tmp88;
  const Scalar _tmp90 = _tmp52 + _tmp56;
  const Scalar _tmp91 = _tmp67 * _tmp89 + _tmp74 * _tmp87 + _tmp80 * _tmp90;
  const Scalar _tmp92 = _tmp84 + _tmp91;
  const Scalar _tmp93 = -_tmp21 * _tmp3;
  const Scalar _tmp94 = -_tmp15 * _tmp21 + 1;
  const Scalar _tmp95 = _tmp93 + _tmp94;
  const Scalar _tmp96 = _tmp1 * _tmp26;
  const Scalar _tmp97 = _tmp14 * _tmp21;
  const Scalar _tmp98 = _tmp2 * _tmp97;
  const Scalar _tmp99 = -_tmp96 + _tmp98;
  const Scalar _tmp100 = _tmp37 * _tmp44;
  const Scalar _tmp101 = _tmp100 * lambdas(1, 1);
  const Scalar _tmp102 = _tmp75 + _tmp88 + 1;
  const Scalar _tmp103 = _tmp85 + _tmp86;
  const Scalar _tmp104 = _tmp69 - _tmp70;
  const Scalar _tmp105 = _tmp102 * _tmp74 + _tmp103 * _tmp67 + _tmp104 * _tmp80;
  const Scalar _tmp106 = _tmp101 + _tmp105;
  const Scalar _tmp107 = _tmp106 * _tmp99 + _tmp28 * _tmp82 + _tmp92 * _tmp95;
  const Scalar _tmp108 = 2 * _tmp24;
  const Scalar _tmp109 = _tmp1 * _tmp108;
  const Scalar _tmp110 = _tmp109 * lambdas(2, 1);
  const Scalar _tmp111 = _tmp2 * _tmp26;
  const Scalar _tmp112 = _tmp1 * _tmp97;
  const Scalar _tmp113 = _tmp111 + _tmp112;
  const Scalar _tmp114 = _tmp22 - _tmp27;
  const Scalar _tmp115 = -_tmp13 * _tmp21;
  const Scalar _tmp116 = _tmp115 + _tmp94;
  const Scalar _tmp117 = _tmp106 * _tmp113 + _tmp114 * _tmp92 + _tmp116 * _tmp82;
  const Scalar _tmp118 = _tmp108 * _tmp2;
  const Scalar _tmp119 = _tmp118 * lambdas(2, 1);
  const Scalar _tmp120 = -_tmp111 + _tmp112;
  const Scalar _tmp121 = _tmp66 * lambdas(0, 2);
  const Scalar _tmp122 = _tmp73 * lambdas(0, 2);
  const Scalar _tmp123 = _tmp79 * lambdas(0, 2);
  const Scalar _tmp124 = -_tmp101 * _tmp91 + _tmp105 * _tmp84 + _tmp121 * _tmp57 +
                         _tmp122 * _tmp71 + _tmp123 * _tmp77 + _tmp38 * lambdas(1, 2);
  const Scalar _tmp125 = _tmp108 * _tmp14;
  const Scalar _tmp126 = _tmp101 * _tmp81 - _tmp105 * _tmp39 + _tmp121 * _tmp89 + _tmp122 * _tmp87 +
                         _tmp123 * _tmp90 + _tmp83 * lambdas(1, 2);
  const Scalar _tmp127 = _tmp96 + _tmp98;
  const Scalar _tmp128 = _tmp100 * lambdas(1, 2) + _tmp102 * _tmp122 + _tmp103 * _tmp121 +
                         _tmp104 * _tmp123 + _tmp39 * _tmp91 - _tmp81 * _tmp84;
  const Scalar _tmp129 = _tmp115 + _tmp93 + 1;
  const Scalar _tmp130 = _tmp107 * _tmp110 - _tmp117 * _tmp119 + _tmp120 * _tmp124 +
                         _tmp125 * lambdas(2, 2) + _tmp126 * _tmp127 + _tmp128 * _tmp129;
  const Scalar _tmp131 = -_x3[0] * _x4[1] + _x3[1] * _x4[0] - _x3[2] * _x4[3] + _x3[3] * _x4[2];
  const Scalar _tmp132 = -_x3[0] * _x4[3] - _x3[1] * _x4[2] + _x3[2] * _x4[1] + _x3[3] * _x4[0];
  const Scalar _tmp133 = std::pow(_tmp132, Scalar(2));
  const Scalar _tmp134 = -_x3[0] * _x4[0] - _x3[1] * _x4[1] - _x3[2] * _x4[2];
  const Scalar _tmp135 = _x3[3] * _x4[3];
  const Scalar _tmp136 = std::min<Scalar>(_tmp4, std::fabs(_tmp134 - _tmp135));
  const Scalar _tmp137 = std::acos(_tmp136);
  const Scalar _tmp138 =
      2 * std::min<Scalar>(0, (((-_tmp134 + _tmp135) > 0) - ((-_tmp134 + _tmp135) < 0))) + 1;
  const Scalar _tmp139 = 1 - std::pow(_tmp136, Scalar(2));
  const Scalar _tmp140 = std::pow(_tmp137, Scalar(2)) * std::pow(_tmp138, Scalar(2)) *
                         std::pow(lambdas(3, 0), Scalar(2)) / _tmp139;
  const Scalar _tmp141 = 4 * _tmp140;
  const Scalar _tmp142 = std::pow(_tmp131, Scalar(2));
  const Scalar _tmp143 = _x3[0] * _x4[2] - _x3[1] * _x4[3] - _x3[2] * _x4[0] + _x3[3] * _x4[1];
  const Scalar _tmp144 = std::pow(_tmp143, Scalar(2));
  const Scalar _tmp145 = _tmp133 * _tmp141 + _tmp141 * _tmp142 + _tmp141 * _tmp144 + _tmp16;
  const Scalar _tmp146 = std::sqrt(_tmp145);
  const Scalar _tmp147 = (Scalar(1) / Scalar(2)) * _tmp146;
  const Scalar _tmp148 = std::sin(_tmp147);
  const Scalar _tmp149 = 8 * _tmp140 * std::pow(_tmp148, Scalar(2)) / _tmp145;
  const Scalar _tmp150 = _tmp132 * _tmp149;
  const Scalar _tmp151 = _tmp131 * _tmp150;
  const Scalar _tmp152 = std::cos(_tmp147);
  const Scalar _tmp153 = _tmp137 * _tmp138 / std::sqrt(_tmp139);
  const Scalar _tmp154 = 4 * _tmp152 * _tmp153;
  const Scalar _tmp155 = _tmp148 * lambdas(3, 0) / _tmp146;
  const Scalar _tmp156 = _tmp143 * _tmp155;
  const Scalar _tmp157 = _tmp154 * _tmp156;
  const Scalar _tmp158 = _tmp151 - _tmp157;
  const Scalar _tmp159 = 2 * _tmp153;
  const Scalar _tmp160 = _tmp159 * lambdas(3, 2);
  const Scalar _tmp161 = _tmp106 * _tmp129 + _tmp120 * _tmp82 + _tmp127 * _tmp92;
  const Scalar _tmp162 = _tmp125 * lambdas(2, 1);
  const Scalar _tmp163 = -_tmp110 * _tmp161 + _tmp117 * _tmp162 + _tmp118 * lambdas(2, 2) +
                         _tmp124 * _tmp28 + _tmp126 * _tmp95 + _tmp128 * _tmp99;
  const Scalar _tmp164 = -_tmp144 * _tmp149;
  const Scalar _tmp165 = -_tmp142 * _tmp149;
  const Scalar _tmp166 = _tmp164 + _tmp165 + 1;
  const Scalar _tmp167 = _tmp161 + _tmp162;
  const Scalar _tmp168 = _tmp131 * _tmp143 * _tmp149;
  const Scalar _tmp169 = _tmp132 * _tmp155;
  const Scalar _tmp170 = _tmp154 * _tmp169;
  const Scalar _tmp171 = _tmp168 + _tmp170;
  const Scalar _tmp172 = _tmp143 * _tmp150;
  const Scalar _tmp173 = _tmp131 * _tmp155;
  const Scalar _tmp174 = _tmp154 * _tmp173;
  const Scalar _tmp175 = _tmp172 - _tmp174;
  const Scalar _tmp176 = _tmp107 + _tmp119;
  const Scalar _tmp177 = -_tmp133 * _tmp149 + 1;
  const Scalar _tmp178 = _tmp165 + _tmp177;
  const Scalar _tmp179 = _tmp110 + _tmp117;
  const Scalar _tmp180 = _tmp167 * _tmp171 + _tmp175 * _tmp176 + _tmp178 * _tmp179;
  const Scalar _tmp181 = _tmp159 * lambdas(3, 1);
  const Scalar _tmp182 = _tmp131 * _tmp181;
  const Scalar _tmp183 = _tmp172 + _tmp174;
  const Scalar _tmp184 = -_tmp107 * _tmp162 + _tmp109 * lambdas(2, 2) + _tmp113 * _tmp128 +
                         _tmp114 * _tmp126 + _tmp116 * _tmp124 + _tmp119 * _tmp161;
  const Scalar _tmp185 = _tmp164 + _tmp177;
  const Scalar _tmp186 = _tmp151 + _tmp157;
  const Scalar _tmp187 = _tmp168 - _tmp170;
  const Scalar _tmp188 = _tmp167 * _tmp185 + _tmp176 * _tmp186 + _tmp179 * _tmp187;
  const Scalar _tmp189 = _tmp143 * _tmp181;
  const Scalar _tmp190 = _tmp0 * (_tmp130 * _tmp158 + _tmp132 * _tmp160 + _tmp163 * _tmp166 +
                                  _tmp180 * _tmp182 + _tmp183 * _tmp184 - _tmp188 * _tmp189) -
                         acceleration(0, 0);
  const Scalar _tmp191 = -_x1[5] + _x2[5];
  const Scalar _tmp192 = -_x3[5] + _x4[5];
  const Scalar _tmp193 = -_x2[5] + _x3[5];
  const Scalar _tmp194 = -_x0[5] + _x1[5];
  const Scalar _tmp195 = _tmp191 * lambdas(1, 2) + _tmp192 * lambdas(3, 2) +
                         _tmp193 * lambdas(2, 2) + _tmp194 * lambdas(0, 2);
  const Scalar _tmp196 = 4 * std::pow(_tmp61, Scalar(2)) * std::pow(_tmp63, Scalar(2)) *
                         std::pow(lambdas(0, 0), Scalar(2)) / _tmp64;
  const Scalar _tmp197 = std::sqrt(Scalar(_tmp16 + _tmp196 * std::pow(_tmp58, Scalar(2)) +
                                          _tmp196 * std::pow(_tmp72, Scalar(2)) +
                                          _tmp196 * std::pow(_tmp78, Scalar(2))));
  const Scalar _tmp198 = (Scalar(1) / Scalar(2)) * _tmp197;
  const Scalar _tmp199 = lambdas(0, 0) * std::sin(_tmp198) / _tmp197;
  const Scalar _tmp200 = _tmp199 * _x0[2];
  const Scalar _tmp201 = std::cos(_tmp198);
  const Scalar _tmp202 = _tmp199 * _tmp66;
  const Scalar _tmp203 = _tmp199 * _tmp73;
  const Scalar _tmp204 = -_tmp200 * _tmp79 + _tmp201 * _x0[0] + _tmp202 * _x0[3] + _tmp203 * _x0[1];
  const Scalar _tmp205 = _tmp204 * _tmp54;
  const Scalar _tmp206 = _tmp199 * _tmp79;
  const Scalar _tmp207 = _tmp199 * _x0[0];
  const Scalar _tmp208 = _tmp200 * _tmp66 + _tmp201 * _x0[1] + _tmp206 * _x0[3] - _tmp207 * _tmp73;
  const Scalar _tmp209 = _tmp208 * _tmp54;
  const Scalar _tmp210 = _tmp201 * _x0[2] - _tmp202 * _x0[1] + _tmp203 * _x0[3] + _tmp206 * _x0[0];
  const Scalar _tmp211 = _tmp210 * _tmp54;
  const Scalar _tmp212 = -_tmp200 * _tmp73 + _tmp201 * _x0[3] - _tmp206 * _x0[1] - _tmp207 * _tmp66;
  const Scalar _tmp213 =
      -_tmp100 * _tmp211 - _tmp205 * _tmp83 - _tmp209 * _tmp38 + _tmp212 * _tmp53;
  const Scalar _tmp214 = _tmp213 * _tmp25;
  const Scalar _tmp215 = _tmp212 * _tmp54;
  const Scalar _tmp216 =
      -_tmp100 * _tmp205 + _tmp208 * _tmp53 + _tmp211 * _tmp83 + _tmp215 * _tmp38;
  const Scalar _tmp217 = _tmp216 * _tmp25;
  const Scalar _tmp218 = _tmp100 * _tmp209 + _tmp204 * _tmp53 - _tmp211 * _tmp38 + _tmp215 * _tmp83;
  const Scalar _tmp219 = _tmp218 * _tmp25;
  const Scalar _tmp220 = _tmp100 * _tmp215 + _tmp205 * _tmp38 - _tmp209 * _tmp83 + _tmp210 * _tmp53;
  const Scalar _tmp221 =
      _tmp109 * _tmp219 - _tmp118 * _tmp217 + _tmp125 * _tmp214 + _tmp220 * _tmp23;
  const Scalar _tmp222 = _tmp159 * _tmp221;
  const Scalar _tmp223 = _tmp220 * _tmp25;
  const Scalar _tmp224 =
      -_tmp109 * _tmp223 + _tmp118 * _tmp214 + _tmp125 * _tmp217 + _tmp218 * _tmp23;
  const Scalar _tmp225 = _tmp159 * _tmp224;
  const Scalar _tmp226 =
      -_tmp109 * _tmp217 - _tmp118 * _tmp219 - _tmp125 * _tmp223 + _tmp213 * _tmp23;
  const Scalar _tmp227 = _tmp159 * _tmp226;
  const Scalar _tmp228 =
      _tmp109 * _tmp214 + _tmp118 * _tmp223 - _tmp125 * _tmp219 + _tmp216 * _tmp23;
  const Scalar _tmp229 =
      _tmp152 * _tmp228 + _tmp156 * _tmp227 + _tmp169 * _tmp222 - _tmp173 * _tmp225;
  const Scalar _tmp230 = _tmp159 * _tmp228;
  const Scalar _tmp231 =
      _tmp152 * _tmp224 - _tmp156 * _tmp222 + _tmp169 * _tmp227 + _tmp173 * _tmp230;
  const Scalar _tmp232 = 2 * _tmp231;
  const Scalar _tmp233 = _tmp229 * _tmp232;
  const Scalar _tmp234 =
      _tmp152 * _tmp221 + _tmp156 * _tmp225 - _tmp169 * _tmp230 + _tmp173 * _tmp227;
  const Scalar _tmp235 =
      _tmp152 * _tmp226 - _tmp156 * _tmp230 - _tmp169 * _tmp225 - _tmp173 * _tmp222;
  const Scalar _tmp236 = 2 * _tmp235;
  const Scalar _tmp237 = _tmp234 * _tmp236;
  const Scalar _tmp238 = _tmp233 + _tmp237;
  const Scalar _tmp239 = -_x1[6] + _x2[6];
  const Scalar _tmp240 = -_x3[6] + _x4[6];
  const Scalar _tmp241 = -_x2[6] + _x3[6];
  const Scalar _tmp242 = -_x0[6] + _x1[6];
  const Scalar _tmp243 = _tmp239 * lambdas(1, 2) + _tmp240 * lambdas(3, 2) +
                         _tmp241 * lambdas(2, 2) + _tmp242 * lambdas(0, 2);
  const Scalar _tmp244 = _tmp229 * _tmp236;
  const Scalar _tmp245 = _tmp232 * _tmp234;
  const Scalar _tmp246 = -_tmp244 + _tmp245;
  const Scalar _tmp247 = -_x1[4] + _x2[4];
  const Scalar _tmp248 = -_x3[4] + _x4[4];
  const Scalar _tmp249 = -_x2[4] + _x3[4];
  const Scalar _tmp250 = -_x0[4] + _x1[4];
  const Scalar _tmp251 = _tmp247 * lambdas(1, 2) + _tmp248 * lambdas(3, 2) +
                         _tmp249 * lambdas(2, 2) + _tmp250 * lambdas(0, 2);
  const Scalar _tmp252 = -2 * std::pow(_tmp229, Scalar(2));
  const Scalar _tmp253 = -2 * std::pow(_tmp234, Scalar(2));
  const Scalar _tmp254 = _tmp252 + _tmp253 + 1;
  const Scalar _tmp255 = _tmp182 + _tmp188;
  const Scalar _tmp256 = _tmp191 * lambdas(1, 1) + _tmp192 * lambdas(3, 1) +
                         _tmp193 * lambdas(2, 1) + _tmp194 * lambdas(0, 1);
  const Scalar _tmp257 = 1 - 2 * std::pow(_tmp231, Scalar(2));
  const Scalar _tmp258 = _tmp253 + _tmp257;
  const Scalar _tmp259 = _tmp239 * lambdas(1, 1) + _tmp240 * lambdas(3, 1) +
                         _tmp241 * lambdas(2, 1) + _tmp242 * lambdas(0, 1);
  const Scalar _tmp260 = _tmp232 * _tmp235;
  const Scalar _tmp261 = 2 * _tmp229 * _tmp234;
  const Scalar _tmp262 = _tmp260 + _tmp261;
  const Scalar _tmp263 = _tmp247 * lambdas(1, 1) + _tmp248 * lambdas(3, 1) +
                         _tmp249 * lambdas(2, 1) + _tmp250 * lambdas(0, 1);
  const Scalar _tmp264 = _tmp233 - _tmp237;
  const Scalar _tmp265 = _tmp256 * _tmp258 + _tmp259 * _tmp262 + _tmp263 * _tmp264;
  const Scalar _tmp266 = _tmp180 + _tmp189;
  const Scalar _tmp267 = -_tmp260 + _tmp261;
  const Scalar _tmp268 = _tmp252 + _tmp257;
  const Scalar _tmp269 = _tmp244 + _tmp245;
  const Scalar _tmp270 = _tmp256 * _tmp267 + _tmp259 * _tmp268 + _tmp263 * _tmp269;
  const Scalar _tmp271 = _tmp0 * (_tmp195 * _tmp238 + _tmp243 * _tmp246 + _tmp251 * _tmp254 +
                                  _tmp255 * _tmp265 - _tmp266 * _tmp270) -
                         acceleration(3, 0);
  const Scalar _tmp272 = _tmp132 * _tmp181;
  const Scalar _tmp273 = _tmp158 * _tmp167 + _tmp166 * _tmp176 + _tmp179 * _tmp183;
  const Scalar _tmp274 = _tmp272 + _tmp273;
  const Scalar _tmp275 = _tmp238 * _tmp256 + _tmp246 * _tmp259 + _tmp254 * _tmp263;
  const Scalar _tmp276 = _tmp0 * (_tmp195 * _tmp267 + _tmp243 * _tmp268 + _tmp251 * _tmp269 -
                                  _tmp265 * _tmp274 + _tmp266 * _tmp275) -
                         acceleration(5, 0);
  const Scalar _tmp277 = _tmp0 * (_tmp195 * _tmp258 + _tmp243 * _tmp262 + _tmp251 * _tmp264 -
                                  _tmp255 * _tmp275 + _tmp270 * _tmp274) -
                         acceleration(4, 0);
  const Scalar _tmp278 = _tmp0 * (_tmp130 * _tmp185 + _tmp131 * _tmp160 + _tmp163 * _tmp186 -
                                  _tmp180 * _tmp272 + _tmp184 * _tmp187 + _tmp189 * _tmp273) -
                         acceleration(2, 0);
  const Scalar _tmp279 = _tmp0 * (_tmp130 * _tmp171 + _tmp143 * _tmp160 + _tmp163 * _tmp175 +
                                  _tmp178 * _tmp184 - _tmp182 * _tmp273 + _tmp188 * _tmp272) -
                         acceleration(1, 0);

  // Output terms (1)
  Eigen::Matrix<Scalar, 6, 1> _res;

  _res(0, 0) = _tmp190 * sqrt_info(0, 0) + _tmp271 * sqrt_info(0, 3) + _tmp276 * sqrt_info(0, 5) +
               _tmp277 * sqrt_info(0, 4) + _tmp278 * sqrt_info(0, 2) + _tmp279 * sqrt_info(0, 1);
  _res(1, 0) = _tmp190 * sqrt_info(1, 0) + _tmp271 * sqrt_info(1, 3) + _tmp276 * sqrt_info(1, 5) +
               _tmp277 * sqrt_info(1, 4) + _tmp278 * sqrt_info(1, 2) + _tmp279 * sqrt_info(1, 1);
  _res(2, 0) = _tmp190 * sqrt_info(2, 0) + _tmp271 * sqrt_info(2, 3) + _tmp276 * sqrt_info(2, 5) +
               _tmp277 * sqrt_info(2, 4) + _tmp278 * sqrt_info(2, 2) + _tmp279 * sqrt_info(2, 1);
  _res(3, 0) = _tmp190 * sqrt_info(3, 0) + _tmp271 * sqrt_info(3, 3) + _tmp276 * sqrt_info(3, 5) +
               _tmp277 * sqrt_info(3, 4) + _tmp278 * sqrt_info(3, 2) + _tmp279 * sqrt_info(3, 1);
  _res(4, 0) = _tmp190 * sqrt_info(4, 0) + _tmp271 * sqrt_info(4, 3) + _tmp276 * sqrt_info(4, 5) +
               _tmp277 * sqrt_info(4, 4) + _tmp278 * sqrt_info(4, 2) + _tmp279 * sqrt_info(4, 1);
  _res(5, 0) = _tmp190 * sqrt_info(5, 0) + _tmp271 * sqrt_info(5, 3) + _tmp276 * sqrt_info(5, 5) +
               _tmp277 * sqrt_info(5, 4) + _tmp278 * sqrt_info(5, 2) + _tmp279 * sqrt_info(5, 1);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_hyperion
