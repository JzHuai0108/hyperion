// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>

namespace sym_hyperion {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: pose3_r3_sensor_between_factor
 *
 * Args:
 *     x: Pose3
 *     x_T_s: Pose3
 *     s_T_y: Matrix31
 *     y: Pose3
 *     sqrt_info: Matrix33
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix31
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 3, 1> Pose3R3SensorBetweenFactor(const sym::Pose3<Scalar>& x,
                                                       const sym::Pose3<Scalar>& x_T_s,
                                                       const Eigen::Matrix<Scalar, 3, 1>& s_T_y,
                                                       const sym::Pose3<Scalar>& y,
                                                       const Eigen::Matrix<Scalar, 3, 3>& sqrt_info,
                                                       const Scalar epsilon) {
  // Total ops: 153

  // Unused inputs
  (void)epsilon;

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x = x.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x_T_s = x_T_s.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y = y.Data();

  // Intermediate terms (41)
  const Scalar _tmp0 =
      _x[0] * _x_T_s[1] - _x[1] * _x_T_s[0] + _x[2] * _x_T_s[3] + _x[3] * _x_T_s[2];
  const Scalar _tmp1 = -2 * std::pow(_tmp0, Scalar(2));
  const Scalar _tmp2 =
      _x[0] * _x_T_s[3] + _x[1] * _x_T_s[2] - _x[2] * _x_T_s[1] + _x[3] * _x_T_s[0];
  const Scalar _tmp3 = 1 - 2 * std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = _tmp1 + _tmp3;
  const Scalar _tmp5 =
      -_x[0] * _x_T_s[2] + _x[1] * _x_T_s[3] + _x[2] * _x_T_s[0] + _x[3] * _x_T_s[1];
  const Scalar _tmp6 = 2 * _tmp0;
  const Scalar _tmp7 = _tmp5 * _tmp6;
  const Scalar _tmp8 =
      -_x[0] * _x_T_s[0] - _x[1] * _x_T_s[1] - _x[2] * _x_T_s[2] + _x[3] * _x_T_s[3];
  const Scalar _tmp9 = 2 * _tmp2 * _tmp8;
  const Scalar _tmp10 = _tmp7 + _tmp9;
  const Scalar _tmp11 = 2 * _x[2];
  const Scalar _tmp12 = _tmp11 * _x[0];
  const Scalar _tmp13 = 2 * _x[1];
  const Scalar _tmp14 = _tmp13 * _x[3];
  const Scalar _tmp15 = 2 * _x[0] * _x[3];
  const Scalar _tmp16 = _tmp13 * _x[2];
  const Scalar _tmp17 = -2 * std::pow(_x[0], Scalar(2));
  const Scalar _tmp18 = 1 - 2 * std::pow(_x[1], Scalar(2));
  const Scalar _tmp19 = _x[6] + _x_T_s[4] * (_tmp12 - _tmp14) + _x_T_s[5] * (_tmp15 + _tmp16) +
                        _x_T_s[6] * (_tmp17 + _tmp18);
  const Scalar _tmp20 = _tmp13 * _x[0];
  const Scalar _tmp21 = _tmp11 * _x[3];
  const Scalar _tmp22 = -2 * std::pow(_x[2], Scalar(2));
  const Scalar _tmp23 = _x[5] + _x_T_s[4] * (_tmp20 + _tmp21) + _x_T_s[5] * (_tmp17 + _tmp22 + 1) +
                        _x_T_s[6] * (-_tmp15 + _tmp16);
  const Scalar _tmp24 = 2 * _tmp5;
  const Scalar _tmp25 = _tmp2 * _tmp24;
  const Scalar _tmp26 = _tmp6 * _tmp8;
  const Scalar _tmp27 = _tmp25 - _tmp26;
  const Scalar _tmp28 = _x[4] + _x_T_s[4] * (_tmp18 + _tmp22) + _x_T_s[5] * (_tmp20 - _tmp21) +
                        _x_T_s[6] * (_tmp12 + _tmp14);
  const Scalar _tmp29 = -_tmp10 * _tmp19 + _tmp10 * _y[6] - _tmp23 * _tmp4 - _tmp27 * _tmp28 +
                        _tmp27 * _y[4] + _tmp4 * _y[5] - s_T_y(1, 0);
  const Scalar _tmp30 = -2 * std::pow(_tmp5, Scalar(2));
  const Scalar _tmp31 = _tmp1 + _tmp30 + 1;
  const Scalar _tmp32 = _tmp2 * _tmp6;
  const Scalar _tmp33 = _tmp24 * _tmp8;
  const Scalar _tmp34 = _tmp32 - _tmp33;
  const Scalar _tmp35 = _tmp25 + _tmp26;
  const Scalar _tmp36 = -_tmp19 * _tmp34 - _tmp23 * _tmp35 - _tmp28 * _tmp31 + _tmp31 * _y[4] +
                        _tmp34 * _y[6] + _tmp35 * _y[5] - s_T_y(0, 0);
  const Scalar _tmp37 = _tmp3 + _tmp30;
  const Scalar _tmp38 = _tmp32 + _tmp33;
  const Scalar _tmp39 = _tmp7 - _tmp9;
  const Scalar _tmp40 = -_tmp19 * _tmp37 - _tmp23 * _tmp39 - _tmp28 * _tmp38 + _tmp37 * _y[6] +
                        _tmp38 * _y[4] + _tmp39 * _y[5] - s_T_y(2, 0);

  // Output terms (1)
  Eigen::Matrix<Scalar, 3, 1> _res;

  _res(0, 0) = _tmp29 * sqrt_info(0, 1) + _tmp36 * sqrt_info(0, 0) + _tmp40 * sqrt_info(0, 2);
  _res(1, 0) = _tmp29 * sqrt_info(1, 1) + _tmp36 * sqrt_info(1, 0) + _tmp40 * sqrt_info(1, 2);
  _res(2, 0) = _tmp29 * sqrt_info(2, 1) + _tmp36 * sqrt_info(2, 0) + _tmp40 * sqrt_info(2, 2);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_hyperion
