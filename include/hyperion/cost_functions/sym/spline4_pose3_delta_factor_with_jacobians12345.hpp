// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>

namespace sym_hyperion {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline4_pose3_delta_factor
 *
 * Args:
 *     lambdas: Matrix41
 *     x0: Pose3
 *     x1: Pose3
 *     x2: Pose3
 *     x3: Pose3
 *     x4: Pose3
 *     y: Pose3
 *     sqrt_info: Matrix66
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix61
 *     res_D_x0: (6x6) jacobian of res (6) wrt arg x0 (6)
 *     res_D_x1: (6x6) jacobian of res (6) wrt arg x1 (6)
 *     res_D_x2: (6x6) jacobian of res (6) wrt arg x2 (6)
 *     res_D_x3: (6x6) jacobian of res (6) wrt arg x3 (6)
 *     res_D_x4: (6x6) jacobian of res (6) wrt arg x4 (6)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 6, 1> Spline4Pose3DeltaFactorWithJacobians12345(
    const Eigen::Matrix<Scalar, 4, 1>& lambdas, const sym::Pose3<Scalar>& x0,
    const sym::Pose3<Scalar>& x1, const sym::Pose3<Scalar>& x2, const sym::Pose3<Scalar>& x3,
    const sym::Pose3<Scalar>& x4, const sym::Pose3<Scalar>& y,
    const Eigen::Matrix<Scalar, 6, 6>& sqrt_info, const Scalar epsilon,
    Scalar* const res_D_x0 = nullptr, Scalar* const res_D_x1 = nullptr,
    Scalar* const res_D_x2 = nullptr, Scalar* const res_D_x3 = nullptr,
    Scalar* const res_D_x4 = nullptr) {
  // Total ops: 8187

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x3 = x3.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x4 = x4.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _y = y.Data();

  // Intermediate terms (1632)
  const Scalar _tmp0 = _x0[3] * _x1[2];
  const Scalar _tmp1 = _x0[0] * _x1[1];
  const Scalar _tmp2 = _x0[2] * _x1[3];
  const Scalar _tmp3 = _x0[1] * _x1[0];
  const Scalar _tmp4 = _tmp0 - _tmp1 - _tmp2 + _tmp3;
  const Scalar _tmp5 = _x0[2] * _x1[2];
  const Scalar _tmp6 = _x0[1] * _x1[1];
  const Scalar _tmp7 = _x0[0] * _x1[0];
  const Scalar _tmp8 = -_tmp5 - _tmp6 - _tmp7;
  const Scalar _tmp9 = _x0[3] * _x1[3];
  const Scalar _tmp10 =
      2 * std::min<Scalar>(0, (((-_tmp8 + _tmp9) > 0) - ((-_tmp8 + _tmp9) < 0))) + 1;
  const Scalar _tmp11 = 2 * _tmp10 * lambdas(0, 0);
  const Scalar _tmp12 = _tmp11 * _tmp4;
  const Scalar _tmp13 = _x3[3] * _x4[2];
  const Scalar _tmp14 = _x3[0] * _x4[1];
  const Scalar _tmp15 = _x3[1] * _x4[0];
  const Scalar _tmp16 = _x3[2] * _x4[3];
  const Scalar _tmp17 = _tmp13 - _tmp14 + _tmp15 - _tmp16;
  const Scalar _tmp18 = _x3[0] * _x4[0];
  const Scalar _tmp19 = _x3[1] * _x4[1];
  const Scalar _tmp20 = _x3[2] * _x4[2];
  const Scalar _tmp21 = -_tmp18 - _tmp19 - _tmp20;
  const Scalar _tmp22 = _x3[3] * _x4[3];
  const Scalar _tmp23 =
      2 * std::min<Scalar>(0, (((-_tmp21 + _tmp22) > 0) - ((-_tmp21 + _tmp22) < 0))) + 1;
  const Scalar _tmp24 = std::pow(_tmp23, Scalar(2));
  const Scalar _tmp25 = std::pow(lambdas(3, 0), Scalar(2));
  const Scalar _tmp26 = 4 * _tmp24 * _tmp25;
  const Scalar _tmp27 = std::pow(_tmp17, Scalar(2)) * _tmp26;
  const Scalar _tmp28 = 1 - epsilon;
  const Scalar _tmp29 = std::min<Scalar>(_tmp28, std::fabs(_tmp21 - _tmp22));
  const Scalar _tmp30 = std::acos(_tmp29);
  const Scalar _tmp31 = 1 - std::pow(_tmp29, Scalar(2));
  const Scalar _tmp32 = std::pow(_tmp30, Scalar(2)) / _tmp31;
  const Scalar _tmp33 = _x3[3] * _x4[1];
  const Scalar _tmp34 = _x3[0] * _x4[2];
  const Scalar _tmp35 = _x3[1] * _x4[3];
  const Scalar _tmp36 = _x3[2] * _x4[0];
  const Scalar _tmp37 = _tmp33 + _tmp34 - _tmp35 - _tmp36;
  const Scalar _tmp38 = _tmp26 * std::pow(_tmp37, Scalar(2));
  const Scalar _tmp39 = _x3[3] * _x4[0];
  const Scalar _tmp40 = _x3[0] * _x4[3];
  const Scalar _tmp41 = _x3[1] * _x4[2];
  const Scalar _tmp42 = _x3[2] * _x4[1];
  const Scalar _tmp43 = _tmp39 - _tmp40 - _tmp41 + _tmp42;
  const Scalar _tmp44 = _tmp26 * std::pow(_tmp43, Scalar(2));
  const Scalar _tmp45 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp46 =
      std::sqrt(Scalar(_tmp27 * _tmp32 + _tmp32 * _tmp38 + _tmp32 * _tmp44 + _tmp45));
  const Scalar _tmp47 = (Scalar(1) / Scalar(2)) * _tmp46;
  const Scalar _tmp48 = std::cos(_tmp47);
  const Scalar _tmp49 = _x2[2] * _x3[3];
  const Scalar _tmp50 = _x2[0] * _x3[1];
  const Scalar _tmp51 = _x2[3] * _x3[2];
  const Scalar _tmp52 = _x2[1] * _x3[0];
  const Scalar _tmp53 = -_tmp49 - _tmp50 + _tmp51 + _tmp52;
  const Scalar _tmp54 = std::pow(_tmp53, Scalar(2));
  const Scalar _tmp55 = _x2[2] * _x3[2];
  const Scalar _tmp56 = _x2[0] * _x3[0];
  const Scalar _tmp57 = _x2[1] * _x3[1];
  const Scalar _tmp58 = -_tmp55 - _tmp56 - _tmp57;
  const Scalar _tmp59 = _x2[3] * _x3[3];
  const Scalar _tmp60 =
      2 * std::min<Scalar>(0, (((-_tmp58 + _tmp59) > 0) - ((-_tmp58 + _tmp59) < 0))) + 1;
  const Scalar _tmp61 = std::pow(_tmp60, Scalar(2));
  const Scalar _tmp62 = std::pow(lambdas(2, 0), Scalar(2));
  const Scalar _tmp63 = 4 * _tmp61 * _tmp62;
  const Scalar _tmp64 = std::min<Scalar>(_tmp28, std::fabs(_tmp58 - _tmp59));
  const Scalar _tmp65 = 1 - std::pow(_tmp64, Scalar(2));
  const Scalar _tmp66 = std::acos(_tmp64);
  const Scalar _tmp67 = std::pow(_tmp66, Scalar(2)) / _tmp65;
  const Scalar _tmp68 = _tmp63 * _tmp67;
  const Scalar _tmp69 = _x2[2] * _x3[0];
  const Scalar _tmp70 = _x2[0] * _x3[2];
  const Scalar _tmp71 = _x2[3] * _x3[1];
  const Scalar _tmp72 = _x2[1] * _x3[3];
  const Scalar _tmp73 = -_tmp69 + _tmp70 + _tmp71 - _tmp72;
  const Scalar _tmp74 = _tmp63 * std::pow(_tmp73, Scalar(2));
  const Scalar _tmp75 = _x2[2] * _x3[1];
  const Scalar _tmp76 = _x2[0] * _x3[3];
  const Scalar _tmp77 = _x2[3] * _x3[0];
  const Scalar _tmp78 = _x2[1] * _x3[2];
  const Scalar _tmp79 = _tmp75 - _tmp76 + _tmp77 - _tmp78;
  const Scalar _tmp80 = std::pow(_tmp79, Scalar(2));
  const Scalar _tmp81 =
      std::sqrt(Scalar(_tmp45 + _tmp54 * _tmp68 + _tmp67 * _tmp74 + _tmp68 * _tmp80));
  const Scalar _tmp82 = (Scalar(1) / Scalar(2)) * _tmp81;
  const Scalar _tmp83 = std::cos(_tmp82);
  const Scalar _tmp84 = _tmp23 * lambdas(3, 0);
  const Scalar _tmp85 = _tmp17 * _tmp84;
  const Scalar _tmp86 = _tmp60 * lambdas(2, 0);
  const Scalar _tmp87 = _tmp53 * _tmp86;
  const Scalar _tmp88 = _tmp30 * std::sin(_tmp47) / (std::sqrt(_tmp31) * _tmp46);
  const Scalar _tmp89 = _tmp66 * std::sin(_tmp82) / (std::sqrt(_tmp65) * _tmp81);
  const Scalar _tmp90 = 4 * _tmp88 * _tmp89;
  const Scalar _tmp91 = _tmp87 * _tmp90;
  const Scalar _tmp92 = _tmp43 * _tmp84;
  const Scalar _tmp93 = _tmp79 * _tmp86;
  const Scalar _tmp94 = _tmp90 * _tmp93;
  const Scalar _tmp95 = _tmp37 * _tmp84;
  const Scalar _tmp96 = _tmp73 * _tmp86;
  const Scalar _tmp97 = _tmp90 * _tmp96;
  const Scalar _tmp98 = _tmp48 * _tmp83 - _tmp85 * _tmp91 - _tmp92 * _tmp94 - _tmp95 * _tmp97;
  const Scalar _tmp99 = _x1[1] * _x2[3];
  const Scalar _tmp100 = _x1[2] * _x2[0];
  const Scalar _tmp101 = _x1[3] * _x2[1];
  const Scalar _tmp102 = _x1[0] * _x2[2];
  const Scalar _tmp103 = -_tmp100 + _tmp101 + _tmp102 - _tmp99;
  const Scalar _tmp104 = _x1[0] * _x2[0];
  const Scalar _tmp105 = _x1[1] * _x2[1];
  const Scalar _tmp106 = _x1[2] * _x2[2];
  const Scalar _tmp107 = -_tmp104 - _tmp105 - _tmp106;
  const Scalar _tmp108 = _x1[3] * _x2[3];
  const Scalar _tmp109 =
      2 * std::min<Scalar>(0, (((-_tmp107 + _tmp108) > 0) - ((-_tmp107 + _tmp108) < 0))) + 1;
  const Scalar _tmp110 = 2 * _tmp109 * lambdas(1, 0);
  const Scalar _tmp111 = _tmp103 * _tmp110;
  const Scalar _tmp112 = std::min<Scalar>(_tmp28, std::fabs(_tmp107 - _tmp108));
  const Scalar _tmp113 = 1 - std::pow(_tmp112, Scalar(2));
  const Scalar _tmp114 = std::pow(_tmp109, Scalar(2));
  const Scalar _tmp115 = std::pow(lambdas(1, 0), Scalar(2));
  const Scalar _tmp116 = 4 * _tmp114 * _tmp115;
  const Scalar _tmp117 = std::pow(_tmp103, Scalar(2)) * _tmp116;
  const Scalar _tmp118 = std::acos(_tmp112);
  const Scalar _tmp119 = std::pow(_tmp118, Scalar(2)) / _tmp113;
  const Scalar _tmp120 = _x1[2] * _x2[3];
  const Scalar _tmp121 = _x1[1] * _x2[0];
  const Scalar _tmp122 = _x1[0] * _x2[1];
  const Scalar _tmp123 = _x1[3] * _x2[2];
  const Scalar _tmp124 = -_tmp120 + _tmp121 - _tmp122 + _tmp123;
  const Scalar _tmp125 = _tmp116 * std::pow(_tmp124, Scalar(2));
  const Scalar _tmp126 = _x1[0] * _x2[3];
  const Scalar _tmp127 = _x1[3] * _x2[0];
  const Scalar _tmp128 = _x1[2] * _x2[1];
  const Scalar _tmp129 = _x1[1] * _x2[2];
  const Scalar _tmp130 = -_tmp126 + _tmp127 + _tmp128 - _tmp129;
  const Scalar _tmp131 = _tmp116 * std::pow(_tmp130, Scalar(2));
  const Scalar _tmp132 =
      std::sqrt(Scalar(_tmp117 * _tmp119 + _tmp119 * _tmp125 + _tmp119 * _tmp131 + _tmp45));
  const Scalar _tmp133 = (Scalar(1) / Scalar(2)) * _tmp132;
  const Scalar _tmp134 = _tmp118 * std::sin(_tmp133) / (std::sqrt(_tmp113) * _tmp132);
  const Scalar _tmp135 = _tmp111 * _tmp134;
  const Scalar _tmp136 = _tmp48 * _tmp89;
  const Scalar _tmp137 = 2 * _tmp136;
  const Scalar _tmp138 = 2 * _tmp92;
  const Scalar _tmp139 = _tmp83 * _tmp88;
  const Scalar _tmp140 = _tmp137 * _tmp93 + _tmp138 * _tmp139 + _tmp85 * _tmp97 - _tmp91 * _tmp95;
  const Scalar _tmp141 = _tmp110 * _tmp134;
  const Scalar _tmp142 = _tmp140 * _tmp141;
  const Scalar _tmp143 = std::cos(_tmp133);
  const Scalar _tmp144 = 2 * _tmp139;
  const Scalar _tmp145 = _tmp137 * _tmp96 + _tmp144 * _tmp95 - _tmp85 * _tmp94 + _tmp91 * _tmp92;
  const Scalar _tmp146 = 2 * _tmp87;
  const Scalar _tmp147 = _tmp136 * _tmp146 + _tmp144 * _tmp85 - _tmp92 * _tmp97 + _tmp94 * _tmp95;
  const Scalar _tmp148 = _tmp130 * _tmp141;
  const Scalar _tmp149 =
      _tmp124 * _tmp142 + _tmp135 * _tmp98 + _tmp143 * _tmp145 - _tmp147 * _tmp148;
  const Scalar _tmp150 = std::min<Scalar>(_tmp28, std::fabs(_tmp8 - _tmp9));
  const Scalar _tmp151 = std::acos(_tmp150);
  const Scalar _tmp152 = 1 - std::pow(_tmp150, Scalar(2));
  const Scalar _tmp153 = std::pow(_tmp151, Scalar(2)) / _tmp152;
  const Scalar _tmp154 = std::pow(_tmp10, Scalar(2));
  const Scalar _tmp155 = std::pow(lambdas(0, 0), Scalar(2));
  const Scalar _tmp156 = 4 * _tmp154 * _tmp155;
  const Scalar _tmp157 = _tmp156 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp158 = _x0[0] * _x1[2];
  const Scalar _tmp159 = _x0[3] * _x1[1];
  const Scalar _tmp160 = _x0[1] * _x1[3];
  const Scalar _tmp161 = _x0[2] * _x1[0];
  const Scalar _tmp162 = _tmp158 + _tmp159 - _tmp160 - _tmp161;
  const Scalar _tmp163 = _tmp156 * std::pow(_tmp162, Scalar(2));
  const Scalar _tmp164 = _x0[1] * _x1[2];
  const Scalar _tmp165 = _x0[2] * _x1[1];
  const Scalar _tmp166 = _x0[0] * _x1[3];
  const Scalar _tmp167 = _x0[3] * _x1[0];
  const Scalar _tmp168 = -_tmp164 + _tmp165 - _tmp166 + _tmp167;
  const Scalar _tmp169 = _tmp156 * std::pow(_tmp168, Scalar(2));
  const Scalar _tmp170 =
      std::sqrt(Scalar(_tmp153 * _tmp157 + _tmp153 * _tmp163 + _tmp153 * _tmp169 + _tmp45));
  const Scalar _tmp171 = (Scalar(1) / Scalar(2)) * _tmp170;
  const Scalar _tmp172 = _tmp151 * std::sin(_tmp171) / (std::sqrt(_tmp152) * _tmp170);
  const Scalar _tmp173 = _tmp149 * _tmp172;
  const Scalar _tmp174 = _tmp124 * _tmp141;
  const Scalar _tmp175 =
      -_tmp130 * _tmp142 - _tmp135 * _tmp145 + _tmp143 * _tmp98 - _tmp147 * _tmp174;
  const Scalar _tmp176 = _tmp11 * _tmp168;
  const Scalar _tmp177 = _tmp172 * _tmp176;
  const Scalar _tmp178 = _tmp11 * _tmp162;
  const Scalar _tmp179 = _tmp141 * _tmp145;
  const Scalar _tmp180 =
      _tmp130 * _tmp179 - _tmp135 * _tmp140 + _tmp143 * _tmp147 + _tmp174 * _tmp98;
  const Scalar _tmp181 = _tmp172 * _tmp180;
  const Scalar _tmp182 = std::cos(_tmp171);
  const Scalar _tmp183 =
      -_tmp124 * _tmp179 + _tmp135 * _tmp147 + _tmp140 * _tmp143 + _tmp148 * _tmp98;
  const Scalar _tmp184 =
      -_tmp12 * _tmp173 + _tmp175 * _tmp177 + _tmp178 * _tmp181 + _tmp182 * _tmp183;
  const Scalar _tmp185 = _tmp172 * _tmp175;
  const Scalar _tmp186 = _tmp172 * _tmp183;
  const Scalar _tmp187 =
      _tmp12 * _tmp185 + _tmp173 * _tmp176 - _tmp178 * _tmp186 + _tmp180 * _tmp182;
  const Scalar _tmp188 =
      _tmp12 * _tmp186 + _tmp149 * _tmp182 - _tmp177 * _tmp180 + _tmp178 * _tmp185;
  const Scalar _tmp189 =
      -_tmp12 * _tmp181 - _tmp173 * _tmp178 + _tmp175 * _tmp182 - _tmp177 * _tmp183;
  const Scalar _tmp190 = -_tmp184 * _x0[0] - _tmp187 * _x0[2] - _tmp188 * _x0[1] + _tmp189 * _x0[3];
  const Scalar _tmp191 = _tmp184 * _x0[3] + _tmp187 * _x0[1] - _tmp188 * _x0[2] + _tmp189 * _x0[0];
  const Scalar _tmp192 = -_tmp184 * _x0[1] + _tmp187 * _x0[3] + _tmp188 * _x0[0] + _tmp189 * _x0[2];
  const Scalar _tmp193 = _tmp184 * _x0[2] - _tmp187 * _x0[0] + _tmp188 * _x0[3] + _tmp189 * _x0[1];
  const Scalar _tmp194 = _tmp190 * _y[3] + _tmp191 * _y[0] + _tmp192 * _y[2] + _tmp193 * _y[1];
  const Scalar _tmp195 = std::min<Scalar>(_tmp28, std::fabs(_tmp194));
  const Scalar _tmp196 = 2 * (2 * std::min<Scalar>(0, (((_tmp194) > 0) - ((_tmp194) < 0))) + 1) *
                         std::acos(_tmp195) / std::sqrt(Scalar(1 - std::pow(_tmp195, Scalar(2))));
  const Scalar _tmp197 =
      _tmp196 * (-_tmp190 * _y[0] + _tmp191 * _y[3] - _tmp192 * _y[1] + _tmp193 * _y[2]);
  const Scalar _tmp198 =
      _tmp196 * (-_tmp190 * _y[2] + _tmp191 * _y[1] + _tmp192 * _y[3] - _tmp193 * _y[0]);
  const Scalar _tmp199 = _x0[4] - _y[4] + lambdas(0, 0) * (-_x0[4] + _x1[4]) +
                         lambdas(1, 0) * (-_x1[4] + _x2[4]) + lambdas(2, 0) * (-_x2[4] + _x3[4]) +
                         lambdas(3, 0) * (-_x3[4] + _x4[4]);
  const Scalar _tmp200 =
      _tmp196 * (-_tmp190 * _y[1] - _tmp191 * _y[2] + _tmp192 * _y[0] + _tmp193 * _y[3]);
  const Scalar _tmp201 = _x0[5] - _y[5] + lambdas(0, 0) * (-_x0[5] + _x1[5]) +
                         lambdas(1, 0) * (-_x1[5] + _x2[5]) + lambdas(2, 0) * (-_x2[5] + _x3[5]) +
                         lambdas(3, 0) * (-_x3[5] + _x4[5]);
  const Scalar _tmp202 = _x0[6] - _y[6] + lambdas(0, 0) * (-_x0[6] + _x1[6]) +
                         lambdas(1, 0) * (-_x1[6] + _x2[6]) + lambdas(2, 0) * (-_x2[6] + _x3[6]) +
                         lambdas(3, 0) * (-_x3[6] + _x4[6]);
  const Scalar _tmp203 = (Scalar(1) / Scalar(2)) * _tmp164;
  const Scalar _tmp204 = (Scalar(1) / Scalar(2)) * _tmp165;
  const Scalar _tmp205 = (Scalar(1) / Scalar(2)) * _tmp166;
  const Scalar _tmp206 = (Scalar(1) / Scalar(2)) * _tmp167;
  const Scalar _tmp207 = -_tmp203 + _tmp204 - _tmp205 + _tmp206;
  const Scalar _tmp208 = _tmp55 + _tmp56 + _tmp57 + _tmp59;
  const Scalar _tmp209 = std::fabs(_tmp208);
  const Scalar _tmp210 = std::min<Scalar>(_tmp209, _tmp28);
  const Scalar _tmp211 = std::acos(_tmp210);
  const Scalar _tmp212 = 1 - std::pow(_tmp210, Scalar(2));
  const Scalar _tmp213 = _tmp86 / std::sqrt(_tmp212);
  const Scalar _tmp214 = _tmp211 * _tmp213;
  const Scalar _tmp215 = Scalar(1.0) / (_tmp212);
  const Scalar _tmp216 = std::pow(_tmp211, Scalar(2));
  const Scalar _tmp217 = _tmp215 * _tmp216;
  const Scalar _tmp218 = _tmp217 * _tmp63;
  const Scalar _tmp219 = _tmp217 * _tmp74 + _tmp218 * _tmp54 + _tmp218 * _tmp80 + _tmp45;
  const Scalar _tmp220 = std::sqrt(_tmp219);
  const Scalar _tmp221 = Scalar(1.0) / (_tmp220);
  const Scalar _tmp222 = _tmp18 + _tmp19 + _tmp20 + _tmp22;
  const Scalar _tmp223 = std::fabs(_tmp222);
  const Scalar _tmp224 = std::min<Scalar>(_tmp223, _tmp28);
  const Scalar _tmp225 = 1 - std::pow(_tmp224, Scalar(2));
  const Scalar _tmp226 = Scalar(1.0) / (_tmp225);
  const Scalar _tmp227 = std::acos(_tmp224);
  const Scalar _tmp228 = std::pow(_tmp227, Scalar(2));
  const Scalar _tmp229 = _tmp226 * _tmp228;
  const Scalar _tmp230 = _tmp229 * _tmp27 + _tmp229 * _tmp38 + _tmp229 * _tmp44 + _tmp45;
  const Scalar _tmp231 = std::sqrt(_tmp230);
  const Scalar _tmp232 = (Scalar(1) / Scalar(2)) * _tmp231;
  const Scalar _tmp233 = std::cos(_tmp232);
  const Scalar _tmp234 = (Scalar(1) / Scalar(2)) * _tmp220;
  const Scalar _tmp235 = std::sin(_tmp234);
  const Scalar _tmp236 = _tmp233 * _tmp235;
  const Scalar _tmp237 = _tmp221 * _tmp236;
  const Scalar _tmp238 = 2 * _tmp237;
  const Scalar _tmp239 = _tmp214 * _tmp238;
  const Scalar _tmp240 = Scalar(1.0) / (_tmp231);
  const Scalar _tmp241 = _tmp227 / std::sqrt(_tmp225);
  const Scalar _tmp242 = _tmp240 * _tmp241;
  const Scalar _tmp243 = std::sin(_tmp232);
  const Scalar _tmp244 = _tmp235 * _tmp243;
  const Scalar _tmp245 = _tmp221 * _tmp244;
  const Scalar _tmp246 = _tmp242 * _tmp245;
  const Scalar _tmp247 = 4 * _tmp246;
  const Scalar _tmp248 = _tmp214 * _tmp73;
  const Scalar _tmp249 = _tmp248 * _tmp85;
  const Scalar _tmp250 = _tmp214 * _tmp53;
  const Scalar _tmp251 = _tmp250 * _tmp95;
  const Scalar _tmp252 = std::cos(_tmp234);
  const Scalar _tmp253 = _tmp243 * _tmp252;
  const Scalar _tmp254 = _tmp242 * _tmp253;
  const Scalar _tmp255 =
      _tmp138 * _tmp254 + _tmp239 * _tmp79 + _tmp247 * _tmp249 - _tmp247 * _tmp251;
  const Scalar _tmp256 = _tmp104 + _tmp105 + _tmp106 + _tmp108;
  const Scalar _tmp257 = std::fabs(_tmp256);
  const Scalar _tmp258 = std::min<Scalar>(_tmp257, _tmp28);
  const Scalar _tmp259 = 1 - std::pow(_tmp258, Scalar(2));
  const Scalar _tmp260 = Scalar(1.0) / (_tmp259);
  const Scalar _tmp261 = std::acos(_tmp258);
  const Scalar _tmp262 = std::pow(_tmp261, Scalar(2));
  const Scalar _tmp263 = _tmp260 * _tmp262;
  const Scalar _tmp264 = _tmp117 * _tmp263 + _tmp125 * _tmp263 + _tmp131 * _tmp263 + _tmp45;
  const Scalar _tmp265 = std::sqrt(_tmp264);
  const Scalar _tmp266 = (Scalar(1) / Scalar(2)) * _tmp265;
  const Scalar _tmp267 = std::sin(_tmp266);
  const Scalar _tmp268 = _tmp267 / _tmp265;
  const Scalar _tmp269 = _tmp261 / std::sqrt(_tmp259);
  const Scalar _tmp270 = _tmp268 * _tmp269;
  const Scalar _tmp271 = _tmp110 * _tmp270;
  const Scalar _tmp272 = _tmp130 * _tmp271;
  const Scalar _tmp273 = _tmp248 * _tmp92;
  const Scalar _tmp274 = _tmp214 * _tmp79;
  const Scalar _tmp275 = _tmp247 * _tmp274;
  const Scalar _tmp276 = _tmp253 * _tmp84;
  const Scalar _tmp277 = _tmp242 * _tmp276;
  const Scalar _tmp278 = 2 * _tmp277;
  const Scalar _tmp279 = _tmp17 * _tmp278 + _tmp239 * _tmp53 - _tmp247 * _tmp273 + _tmp275 * _tmp95;
  const Scalar _tmp280 = _tmp271 * _tmp279;
  const Scalar _tmp281 = _tmp247 * _tmp85;
  const Scalar _tmp282 = _tmp250 * _tmp92;
  const Scalar _tmp283 =
      _tmp238 * _tmp248 + _tmp247 * _tmp282 - _tmp274 * _tmp281 + _tmp278 * _tmp37;
  const Scalar _tmp284 = _tmp111 * _tmp270;
  const Scalar _tmp285 = _tmp233 * _tmp252;
  const Scalar _tmp286 = _tmp248 * _tmp95;
  const Scalar _tmp287 = -_tmp247 * _tmp286 - _tmp250 * _tmp281 - _tmp275 * _tmp92 + _tmp285;
  const Scalar _tmp288 = std::cos(_tmp266);
  const Scalar _tmp289 = _tmp287 * _tmp288;
  const Scalar _tmp290 = -_tmp124 * _tmp280 - _tmp255 * _tmp272 - _tmp283 * _tmp284 + _tmp289;
  const Scalar _tmp291 = _tmp10 * lambdas(0, 0);
  const Scalar _tmp292 = _tmp162 * _tmp291;
  const Scalar _tmp293 = _tmp5 + _tmp6 + _tmp7 + _tmp9;
  const Scalar _tmp294 = std::fabs(_tmp293);
  const Scalar _tmp295 = ((((_tmp28 - _tmp294) > 0) - ((_tmp28 - _tmp294) < 0)) + 1) *
                         (((_tmp293) > 0) - ((_tmp293) < 0));
  const Scalar _tmp296 = std::min<Scalar>(_tmp28, _tmp294);
  const Scalar _tmp297 = std::acos(_tmp296);
  const Scalar _tmp298 = 1 - std::pow(_tmp296, Scalar(2));
  const Scalar _tmp299 = _tmp297 / (_tmp298 * std::sqrt(_tmp298));
  const Scalar _tmp300 = _tmp295 * _tmp299;
  const Scalar _tmp301 = Scalar(1.0) / (_tmp298);
  const Scalar _tmp302 = std::pow(_tmp297, Scalar(2));
  const Scalar _tmp303 = _tmp301 * _tmp302;
  const Scalar _tmp304 = _tmp157 * _tmp303 + _tmp163 * _tmp303 + _tmp169 * _tmp303 + _tmp45;
  const Scalar _tmp305 = std::sqrt(_tmp304);
  const Scalar _tmp306 = (Scalar(1) / Scalar(2)) * _tmp305;
  const Scalar _tmp307 = std::sin(_tmp306);
  const Scalar _tmp308 = _tmp307 / _tmp305;
  const Scalar _tmp309 = _tmp296 * _tmp308;
  const Scalar _tmp310 = _tmp300 * _tmp309;
  const Scalar _tmp311 = _tmp292 * _tmp310;
  const Scalar _tmp312 = _tmp290 * _tmp311;
  const Scalar _tmp313 = _tmp207 * _tmp295;
  const Scalar _tmp314 = _tmp296 * _tmp302 / std::pow(_tmp298, Scalar(2));
  const Scalar _tmp315 = _tmp169 * _tmp314;
  const Scalar _tmp316 = _tmp157 * _tmp300;
  const Scalar _tmp317 = (Scalar(1) / Scalar(2)) * _tmp5;
  const Scalar _tmp318 = (Scalar(1) / Scalar(2)) * _tmp6;
  const Scalar _tmp319 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp320 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp321 = -_tmp317 - _tmp318 - _tmp319 - _tmp320;
  const Scalar _tmp322 = 8 * _tmp154 * _tmp155 * _tmp303;
  const Scalar _tmp323 = _tmp168 * _tmp322;
  const Scalar _tmp324 = _tmp163 * _tmp300;
  const Scalar _tmp325 = _tmp169 * _tmp300;
  const Scalar _tmp326 = _tmp163 * _tmp314;
  const Scalar _tmp327 = _tmp157 * _tmp314;
  const Scalar _tmp328 = (Scalar(1) / Scalar(2)) * _tmp158;
  const Scalar _tmp329 = (Scalar(1) / Scalar(2)) * _tmp159;
  const Scalar _tmp330 = (Scalar(1) / Scalar(2)) * _tmp160;
  const Scalar _tmp331 = (Scalar(1) / Scalar(2)) * _tmp161;
  const Scalar _tmp332 = -_tmp328 - _tmp329 + _tmp330 + _tmp331;
  const Scalar _tmp333 = _tmp322 * _tmp4;
  const Scalar _tmp334 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp335 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp336 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp337 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp338 = _tmp334 - _tmp335 - _tmp336 + _tmp337;
  const Scalar _tmp339 = _tmp162 * _tmp322;
  const Scalar _tmp340 = _tmp332 * _tmp333 + _tmp338 * _tmp339;
  const Scalar _tmp341 = -_tmp207 * _tmp316 - _tmp207 * _tmp324 - _tmp207 * _tmp325 +
                         _tmp313 * _tmp315 + _tmp313 * _tmp326 + _tmp313 * _tmp327 +
                         _tmp321 * _tmp323 + _tmp340;
  const Scalar _tmp342 = _tmp297 / std::sqrt(_tmp298);
  const Scalar _tmp343 = _tmp291 * _tmp342;
  const Scalar _tmp344 = _tmp271 * _tmp287;
  const Scalar _tmp345 = _tmp279 * _tmp288;
  const Scalar _tmp346 = _tmp124 * _tmp344 - _tmp255 * _tmp284 + _tmp272 * _tmp283 + _tmp345;
  const Scalar _tmp347 = _tmp307 / (_tmp304 * std::sqrt(_tmp304));
  const Scalar _tmp348 = _tmp346 * _tmp347;
  const Scalar _tmp349 = _tmp168 * _tmp348;
  const Scalar _tmp350 = _tmp343 * _tmp349;
  const Scalar _tmp351 = std::cos(_tmp306);
  const Scalar _tmp352 = _tmp346 * _tmp351;
  const Scalar _tmp353 = (Scalar(1) / Scalar(2)) / _tmp304;
  const Scalar _tmp354 = _tmp352 * _tmp353;
  const Scalar _tmp355 = _tmp168 * _tmp343;
  const Scalar _tmp356 = _tmp341 * _tmp355;
  const Scalar _tmp357 = _tmp283 * _tmp288;
  const Scalar _tmp358 = _tmp124 * _tmp271;
  const Scalar _tmp359 = -_tmp130 * _tmp280 + _tmp255 * _tmp358 + _tmp284 * _tmp287 + _tmp357;
  const Scalar _tmp360 = (Scalar(1) / Scalar(4)) * _tmp308;
  const Scalar _tmp361 = _tmp359 * _tmp360;
  const Scalar _tmp362 = _tmp308 * _tmp342;
  const Scalar _tmp363 = _tmp11 * _tmp362;
  const Scalar _tmp364 = _tmp346 * _tmp363;
  const Scalar _tmp365 = _tmp321 * _tmp364;
  const Scalar _tmp366 = -_tmp365;
  const Scalar _tmp367 = _tmp207 * _tmp4;
  const Scalar _tmp368 = _tmp130 * _tmp287;
  const Scalar _tmp369 = _tmp255 * _tmp288;
  const Scalar _tmp370 = _tmp271 * _tmp368 + _tmp279 * _tmp284 - _tmp283 * _tmp358 + _tmp369;
  const Scalar _tmp371 = _tmp291 * _tmp310;
  const Scalar _tmp372 = _tmp370 * _tmp371;
  const Scalar _tmp373 = _tmp301 * _tmp308;
  const Scalar _tmp374 = _tmp291 * _tmp373;
  const Scalar _tmp375 = _tmp370 * _tmp374;
  const Scalar _tmp376 = _tmp375 * _tmp4;
  const Scalar _tmp377 = _tmp292 * _tmp342;
  const Scalar _tmp378 = _tmp341 * _tmp377;
  const Scalar _tmp379 = _tmp290 * _tmp351;
  const Scalar _tmp380 = _tmp353 * _tmp379;
  const Scalar _tmp381 = _tmp346 * _tmp371;
  const Scalar _tmp382 = _tmp168 * _tmp381;
  const Scalar _tmp383 = _tmp292 * _tmp373;
  const Scalar _tmp384 = _tmp290 * _tmp383;
  const Scalar _tmp385 = _tmp343 * _tmp4;
  const Scalar _tmp386 = _tmp347 * _tmp370;
  const Scalar _tmp387 = _tmp385 * _tmp386;
  const Scalar _tmp388 = _tmp346 * _tmp374;
  const Scalar _tmp389 = _tmp168 * _tmp388;
  const Scalar _tmp390 = _tmp351 * _tmp370;
  const Scalar _tmp391 = _tmp353 * _tmp385;
  const Scalar _tmp392 = _tmp390 * _tmp391;
  const Scalar _tmp393 = _tmp290 * _tmp347;
  const Scalar _tmp394 = _tmp332 * _tmp363;
  const Scalar _tmp395 = _tmp290 * _tmp363;
  const Scalar _tmp396 = _tmp338 * _tmp395 + _tmp370 * _tmp394;
  const Scalar _tmp397 = _tmp207 * _tmp312 - _tmp207 * _tmp382 - _tmp313 * _tmp376 -
                         _tmp313 * _tmp384 + _tmp313 * _tmp389 + _tmp341 * _tmp350 -
                         _tmp341 * _tmp361 - _tmp341 * _tmp387 + _tmp341 * _tmp392 -
                         _tmp354 * _tmp356 + _tmp366 + _tmp367 * _tmp372 + _tmp378 * _tmp380 -
                         _tmp378 * _tmp393 + _tmp396;
  const Scalar _tmp398 = _tmp162 * _tmp363;
  const Scalar _tmp399 = _tmp168 * _tmp363;
  const Scalar _tmp400 = _tmp12 * _tmp362;
  const Scalar _tmp401 = _tmp290 * _tmp400 + _tmp352 + _tmp359 * _tmp399 - _tmp370 * _tmp398;
  const Scalar _tmp402 = _tmp401 * _x0[3];
  const Scalar _tmp403 = (Scalar(1) / Scalar(2)) * _tmp402;
  const Scalar _tmp404 = -_tmp403;
  const Scalar _tmp405 = _tmp321 * _tmp395;
  const Scalar _tmp406 = _tmp359 * _tmp371;
  const Scalar _tmp407 = _tmp351 * _tmp359;
  const Scalar _tmp408 = _tmp353 * _tmp407;
  const Scalar _tmp409 = _tmp385 * _tmp408;
  const Scalar _tmp410 = _tmp168 * _tmp374;
  const Scalar _tmp411 = _tmp290 * _tmp410;
  const Scalar _tmp412 = _tmp374 * _tmp4;
  const Scalar _tmp413 = _tmp359 * _tmp412;
  const Scalar _tmp414 = _tmp355 * _tmp393;
  const Scalar _tmp415 = _tmp346 * _tmp383;
  const Scalar _tmp416 = _tmp360 * _tmp370;
  const Scalar _tmp417 = _tmp347 * _tmp359;
  const Scalar _tmp418 = _tmp385 * _tmp417;
  const Scalar _tmp419 = _tmp311 * _tmp346;
  const Scalar _tmp420 = _tmp290 * _tmp371;
  const Scalar _tmp421 = _tmp168 * _tmp420;
  const Scalar _tmp422 = _tmp338 * _tmp364 - _tmp359 * _tmp394;
  const Scalar _tmp423 = _tmp207 * _tmp419 + _tmp207 * _tmp421 - _tmp313 * _tmp411 +
                         _tmp313 * _tmp413 - _tmp313 * _tmp415 - _tmp341 * _tmp409 -
                         _tmp341 * _tmp414 - _tmp341 * _tmp416 + _tmp341 * _tmp418 -
                         _tmp348 * _tmp378 + _tmp354 * _tmp378 + _tmp356 * _tmp380 -
                         _tmp367 * _tmp406 + _tmp405 + _tmp422;
  const Scalar _tmp424 = _tmp359 * _tmp363;
  const Scalar _tmp425 = _tmp321 * _tmp424;
  const Scalar _tmp426 = _tmp168 * _tmp417;
  const Scalar _tmp427 = _tmp343 * _tmp426;
  const Scalar _tmp428 = _tmp359 * _tmp410;
  const Scalar _tmp429 = _tmp380 * _tmp385;
  const Scalar _tmp430 = _tmp168 * _tmp406;
  const Scalar _tmp431 = _tmp311 * _tmp370;
  const Scalar _tmp432 = _tmp353 * _tmp390;
  const Scalar _tmp433 = _tmp346 * _tmp360;
  const Scalar _tmp434 = _tmp290 * _tmp412;
  const Scalar _tmp435 = _tmp385 * _tmp393;
  const Scalar _tmp436 = _tmp370 * _tmp383;
  const Scalar _tmp437 = _tmp363 * _tmp370;
  const Scalar _tmp438 = _tmp290 * _tmp394 - _tmp338 * _tmp437;
  const Scalar _tmp439 = _tmp207 * _tmp430 - _tmp207 * _tmp431 - _tmp313 * _tmp428 -
                         _tmp313 * _tmp434 + _tmp313 * _tmp436 - _tmp341 * _tmp427 +
                         _tmp341 * _tmp429 - _tmp341 * _tmp433 - _tmp341 * _tmp435 +
                         _tmp356 * _tmp408 + _tmp367 * _tmp420 + _tmp378 * _tmp386 -
                         _tmp378 * _tmp432 + _tmp425 + _tmp438;
  const Scalar _tmp440 = _tmp355 * _tmp432;
  const Scalar _tmp441 = _tmp290 * _tmp360;
  const Scalar _tmp442 = _tmp388 * _tmp4;
  const Scalar _tmp443 = _tmp321 * _tmp437;
  const Scalar _tmp444 = -_tmp443;
  const Scalar _tmp445 = _tmp311 * _tmp359;
  const Scalar _tmp446 = _tmp355 * _tmp386;
  const Scalar _tmp447 = _tmp352 * _tmp391;
  const Scalar _tmp448 = _tmp348 * _tmp385;
  const Scalar _tmp449 = _tmp168 * _tmp372;
  const Scalar _tmp450 = _tmp359 * _tmp383;
  const Scalar _tmp451 = _tmp168 * _tmp375;
  const Scalar _tmp452 = -_tmp332 * _tmp364 - _tmp338 * _tmp424;
  const Scalar _tmp453 = -_tmp207 * _tmp445 - _tmp207 * _tmp449 + _tmp313 * _tmp442 +
                         _tmp313 * _tmp450 + _tmp313 * _tmp451 - _tmp341 * _tmp440 -
                         _tmp341 * _tmp441 + _tmp341 * _tmp446 - _tmp341 * _tmp447 +
                         _tmp341 * _tmp448 - _tmp367 * _tmp381 - _tmp378 * _tmp408 +
                         _tmp378 * _tmp417 + _tmp444 + _tmp452;
  const Scalar _tmp454 = -_tmp346 * _tmp400 - _tmp359 * _tmp398 - _tmp370 * _tmp399 + _tmp379;
  const Scalar _tmp455 = _tmp454 * _x0[2];
  const Scalar _tmp456 = (Scalar(1) / Scalar(2)) * _tmp455;
  const Scalar _tmp457 = _tmp290 * _tmp399 + _tmp346 * _tmp398 - _tmp359 * _tmp400 + _tmp390;
  const Scalar _tmp458 = _tmp457 * _x0[1];
  const Scalar _tmp459 = -Scalar(1) / Scalar(2) * _tmp458;
  const Scalar _tmp460 = _tmp290 * _tmp398 - _tmp346 * _tmp399 + _tmp370 * _tmp400 + _tmp407;
  const Scalar _tmp461 = _tmp460 * _x0[0];
  const Scalar _tmp462 = (Scalar(1) / Scalar(2)) * _tmp461;
  const Scalar _tmp463 = _tmp459 - _tmp462;
  const Scalar _tmp464 = _tmp397 * _x0[3] + _tmp404 + _tmp423 * _x0[2] - _tmp439 * _x0[0] +
                         _tmp453 * _x0[1] + _tmp456 + _tmp463;
  const Scalar _tmp465 = _tmp460 * _x0[3];
  const Scalar _tmp466 = (Scalar(1) / Scalar(2)) * _tmp465;
  const Scalar _tmp467 = _tmp454 * _x0[1];
  const Scalar _tmp468 = (Scalar(1) / Scalar(2)) * _tmp467;
  const Scalar _tmp469 = -_tmp468;
  const Scalar _tmp470 = _tmp457 * _x0[2];
  const Scalar _tmp471 = (Scalar(1) / Scalar(2)) * _tmp470;
  const Scalar _tmp472 = _tmp401 * _x0[0];
  const Scalar _tmp473 = -Scalar(1) / Scalar(2) * _tmp472;
  const Scalar _tmp474 = -_tmp471 + _tmp473;
  const Scalar _tmp475 = _tmp397 * _x0[0] - _tmp423 * _x0[1] + _tmp439 * _x0[3] + _tmp453 * _x0[2] +
                         _tmp466 + _tmp469 + _tmp474;
  const Scalar _tmp476 = _tmp457 * _x0[0];
  const Scalar _tmp477 = (Scalar(1) / Scalar(2)) * _tmp476;
  const Scalar _tmp478 = _tmp401 * _x0[2];
  const Scalar _tmp479 = (Scalar(1) / Scalar(2)) * _tmp478;
  const Scalar _tmp480 = _tmp460 * _x0[1];
  const Scalar _tmp481 = (Scalar(1) / Scalar(2)) * _tmp480;
  const Scalar _tmp482 = _tmp454 * _x0[3];
  const Scalar _tmp483 = (Scalar(1) / Scalar(2)) * _tmp482;
  const Scalar _tmp484 = _tmp481 + _tmp483;
  const Scalar _tmp485 = -_tmp397 * _x0[2] + _tmp423 * _x0[3] + _tmp439 * _x0[1] +
                         _tmp453 * _x0[0] - _tmp477 + _tmp479 + _tmp484;
  const Scalar _tmp486 = _tmp457 * _x0[3];
  const Scalar _tmp487 = (Scalar(1) / Scalar(2)) * _tmp486;
  const Scalar _tmp488 = -_tmp487;
  const Scalar _tmp489 = _tmp401 * _x0[1];
  const Scalar _tmp490 = (Scalar(1) / Scalar(2)) * _tmp489;
  const Scalar _tmp491 = _tmp460 * _x0[2];
  const Scalar _tmp492 = -Scalar(1) / Scalar(2) * _tmp491;
  const Scalar _tmp493 = _tmp454 * _x0[0];
  const Scalar _tmp494 = (Scalar(1) / Scalar(2)) * _tmp493;
  const Scalar _tmp495 = _tmp492 - _tmp494;
  const Scalar _tmp496 = -_tmp397 * _x0[1] - _tmp423 * _x0[0] - _tmp439 * _x0[2] +
                         _tmp453 * _x0[3] + _tmp488 + _tmp490 + _tmp495;
  const Scalar _tmp497 = -_tmp464 * _y[1] - _tmp475 * _y[2] - _tmp485 * _y[0] - _tmp496 * _y[3];
  const Scalar _tmp498 = -_tmp476 - _tmp478 - _tmp480 + _tmp482;
  const Scalar _tmp499 = _tmp498 * _y[3];
  const Scalar _tmp500 = _tmp486 + _tmp489 - _tmp491 + _tmp493;
  const Scalar _tmp501 = _tmp500 * _y[0];
  const Scalar _tmp502 = _tmp465 + _tmp467 + _tmp470 - _tmp472;
  const Scalar _tmp503 = _tmp502 * _y[1];
  const Scalar _tmp504 = _tmp402 + _tmp455 - _tmp458 + _tmp461;
  const Scalar _tmp505 = _tmp504 * _y[2];
  const Scalar _tmp506 = std::fabs(_tmp499 + _tmp501 + _tmp503 + _tmp505);
  const Scalar _tmp507 = std::min<Scalar>(_tmp28, _tmp506);
  const Scalar _tmp508 = 1 - std::pow(_tmp507, Scalar(2));
  const Scalar _tmp509 = -_tmp501 - _tmp503 - _tmp505;
  const Scalar _tmp510 = ((((_tmp28 - _tmp506) > 0) - ((_tmp28 - _tmp506) < 0)) + 1) *
                         (((-_tmp499 + _tmp509) > 0) - ((-_tmp499 + _tmp509) < 0));
  const Scalar _tmp511 = _tmp510 / _tmp508;
  const Scalar _tmp512 = _tmp497 * _tmp511;
  const Scalar _tmp513 = _tmp499 - _tmp509;
  const Scalar _tmp514 = (((_tmp513) > 0) - ((_tmp513) < 0));
  const Scalar _tmp515 = 2 * std::min<Scalar>(0, _tmp514) + 1;
  const Scalar _tmp516 =
      _tmp515 * (-_tmp498 * _y[2] + _tmp500 * _y[1] - _tmp502 * _y[0] + _tmp504 * _y[3]);
  const Scalar _tmp517 = _tmp516 * sqrt_info(0, 2);
  const Scalar _tmp518 = -_tmp464 * _y[0] + _tmp475 * _y[3] + _tmp485 * _y[1] - _tmp496 * _y[2];
  const Scalar _tmp519 = 2 * _tmp515;
  const Scalar _tmp520 = std::acos(_tmp507);
  const Scalar _tmp521 = _tmp520 / std::sqrt(_tmp508);
  const Scalar _tmp522 = _tmp519 * _tmp521;
  const Scalar _tmp523 = _tmp518 * _tmp522;
  const Scalar _tmp524 =
      _tmp515 * (-_tmp498 * _y[0] + _tmp500 * _y[3] + _tmp502 * _y[2] - _tmp504 * _y[1]);
  const Scalar _tmp525 = _tmp524 * sqrt_info(0, 0);
  const Scalar _tmp526 = _tmp507 * _tmp510 * _tmp520 / (_tmp508 * std::sqrt(_tmp508));
  const Scalar _tmp527 = _tmp497 * _tmp526;
  const Scalar _tmp528 =
      _tmp515 * (-_tmp498 * _y[1] - _tmp500 * _y[2] + _tmp502 * _y[3] + _tmp504 * _y[0]);
  const Scalar _tmp529 = _tmp528 * sqrt_info(0, 1);
  const Scalar _tmp530 =
      _tmp522 * (_tmp464 * _y[3] + _tmp475 * _y[0] - _tmp485 * _y[2] - _tmp496 * _y[1]);
  const Scalar _tmp531 = _tmp511 * _tmp524;
  const Scalar _tmp532 = _tmp497 * _tmp531;
  const Scalar _tmp533 = _tmp464 * _y[2] - _tmp475 * _y[1] + _tmp485 * _y[3] - _tmp496 * _y[0];
  const Scalar _tmp534 = _tmp522 * _tmp533;
  const Scalar _tmp535 = _tmp516 * sqrt_info(1, 2);
  const Scalar _tmp536 = _tmp522 * sqrt_info(1, 2);
  const Scalar _tmp537 = _tmp524 * sqrt_info(1, 0);
  const Scalar _tmp538 = _tmp528 * sqrt_info(1, 1);
  const Scalar _tmp539 = _tmp512 * _tmp528;
  const Scalar _tmp540 = _tmp516 * sqrt_info(2, 2);
  const Scalar _tmp541 = _tmp524 * sqrt_info(2, 0);
  const Scalar _tmp542 = _tmp528 * sqrt_info(2, 1);
  const Scalar _tmp543 = _tmp522 * sqrt_info(2, 0);
  const Scalar _tmp544 = _tmp516 * sqrt_info(3, 2);
  const Scalar _tmp545 = _tmp524 * sqrt_info(3, 0);
  const Scalar _tmp546 = _tmp528 * sqrt_info(3, 1);
  const Scalar _tmp547 = _tmp531 * sqrt_info(3, 0);
  const Scalar _tmp548 = _tmp522 * sqrt_info(3, 0);
  const Scalar _tmp549 = _tmp516 * sqrt_info(4, 2);
  const Scalar _tmp550 = _tmp524 * sqrt_info(4, 0);
  const Scalar _tmp551 = _tmp528 * sqrt_info(4, 1);
  const Scalar _tmp552 = _tmp526 * _tmp549;
  const Scalar _tmp553 = _tmp519 * sqrt_info(4, 0);
  const Scalar _tmp554 = _tmp521 * _tmp553;
  const Scalar _tmp555 = _tmp516 * sqrt_info(5, 2);
  const Scalar _tmp556 = _tmp524 * sqrt_info(5, 0);
  const Scalar _tmp557 = _tmp528 * sqrt_info(5, 1);
  const Scalar _tmp558 = -_tmp425;
  const Scalar _tmp559 = _tmp328 + _tmp329 - _tmp330 - _tmp331;
  const Scalar _tmp560 = _tmp295 * _tmp559;
  const Scalar _tmp561 = -_tmp334 + _tmp335 + _tmp336 - _tmp337;
  const Scalar _tmp562 = _tmp207 * _tmp333 + _tmp323 * _tmp561;
  const Scalar _tmp563 = _tmp315 * _tmp560 - _tmp316 * _tmp559 + _tmp321 * _tmp339 -
                         _tmp324 * _tmp559 - _tmp325 * _tmp559 + _tmp326 * _tmp560 +
                         _tmp327 * _tmp560 + _tmp562;
  const Scalar _tmp564 = _tmp370 * _tmp563;
  const Scalar _tmp565 = _tmp347 * _tmp564;
  const Scalar _tmp566 = _tmp168 * _tmp559;
  const Scalar _tmp567 = _tmp375 * _tmp560;
  const Scalar _tmp568 = _tmp377 * _tmp563;
  const Scalar _tmp569 = _tmp4 * _tmp559;
  const Scalar _tmp570 = _tmp363 * _tmp561;
  const Scalar _tmp571 = -_tmp207 * _tmp364 - _tmp370 * _tmp570;
  const Scalar _tmp572 = _tmp168 * _tmp567 + _tmp355 * _tmp565 - _tmp372 * _tmp566 -
                         _tmp381 * _tmp569 - _tmp408 * _tmp568 + _tmp417 * _tmp568 -
                         _tmp440 * _tmp563 - _tmp441 * _tmp563 + _tmp442 * _tmp560 -
                         _tmp445 * _tmp559 - _tmp447 * _tmp563 + _tmp448 * _tmp563 +
                         _tmp450 * _tmp560 + _tmp558 + _tmp571;
  const Scalar _tmp573 = -_tmp207 * _tmp424 + _tmp290 * _tmp570;
  const Scalar _tmp574 = -_tmp348 * _tmp568 + _tmp354 * _tmp568 + _tmp355 * _tmp380 * _tmp563 -
                         _tmp360 * _tmp564 + _tmp365 - _tmp406 * _tmp569 - _tmp409 * _tmp563 -
                         _tmp411 * _tmp560 + _tmp413 * _tmp560 - _tmp414 * _tmp563 -
                         _tmp415 * _tmp560 + _tmp418 * _tmp563 + _tmp419 * _tmp559 +
                         _tmp421 * _tmp559 + _tmp573;
  const Scalar _tmp575 = _tmp354 * _tmp355;
  const Scalar _tmp576 = _tmp207 * _tmp437 - _tmp346 * _tmp570;
  const Scalar _tmp577 = _tmp312 * _tmp559 + _tmp350 * _tmp563 - _tmp361 * _tmp563 +
                         _tmp372 * _tmp569 + _tmp380 * _tmp568 - _tmp382 * _tmp559 -
                         _tmp384 * _tmp560 - _tmp385 * _tmp565 + _tmp389 * _tmp560 +
                         _tmp392 * _tmp563 - _tmp393 * _tmp568 - _tmp4 * _tmp567 + _tmp405 -
                         _tmp563 * _tmp575 + _tmp576;
  const Scalar _tmp578 = -_tmp456;
  const Scalar _tmp579 = _tmp355 * _tmp408;
  const Scalar _tmp580 = _tmp207 * _tmp395 + _tmp359 * _tmp570;
  const Scalar _tmp581 = _tmp377 * _tmp565 + _tmp406 * _tmp566 + _tmp420 * _tmp569 -
                         _tmp427 * _tmp563 - _tmp428 * _tmp560 + _tmp429 * _tmp563 -
                         _tmp431 * _tmp559 - _tmp432 * _tmp568 - _tmp433 * _tmp563 -
                         _tmp434 * _tmp560 - _tmp435 * _tmp563 + _tmp436 * _tmp560 + _tmp444 +
                         _tmp563 * _tmp579 + _tmp580;
  const Scalar _tmp582 = _tmp403 + _tmp463 + _tmp572 * _x0[0] + _tmp574 * _x0[3] -
                         _tmp577 * _x0[2] + _tmp578 + _tmp581 * _x0[1];
  const Scalar _tmp583 = -_tmp466;
  const Scalar _tmp584 = _tmp469 + _tmp471 + _tmp473 + _tmp572 * _x0[3] - _tmp574 * _x0[0] -
                         _tmp577 * _x0[1] - _tmp581 * _x0[2] + _tmp583;
  const Scalar _tmp585 = -_tmp490;
  const Scalar _tmp586 = _tmp488 + _tmp492 + _tmp494 + _tmp572 * _x0[2] - _tmp574 * _x0[1] +
                         _tmp577 * _x0[0] + _tmp581 * _x0[3] + _tmp585;
  const Scalar _tmp587 = _tmp477 + _tmp479 - _tmp481 + _tmp483 + _tmp572 * _x0[1] +
                         _tmp574 * _x0[2] + _tmp577 * _x0[3] - _tmp581 * _x0[0];
  const Scalar _tmp588 = _tmp582 * _y[1] - _tmp584 * _y[2] + _tmp586 * _y[3] - _tmp587 * _y[0];
  const Scalar _tmp589 = _tmp522 * _tmp588;
  const Scalar _tmp590 = -_tmp582 * _y[0] - _tmp584 * _y[3] - _tmp586 * _y[2] - _tmp587 * _y[1];
  const Scalar _tmp591 = _tmp511 * _tmp590;
  const Scalar _tmp592 = _tmp582 * _y[3] - _tmp584 * _y[0] - _tmp586 * _y[1] + _tmp587 * _y[2];
  const Scalar _tmp593 = _tmp522 * _tmp592;
  const Scalar _tmp594 = _tmp526 * _tmp590;
  const Scalar _tmp595 =
      _tmp522 * (-_tmp582 * _y[2] - _tmp584 * _y[1] + _tmp586 * _y[0] + _tmp587 * _y[3]);
  const Scalar _tmp596 = _tmp531 * _tmp590;
  const Scalar _tmp597 = _tmp511 * _tmp528;
  const Scalar _tmp598 = _tmp590 * _tmp597;
  const Scalar _tmp599 = _tmp522 * sqrt_info(2, 2);
  const Scalar _tmp600 = _tmp597 * sqrt_info(4, 1);
  const Scalar _tmp601 = _tmp295 * _tmp338;
  const Scalar _tmp602 = _tmp203 - _tmp204 + _tmp205 - _tmp206;
  const Scalar _tmp603 = _tmp323 * _tmp559 + _tmp339 * _tmp602;
  const Scalar _tmp604 = _tmp315 * _tmp601 - _tmp316 * _tmp338 + _tmp321 * _tmp333 -
                         _tmp324 * _tmp338 - _tmp325 * _tmp338 + _tmp326 * _tmp601 +
                         _tmp327 * _tmp601 + _tmp603;
  const Scalar _tmp605 = _tmp377 * _tmp604;
  const Scalar _tmp606 = _tmp4 * _tmp420;
  const Scalar _tmp607 = _tmp343 * _tmp604;
  const Scalar _tmp608 = _tmp168 * _tmp607;
  const Scalar _tmp609 = _tmp424 * _tmp559 - _tmp437 * _tmp602;
  const Scalar _tmp610 = _tmp338 * _tmp430 - _tmp338 * _tmp431 + _tmp338 * _tmp606 +
                         _tmp386 * _tmp605 + _tmp405 + _tmp408 * _tmp608 - _tmp426 * _tmp607 -
                         _tmp428 * _tmp601 + _tmp429 * _tmp604 - _tmp432 * _tmp605 -
                         _tmp433 * _tmp604 - _tmp434 * _tmp601 - _tmp435 * _tmp604 +
                         _tmp436 * _tmp601 + _tmp609;
  const Scalar _tmp611 = _tmp371 * _tmp4;
  const Scalar _tmp612 = -_tmp364 * _tmp559 + _tmp395 * _tmp602;
  const Scalar _tmp613 = _tmp312 * _tmp338 + _tmp338 * _tmp370 * _tmp611 - _tmp338 * _tmp382 +
                         _tmp350 * _tmp604 - _tmp354 * _tmp608 - _tmp361 * _tmp604 -
                         _tmp376 * _tmp601 + _tmp380 * _tmp605 - _tmp384 * _tmp601 -
                         _tmp387 * _tmp604 + _tmp389 * _tmp601 + _tmp392 * _tmp604 -
                         _tmp393 * _tmp605 + _tmp443 + _tmp612;
  const Scalar _tmp614 = _tmp381 * _tmp4;
  const Scalar _tmp615 = -_tmp424 * _tmp602 - _tmp437 * _tmp559;
  const Scalar _tmp616 = -_tmp338 * _tmp445 - _tmp338 * _tmp449 - _tmp338 * _tmp614 + _tmp366 +
                         _tmp386 * _tmp608 - _tmp408 * _tmp605 + _tmp417 * _tmp605 -
                         _tmp432 * _tmp608 - _tmp441 * _tmp604 + _tmp442 * _tmp601 -
                         _tmp447 * _tmp604 + _tmp448 * _tmp604 + _tmp450 * _tmp601 +
                         _tmp451 * _tmp601 + _tmp615;
  const Scalar _tmp617 = _tmp4 * _tmp406;
  const Scalar _tmp618 = _tmp364 * _tmp602 + _tmp395 * _tmp559;
  const Scalar _tmp619 = _tmp338 * _tmp419 + _tmp338 * _tmp421 - _tmp338 * _tmp617 -
                         _tmp348 * _tmp605 + _tmp354 * _tmp605 + _tmp380 * _tmp608 -
                         _tmp393 * _tmp608 - _tmp409 * _tmp604 - _tmp411 * _tmp601 +
                         _tmp413 * _tmp601 - _tmp415 * _tmp601 - _tmp416 * _tmp604 +
                         _tmp418 * _tmp604 + _tmp558 + _tmp618;
  const Scalar _tmp620 = _tmp468 + _tmp474 + _tmp583 + _tmp610 * _x0[1] - _tmp613 * _x0[2] +
                         _tmp616 * _x0[0] + _tmp619 * _x0[3];
  const Scalar _tmp621 = _tmp404 + _tmp459 + _tmp462 + _tmp578 - _tmp610 * _x0[2] -
                         _tmp613 * _x0[1] + _tmp616 * _x0[3] - _tmp619 * _x0[0];
  const Scalar _tmp622 = _tmp477 - _tmp479 + _tmp484 + _tmp610 * _x0[3] + _tmp613 * _x0[0] +
                         _tmp616 * _x0[2] - _tmp619 * _x0[1];
  const Scalar _tmp623 = _tmp487 + _tmp495 + _tmp585 - _tmp610 * _x0[0] + _tmp613 * _x0[3] +
                         _tmp616 * _x0[1] + _tmp619 * _x0[2];
  const Scalar _tmp624 = -_tmp620 * _y[0] - _tmp621 * _y[3] - _tmp622 * _y[2] - _tmp623 * _y[1];
  const Scalar _tmp625 = _tmp526 * _tmp624;
  const Scalar _tmp626 = _tmp620 * _y[3] - _tmp621 * _y[0] - _tmp622 * _y[1] + _tmp623 * _y[2];
  const Scalar _tmp627 = _tmp522 * _tmp626;
  const Scalar _tmp628 = _tmp511 * _tmp624;
  const Scalar _tmp629 =
      _tmp522 * (-_tmp620 * _y[2] - _tmp621 * _y[1] + _tmp622 * _y[0] + _tmp623 * _y[3]);
  const Scalar _tmp630 = _tmp511 * _tmp517;
  const Scalar _tmp631 = _tmp620 * _y[1] - _tmp621 * _y[2] + _tmp622 * _y[3] - _tmp623 * _y[0];
  const Scalar _tmp632 = _tmp522 * _tmp631;
  const Scalar _tmp633 = _tmp531 * _tmp624;
  const Scalar _tmp634 = _tmp597 * _tmp624;
  const Scalar _tmp635 = _tmp511 * _tmp550;
  const Scalar _tmp636 = 1 - lambdas(0, 0);
  const Scalar _tmp637 = _tmp317 + _tmp318 + _tmp319 + _tmp320;
  const Scalar _tmp638 = _tmp363 * _tmp637;
  const Scalar _tmp639 = _tmp370 * _tmp638;
  const Scalar _tmp640 = -_tmp639;
  const Scalar _tmp641 = (Scalar(1) / Scalar(2)) * _tmp126;
  const Scalar _tmp642 = (Scalar(1) / Scalar(2)) * _tmp127;
  const Scalar _tmp643 = (Scalar(1) / Scalar(2)) * _tmp128;
  const Scalar _tmp644 = (Scalar(1) / Scalar(2)) * _tmp129;
  const Scalar _tmp645 = -_tmp641 + _tmp642 + _tmp643 - _tmp644;
  const Scalar _tmp646 = ((((-_tmp257 + _tmp28) > 0) - ((-_tmp257 + _tmp28) < 0)) + 1) *
                         (((_tmp256) > 0) - ((_tmp256) < 0));
  const Scalar _tmp647 = _tmp645 * _tmp646;
  const Scalar _tmp648 = _tmp258 * _tmp262 / std::pow(_tmp259, Scalar(2));
  const Scalar _tmp649 = _tmp131 * _tmp648;
  const Scalar _tmp650 = _tmp261 / (_tmp259 * std::sqrt(_tmp259));
  const Scalar _tmp651 = _tmp125 * _tmp650;
  const Scalar _tmp652 = _tmp647 * _tmp650;
  const Scalar _tmp653 = _tmp117 * _tmp648;
  const Scalar _tmp654 = _tmp125 * _tmp648;
  const Scalar _tmp655 = (Scalar(1) / Scalar(2)) * _tmp108;
  const Scalar _tmp656 = (Scalar(1) / Scalar(2)) * _tmp104;
  const Scalar _tmp657 = (Scalar(1) / Scalar(2)) * _tmp105;
  const Scalar _tmp658 = (Scalar(1) / Scalar(2)) * _tmp106;
  const Scalar _tmp659 = -_tmp655 - _tmp656 - _tmp657 - _tmp658;
  const Scalar _tmp660 = 8 * _tmp114 * _tmp115 * _tmp263;
  const Scalar _tmp661 = _tmp659 * _tmp660;
  const Scalar _tmp662 = (Scalar(1) / Scalar(2)) * _tmp120;
  const Scalar _tmp663 = (Scalar(1) / Scalar(2)) * _tmp121;
  const Scalar _tmp664 = (Scalar(1) / Scalar(2)) * _tmp122;
  const Scalar _tmp665 = (Scalar(1) / Scalar(2)) * _tmp123;
  const Scalar _tmp666 = -_tmp662 + _tmp663 - _tmp664 + _tmp665;
  const Scalar _tmp667 = _tmp103 * _tmp660;
  const Scalar _tmp668 = (Scalar(1) / Scalar(2)) * _tmp99;
  const Scalar _tmp669 = (Scalar(1) / Scalar(2)) * _tmp100;
  const Scalar _tmp670 = (Scalar(1) / Scalar(2)) * _tmp101;
  const Scalar _tmp671 = (Scalar(1) / Scalar(2)) * _tmp102;
  const Scalar _tmp672 = _tmp668 + _tmp669 - _tmp670 - _tmp671;
  const Scalar _tmp673 = _tmp124 * _tmp660;
  const Scalar _tmp674 = _tmp666 * _tmp667 + _tmp672 * _tmp673;
  const Scalar _tmp675 = -_tmp117 * _tmp652 + _tmp130 * _tmp661 - _tmp131 * _tmp652 +
                         _tmp647 * _tmp649 - _tmp647 * _tmp651 + _tmp647 * _tmp653 +
                         _tmp647 * _tmp654 + _tmp674;
  const Scalar _tmp676 = _tmp109 * lambdas(1, 0);
  const Scalar _tmp677 = _tmp269 * _tmp676;
  const Scalar _tmp678 = _tmp267 / (_tmp264 * std::sqrt(_tmp264));
  const Scalar _tmp679 = _tmp677 * _tmp678;
  const Scalar _tmp680 = _tmp283 * _tmp679;
  const Scalar _tmp681 = _tmp103 * _tmp680;
  const Scalar _tmp682 = _tmp279 * _tmp675;
  const Scalar _tmp683 = _tmp124 * _tmp679;
  const Scalar _tmp684 = (Scalar(1) / Scalar(2)) / _tmp264;
  const Scalar _tmp685 = _tmp677 * _tmp684;
  const Scalar _tmp686 = _tmp369 * _tmp685;
  const Scalar _tmp687 = _tmp675 * _tmp686;
  const Scalar _tmp688 = _tmp130 * _tmp255;
  const Scalar _tmp689 = _tmp268 * _tmp676;
  const Scalar _tmp690 = _tmp260 * _tmp689;
  const Scalar _tmp691 = _tmp688 * _tmp690;
  const Scalar _tmp692 = _tmp258 * _tmp689;
  const Scalar _tmp693 = _tmp652 * _tmp692;
  const Scalar _tmp694 = _tmp124 * _tmp279;
  const Scalar _tmp695 = _tmp679 * _tmp688;
  const Scalar _tmp696 = _tmp103 * _tmp283;
  const Scalar _tmp697 = _tmp255 * _tmp271;
  const Scalar _tmp698 = _tmp659 * _tmp697;
  const Scalar _tmp699 = -_tmp698;
  const Scalar _tmp700 = _tmp283 * _tmp690;
  const Scalar _tmp701 = _tmp103 * _tmp700;
  const Scalar _tmp702 = _tmp124 * _tmp690;
  const Scalar _tmp703 = _tmp647 * _tmp702;
  const Scalar _tmp704 = (Scalar(1) / Scalar(4)) * _tmp268;
  const Scalar _tmp705 = _tmp675 * _tmp704;
  const Scalar _tmp706 = _tmp345 * _tmp684;
  const Scalar _tmp707 = _tmp677 * _tmp706;
  const Scalar _tmp708 = _tmp357 * _tmp685;
  const Scalar _tmp709 = _tmp103 * _tmp708;
  const Scalar _tmp710 = _tmp271 * _tmp283;
  const Scalar _tmp711 = -_tmp280 * _tmp672 - _tmp666 * _tmp710;
  const Scalar _tmp712 = -_tmp124 * _tmp675 * _tmp707 - _tmp130 * _tmp687 + _tmp279 * _tmp703 -
                         _tmp287 * _tmp705 + _tmp647 * _tmp691 + _tmp647 * _tmp701 +
                         _tmp675 * _tmp681 + _tmp675 * _tmp695 - _tmp675 * _tmp709 +
                         _tmp682 * _tmp683 - _tmp688 * _tmp693 - _tmp693 * _tmp694 -
                         _tmp693 * _tmp696 + _tmp699 + _tmp711;
  const Scalar _tmp713 = _tmp295 * _tmp602;
  const Scalar _tmp714 = _tmp163 * _tmp713;
  const Scalar _tmp715 = _tmp299 * _tmp713;
  const Scalar _tmp716 = _tmp322 * _tmp637;
  const Scalar _tmp717 = -_tmp157 * _tmp715 + _tmp168 * _tmp716 - _tmp169 * _tmp715 -
                         _tmp299 * _tmp714 + _tmp314 * _tmp714 + _tmp315 * _tmp713 +
                         _tmp327 * _tmp713 + _tmp340;
  const Scalar _tmp718 = _tmp377 * _tmp717;
  const Scalar _tmp719 = _tmp344 * _tmp659;
  const Scalar _tmp720 = _tmp675 * _tmp708;
  const Scalar _tmp721 = _tmp289 * _tmp685;
  const Scalar _tmp722 = _tmp675 * _tmp721;
  const Scalar _tmp723 = _tmp124 * _tmp680;
  const Scalar _tmp724 = _tmp368 * _tmp690;
  const Scalar _tmp725 = _tmp103 * _tmp279;
  const Scalar _tmp726 = _tmp103 * _tmp690;
  const Scalar _tmp727 = _tmp279 * _tmp726;
  const Scalar _tmp728 = _tmp103 * _tmp706;
  const Scalar _tmp729 = _tmp677 * _tmp728;
  const Scalar _tmp730 = _tmp103 * _tmp679;
  const Scalar _tmp731 = _tmp124 * _tmp283;
  const Scalar _tmp732 = _tmp368 * _tmp679;
  const Scalar _tmp733 = _tmp280 * _tmp666 - _tmp672 * _tmp710;
  const Scalar _tmp734 = -_tmp124 * _tmp720 + _tmp130 * _tmp722 - _tmp255 * _tmp705 +
                         _tmp283 * _tmp703 + _tmp368 * _tmp693 - _tmp647 * _tmp724 -
                         _tmp647 * _tmp727 + _tmp675 * _tmp723 + _tmp675 * _tmp729 -
                         _tmp675 * _tmp732 - _tmp682 * _tmp730 + _tmp693 * _tmp725 -
                         _tmp693 * _tmp731 + _tmp719 + _tmp733;
  const Scalar _tmp735 = _tmp309 * _tmp715;
  const Scalar _tmp736 = _tmp168 * _tmp291;
  const Scalar _tmp737 = _tmp735 * _tmp736;
  const Scalar _tmp738 = _tmp255 * _tmp683;
  const Scalar _tmp739 = _tmp130 * _tmp690;
  const Scalar _tmp740 = _tmp279 * _tmp739;
  const Scalar _tmp741 = _tmp283 * _tmp704;
  const Scalar _tmp742 = _tmp124 * _tmp255;
  const Scalar _tmp743 = _tmp287 * _tmp730;
  const Scalar _tmp744 = _tmp287 * _tmp726;
  const Scalar _tmp745 = _tmp130 * _tmp679;
  const Scalar _tmp746 = _tmp130 * _tmp707;
  const Scalar _tmp747 = _tmp280 * _tmp659;
  const Scalar _tmp748 = -_tmp747;
  const Scalar _tmp749 = _tmp103 * _tmp721;
  const Scalar _tmp750 = _tmp103 * _tmp287;
  const Scalar _tmp751 = _tmp344 * _tmp666 + _tmp672 * _tmp697;
  const Scalar _tmp752 = _tmp124 * _tmp687 - _tmp130 * _tmp279 * _tmp693 - _tmp255 * _tmp703 +
                         _tmp647 * _tmp740 - _tmp647 * _tmp744 - _tmp675 * _tmp738 -
                         _tmp675 * _tmp741 - _tmp675 * _tmp743 - _tmp675 * _tmp746 +
                         _tmp675 * _tmp749 + _tmp682 * _tmp745 + _tmp693 * _tmp742 +
                         _tmp693 * _tmp750 + _tmp748 + _tmp751;
  const Scalar _tmp753 = _tmp359 * _tmp735;
  const Scalar _tmp754 = _tmp360 * _tmp717;
  const Scalar _tmp755 = _tmp343 * _tmp717;
  const Scalar _tmp756 = _tmp168 * _tmp755;
  const Scalar _tmp757 = _tmp291 * _tmp4;
  const Scalar _tmp758 = _tmp346 * _tmp735;
  const Scalar _tmp759 = _tmp4 * _tmp755;
  const Scalar _tmp760 = _tmp130 * _tmp680;
  const Scalar _tmp761 = _tmp124 * _tmp287;
  const Scalar _tmp762 = _tmp287 * _tmp683;
  const Scalar _tmp763 = _tmp255 * _tmp730;
  const Scalar _tmp764 = _tmp130 * _tmp700;
  const Scalar _tmp765 = _tmp103 * _tmp255;
  const Scalar _tmp766 = _tmp255 * _tmp726;
  const Scalar _tmp767 = _tmp130 * _tmp283;
  const Scalar _tmp768 = _tmp659 * _tmp710;
  const Scalar _tmp769 = _tmp344 * _tmp672 - _tmp666 * _tmp697;
  const Scalar _tmp770 = -_tmp103 * _tmp687 + _tmp124 * _tmp722 + _tmp130 * _tmp720 -
                         _tmp279 * _tmp705 - _tmp287 * _tmp703 - _tmp647 * _tmp764 +
                         _tmp647 * _tmp766 - _tmp675 * _tmp760 - _tmp675 * _tmp762 +
                         _tmp675 * _tmp763 + _tmp693 * _tmp761 - _tmp693 * _tmp765 +
                         _tmp693 * _tmp767 + _tmp768 + _tmp769;
  const Scalar _tmp771 = -_tmp290 * _tmp754 - _tmp292 * _tmp753 + _tmp348 * _tmp759 +
                         _tmp351 * _tmp712 - _tmp354 * _tmp759 - _tmp370 * _tmp737 +
                         _tmp386 * _tmp756 - _tmp398 * _tmp752 - _tmp399 * _tmp734 -
                         _tmp400 * _tmp770 - _tmp408 * _tmp718 + _tmp417 * _tmp718 -
                         _tmp432 * _tmp756 + _tmp442 * _tmp713 + _tmp450 * _tmp713 +
                         _tmp451 * _tmp713 + _tmp452 + _tmp640 - _tmp757 * _tmp758;
  const Scalar _tmp772 = _tmp370 * _tmp735;
  const Scalar _tmp773 = _tmp359 * _tmp638;
  const Scalar _tmp774 = _tmp290 * _tmp735;
  const Scalar _tmp775 = -_tmp292 * _tmp772 + _tmp351 * _tmp770 + _tmp359 * _tmp737 +
                         _tmp380 * _tmp759 + _tmp386 * _tmp718 - _tmp393 * _tmp759 -
                         _tmp398 * _tmp734 + _tmp399 * _tmp752 + _tmp400 * _tmp712 +
                         _tmp408 * _tmp756 - _tmp426 * _tmp755 - _tmp428 * _tmp713 -
                         _tmp432 * _tmp718 - _tmp433 * _tmp717 - _tmp434 * _tmp713 +
                         _tmp436 * _tmp713 + _tmp438 + _tmp757 * _tmp774 + _tmp773;
  const Scalar _tmp776 = _tmp290 * _tmp638;
  const Scalar _tmp777 = _tmp292 * _tmp758 - _tmp348 * _tmp718 + _tmp351 * _tmp734 +
                         _tmp354 * _tmp718 - _tmp370 * _tmp754 + _tmp380 * _tmp756 -
                         _tmp393 * _tmp756 + _tmp398 * _tmp770 + _tmp399 * _tmp712 -
                         _tmp400 * _tmp752 - _tmp408 * _tmp759 - _tmp411 * _tmp713 +
                         _tmp413 * _tmp713 - _tmp415 * _tmp713 + _tmp417 * _tmp759 + _tmp422 +
                         _tmp736 * _tmp774 - _tmp753 * _tmp757 + _tmp776;
  const Scalar _tmp778 = _tmp346 * _tmp638;
  const Scalar _tmp779 = -_tmp778;
  const Scalar _tmp780 = _tmp292 * _tmp774 - _tmp346 * _tmp737 + _tmp349 * _tmp755 +
                         _tmp351 * _tmp752 - _tmp354 * _tmp756 - _tmp359 * _tmp754 -
                         _tmp376 * _tmp713 + _tmp380 * _tmp718 - _tmp384 * _tmp713 -
                         _tmp386 * _tmp759 + _tmp389 * _tmp713 - _tmp393 * _tmp718 + _tmp396 +
                         _tmp398 * _tmp712 - _tmp399 * _tmp770 + _tmp400 * _tmp734 +
                         _tmp432 * _tmp759 + _tmp757 * _tmp772 + _tmp779;
  const Scalar _tmp781 = _tmp771 * _x0[1] - _tmp775 * _x0[0] + _tmp777 * _x0[2] + _tmp780 * _x0[3];
  const Scalar _tmp782 = _tmp771 * _x0[2] + _tmp775 * _x0[3] - _tmp777 * _x0[1] + _tmp780 * _x0[0];
  const Scalar _tmp783 = _tmp771 * _x0[0] + _tmp775 * _x0[1] + _tmp777 * _x0[3] - _tmp780 * _x0[2];
  const Scalar _tmp784 = _tmp771 * _x0[3] - _tmp775 * _x0[2] - _tmp777 * _x0[0] - _tmp780 * _x0[1];
  const Scalar _tmp785 = _tmp781 * _y[2] - _tmp782 * _y[1] + _tmp783 * _y[3] - _tmp784 * _y[0];
  const Scalar _tmp786 = _tmp522 * _tmp785;
  const Scalar _tmp787 = -_tmp781 * _y[1] - _tmp782 * _y[2] - _tmp783 * _y[0] - _tmp784 * _y[3];
  const Scalar _tmp788 = _tmp511 * _tmp787;
  const Scalar _tmp789 = _tmp526 * _tmp787;
  const Scalar _tmp790 = _tmp524 * _tmp788;
  const Scalar _tmp791 = _tmp781 * _y[3] + _tmp782 * _y[0] - _tmp783 * _y[2] - _tmp784 * _y[1];
  const Scalar _tmp792 = _tmp522 * _tmp791;
  const Scalar _tmp793 = -_tmp781 * _y[0] + _tmp782 * _y[3] + _tmp783 * _y[1] - _tmp784 * _y[2];
  const Scalar _tmp794 = _tmp522 * _tmp793;
  const Scalar _tmp795 = _tmp524 * _tmp789;
  const Scalar _tmp796 = _tmp516 * _tmp788;
  const Scalar _tmp797 = _tmp528 * _tmp788;
  const Scalar _tmp798 = _tmp522 * sqrt_info(1, 1);
  const Scalar _tmp799 = _tmp522 * sqrt_info(3, 1);
  const Scalar _tmp800 = _tmp295 * _tmp332;
  const Scalar _tmp801 = _tmp162 * _tmp716 + _tmp315 * _tmp800 - _tmp316 * _tmp332 -
                         _tmp324 * _tmp332 - _tmp325 * _tmp332 + _tmp326 * _tmp800 +
                         _tmp327 * _tmp800 + _tmp562;
  const Scalar _tmp802 = _tmp380 * _tmp801;
  const Scalar _tmp803 = _tmp377 * _tmp801;
  const Scalar _tmp804 = -_tmp668 - _tmp669 + _tmp670 + _tmp671;
  const Scalar _tmp805 = _tmp646 * _tmp650;
  const Scalar _tmp806 = _tmp692 * _tmp805;
  const Scalar _tmp807 = _tmp804 * _tmp806;
  const Scalar _tmp808 = _tmp130 * _tmp807;
  const Scalar _tmp809 = _tmp131 * _tmp805;
  const Scalar _tmp810 = _tmp117 * _tmp805;
  const Scalar _tmp811 = _tmp646 * _tmp804;
  const Scalar _tmp812 = _tmp646 * _tmp651;
  const Scalar _tmp813 = _tmp662 - _tmp663 + _tmp664 - _tmp665;
  const Scalar _tmp814 = _tmp130 * _tmp660;
  const Scalar _tmp815 = _tmp645 * _tmp673 + _tmp813 * _tmp814;
  const Scalar _tmp816 = _tmp103 * _tmp661 + _tmp649 * _tmp811 + _tmp653 * _tmp811 +
                         _tmp654 * _tmp811 - _tmp804 * _tmp809 - _tmp804 * _tmp810 -
                         _tmp804 * _tmp812 + _tmp815;
  const Scalar _tmp817 = _tmp646 * _tmp702;
  const Scalar _tmp818 = _tmp804 * _tmp817;
  const Scalar _tmp819 = _tmp279 * _tmp745;
  const Scalar _tmp820 = _tmp103 * _tmp807;
  const Scalar _tmp821 = _tmp124 * _tmp816;
  const Scalar _tmp822 = _tmp255 * _tmp816;
  const Scalar _tmp823 = -_tmp280 * _tmp813 + _tmp645 * _tmp697;
  const Scalar _tmp824 = -_tmp255 * _tmp818 - _tmp279 * _tmp808 + _tmp287 * _tmp820 -
                         _tmp683 * _tmp822 + _tmp686 * _tmp821 + _tmp719 + _tmp740 * _tmp811 -
                         _tmp741 * _tmp816 + _tmp742 * _tmp807 - _tmp743 * _tmp816 -
                         _tmp744 * _tmp811 - _tmp746 * _tmp816 + _tmp749 * _tmp816 +
                         _tmp816 * _tmp819 + _tmp823;
  const Scalar _tmp825 = _tmp103 * _tmp686;
  const Scalar _tmp826 = _tmp704 * _tmp816;
  const Scalar _tmp827 = _tmp130 * _tmp816;
  const Scalar _tmp828 = _tmp344 * _tmp645 + _tmp710 * _tmp813;
  const Scalar _tmp829 = -_tmp255 * _tmp820 - _tmp279 * _tmp826 + _tmp283 * _tmp808 -
                         _tmp287 * _tmp818 + _tmp699 + _tmp708 * _tmp827 + _tmp721 * _tmp821 +
                         _tmp730 * _tmp822 - _tmp760 * _tmp816 + _tmp761 * _tmp807 -
                         _tmp762 * _tmp816 - _tmp764 * _tmp811 + _tmp766 * _tmp811 -
                         _tmp816 * _tmp825 + _tmp828;
  const Scalar _tmp830 = _tmp279 * _tmp683;
  const Scalar _tmp831 = -_tmp768;
  const Scalar _tmp832 = -_tmp280 * _tmp645 - _tmp697 * _tmp813;
  const Scalar _tmp833 = _tmp279 * _tmp818 - _tmp283 * _tmp820 - _tmp287 * _tmp826 +
                         _tmp681 * _tmp816 - _tmp686 * _tmp827 - _tmp688 * _tmp807 +
                         _tmp691 * _tmp811 - _tmp694 * _tmp807 + _tmp695 * _tmp816 +
                         _tmp701 * _tmp811 - _tmp707 * _tmp821 - _tmp709 * _tmp816 +
                         _tmp816 * _tmp830 + _tmp831 + _tmp832;
  const Scalar _tmp834 = _tmp279 * _tmp730;
  const Scalar _tmp835 = _tmp344 * _tmp813 - _tmp645 * _tmp710;
  const Scalar _tmp836 = -_tmp255 * _tmp826 + _tmp279 * _tmp820 + _tmp283 * _tmp818 +
                         _tmp368 * _tmp807 - _tmp708 * _tmp821 + _tmp721 * _tmp827 +
                         _tmp723 * _tmp816 - _tmp724 * _tmp811 - _tmp727 * _tmp811 +
                         _tmp729 * _tmp816 - _tmp731 * _tmp807 - _tmp732 * _tmp816 + _tmp747 -
                         _tmp816 * _tmp834 + _tmp835;
  const Scalar _tmp837 = _tmp332 * _tmp370;
  const Scalar _tmp838 = _tmp393 * _tmp801;
  const Scalar _tmp839 = -_tmp311 * _tmp837 + _tmp332 * _tmp430 + _tmp332 * _tmp606 +
                         _tmp351 * _tmp829 + _tmp385 * _tmp802 - _tmp385 * _tmp838 +
                         _tmp386 * _tmp803 - _tmp398 * _tmp836 + _tmp399 * _tmp824 +
                         _tmp400 * _tmp833 - _tmp427 * _tmp801 - _tmp428 * _tmp800 -
                         _tmp432 * _tmp803 - _tmp433 * _tmp801 - _tmp434 * _tmp800 +
                         _tmp436 * _tmp800 + _tmp579 * _tmp801 + _tmp580 + _tmp640;
  const Scalar _tmp840 = _tmp312 * _tmp332 - _tmp332 * _tmp382 + _tmp350 * _tmp801 +
                         _tmp351 * _tmp824 - _tmp361 * _tmp801 - _tmp376 * _tmp800 -
                         _tmp377 * _tmp838 + _tmp380 * _tmp803 - _tmp384 * _tmp800 -
                         _tmp387 * _tmp801 + _tmp389 * _tmp800 + _tmp392 * _tmp801 +
                         _tmp398 * _tmp833 - _tmp399 * _tmp829 + _tmp400 * _tmp836 -
                         _tmp575 * _tmp801 + _tmp576 + _tmp611 * _tmp837 + _tmp776;
  const Scalar _tmp841 = _tmp332 * _tmp419 + _tmp332 * _tmp421 - _tmp332 * _tmp617 -
                         _tmp348 * _tmp803 + _tmp351 * _tmp836 + _tmp354 * _tmp803 +
                         _tmp355 * _tmp802 - _tmp355 * _tmp838 + _tmp398 * _tmp829 +
                         _tmp399 * _tmp833 - _tmp400 * _tmp824 - _tmp409 * _tmp801 -
                         _tmp411 * _tmp800 + _tmp413 * _tmp800 - _tmp415 * _tmp800 -
                         _tmp416 * _tmp801 + _tmp418 * _tmp801 + _tmp573 + _tmp778;
  const Scalar _tmp842 = -_tmp773;
  const Scalar _tmp843 = -_tmp168 * _tmp371 * _tmp837 - _tmp332 * _tmp445 - _tmp332 * _tmp614 +
                         _tmp351 * _tmp833 - _tmp398 * _tmp824 - _tmp399 * _tmp836 -
                         _tmp400 * _tmp829 - _tmp408 * _tmp803 + _tmp417 * _tmp803 -
                         _tmp440 * _tmp801 - _tmp441 * _tmp801 + _tmp442 * _tmp800 +
                         _tmp446 * _tmp801 - _tmp447 * _tmp801 + _tmp448 * _tmp801 +
                         _tmp450 * _tmp800 + _tmp451 * _tmp800 + _tmp571 + _tmp842;
  const Scalar _tmp844 = _tmp839 * _x0[3] + _tmp840 * _x0[0] - _tmp841 * _x0[1] + _tmp843 * _x0[2];
  const Scalar _tmp845 = -_tmp839 * _x0[0] + _tmp840 * _x0[3] + _tmp841 * _x0[2] + _tmp843 * _x0[1];
  const Scalar _tmp846 = _tmp839 * _x0[1] - _tmp840 * _x0[2] + _tmp841 * _x0[3] + _tmp843 * _x0[0];
  const Scalar _tmp847 = -_tmp839 * _x0[2] - _tmp840 * _x0[1] - _tmp841 * _x0[0] + _tmp843 * _x0[3];
  const Scalar _tmp848 = -_tmp844 * _y[2] - _tmp845 * _y[1] - _tmp846 * _y[0] - _tmp847 * _y[3];
  const Scalar _tmp849 = -_tmp844 * _y[1] + _tmp845 * _y[2] + _tmp846 * _y[3] - _tmp847 * _y[0];
  const Scalar _tmp850 = _tmp522 * _tmp849;
  const Scalar _tmp851 = _tmp844 * _y[3] - _tmp845 * _y[0] + _tmp846 * _y[1] - _tmp847 * _y[2];
  const Scalar _tmp852 = _tmp522 * _tmp851;
  const Scalar _tmp853 = _tmp531 * _tmp848;
  const Scalar _tmp854 = _tmp526 * _tmp848;
  const Scalar _tmp855 = _tmp844 * _y[0] + _tmp845 * _y[3] - _tmp846 * _y[2] - _tmp847 * _y[1];
  const Scalar _tmp856 = _tmp522 * _tmp855;
  const Scalar _tmp857 = _tmp524 * _tmp854;
  const Scalar _tmp858 = _tmp511 * _tmp848;
  const Scalar _tmp859 = _tmp597 * _tmp848;
  const Scalar _tmp860 = _tmp295 * _tmp561;
  const Scalar _tmp861 = _tmp315 * _tmp860 - _tmp316 * _tmp561 - _tmp324 * _tmp561 -
                         _tmp325 * _tmp561 + _tmp326 * _tmp860 + _tmp327 * _tmp860 +
                         _tmp4 * _tmp716 + _tmp603;
  const Scalar _tmp862 = _tmp377 * _tmp861;
  const Scalar _tmp863 = _tmp646 * _tmp666;
  const Scalar _tmp864 = _tmp117 * _tmp863;
  const Scalar _tmp865 = _tmp131 * _tmp863;
  const Scalar _tmp866 = _tmp641 - _tmp642 - _tmp643 + _tmp644;
  const Scalar _tmp867 = _tmp667 * _tmp866 + _tmp804 * _tmp814;
  const Scalar _tmp868 = _tmp124 * _tmp661 + _tmp648 * _tmp864 + _tmp648 * _tmp865 -
                         _tmp650 * _tmp864 - _tmp650 * _tmp865 - _tmp651 * _tmp863 +
                         _tmp654 * _tmp863 + _tmp867;
  const Scalar _tmp869 = _tmp677 * _tmp868;
  const Scalar _tmp870 = _tmp684 * _tmp869;
  const Scalar _tmp871 = _tmp357 * _tmp870;
  const Scalar _tmp872 = _tmp279 * _tmp863;
  const Scalar _tmp873 = _tmp678 * _tmp869;
  const Scalar _tmp874 = _tmp103 * _tmp873;
  const Scalar _tmp875 = _tmp369 * _tmp870;
  const Scalar _tmp876 = _tmp650 * _tmp692;
  const Scalar _tmp877 = _tmp863 * _tmp876;
  const Scalar _tmp878 = _tmp706 * _tmp869;
  const Scalar _tmp879 = _tmp103 * _tmp863;
  const Scalar _tmp880 = _tmp704 * _tmp868;
  const Scalar _tmp881 = _tmp872 * _tmp876;
  const Scalar _tmp882 = _tmp124 * _tmp873;
  const Scalar _tmp883 = _tmp876 * _tmp879;
  const Scalar _tmp884 = -_tmp697 * _tmp804 - _tmp710 * _tmp866;
  const Scalar _tmp885 = -_tmp103 * _tmp871 - _tmp124 * _tmp878 - _tmp124 * _tmp881 -
                         _tmp130 * _tmp875 + _tmp279 * _tmp882 + _tmp283 * _tmp874 -
                         _tmp283 * _tmp883 - _tmp287 * _tmp880 + _tmp688 * _tmp873 -
                         _tmp688 * _tmp877 + _tmp691 * _tmp863 + _tmp700 * _tmp879 +
                         _tmp702 * _tmp872 + _tmp748 + _tmp884;
  const Scalar _tmp886 = _tmp168 * _tmp860;
  const Scalar _tmp887 = _tmp374 * _tmp886;
  const Scalar _tmp888 = _tmp690 * _tmp879;
  const Scalar _tmp889 = _tmp130 * _tmp873;
  const Scalar _tmp890 = _tmp289 * _tmp870;
  const Scalar _tmp891 = _tmp702 * _tmp863;
  const Scalar _tmp892 = -_tmp280 * _tmp804 + _tmp344 * _tmp866;
  const Scalar _tmp893 = _tmp103 * _tmp890 + _tmp124 * _tmp875 - _tmp130 * _tmp878 -
                         _tmp130 * _tmp881 - _tmp255 * _tmp882 - _tmp255 * _tmp891 +
                         _tmp279 * _tmp889 - _tmp287 * _tmp874 + _tmp287 * _tmp883 -
                         _tmp287 * _tmp888 + _tmp698 + _tmp739 * _tmp872 - _tmp741 * _tmp868 +
                         _tmp742 * _tmp877 + _tmp892;
  const Scalar _tmp894 = _tmp355 * _tmp861;
  const Scalar _tmp895 = _tmp280 * _tmp866 + _tmp344 * _tmp804;
  const Scalar _tmp896 = _tmp103 * _tmp881 - _tmp124 * _tmp871 + _tmp130 * _tmp890 -
                         _tmp255 * _tmp880 - _tmp279 * _tmp874 + _tmp283 * _tmp882 +
                         _tmp283 * _tmp891 - _tmp368 * _tmp873 + _tmp368 * _tmp877 -
                         _tmp724 * _tmp863 - _tmp726 * _tmp872 + _tmp728 * _tmp869 -
                         _tmp731 * _tmp877 + _tmp831 + _tmp895;
  const Scalar _tmp897 = -_tmp697 * _tmp866 + _tmp710 * _tmp804;
  const Scalar _tmp898 = -_tmp103 * _tmp875 + _tmp124 * _tmp890 + _tmp130 * _tmp871 +
                         _tmp255 * _tmp874 - _tmp255 * _tmp883 + _tmp255 * _tmp888 -
                         _tmp279 * _tmp880 - _tmp283 * _tmp889 - _tmp287 * _tmp882 -
                         _tmp287 * _tmp891 + _tmp719 + _tmp761 * _tmp877 - _tmp764 * _tmp863 +
                         _tmp767 * _tmp877 + _tmp897;
  const Scalar _tmp899 = _tmp311 * _tmp561;
  const Scalar _tmp900 = _tmp4 * _tmp561;
  const Scalar _tmp901 = -_tmp290 * _tmp887 + _tmp346 * _tmp899 - _tmp348 * _tmp862 +
                         _tmp351 * _tmp896 + _tmp354 * _tmp862 + _tmp380 * _tmp894 +
                         _tmp398 * _tmp898 + _tmp399 * _tmp885 - _tmp400 * _tmp893 -
                         _tmp406 * _tmp900 - _tmp409 * _tmp861 + _tmp413 * _tmp860 -
                         _tmp414 * _tmp861 - _tmp415 * _tmp860 - _tmp416 * _tmp861 +
                         _tmp418 * _tmp861 + _tmp421 * _tmp561 + _tmp618 + _tmp842;
  const Scalar _tmp902 = _tmp312 * _tmp561 + _tmp350 * _tmp861 + _tmp351 * _tmp893 -
                         _tmp354 * _tmp894 - _tmp361 * _tmp861 + _tmp372 * _tmp900 -
                         _tmp376 * _tmp860 + _tmp380 * _tmp862 - _tmp382 * _tmp561 -
                         _tmp384 * _tmp860 - _tmp387 * _tmp861 + _tmp388 * _tmp886 +
                         _tmp392 * _tmp861 - _tmp393 * _tmp862 + _tmp398 * _tmp885 -
                         _tmp399 * _tmp898 + _tmp400 * _tmp896 + _tmp612 + _tmp639;
  const Scalar _tmp903 = _tmp351 * _tmp898 - _tmp359 * _tmp887 - _tmp370 * _tmp899 +
                         _tmp386 * _tmp862 - _tmp398 * _tmp896 + _tmp399 * _tmp893 +
                         _tmp400 * _tmp885 + _tmp408 * _tmp894 + _tmp420 * _tmp900 -
                         _tmp427 * _tmp861 + _tmp429 * _tmp861 + _tmp430 * _tmp561 -
                         _tmp432 * _tmp862 - _tmp433 * _tmp861 - _tmp434 * _tmp860 -
                         _tmp435 * _tmp861 + _tmp436 * _tmp860 + _tmp609 + _tmp776;
  const Scalar _tmp904 = _tmp351 * _tmp885 + _tmp375 * _tmp886 - _tmp381 * _tmp900 -
                         _tmp398 * _tmp893 - _tmp399 * _tmp896 - _tmp400 * _tmp898 -
                         _tmp408 * _tmp862 + _tmp417 * _tmp862 - _tmp432 * _tmp894 -
                         _tmp441 * _tmp861 + _tmp442 * _tmp860 - _tmp445 * _tmp561 +
                         _tmp446 * _tmp861 - _tmp447 * _tmp861 + _tmp448 * _tmp861 -
                         _tmp449 * _tmp561 + _tmp450 * _tmp860 + _tmp615 + _tmp779;
  const Scalar _tmp905 = -_tmp901 * _x0[0] - _tmp902 * _x0[1] - _tmp903 * _x0[2] + _tmp904 * _x0[3];
  const Scalar _tmp906 = -_tmp901 * _x0[1] + _tmp902 * _x0[0] + _tmp903 * _x0[3] + _tmp904 * _x0[2];
  const Scalar _tmp907 = _tmp901 * _x0[3] - _tmp902 * _x0[2] + _tmp903 * _x0[1] + _tmp904 * _x0[0];
  const Scalar _tmp908 = _tmp901 * _x0[2] + _tmp902 * _x0[3] - _tmp903 * _x0[0] + _tmp904 * _x0[1];
  const Scalar _tmp909 = -_tmp905 * _y[2] + _tmp906 * _y[3] + _tmp907 * _y[1] - _tmp908 * _y[0];
  const Scalar _tmp910 = _tmp522 * _tmp909;
  const Scalar _tmp911 = -_tmp905 * _y[3] - _tmp906 * _y[2] - _tmp907 * _y[0] - _tmp908 * _y[1];
  const Scalar _tmp912 = _tmp511 * _tmp911;
  const Scalar _tmp913 = _tmp526 * _tmp911;
  const Scalar _tmp914 =
      _tmp522 * (-_tmp905 * _y[1] + _tmp906 * _y[0] - _tmp907 * _y[2] + _tmp908 * _y[3]);
  const Scalar _tmp915 = _tmp524 * _tmp912;
  const Scalar _tmp916 = -_tmp905 * _y[0] - _tmp906 * _y[1] + _tmp907 * _y[3] + _tmp908 * _y[2];
  const Scalar _tmp917 = _tmp522 * _tmp916;
  const Scalar _tmp918 = _tmp528 * _tmp912;
  const Scalar _tmp919 = lambdas(0, 0) - lambdas(1, 0);
  const Scalar _tmp920 = _tmp655 + _tmp656 + _tmp657 + _tmp658;
  const Scalar _tmp921 = _tmp660 * _tmp920;
  const Scalar _tmp922 = _tmp646 * _tmp866;
  const Scalar _tmp923 = _tmp648 * _tmp922;
  const Scalar _tmp924 = _tmp117 * _tmp923 + _tmp125 * _tmp923 + _tmp130 * _tmp921 +
                         _tmp131 * _tmp923 + _tmp674 - _tmp809 * _tmp866 - _tmp810 * _tmp866 -
                         _tmp812 * _tmp866;
  const Scalar _tmp925 = _tmp124 * _tmp924;
  const Scalar _tmp926 = (Scalar(1) / Scalar(2)) * _tmp55;
  const Scalar _tmp927 = (Scalar(1) / Scalar(2)) * _tmp56;
  const Scalar _tmp928 = (Scalar(1) / Scalar(2)) * _tmp59;
  const Scalar _tmp929 = (Scalar(1) / Scalar(2)) * _tmp57;
  const Scalar _tmp930 = -_tmp926 - _tmp927 - _tmp928 - _tmp929;
  const Scalar _tmp931 = _tmp214 * _tmp247;
  const Scalar _tmp932 = _tmp85 * _tmp931;
  const Scalar _tmp933 = _tmp930 * _tmp932;
  const Scalar _tmp934 = -_tmp933;
  const Scalar _tmp935 = (Scalar(1) / Scalar(2)) * _tmp75;
  const Scalar _tmp936 = (Scalar(1) / Scalar(2)) * _tmp76;
  const Scalar _tmp937 = (Scalar(1) / Scalar(2)) * _tmp77;
  const Scalar _tmp938 = (Scalar(1) / Scalar(2)) * _tmp78;
  const Scalar _tmp939 = _tmp935 - _tmp936 + _tmp937 - _tmp938;
  const Scalar _tmp940 = _tmp211 * _tmp939;
  const Scalar _tmp941 = std::pow(_tmp212, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp942 = ((((-_tmp209 + _tmp28) > 0) - ((-_tmp209 + _tmp28) < 0)) + 1) *
                         (((_tmp208) > 0) - ((_tmp208) < 0));
  const Scalar _tmp943 = _tmp63 * _tmp942;
  const Scalar _tmp944 = _tmp941 * _tmp943;
  const Scalar _tmp945 = _tmp54 * _tmp944;
  const Scalar _tmp946 = _tmp80 * _tmp944;
  const Scalar _tmp947 = _tmp74 * _tmp942;
  const Scalar _tmp948 = _tmp210 * _tmp216 / std::pow(_tmp212, Scalar(2));
  const Scalar _tmp949 = _tmp947 * _tmp948;
  const Scalar _tmp950 = _tmp941 * _tmp947;
  const Scalar _tmp951 = 8 * _tmp217 * _tmp61 * _tmp62;
  const Scalar _tmp952 = _tmp930 * _tmp951;
  const Scalar _tmp953 = _tmp80 * _tmp943;
  const Scalar _tmp954 = _tmp939 * _tmp948;
  const Scalar _tmp955 = _tmp54 * _tmp943;
  const Scalar _tmp956 = (Scalar(1) / Scalar(2)) * _tmp69;
  const Scalar _tmp957 = (Scalar(1) / Scalar(2)) * _tmp70;
  const Scalar _tmp958 = (Scalar(1) / Scalar(2)) * _tmp71;
  const Scalar _tmp959 = (Scalar(1) / Scalar(2)) * _tmp72;
  const Scalar _tmp960 = _tmp956 - _tmp957 - _tmp958 + _tmp959;
  const Scalar _tmp961 = _tmp53 * _tmp960;
  const Scalar _tmp962 = (Scalar(1) / Scalar(2)) * _tmp49;
  const Scalar _tmp963 = (Scalar(1) / Scalar(2)) * _tmp50;
  const Scalar _tmp964 = (Scalar(1) / Scalar(2)) * _tmp51;
  const Scalar _tmp965 = (Scalar(1) / Scalar(2)) * _tmp52;
  const Scalar _tmp966 = -_tmp962 - _tmp963 + _tmp964 + _tmp965;
  const Scalar _tmp967 = _tmp73 * _tmp951;
  const Scalar _tmp968 = _tmp951 * _tmp961 + _tmp966 * _tmp967;
  const Scalar _tmp969 = _tmp79 * _tmp952 + _tmp939 * _tmp949 - _tmp940 * _tmp945 -
                         _tmp940 * _tmp946 - _tmp940 * _tmp950 + _tmp953 * _tmp954 +
                         _tmp954 * _tmp955 + _tmp968;
  const Scalar _tmp970 = (Scalar(1) / Scalar(2)) * _tmp245;
  const Scalar _tmp971 = _tmp242 * _tmp970;
  const Scalar _tmp972 = _tmp95 * _tmp971;
  const Scalar _tmp973 = Scalar(1.0) / (_tmp219);
  const Scalar _tmp974 = _tmp274 * _tmp973;
  const Scalar _tmp975 = _tmp17 * _tmp277;
  const Scalar _tmp976 = _tmp974 * _tmp975;
  const Scalar _tmp977 = std::pow(_tmp219, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp978 = _tmp242 * _tmp244 * _tmp977;
  const Scalar _tmp979 = _tmp138 * _tmp978;
  const Scalar _tmp980 = _tmp250 * _tmp979;
  const Scalar _tmp981 = _tmp236 * _tmp977;
  const Scalar _tmp982 = _tmp248 * _tmp981;
  const Scalar _tmp983 = 2 * _tmp85;
  const Scalar _tmp984 = _tmp93 * _tmp983;
  const Scalar _tmp985 = _tmp210 * _tmp941;
  const Scalar _tmp986 = _tmp246 * _tmp942;
  const Scalar _tmp987 = _tmp985 * _tmp986;
  const Scalar _tmp988 = _tmp940 * _tmp987;
  const Scalar _tmp989 = _tmp969 * _tmp973;
  const Scalar _tmp990 = _tmp254 * _tmp282;
  const Scalar _tmp991 = _tmp138 * _tmp87;
  const Scalar _tmp992 = _tmp215 * _tmp986;
  const Scalar _tmp993 = _tmp939 * _tmp992;
  const Scalar _tmp994 = _tmp237 * _tmp942;
  const Scalar _tmp995 = _tmp985 * _tmp994;
  const Scalar _tmp996 = _tmp96 * _tmp995;
  const Scalar _tmp997 = 2 * _tmp978;
  const Scalar _tmp998 = _tmp85 * _tmp997;
  const Scalar _tmp999 = _tmp274 * _tmp998;
  const Scalar _tmp1000 = _tmp215 * _tmp994;
  const Scalar _tmp1001 = _tmp1000 * _tmp939;
  const Scalar _tmp1002 = _tmp93 * _tmp993;
  const Scalar _tmp1003 = (Scalar(1) / Scalar(2)) * _tmp285;
  const Scalar _tmp1004 = _tmp1003 * _tmp973;
  const Scalar _tmp1005 = _tmp248 * _tmp969;
  const Scalar _tmp1006 = _tmp92 * _tmp931;
  const Scalar _tmp1007 = _tmp1006 * _tmp960 + _tmp239 * _tmp966;
  const Scalar _tmp1008 = -_tmp1001 * _tmp96 + _tmp1002 * _tmp983 + _tmp1004 * _tmp1005 + _tmp1007 +
                          _tmp934 + _tmp940 * _tmp996 - _tmp969 * _tmp972 - _tmp969 * _tmp976 -
                          _tmp969 * _tmp980 - _tmp969 * _tmp982 + _tmp969 * _tmp999 -
                          _tmp984 * _tmp988 + _tmp988 * _tmp991 + _tmp989 * _tmp990 -
                          _tmp991 * _tmp993;
  const Scalar _tmp1009 = _tmp130 * _tmp806;
  const Scalar _tmp1010 = _tmp283 * _tmp866;
  const Scalar _tmp1011 = _tmp704 * _tmp924;
  const Scalar _tmp1012 = _tmp130 * _tmp924;
  const Scalar _tmp1013 = _tmp250 * _tmp85;
  const Scalar _tmp1014 = _tmp1013 * _tmp997;
  const Scalar _tmp1015 = _tmp146 * _tmp85;
  const Scalar _tmp1016 = _tmp37 * _tmp973;
  const Scalar _tmp1017 = _tmp1016 * _tmp277;
  const Scalar _tmp1018 = 2 * _tmp95;
  const Scalar _tmp1019 = _tmp1018 * _tmp96;
  const Scalar _tmp1020 = _tmp138 * _tmp93;
  const Scalar _tmp1021 = _tmp1020 * _tmp987;
  const Scalar _tmp1022 = _tmp1006 * _tmp930;
  const Scalar _tmp1023 = -_tmp1022;
  const Scalar _tmp1024 = _tmp250 * _tmp277;
  const Scalar _tmp1025 = _tmp1024 * _tmp17;
  const Scalar _tmp1026 = (Scalar(1) / Scalar(4)) * _tmp237;
  const Scalar _tmp1027 = _tmp96 * _tmp992;
  const Scalar _tmp1028 = _tmp1027 * _tmp939;
  const Scalar _tmp1029 = _tmp254 * _tmp92;
  const Scalar _tmp1030 = _tmp1029 * _tmp974;
  const Scalar _tmp1031 = _tmp274 * _tmp979;
  const Scalar _tmp1032 = _tmp95 * _tmp997;
  const Scalar _tmp1033 = _tmp931 * _tmp95;
  const Scalar _tmp1034 = -_tmp1033 * _tmp966 - _tmp932 * _tmp960;
  const Scalar _tmp1035 = _tmp1002 * _tmp138 - _tmp1005 * _tmp1017 + _tmp1005 * _tmp1032 +
                          _tmp1014 * _tmp969 - _tmp1015 * _tmp988 + _tmp1015 * _tmp993 +
                          _tmp1018 * _tmp1028 - _tmp1019 * _tmp988 - _tmp1021 * _tmp940 + _tmp1023 -
                          _tmp1025 * _tmp989 - _tmp1026 * _tmp969 - _tmp1030 * _tmp969 +
                          _tmp1031 * _tmp969 + _tmp1034;
  const Scalar _tmp1036 = _tmp806 * _tmp866;
  const Scalar _tmp1037 = _tmp686 * _tmp924;
  const Scalar _tmp1038 = _tmp287 * _tmp817;
  const Scalar _tmp1039 = _tmp287 * _tmp924;
  const Scalar _tmp1040 = _tmp710 * _tmp920;
  const Scalar _tmp1041 = _tmp1018 * _tmp93;
  const Scalar _tmp1042 = _tmp274 * _tmp95;
  const Scalar _tmp1043 = _tmp1042 * _tmp997;
  const Scalar _tmp1044 = _tmp138 * _tmp96;
  const Scalar _tmp1045 = _tmp1004 * _tmp250;
  const Scalar _tmp1046 = _tmp85 * _tmp971;
  const Scalar _tmp1047 = _tmp87 * _tmp995;
  const Scalar _tmp1048 = _tmp1017 * _tmp274;
  const Scalar _tmp1049 = _tmp214 * _tmp981;
  const Scalar _tmp1050 = _tmp1049 * _tmp53;
  const Scalar _tmp1051 = _tmp1029 * _tmp973;
  const Scalar _tmp1052 = _tmp1000 * _tmp87;
  const Scalar _tmp1053 = _tmp1033 * _tmp930;
  const Scalar _tmp1054 = -_tmp1006 * _tmp966 + _tmp239 * _tmp960;
  const Scalar _tmp1055 = -_tmp1005 * _tmp1051 + _tmp1005 * _tmp979 + _tmp1028 * _tmp138 +
                          _tmp1041 * _tmp988 - _tmp1041 * _tmp993 - _tmp1043 * _tmp969 -
                          _tmp1044 * _tmp988 + _tmp1045 * _tmp969 - _tmp1046 * _tmp969 +
                          _tmp1047 * _tmp940 + _tmp1048 * _tmp969 - _tmp1050 * _tmp969 -
                          _tmp1052 * _tmp939 + _tmp1053 + _tmp1054;
  const Scalar _tmp1056 = _tmp146 * _tmp95;
  const Scalar _tmp1057 = _tmp239 * _tmp930;
  const Scalar _tmp1058 = _tmp1016 * _tmp1024;
  const Scalar _tmp1059 = _tmp1049 * _tmp79;
  const Scalar _tmp1060 = _tmp96 * _tmp983;
  const Scalar _tmp1061 = _tmp93 * _tmp995;
  const Scalar _tmp1062 = _tmp251 * _tmp997;
  const Scalar _tmp1063 = _tmp1004 * _tmp274;
  const Scalar _tmp1064 = _tmp92 * _tmp971;
  const Scalar _tmp1065 = _tmp973 * _tmp975;
  const Scalar _tmp1066 = -_tmp1033 * _tmp960 + _tmp932 * _tmp966;
  const Scalar _tmp1067 = -_tmp1001 * _tmp93 + _tmp1005 * _tmp1065 - _tmp1005 * _tmp998 -
                          _tmp1028 * _tmp983 - _tmp1056 * _tmp988 + _tmp1056 * _tmp993 + _tmp1057 -
                          _tmp1058 * _tmp969 - _tmp1059 * _tmp969 + _tmp1060 * _tmp988 +
                          _tmp1061 * _tmp940 + _tmp1062 * _tmp969 + _tmp1063 * _tmp969 -
                          _tmp1064 * _tmp969 + _tmp1066;
  const Scalar _tmp1068 = _tmp1008 * _tmp272 + _tmp1009 * _tmp1010 - _tmp1011 * _tmp279 +
                          _tmp1012 * _tmp708 - _tmp103 * _tmp1037 + _tmp1035 * _tmp358 +
                          _tmp1036 * _tmp761 - _tmp1036 * _tmp765 - _tmp1038 * _tmp866 -
                          _tmp1039 * _tmp683 + _tmp1040 + _tmp1055 * _tmp288 - _tmp1067 * _tmp284 +
                          _tmp721 * _tmp925 - _tmp760 * _tmp924 + _tmp763 * _tmp924 -
                          _tmp764 * _tmp922 + _tmp766 * _tmp922 + _tmp769;
  const Scalar _tmp1069 = _tmp344 * _tmp920;
  const Scalar _tmp1070 = _tmp368 * _tmp806;
  const Scalar _tmp1071 = _tmp817 * _tmp866;
  const Scalar _tmp1072 = -_tmp1008 * _tmp358 - _tmp1011 * _tmp255 + _tmp1012 * _tmp721 +
                          _tmp1035 * _tmp272 + _tmp1036 * _tmp725 - _tmp1036 * _tmp731 -
                          _tmp1039 * _tmp745 + _tmp1055 * _tmp284 + _tmp1067 * _tmp288 + _tmp1069 +
                          _tmp1070 * _tmp866 + _tmp1071 * _tmp283 - _tmp708 * _tmp925 +
                          _tmp723 * _tmp924 - _tmp724 * _tmp922 - _tmp727 * _tmp922 +
                          _tmp729 * _tmp924 + _tmp733 - _tmp834 * _tmp924;
  const Scalar _tmp1073 = _tmp1009 * _tmp279;
  const Scalar _tmp1074 = _tmp280 * _tmp920;
  const Scalar _tmp1075 = -_tmp1074;
  const Scalar _tmp1076 = _tmp1008 * _tmp288 + _tmp1035 * _tmp284 + _tmp1036 * _tmp742 +
                          _tmp1036 * _tmp750 - _tmp1039 * _tmp730 - _tmp1055 * _tmp272 +
                          _tmp1067 * _tmp358 - _tmp1071 * _tmp255 - _tmp1073 * _tmp866 + _tmp1075 +
                          _tmp686 * _tmp925 - _tmp738 * _tmp924 + _tmp740 * _tmp922 -
                          _tmp741 * _tmp924 - _tmp744 * _tmp922 - _tmp746 * _tmp924 +
                          _tmp749 * _tmp924 + _tmp751 + _tmp819 * _tmp924;
  const Scalar _tmp1077 = _tmp697 * _tmp920;
  const Scalar _tmp1078 = -_tmp1077;
  const Scalar _tmp1079 = -_tmp1008 * _tmp284 - _tmp1010 * _tmp103 * _tmp806 + _tmp1035 * _tmp288 -
                          _tmp1036 * _tmp688 - _tmp1036 * _tmp694 - _tmp1037 * _tmp130 -
                          _tmp1039 * _tmp704 - _tmp1055 * _tmp358 - _tmp1067 * _tmp272 +
                          _tmp1071 * _tmp279 + _tmp1078 + _tmp681 * _tmp924 + _tmp691 * _tmp922 +
                          _tmp695 * _tmp924 + _tmp701 * _tmp922 - _tmp707 * _tmp925 -
                          _tmp709 * _tmp924 + _tmp711 + _tmp830 * _tmp924;
  const Scalar _tmp1080 =
      -_tmp1068 * _tmp399 + _tmp1072 * _tmp400 + _tmp1076 * _tmp351 + _tmp1079 * _tmp398;
  const Scalar _tmp1081 =
      _tmp1068 * _tmp398 + _tmp1072 * _tmp351 - _tmp1076 * _tmp400 + _tmp1079 * _tmp399;
  const Scalar _tmp1082 =
      _tmp1068 * _tmp351 - _tmp1072 * _tmp398 + _tmp1076 * _tmp399 + _tmp1079 * _tmp400;
  const Scalar _tmp1083 =
      -_tmp1068 * _tmp400 - _tmp1072 * _tmp399 - _tmp1076 * _tmp398 + _tmp1079 * _tmp351;
  const Scalar _tmp1084 =
      -_tmp1080 * _x0[2] + _tmp1081 * _x0[3] + _tmp1082 * _x0[1] + _tmp1083 * _x0[0];
  const Scalar _tmp1085 =
      _tmp1080 * _x0[3] + _tmp1081 * _x0[2] - _tmp1082 * _x0[0] + _tmp1083 * _x0[1];
  const Scalar _tmp1086 =
      _tmp1080 * _x0[0] - _tmp1081 * _x0[1] + _tmp1082 * _x0[3] + _tmp1083 * _x0[2];
  const Scalar _tmp1087 =
      -_tmp1080 * _x0[1] - _tmp1081 * _x0[0] - _tmp1082 * _x0[2] + _tmp1083 * _x0[3];
  const Scalar _tmp1088 = _tmp1084 * _y[3] + _tmp1085 * _y[2] - _tmp1086 * _y[1] - _tmp1087 * _y[0];
  const Scalar _tmp1089 = std::fabs(_tmp513);
  const Scalar _tmp1090 = std::min<Scalar>(_tmp1089, _tmp28);
  const Scalar _tmp1091 = 1 - std::pow(_tmp1090, Scalar(2));
  const Scalar _tmp1092 = std::acos(_tmp1090);
  const Scalar _tmp1093 = _tmp1092 / std::sqrt(_tmp1091);
  const Scalar _tmp1094 = _tmp1093 * _tmp519;
  const Scalar _tmp1095 = _tmp1088 * _tmp1094;
  const Scalar _tmp1096 =
      _tmp1094 * (-_tmp1084 * _y[2] + _tmp1085 * _y[3] + _tmp1086 * _y[0] - _tmp1087 * _y[1]);
  const Scalar _tmp1097 = _tmp1084 * _y[0] + _tmp1085 * _y[1] + _tmp1086 * _y[2] + _tmp1087 * _y[3];
  const Scalar _tmp1098 = _tmp514 * ((((-_tmp1089 + _tmp28) > 0) - ((-_tmp1089 + _tmp28) < 0)) + 1);
  const Scalar _tmp1099 = _tmp1090 * _tmp1092 * _tmp1098 / (_tmp1091 * std::sqrt(_tmp1091));
  const Scalar _tmp1100 = _tmp1097 * _tmp1099;
  const Scalar _tmp1101 = _tmp1098 / _tmp1091;
  const Scalar _tmp1102 = _tmp1097 * _tmp1101;
  const Scalar _tmp1103 =
      _tmp1094 * (_tmp1084 * _y[1] - _tmp1085 * _y[0] + _tmp1086 * _y[3] - _tmp1087 * _y[2]);
  const Scalar _tmp1104 = _tmp1102 * _tmp524;
  const Scalar _tmp1105 = _tmp1100 * _tmp524;
  const Scalar _tmp1106 = _tmp1102 * _tmp528;
  const Scalar _tmp1107 = _tmp1093 * _tmp553;
  const Scalar _tmp1108 = _tmp646 * _tmp672;
  const Scalar _tmp1109 = -_tmp956 + _tmp957 + _tmp958 - _tmp959;
  const Scalar _tmp1110 = _tmp1109 * _tmp211;
  const Scalar _tmp1111 = _tmp1110 * _tmp987;
  const Scalar _tmp1112 = _tmp211 * _tmp946;
  const Scalar _tmp1113 = _tmp1109 * _tmp948;
  const Scalar _tmp1114 = _tmp211 * _tmp945;
  const Scalar _tmp1115 = _tmp211 * _tmp950;
  const Scalar _tmp1116 = _tmp962 + _tmp963 - _tmp964 - _tmp965;
  const Scalar _tmp1117 = _tmp79 * _tmp951;
  const Scalar _tmp1118 = _tmp53 * _tmp951;
  const Scalar _tmp1119 = _tmp1116 * _tmp1117 + _tmp1118 * _tmp939;
  const Scalar _tmp1120 = -_tmp1109 * _tmp1112 - _tmp1109 * _tmp1114 - _tmp1109 * _tmp1115 +
                          _tmp1113 * _tmp947 + _tmp1113 * _tmp953 + _tmp1113 * _tmp955 + _tmp1119 +
                          _tmp73 * _tmp952;
  const Scalar _tmp1121 = _tmp1109 * _tmp992;
  const Scalar _tmp1122 = _tmp1004 * _tmp1120;
  const Scalar _tmp1123 = _tmp1000 * _tmp96;
  const Scalar _tmp1124 = _tmp1120 * _tmp274;
  const Scalar _tmp1125 = _tmp1120 * _tmp973;
  const Scalar _tmp1126 = _tmp213 * _tmp940;
  const Scalar _tmp1127 = _tmp1126 * _tmp247;
  const Scalar _tmp1128 = -_tmp1116 * _tmp932 + _tmp1127 * _tmp92;
  const Scalar _tmp1129 = _tmp1057 - _tmp1109 * _tmp1123 + _tmp1110 * _tmp996 - _tmp1111 * _tmp984 +
                          _tmp1111 * _tmp991 - _tmp1120 * _tmp972 - _tmp1120 * _tmp976 -
                          _tmp1120 * _tmp980 - _tmp1120 * _tmp982 + _tmp1121 * _tmp984 -
                          _tmp1121 * _tmp991 + _tmp1122 * _tmp248 + _tmp1124 * _tmp998 +
                          _tmp1125 * _tmp990 + _tmp1128;
  const Scalar _tmp1130 = _tmp103 * _tmp921 + _tmp1108 * _tmp649 + _tmp1108 * _tmp653 +
                          _tmp1108 * _tmp654 - _tmp672 * _tmp809 - _tmp672 * _tmp810 -
                          _tmp672 * _tmp812 + _tmp815;
  const Scalar _tmp1131 = _tmp1130 * _tmp704;
  const Scalar _tmp1132 = _tmp672 * _tmp806;
  const Scalar _tmp1133 = _tmp672 * _tmp817;
  const Scalar _tmp1134 = _tmp1000 * _tmp93;
  const Scalar _tmp1135 = _tmp1027 * _tmp983;
  const Scalar _tmp1136 = _tmp1120 * _tmp997;
  const Scalar _tmp1137 = _tmp248 * _tmp973;
  const Scalar _tmp1138 = _tmp1137 * _tmp975;
  const Scalar _tmp1139 = _tmp1116 * _tmp239 - _tmp1127 * _tmp95;
  const Scalar _tmp1140 = -_tmp1056 * _tmp1111 + _tmp1056 * _tmp1121 - _tmp1058 * _tmp1120 -
                          _tmp1059 * _tmp1120 + _tmp1060 * _tmp1111 + _tmp1061 * _tmp1110 +
                          _tmp1062 * _tmp1120 - _tmp1064 * _tmp1120 - _tmp1109 * _tmp1134 -
                          _tmp1109 * _tmp1135 + _tmp1120 * _tmp1138 + _tmp1122 * _tmp274 -
                          _tmp1136 * _tmp249 + _tmp1139 + _tmp933;
  const Scalar _tmp1141 = _tmp1130 * _tmp124;
  const Scalar _tmp1142 = _tmp1018 * _tmp1027;
  const Scalar _tmp1143 = -_tmp1053;
  const Scalar _tmp1144 = _tmp1017 * _tmp248;
  const Scalar _tmp1145 = -_tmp1006 * _tmp1116 - _tmp1126 * _tmp281;
  const Scalar _tmp1146 = _tmp1014 * _tmp1120 - _tmp1015 * _tmp1111 + _tmp1015 * _tmp1121 -
                          _tmp1019 * _tmp1111 + _tmp1020 * _tmp1121 - _tmp1021 * _tmp1110 -
                          _tmp1025 * _tmp1125 - _tmp1026 * _tmp1120 - _tmp1030 * _tmp1120 +
                          _tmp1109 * _tmp1142 - _tmp1120 * _tmp1144 + _tmp1124 * _tmp979 +
                          _tmp1136 * _tmp286 + _tmp1143 + _tmp1145;
  const Scalar _tmp1147 = _tmp248 * _tmp979;
  const Scalar _tmp1148 = _tmp1029 * _tmp1137;
  const Scalar _tmp1149 = _tmp1041 * _tmp992;
  const Scalar _tmp1150 = _tmp1027 * _tmp138;
  const Scalar _tmp1151 = _tmp1033 * _tmp1116 + _tmp1126 * _tmp238;
  const Scalar _tmp1152 = _tmp1023 + _tmp1041 * _tmp1111 - _tmp1043 * _tmp1120 -
                          _tmp1044 * _tmp1111 - _tmp1046 * _tmp1120 + _tmp1047 * _tmp1110 +
                          _tmp1048 * _tmp1120 - _tmp1050 * _tmp1120 - _tmp1052 * _tmp1109 -
                          _tmp1109 * _tmp1149 + _tmp1109 * _tmp1150 + _tmp1120 * _tmp1147 -
                          _tmp1120 * _tmp1148 + _tmp1122 * _tmp250 + _tmp1151;
  const Scalar _tmp1153 = _tmp1141 * _tmp679;
  const Scalar _tmp1154 = _tmp1130 * _tmp130;
  const Scalar _tmp1155 = _tmp1069 - _tmp1073 * _tmp672 + _tmp1108 * _tmp740 - _tmp1108 * _tmp744 +
                          _tmp1129 * _tmp288 - _tmp1130 * _tmp743 + _tmp1130 * _tmp749 +
                          _tmp1130 * _tmp819 - _tmp1131 * _tmp283 + _tmp1132 * _tmp742 +
                          _tmp1132 * _tmp750 - _tmp1133 * _tmp255 + _tmp1140 * _tmp358 +
                          _tmp1141 * _tmp686 + _tmp1146 * _tmp284 - _tmp1152 * _tmp272 -
                          _tmp1153 * _tmp255 - _tmp1154 * _tmp707 + _tmp823;
  const Scalar _tmp1156 = _tmp1070 * _tmp672 + _tmp1074 - _tmp1108 * _tmp724 - _tmp1108 * _tmp727 -
                          _tmp1129 * _tmp358 + _tmp1130 * _tmp729 - _tmp1130 * _tmp732 -
                          _tmp1130 * _tmp834 - _tmp1131 * _tmp255 + _tmp1132 * _tmp725 -
                          _tmp1132 * _tmp731 + _tmp1133 * _tmp283 + _tmp1140 * _tmp288 +
                          _tmp1141 * _tmp680 - _tmp1141 * _tmp708 + _tmp1146 * _tmp272 +
                          _tmp1152 * _tmp284 + _tmp1154 * _tmp721 + _tmp835;
  const Scalar _tmp1157 = _tmp1009 * _tmp283 * _tmp672 + _tmp1078 - _tmp1108 * _tmp764 +
                          _tmp1108 * _tmp766 + _tmp1129 * _tmp272 - _tmp1130 * _tmp760 +
                          _tmp1130 * _tmp763 - _tmp1130 * _tmp825 - _tmp1131 * _tmp279 +
                          _tmp1132 * _tmp761 - _tmp1132 * _tmp765 - _tmp1133 * _tmp287 -
                          _tmp1140 * _tmp284 + _tmp1141 * _tmp721 + _tmp1146 * _tmp358 +
                          _tmp1152 * _tmp288 - _tmp1153 * _tmp287 + _tmp1154 * _tmp708 + _tmp828;
  const Scalar _tmp1158 = -_tmp1040;
  const Scalar _tmp1159 = _tmp1108 * _tmp691 + _tmp1108 * _tmp701 - _tmp1129 * _tmp284 +
                          _tmp1130 * _tmp681 + _tmp1130 * _tmp695 - _tmp1130 * _tmp709 -
                          _tmp1131 * _tmp287 - _tmp1132 * _tmp688 - _tmp1132 * _tmp694 -
                          _tmp1132 * _tmp696 + _tmp1133 * _tmp279 - _tmp1140 * _tmp272 -
                          _tmp1141 * _tmp707 + _tmp1146 * _tmp288 - _tmp1152 * _tmp358 +
                          _tmp1153 * _tmp279 - _tmp1154 * _tmp686 + _tmp1158 + _tmp832;
  const Scalar _tmp1160 =
      -_tmp1155 * _tmp400 + _tmp1156 * _tmp351 + _tmp1157 * _tmp398 + _tmp1159 * _tmp399;
  const Scalar _tmp1161 =
      _tmp1155 * _tmp351 + _tmp1156 * _tmp400 - _tmp1157 * _tmp399 + _tmp1159 * _tmp398;
  const Scalar _tmp1162 =
      _tmp1155 * _tmp399 - _tmp1156 * _tmp398 + _tmp1157 * _tmp351 + _tmp1159 * _tmp400;
  const Scalar _tmp1163 =
      -_tmp1155 * _tmp398 - _tmp1156 * _tmp399 - _tmp1157 * _tmp400 + _tmp1159 * _tmp351;
  const Scalar _tmp1164 =
      _tmp1160 * _x0[2] + _tmp1161 * _x0[3] - _tmp1162 * _x0[0] + _tmp1163 * _x0[1];
  const Scalar _tmp1165 =
      -_tmp1160 * _x0[1] + _tmp1161 * _x0[0] + _tmp1162 * _x0[3] + _tmp1163 * _x0[2];
  const Scalar _tmp1166 =
      -_tmp1160 * _x0[0] - _tmp1161 * _x0[1] - _tmp1162 * _x0[2] + _tmp1163 * _x0[3];
  const Scalar _tmp1167 =
      _tmp1160 * _x0[3] - _tmp1161 * _x0[2] + _tmp1162 * _x0[1] + _tmp1163 * _x0[0];
  const Scalar _tmp1168 = _tmp1164 * _y[1] + _tmp1165 * _y[2] + _tmp1166 * _y[3] + _tmp1167 * _y[0];
  const Scalar _tmp1169 = _tmp1099 * _tmp1168;
  const Scalar _tmp1170 = _tmp1101 * _tmp1168;
  const Scalar _tmp1171 = _tmp1170 * _tmp524;
  const Scalar _tmp1172 =
      _tmp1094 * (_tmp1164 * _y[3] + _tmp1165 * _y[0] - _tmp1166 * _y[1] - _tmp1167 * _y[2]);
  const Scalar _tmp1173 =
      _tmp1094 * (-_tmp1164 * _y[0] + _tmp1165 * _y[3] - _tmp1166 * _y[2] + _tmp1167 * _y[1]);
  const Scalar _tmp1174 = _tmp1164 * _y[2] - _tmp1165 * _y[1] - _tmp1166 * _y[0] + _tmp1167 * _y[3];
  const Scalar _tmp1175 = _tmp1094 * _tmp1174;
  const Scalar _tmp1176 = _tmp1170 * _tmp516;
  const Scalar _tmp1177 = _tmp1170 * _tmp528;
  const Scalar _tmp1178 = _tmp646 * _tmp813;
  const Scalar _tmp1179 = _tmp1178 * _tmp649 + _tmp1178 * _tmp653 + _tmp1178 * _tmp654 +
                          _tmp124 * _tmp921 - _tmp809 * _tmp813 - _tmp810 * _tmp813 -
                          _tmp812 * _tmp813 + _tmp867;
  const Scalar _tmp1180 = _tmp211 * _tmp966;
  const Scalar _tmp1181 = _tmp948 * _tmp966;
  const Scalar _tmp1182 = -_tmp935 + _tmp936 - _tmp937 + _tmp938;
  const Scalar _tmp1183 = _tmp1109 * _tmp1117 + _tmp1182 * _tmp967;
  const Scalar _tmp1184 = -_tmp1180 * _tmp945 - _tmp1180 * _tmp946 - _tmp1180 * _tmp950 +
                          _tmp1181 * _tmp953 + _tmp1181 * _tmp955 + _tmp1183 + _tmp53 * _tmp952 +
                          _tmp949 * _tmp966;
  const Scalar _tmp1185 = _tmp966 * _tmp992;
  const Scalar _tmp1186 = _tmp1180 * _tmp987;
  const Scalar _tmp1187 = _tmp1004 * _tmp1184;
  const Scalar _tmp1188 = _tmp1184 * _tmp997;
  const Scalar _tmp1189 = _tmp274 * _tmp85;
  const Scalar _tmp1190 = _tmp973 * _tmp990;
  const Scalar _tmp1191 = -_tmp1109 * _tmp932 + _tmp1182 * _tmp239;
  const Scalar _tmp1192 = _tmp1022 - _tmp1123 * _tmp966 + _tmp1180 * _tmp996 + _tmp1184 * _tmp1190 -
                          _tmp1184 * _tmp972 - _tmp1184 * _tmp976 - _tmp1184 * _tmp980 -
                          _tmp1184 * _tmp982 + _tmp1185 * _tmp984 - _tmp1185 * _tmp991 -
                          _tmp1186 * _tmp984 + _tmp1186 * _tmp991 + _tmp1187 * _tmp248 +
                          _tmp1188 * _tmp1189 + _tmp1191;
  const Scalar _tmp1193 = _tmp806 * _tmp813;
  const Scalar _tmp1194 = _tmp1025 * _tmp973;
  const Scalar _tmp1195 = _tmp1027 * _tmp966;
  const Scalar _tmp1196 = -_tmp1006 * _tmp1109 - _tmp1033 * _tmp1182;
  const Scalar _tmp1197 = _tmp1013 * _tmp1188 + _tmp1015 * _tmp1185 - _tmp1015 * _tmp1186 +
                          _tmp1018 * _tmp1195 - _tmp1019 * _tmp1186 + _tmp1020 * _tmp1185 -
                          _tmp1021 * _tmp1180 - _tmp1026 * _tmp1184 - _tmp1030 * _tmp1184 +
                          _tmp1031 * _tmp1184 - _tmp1144 * _tmp1184 - _tmp1184 * _tmp1194 +
                          _tmp1188 * _tmp286 + _tmp1196 + _tmp934;
  const Scalar _tmp1198 = _tmp1197 * _tmp271;
  const Scalar _tmp1199 = _tmp813 * _tmp817;
  const Scalar _tmp1200 = _tmp279 * _tmp813;
  const Scalar _tmp1201 = _tmp1200 * _tmp646;
  const Scalar _tmp1202 = _tmp1109 * _tmp239 + _tmp1182 * _tmp932;
  const Scalar _tmp1203 = _tmp1056 * _tmp1185 - _tmp1056 * _tmp1186 - _tmp1058 * _tmp1184 -
                          _tmp1059 * _tmp1184 + _tmp1060 * _tmp1186 + _tmp1061 * _tmp1180 -
                          _tmp1064 * _tmp1184 - _tmp1134 * _tmp966 + _tmp1138 * _tmp1184 +
                          _tmp1143 + _tmp1187 * _tmp274 - _tmp1188 * _tmp249 + _tmp1188 * _tmp251 -
                          _tmp1195 * _tmp983 + _tmp1202;
  const Scalar _tmp1204 = -_tmp1006 * _tmp1182 + _tmp1033 * _tmp1109;
  const Scalar _tmp1205 = _tmp1041 * _tmp1186 - _tmp1043 * _tmp1184 - _tmp1044 * _tmp1186 -
                          _tmp1046 * _tmp1184 + _tmp1047 * _tmp1180 + _tmp1048 * _tmp1184 -
                          _tmp1050 * _tmp1184 - _tmp1052 * _tmp966 + _tmp1057 +
                          _tmp1147 * _tmp1184 - _tmp1148 * _tmp1184 - _tmp1149 * _tmp966 +
                          _tmp1187 * _tmp250 + _tmp1195 * _tmp138 + _tmp1204;
  const Scalar _tmp1206 = _tmp1179 * _tmp704;
  const Scalar _tmp1207 = _tmp1179 * _tmp124;
  const Scalar _tmp1208 = _tmp1179 * _tmp130;
  const Scalar _tmp1209 = _tmp1200 * _tmp806;
  const Scalar _tmp1210 = _tmp103 * _tmp1209 + _tmp1158 - _tmp1178 * _tmp724 + _tmp1179 * _tmp723 +
                          _tmp1179 * _tmp729 - _tmp1179 * _tmp732 - _tmp1179 * _tmp834 -
                          _tmp1192 * _tmp358 + _tmp1193 * _tmp368 - _tmp1193 * _tmp731 +
                          _tmp1198 * _tmp130 + _tmp1199 * _tmp283 - _tmp1201 * _tmp726 +
                          _tmp1203 * _tmp288 + _tmp1205 * _tmp284 - _tmp1206 * _tmp255 -
                          _tmp1207 * _tmp708 + _tmp1208 * _tmp721 + _tmp895;
  const Scalar _tmp1211 = _tmp103 * _tmp1179;
  const Scalar _tmp1212 = -_tmp1038 * _tmp813 + _tmp1069 - _tmp1178 * _tmp764 + _tmp1178 * _tmp766 -
                          _tmp1179 * _tmp760 - _tmp1179 * _tmp762 + _tmp1179 * _tmp763 +
                          _tmp1192 * _tmp272 + _tmp1193 * _tmp761 - _tmp1193 * _tmp765 +
                          _tmp1193 * _tmp767 + _tmp1198 * _tmp124 - _tmp1203 * _tmp284 +
                          _tmp1205 * _tmp288 - _tmp1206 * _tmp279 + _tmp1207 * _tmp721 +
                          _tmp1208 * _tmp708 - _tmp1211 * _tmp686 + _tmp897;
  const Scalar _tmp1213 = -_tmp1009 * _tmp1200 + _tmp1077 - _tmp1178 * _tmp744 -
                          _tmp1179 * _tmp738 - _tmp1179 * _tmp741 - _tmp1179 * _tmp743 -
                          _tmp1179 * _tmp746 + _tmp1179 * _tmp819 + _tmp1192 * _tmp288 +
                          _tmp1193 * _tmp742 + _tmp1193 * _tmp750 + _tmp1197 * _tmp284 -
                          _tmp1199 * _tmp255 + _tmp1201 * _tmp739 + _tmp1203 * _tmp358 -
                          _tmp1205 * _tmp272 + _tmp1207 * _tmp686 + _tmp1211 * _tmp721 + _tmp892;
  const Scalar _tmp1214 = _tmp1075 + _tmp1178 * _tmp691 + _tmp1178 * _tmp701 + _tmp1179 * _tmp681 +
                          _tmp1179 * _tmp695 + _tmp1179 * _tmp830 - _tmp1192 * _tmp284 -
                          _tmp1193 * _tmp688 - _tmp1193 * _tmp696 + _tmp1197 * _tmp288 +
                          _tmp1200 * _tmp817 - _tmp1203 * _tmp272 - _tmp1205 * _tmp358 -
                          _tmp1206 * _tmp287 - _tmp1207 * _tmp707 - _tmp1208 * _tmp686 -
                          _tmp1209 * _tmp124 - _tmp1211 * _tmp708 + _tmp884;
  const Scalar _tmp1215 =
      _tmp1210 * _tmp400 - _tmp1212 * _tmp399 + _tmp1213 * _tmp351 + _tmp1214 * _tmp398;
  const Scalar _tmp1216 =
      _tmp1210 * _tmp351 + _tmp1212 * _tmp398 - _tmp1213 * _tmp400 + _tmp1214 * _tmp399;
  const Scalar _tmp1217 =
      -_tmp1210 * _tmp398 + _tmp1212 * _tmp351 + _tmp1213 * _tmp399 + _tmp1214 * _tmp400;
  const Scalar _tmp1218 =
      -_tmp1210 * _tmp399 - _tmp1212 * _tmp400 - _tmp1213 * _tmp398 + _tmp1214 * _tmp351;
  const Scalar _tmp1219 =
      _tmp1215 * _x0[3] + _tmp1216 * _x0[2] - _tmp1217 * _x0[0] + _tmp1218 * _x0[1];
  const Scalar _tmp1220 =
      _tmp1215 * _x0[0] - _tmp1216 * _x0[1] + _tmp1217 * _x0[3] + _tmp1218 * _x0[2];
  const Scalar _tmp1221 =
      -_tmp1215 * _x0[2] + _tmp1216 * _x0[3] + _tmp1217 * _x0[1] + _tmp1218 * _x0[0];
  const Scalar _tmp1222 =
      -_tmp1215 * _x0[1] - _tmp1216 * _x0[0] - _tmp1217 * _x0[2] + _tmp1218 * _x0[3];
  const Scalar _tmp1223 = _tmp1219 * _y[1] + _tmp1220 * _y[2] + _tmp1221 * _y[0] + _tmp1222 * _y[3];
  const Scalar _tmp1224 = _tmp1101 * _tmp1223;
  const Scalar _tmp1225 = _tmp1224 * _tmp524;
  const Scalar _tmp1226 = _tmp1099 * _tmp1223;
  const Scalar _tmp1227 =
      _tmp1094 * (_tmp1219 * _y[3] + _tmp1220 * _y[0] - _tmp1221 * _y[2] - _tmp1222 * _y[1]);
  const Scalar _tmp1228 = _tmp1219 * _y[2] - _tmp1220 * _y[1] + _tmp1221 * _y[3] - _tmp1222 * _y[0];
  const Scalar _tmp1229 = _tmp1094 * _tmp1228;
  const Scalar _tmp1230 =
      _tmp1094 * (-_tmp1219 * _y[0] + _tmp1220 * _y[3] + _tmp1221 * _y[1] - _tmp1222 * _y[2]);
  const Scalar _tmp1231 = _tmp1224 * _tmp528;
  const Scalar _tmp1232 = lambdas(1, 0) - lambdas(2, 0);
  const Scalar _tmp1233 = (Scalar(1) / Scalar(2)) * _tmp39;
  const Scalar _tmp1234 = (Scalar(1) / Scalar(2)) * _tmp40;
  const Scalar _tmp1235 = (Scalar(1) / Scalar(2)) * _tmp41;
  const Scalar _tmp1236 = (Scalar(1) / Scalar(2)) * _tmp42;
  const Scalar _tmp1237 = _tmp1233 - _tmp1234 - _tmp1235 + _tmp1236;
  const Scalar _tmp1238 = ((((-_tmp223 + _tmp28) > 0) - ((-_tmp223 + _tmp28) < 0)) + 1) *
                          (((_tmp222) > 0) - ((_tmp222) < 0));
  const Scalar _tmp1239 = _tmp1237 * _tmp1238;
  const Scalar _tmp1240 = _tmp224 * _tmp228 / std::pow(_tmp225, Scalar(2));
  const Scalar _tmp1241 = _tmp1240 * _tmp44;
  const Scalar _tmp1242 = _tmp1240 * _tmp38;
  const Scalar _tmp1243 = _tmp227 / (_tmp225 * std::sqrt(_tmp225));
  const Scalar _tmp1244 = _tmp1238 * _tmp1243;
  const Scalar _tmp1245 = _tmp1237 * _tmp1244;
  const Scalar _tmp1246 = _tmp1240 * _tmp27;
  const Scalar _tmp1247 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp1248 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp1249 = (Scalar(1) / Scalar(2)) * _tmp19;
  const Scalar _tmp1250 = (Scalar(1) / Scalar(2)) * _tmp20;
  const Scalar _tmp1251 = -_tmp1247 - _tmp1248 - _tmp1249 - _tmp1250;
  const Scalar _tmp1252 = 8 * _tmp229 * _tmp24 * _tmp25;
  const Scalar _tmp1253 = _tmp1252 * _tmp43;
  const Scalar _tmp1254 = (Scalar(1) / Scalar(2)) * _tmp13;
  const Scalar _tmp1255 = (Scalar(1) / Scalar(2)) * _tmp14;
  const Scalar _tmp1256 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp1257 = (Scalar(1) / Scalar(2)) * _tmp16;
  const Scalar _tmp1258 = _tmp1254 - _tmp1255 + _tmp1256 - _tmp1257;
  const Scalar _tmp1259 = _tmp1258 * _tmp37;
  const Scalar _tmp1260 = (Scalar(1) / Scalar(2)) * _tmp33;
  const Scalar _tmp1261 = (Scalar(1) / Scalar(2)) * _tmp34;
  const Scalar _tmp1262 = (Scalar(1) / Scalar(2)) * _tmp35;
  const Scalar _tmp1263 = (Scalar(1) / Scalar(2)) * _tmp36;
  const Scalar _tmp1264 = -_tmp1260 - _tmp1261 + _tmp1262 + _tmp1263;
  const Scalar _tmp1265 = _tmp1252 * _tmp17;
  const Scalar _tmp1266 = _tmp1252 * _tmp1259 + _tmp1264 * _tmp1265;
  const Scalar _tmp1267 = _tmp1239 * _tmp1241 + _tmp1239 * _tmp1242 + _tmp1239 * _tmp1246 -
                          _tmp1245 * _tmp27 - _tmp1245 * _tmp38 - _tmp1245 * _tmp44 +
                          _tmp1251 * _tmp1253 + _tmp1266;
  const Scalar _tmp1268 = _tmp241 / (_tmp230 * std::sqrt(_tmp230));
  const Scalar _tmp1269 = _tmp1268 * _tmp92;
  const Scalar _tmp1270 = 2 * _tmp245;
  const Scalar _tmp1271 = _tmp1269 * _tmp1270;
  const Scalar _tmp1272 = _tmp1271 * _tmp248;
  const Scalar _tmp1273 = _tmp1267 * _tmp95;
  const Scalar _tmp1274 = _tmp1268 * _tmp1270;
  const Scalar _tmp1275 = _tmp1274 * _tmp274;
  const Scalar _tmp1276 = _tmp1182 * _tmp211;
  const Scalar _tmp1277 = _tmp1276 * _tmp987;
  const Scalar _tmp1278 = _tmp1182 * _tmp948;
  const Scalar _tmp1279 = _tmp926 + _tmp927 + _tmp928 + _tmp929;
  const Scalar _tmp1280 = _tmp1117 * _tmp1279 - _tmp1276 * _tmp945 - _tmp1276 * _tmp946 -
                          _tmp1276 * _tmp950 + _tmp1278 * _tmp947 + _tmp1278 * _tmp953 +
                          _tmp1278 * _tmp955 + _tmp968;
  const Scalar _tmp1281 = _tmp1280 * _tmp248;
  const Scalar _tmp1282 = _tmp1268 * _tmp276;
  const Scalar _tmp1283 = _tmp1282 * _tmp17;
  const Scalar _tmp1284 = _tmp241 / _tmp230;
  const Scalar _tmp1285 = _tmp1003 * _tmp1284;
  const Scalar _tmp1286 = _tmp1285 * _tmp85;
  const Scalar _tmp1287 = _tmp226 * _tmp240;
  const Scalar _tmp1288 = _tmp1287 * _tmp276;
  const Scalar _tmp1289 = _tmp1288 * _tmp17;
  const Scalar _tmp1290 = _tmp1284 * _tmp237;
  const Scalar _tmp1291 = _tmp1290 * _tmp92;
  const Scalar _tmp1292 = _tmp1291 * _tmp248;
  const Scalar _tmp1293 = _tmp224 * _tmp240;
  const Scalar _tmp1294 = _tmp1293 * _tmp276;
  const Scalar _tmp1295 = _tmp1294 * _tmp17;
  const Scalar _tmp1296 = _tmp1270 * _tmp1287;
  const Scalar _tmp1297 = _tmp1239 * _tmp1296;
  const Scalar _tmp1298 = _tmp138 * _tmp245;
  const Scalar _tmp1299 = _tmp1287 * _tmp1298;
  const Scalar _tmp1300 = _tmp1299 * _tmp248;
  const Scalar _tmp1301 = _tmp1270 * _tmp1293;
  const Scalar _tmp1302 = _tmp1245 * _tmp1301;
  const Scalar _tmp1303 = _tmp1293 * _tmp1298;
  const Scalar _tmp1304 = _tmp1303 * _tmp248;
  const Scalar _tmp1305 = _tmp1267 * _tmp250;
  const Scalar _tmp1306 = _tmp240 * _tmp970;
  const Scalar _tmp1307 = _tmp247 * _tmp84;
  const Scalar _tmp1308 = _tmp1307 * _tmp248;
  const Scalar _tmp1309 = _tmp1251 * _tmp1308;
  const Scalar _tmp1310 = -_tmp1309;
  const Scalar _tmp1311 = _tmp1290 * _tmp274;
  const Scalar _tmp1312 = _tmp1033 * _tmp1279;
  const Scalar _tmp1313 = _tmp1027 * _tmp1182;
  const Scalar _tmp1314 = _tmp1307 * _tmp274;
  const Scalar _tmp1315 = _tmp1258 * _tmp1314 + _tmp1264 * _tmp278;
  const Scalar _tmp1316 =
      _tmp1041 * _tmp1277 - _tmp1042 * _tmp1297 + _tmp1042 * _tmp1302 - _tmp1043 * _tmp1280 -
      _tmp1044 * _tmp1277 + _tmp1045 * _tmp1280 - _tmp1046 * _tmp1280 + _tmp1047 * _tmp1276 +
      _tmp1048 * _tmp1280 - _tmp1050 * _tmp1280 - _tmp1051 * _tmp1281 - _tmp1052 * _tmp1182 +
      _tmp1054 - _tmp1149 * _tmp1182 - _tmp1239 * _tmp1289 + _tmp1239 * _tmp1300 +
      _tmp1245 * _tmp1295 - _tmp1245 * _tmp1304 + _tmp1267 * _tmp1272 - _tmp1267 * _tmp1283 +
      _tmp1267 * _tmp1286 - _tmp1267 * _tmp1292 - _tmp1273 * _tmp1275 + _tmp1273 * _tmp1311 +
      _tmp1281 * _tmp979 - _tmp1305 * _tmp1306 + _tmp1310 + _tmp1312 + _tmp1313 * _tmp138 +
      _tmp1315;
  const Scalar _tmp1317 = _tmp1006 * _tmp1279;
  const Scalar _tmp1318 = -_tmp1317;
  const Scalar _tmp1319 = _tmp1182 * _tmp992;
  const Scalar _tmp1320 = _tmp1290 * _tmp248;
  const Scalar _tmp1321 = _tmp1303 * _tmp274;
  const Scalar _tmp1322 = _tmp1299 * _tmp274;
  const Scalar _tmp1323 = _tmp1274 * _tmp248;
  const Scalar _tmp1324 = _tmp1274 * _tmp85;
  const Scalar _tmp1325 = _tmp1291 * _tmp274;
  const Scalar _tmp1326 = (Scalar(1) / Scalar(4)) * _tmp240;
  const Scalar _tmp1327 = _tmp1326 * _tmp253;
  const Scalar _tmp1328 = _tmp1271 * _tmp274;
  const Scalar _tmp1329 = _tmp1251 * _tmp1314;
  const Scalar _tmp1330 = -_tmp1329;
  const Scalar _tmp1331 = _tmp1290 * _tmp85;
  const Scalar _tmp1332 = _tmp1307 * _tmp250;
  const Scalar _tmp1333 = -_tmp1258 * _tmp1308 - _tmp1264 * _tmp1332;
  const Scalar _tmp1334 =
      _tmp1013 * _tmp1297 - _tmp1013 * _tmp1302 + _tmp1014 * _tmp1280 - _tmp1015 * _tmp1277 +
      _tmp1015 * _tmp1319 - _tmp1017 * _tmp1281 + _tmp1018 * _tmp1313 - _tmp1019 * _tmp1277 +
      _tmp1020 * _tmp1319 - _tmp1021 * _tmp1276 - _tmp1026 * _tmp1280 - _tmp1030 * _tmp1280 +
      _tmp1031 * _tmp1280 + _tmp1032 * _tmp1281 + _tmp1034 - _tmp1194 * _tmp1280 +
      _tmp1239 * _tmp1322 - _tmp1245 * _tmp1321 - _tmp1267 * _tmp1325 - _tmp1267 * _tmp1327 +
      _tmp1267 * _tmp1328 - _tmp1273 * _tmp1320 + _tmp1273 * _tmp1323 + _tmp1297 * _tmp286 -
      _tmp1302 * _tmp286 + _tmp1305 * _tmp1324 - _tmp1305 * _tmp1331 + _tmp1318 + _tmp1330 +
      _tmp1333;
  const Scalar _tmp1335 = _tmp1279 * _tmp932;
  const Scalar _tmp1336 = -_tmp1335;
  const Scalar _tmp1337 = _tmp1303 * _tmp250;
  const Scalar _tmp1338 = _tmp1282 * _tmp37;
  const Scalar _tmp1339 = _tmp1285 * _tmp95;
  const Scalar _tmp1340 = _tmp1294 * _tmp37;
  const Scalar _tmp1341 = _tmp1288 * _tmp37;
  const Scalar _tmp1342 = _tmp1251 * _tmp1332;
  const Scalar _tmp1343 = _tmp1331 * _tmp274;
  const Scalar _tmp1344 = _tmp1306 * _tmp248;
  const Scalar _tmp1345 = _tmp1324 * _tmp274;
  const Scalar _tmp1346 = _tmp1290 * _tmp1305;
  const Scalar _tmp1347 = _tmp1299 * _tmp250;
  const Scalar _tmp1348 = _tmp1189 * _tmp1296;
  const Scalar _tmp1349 = _tmp1258 * _tmp278 - _tmp1264 * _tmp1314;
  const Scalar _tmp1350 =
      _tmp1004 * _tmp1281 + _tmp1007 - _tmp1123 * _tmp1182 - _tmp1189 * _tmp1302 +
      _tmp1190 * _tmp1280 - _tmp1239 * _tmp1341 - _tmp1239 * _tmp1347 + _tmp1239 * _tmp1348 +
      _tmp1245 * _tmp1337 + _tmp1245 * _tmp1340 - _tmp1267 * _tmp1338 + _tmp1267 * _tmp1339 -
      _tmp1267 * _tmp1343 - _tmp1267 * _tmp1344 + _tmp1267 * _tmp1345 - _tmp1271 * _tmp1305 +
      _tmp1276 * _tmp996 - _tmp1277 * _tmp984 + _tmp1277 * _tmp991 - _tmp1280 * _tmp972 -
      _tmp1280 * _tmp976 - _tmp1280 * _tmp980 + _tmp1280 * _tmp999 - _tmp1281 * _tmp981 +
      _tmp1319 * _tmp984 - _tmp1319 * _tmp991 + _tmp1336 + _tmp1342 + _tmp1346 * _tmp92 + _tmp1349;
  const Scalar _tmp1351 = _tmp1306 * _tmp274;
  const Scalar _tmp1352 = _tmp253 * _tmp92;
  const Scalar _tmp1353 = _tmp1293 * _tmp1352;
  const Scalar _tmp1354 = _tmp1274 * _tmp249;
  const Scalar _tmp1355 = _tmp1287 * _tmp1352;
  const Scalar _tmp1356 = _tmp1269 * _tmp253;
  const Scalar _tmp1357 = _tmp1285 * _tmp92;
  const Scalar _tmp1358 = _tmp1274 * _tmp95;
  const Scalar _tmp1359 = _tmp1331 * _tmp248;
  const Scalar _tmp1360 = -_tmp1258 * _tmp1332 + _tmp1264 * _tmp1308;
  const Scalar _tmp1361 = _tmp1251 * _tmp278 + _tmp1279 * _tmp239;
  const Scalar _tmp1362 =
      -_tmp1056 * _tmp1277 + _tmp1056 * _tmp1319 - _tmp1058 * _tmp1280 - _tmp1059 * _tmp1280 +
      _tmp1060 * _tmp1277 + _tmp1061 * _tmp1276 + _tmp1062 * _tmp1280 + _tmp1063 * _tmp1280 -
      _tmp1064 * _tmp1280 + _tmp1065 * _tmp1281 + _tmp1066 - _tmp1134 * _tmp1182 -
      _tmp1239 * _tmp1355 + _tmp1245 * _tmp1353 - _tmp1267 * _tmp1351 - _tmp1267 * _tmp1354 -
      _tmp1267 * _tmp1356 + _tmp1267 * _tmp1357 + _tmp1267 * _tmp1359 - _tmp1281 * _tmp998 -
      _tmp1297 * _tmp249 + _tmp1297 * _tmp251 + _tmp1302 * _tmp249 - _tmp1302 * _tmp251 +
      _tmp1305 * _tmp1358 - _tmp1313 * _tmp983 - _tmp1346 * _tmp95 + _tmp1360 + _tmp1361;
  const Scalar _tmp1363 =
      -_tmp1316 * _tmp272 + _tmp1334 * _tmp284 + _tmp1350 * _tmp288 + _tmp1362 * _tmp358;
  const Scalar _tmp1364 =
      _tmp1316 * _tmp288 + _tmp1334 * _tmp358 + _tmp1350 * _tmp272 - _tmp1362 * _tmp284;
  const Scalar _tmp1365 =
      -_tmp1316 * _tmp358 + _tmp1334 * _tmp288 - _tmp1350 * _tmp284 - _tmp1362 * _tmp272;
  const Scalar _tmp1366 =
      _tmp1316 * _tmp284 + _tmp1334 * _tmp272 - _tmp1350 * _tmp358 + _tmp1362 * _tmp288;
  const Scalar _tmp1367 =
      -_tmp1363 * _tmp400 + _tmp1364 * _tmp398 + _tmp1365 * _tmp399 + _tmp1366 * _tmp351;
  const Scalar _tmp1368 =
      -_tmp1363 * _tmp398 - _tmp1364 * _tmp400 + _tmp1365 * _tmp351 - _tmp1366 * _tmp399;
  const Scalar _tmp1369 =
      _tmp1363 * _tmp399 + _tmp1364 * _tmp351 + _tmp1365 * _tmp400 - _tmp1366 * _tmp398;
  const Scalar _tmp1370 =
      _tmp1363 * _tmp351 - _tmp1364 * _tmp399 + _tmp1365 * _tmp398 + _tmp1366 * _tmp400;
  const Scalar _tmp1371 =
      _tmp1367 * _x0[3] + _tmp1368 * _x0[0] + _tmp1369 * _x0[1] - _tmp1370 * _x0[2];
  const Scalar _tmp1372 =
      -_tmp1367 * _x0[0] + _tmp1368 * _x0[3] - _tmp1369 * _x0[2] - _tmp1370 * _x0[1];
  const Scalar _tmp1373 =
      _tmp1367 * _x0[2] + _tmp1368 * _x0[1] - _tmp1369 * _x0[0] + _tmp1370 * _x0[3];
  const Scalar _tmp1374 =
      -_tmp1367 * _x0[1] + _tmp1368 * _x0[2] + _tmp1369 * _x0[3] + _tmp1370 * _x0[0];
  const Scalar _tmp1375 = _tmp1371 * _y[3] - _tmp1372 * _y[0] + _tmp1373 * _y[2] - _tmp1374 * _y[1];
  const Scalar _tmp1376 = _tmp1375 * _tmp522;
  const Scalar _tmp1377 =
      -_tmp1371 * _y[0] - _tmp1372 * _y[3] - _tmp1373 * _y[1] - _tmp1374 * _y[2];
  const Scalar _tmp1378 = _tmp1377 * _tmp526;
  const Scalar _tmp1379 = _tmp1377 * _tmp531;
  const Scalar _tmp1380 = _tmp1371 * _y[1] - _tmp1372 * _y[2] - _tmp1373 * _y[0] + _tmp1374 * _y[3];
  const Scalar _tmp1381 = _tmp1380 * _tmp522;
  const Scalar _tmp1382 =
      -_tmp1371 * _y[2] - _tmp1372 * _y[1] + _tmp1373 * _y[3] + _tmp1374 * _y[0];
  const Scalar _tmp1383 = _tmp1382 * _tmp522;
  const Scalar _tmp1384 = _tmp1377 * _tmp511;
  const Scalar _tmp1385 = _tmp1378 * _tmp524;
  const Scalar _tmp1386 = _tmp1377 * _tmp597;
  const Scalar _tmp1387 = _tmp211 * _tmp960;
  const Scalar _tmp1388 = _tmp1387 * _tmp987;
  const Scalar _tmp1389 = _tmp1260 + _tmp1261 - _tmp1262 - _tmp1263;
  const Scalar _tmp1390 = _tmp1244 * _tmp1389;
  const Scalar _tmp1391 = _tmp948 * _tmp960;
  const Scalar _tmp1392 = -_tmp1112 * _tmp960 - _tmp1114 * _tmp960 - _tmp1115 * _tmp960 + _tmp1119 +
                          _tmp1279 * _tmp967 + _tmp1391 * _tmp947 + _tmp1391 * _tmp953 +
                          _tmp1391 * _tmp955;
  const Scalar _tmp1393 = _tmp1238 * _tmp1389;
  const Scalar _tmp1394 = _tmp1252 * _tmp37;
  const Scalar _tmp1395 = -_tmp1254 + _tmp1255 - _tmp1256 + _tmp1257;
  const Scalar _tmp1396 = _tmp1237 * _tmp1265 + _tmp1253 * _tmp1395;
  const Scalar _tmp1397 = _tmp1241 * _tmp1393 + _tmp1242 * _tmp1393 + _tmp1246 * _tmp1393 +
                          _tmp1251 * _tmp1394 - _tmp1390 * _tmp27 - _tmp1390 * _tmp38 -
                          _tmp1390 * _tmp44 + _tmp1396;
  const Scalar _tmp1398 = _tmp1271 * _tmp250;
  const Scalar _tmp1399 = _tmp1290 * _tmp282;
  const Scalar _tmp1400 = _tmp960 * _tmp992;
  const Scalar _tmp1401 = _tmp1004 * _tmp1392;
  const Scalar _tmp1402 = _tmp86 * _tmp961;
  const Scalar _tmp1403 = _tmp1402 * _tmp992;
  const Scalar _tmp1404 = _tmp1397 * _tmp85;
  const Scalar _tmp1405 = _tmp1402 * _tmp211;
  const Scalar _tmp1406 = _tmp1405 * _tmp987;
  const Scalar _tmp1407 = _tmp1290 * _tmp1404;
  const Scalar _tmp1408 = _tmp1301 * _tmp1390;
  const Scalar _tmp1409 = _tmp1397 * _tmp37;
  const Scalar _tmp1410 = _tmp1409 * _tmp84;
  const Scalar _tmp1411 = -_tmp1237 * _tmp1314 + _tmp1332 * _tmp1395;
  const Scalar _tmp1412 =
      -_tmp1123 * _tmp960 + _tmp1128 - _tmp1189 * _tmp1408 + _tmp1190 * _tmp1392 +
      _tmp1275 * _tmp1404 - _tmp1282 * _tmp1409 + _tmp1285 * _tmp1410 + _tmp1337 * _tmp1390 +
      _tmp1340 * _tmp1390 - _tmp1341 * _tmp1393 - _tmp1344 * _tmp1397 - _tmp1347 * _tmp1393 +
      _tmp1348 * _tmp1393 + _tmp1361 - _tmp138 * _tmp1403 + _tmp138 * _tmp1406 +
      _tmp1387 * _tmp996 - _tmp1388 * _tmp984 - _tmp1392 * _tmp972 - _tmp1392 * _tmp976 -
      _tmp1392 * _tmp980 - _tmp1392 * _tmp982 + _tmp1392 * _tmp999 - _tmp1397 * _tmp1398 +
      _tmp1397 * _tmp1399 + _tmp1400 * _tmp984 + _tmp1401 * _tmp248 - _tmp1407 * _tmp274 + _tmp1411;
  const Scalar _tmp1413 = -_tmp1342;
  const Scalar _tmp1414 = _tmp249 * _tmp997;
  const Scalar _tmp1415 = _tmp1410 * _tmp250;
  const Scalar _tmp1416 = _tmp1296 * _tmp1393;
  const Scalar _tmp1417 = _tmp1296 * _tmp249;
  const Scalar _tmp1418 = _tmp1301 * _tmp249;
  const Scalar _tmp1419 = _tmp1237 * _tmp1308 + _tmp1395 * _tmp278;
  const Scalar _tmp1420 =
      _tmp1018 * _tmp1403 - _tmp1018 * _tmp1406 - _tmp1058 * _tmp1392 - _tmp1059 * _tmp1392 +
      _tmp1060 * _tmp1388 + _tmp1061 * _tmp1387 + _tmp1062 * _tmp1392 - _tmp1064 * _tmp1392 -
      _tmp1134 * _tmp960 - _tmp1135 * _tmp960 + _tmp1138 * _tmp1392 + _tmp1139 +
      _tmp1274 * _tmp1415 - _tmp1290 * _tmp1415 - _tmp1323 * _tmp1404 + _tmp1335 -
      _tmp1351 * _tmp1397 + _tmp1353 * _tmp1390 - _tmp1355 * _tmp1393 - _tmp1356 * _tmp1397 +
      _tmp1357 * _tmp1397 + _tmp1390 * _tmp1418 - _tmp1392 * _tmp1414 - _tmp1393 * _tmp1417 +
      _tmp1401 * _tmp274 + _tmp1407 * _tmp248 - _tmp1408 * _tmp251 + _tmp1413 + _tmp1416 * _tmp251 +
      _tmp1419;
  const Scalar _tmp1421 = _tmp1017 * _tmp1392;
  const Scalar _tmp1422 = _tmp1306 * _tmp250;
  const Scalar _tmp1423 = _tmp1237 * _tmp278 - _tmp1308 * _tmp1395;
  const Scalar _tmp1424 =
      -_tmp1000 * _tmp1402 + _tmp1041 * _tmp1388 + _tmp1042 * _tmp1408 - _tmp1042 * _tmp1416 -
      _tmp1043 * _tmp1392 - _tmp1044 * _tmp1388 - _tmp1046 * _tmp1392 - _tmp1050 * _tmp1392 +
      _tmp1147 * _tmp1392 - _tmp1148 * _tmp1392 - _tmp1149 * _tmp960 + _tmp1150 * _tmp960 +
      _tmp1151 + _tmp1272 * _tmp1397 - _tmp1275 * _tmp1410 - _tmp1283 * _tmp1397 +
      _tmp1285 * _tmp1404 - _tmp1289 * _tmp1393 - _tmp1292 * _tmp1397 + _tmp1295 * _tmp1390 +
      _tmp1300 * _tmp1393 - _tmp1304 * _tmp1390 + _tmp1311 * _tmp1410 + _tmp1318 + _tmp1329 -
      _tmp1397 * _tmp1422 + _tmp1401 * _tmp250 + _tmp1405 * _tmp995 + _tmp1421 * _tmp274 + _tmp1423;
  const Scalar _tmp1425 = _tmp286 * _tmp997;
  const Scalar _tmp1426 = _tmp1397 * _tmp274;
  const Scalar _tmp1427 = -_tmp1312;
  const Scalar _tmp1428 = -_tmp1237 * _tmp1332 - _tmp1314 * _tmp1395;
  const Scalar _tmp1429 =
      -_tmp1013 * _tmp1408 + _tmp1013 * _tmp1416 + _tmp1014 * _tmp1392 - _tmp1019 * _tmp1388 +
      _tmp1020 * _tmp1400 - _tmp1021 * _tmp1387 - _tmp1026 * _tmp1392 - _tmp1030 * _tmp1392 +
      _tmp1031 * _tmp1392 + _tmp1142 * _tmp960 + _tmp1145 - _tmp1194 * _tmp1392 +
      _tmp1271 * _tmp1426 + _tmp1274 * _tmp1404 * _tmp250 - _tmp1291 * _tmp1426 + _tmp1310 -
      _tmp1320 * _tmp1410 - _tmp1321 * _tmp1390 + _tmp1322 * _tmp1393 + _tmp1323 * _tmp1410 -
      _tmp1327 * _tmp1397 + _tmp1392 * _tmp1425 + _tmp1403 * _tmp983 - _tmp1406 * _tmp983 -
      _tmp1407 * _tmp250 - _tmp1408 * _tmp286 + _tmp1416 * _tmp286 - _tmp1421 * _tmp248 + _tmp1427 +
      _tmp1428;
  const Scalar _tmp1430 =
      _tmp1412 * _tmp272 - _tmp1420 * _tmp284 + _tmp1424 * _tmp288 + _tmp1429 * _tmp358;
  const Scalar _tmp1431 =
      -_tmp1412 * _tmp358 + _tmp1420 * _tmp288 + _tmp1424 * _tmp284 + _tmp1429 * _tmp272;
  const Scalar _tmp1432 =
      _tmp1412 * _tmp288 + _tmp1420 * _tmp358 - _tmp1424 * _tmp272 + _tmp1429 * _tmp284;
  const Scalar _tmp1433 =
      -_tmp1412 * _tmp284 - _tmp1420 * _tmp272 - _tmp1424 * _tmp358 + _tmp1429 * _tmp288;
  const Scalar _tmp1434 =
      _tmp1430 * _tmp351 - _tmp1431 * _tmp398 + _tmp1432 * _tmp399 + _tmp1433 * _tmp400;
  const Scalar _tmp1435 =
      _tmp1430 * _tmp398 + _tmp1431 * _tmp351 - _tmp1432 * _tmp400 + _tmp1433 * _tmp399;
  const Scalar _tmp1436 =
      -_tmp1430 * _tmp399 + _tmp1431 * _tmp400 + _tmp1432 * _tmp351 + _tmp1433 * _tmp398;
  const Scalar _tmp1437 =
      -_tmp1430 * _tmp400 - _tmp1431 * _tmp399 - _tmp1432 * _tmp398 + _tmp1433 * _tmp351;
  const Scalar _tmp1438 =
      -_tmp1434 * _x0[0] + _tmp1435 * _x0[2] + _tmp1436 * _x0[3] + _tmp1437 * _x0[1];
  const Scalar _tmp1439 =
      _tmp1434 * _x0[3] - _tmp1435 * _x0[1] + _tmp1436 * _x0[0] + _tmp1437 * _x0[2];
  const Scalar _tmp1440 =
      -_tmp1434 * _x0[2] - _tmp1435 * _x0[0] - _tmp1436 * _x0[1] + _tmp1437 * _x0[3];
  const Scalar _tmp1441 =
      _tmp1434 * _x0[1] + _tmp1435 * _x0[3] - _tmp1436 * _x0[2] + _tmp1437 * _x0[0];
  const Scalar _tmp1442 =
      -_tmp1438 * _y[1] - _tmp1439 * _y[2] - _tmp1440 * _y[3] - _tmp1441 * _y[0];
  const Scalar _tmp1443 = _tmp1442 * _tmp526;
  const Scalar _tmp1444 = _tmp1442 * _tmp511;
  const Scalar _tmp1445 = _tmp1438 * _y[2] - _tmp1439 * _y[1] - _tmp1440 * _y[0] + _tmp1441 * _y[3];
  const Scalar _tmp1446 = _tmp1445 * _tmp522;
  const Scalar _tmp1447 = _tmp1442 * _tmp531;
  const Scalar _tmp1448 =
      _tmp522 * (_tmp1438 * _y[3] + _tmp1439 * _y[0] - _tmp1440 * _y[1] - _tmp1441 * _y[2]);
  const Scalar _tmp1449 =
      -_tmp1438 * _y[0] + _tmp1439 * _y[3] - _tmp1440 * _y[2] + _tmp1441 * _y[1];
  const Scalar _tmp1450 = _tmp1449 * _tmp522;
  const Scalar _tmp1451 = _tmp1444 * _tmp528;
  const Scalar _tmp1452 = _tmp1444 * _tmp516;
  const Scalar _tmp1453 = _tmp1443 * _tmp524;
  const Scalar _tmp1454 = _tmp1116 * _tmp211;
  const Scalar _tmp1455 = _tmp1116 * _tmp948;
  const Scalar _tmp1456 = _tmp1118 * _tmp1279 + _tmp1183 - _tmp1454 * _tmp945 - _tmp1454 * _tmp946 -
                          _tmp1454 * _tmp950 + _tmp1455 * _tmp947 + _tmp1455 * _tmp953 +
                          _tmp1455 * _tmp955;
  const Scalar _tmp1457 = _tmp1456 * _tmp971;
  const Scalar _tmp1458 = _tmp1244 * _tmp1258;
  const Scalar _tmp1459 = _tmp1301 * _tmp1458;
  const Scalar _tmp1460 = _tmp1456 * _tmp973;
  const Scalar _tmp1461 = _tmp1460 * _tmp274;
  const Scalar _tmp1462 = _tmp1238 * _tmp1258;
  const Scalar _tmp1463 = -_tmp1233 + _tmp1234 + _tmp1235 - _tmp1236;
  const Scalar _tmp1464 = _tmp1253 * _tmp1389 + _tmp1394 * _tmp1463;
  const Scalar _tmp1465 = _tmp1241 * _tmp1462 + _tmp1242 * _tmp1462 + _tmp1246 * _tmp1462 +
                          _tmp1251 * _tmp1265 - _tmp1458 * _tmp27 - _tmp1458 * _tmp38 -
                          _tmp1458 * _tmp44 + _tmp1464;
  const Scalar _tmp1466 = _tmp1004 * _tmp1456;
  const Scalar _tmp1467 = _tmp1454 * _tmp987;
  const Scalar _tmp1468 = _tmp1244 * _tmp1259;
  const Scalar _tmp1469 = _tmp1116 * _tmp992;
  const Scalar _tmp1470 = _tmp1238 * _tmp1259;
  const Scalar _tmp1471 = _tmp1332 * _tmp1389 + _tmp1463 * _tmp278;
  const Scalar _tmp1472 =
      -_tmp1116 * _tmp1123 - _tmp1189 * _tmp1459 + _tmp1191 - _tmp1288 * _tmp1470 +
      _tmp1294 * _tmp1468 + _tmp1317 + _tmp1330 + _tmp1337 * _tmp1458 - _tmp1338 * _tmp1465 +
      _tmp1339 * _tmp1465 - _tmp1343 * _tmp1465 - _tmp1344 * _tmp1465 + _tmp1345 * _tmp1465 -
      _tmp1347 * _tmp1462 + _tmp1348 * _tmp1462 - _tmp1398 * _tmp1465 + _tmp1399 * _tmp1465 +
      _tmp1454 * _tmp996 - _tmp1456 * _tmp980 - _tmp1456 * _tmp982 + _tmp1456 * _tmp999 -
      _tmp1457 * _tmp95 + _tmp1460 * _tmp990 - _tmp1461 * _tmp975 + _tmp1466 * _tmp248 -
      _tmp1467 * _tmp984 + _tmp1467 * _tmp991 + _tmp1469 * _tmp984 - _tmp1469 * _tmp991 + _tmp1471;
  const Scalar _tmp1473 = _tmp1301 * _tmp1468;
  const Scalar _tmp1474 = _tmp1473 * _tmp84;
  const Scalar _tmp1475 = _tmp1465 * _tmp248;
  const Scalar _tmp1476 = _tmp277 * _tmp37;
  const Scalar _tmp1477 = _tmp1290 * _tmp1465;
  const Scalar _tmp1478 = _tmp1296 * _tmp1470;
  const Scalar _tmp1479 = _tmp1478 * _tmp84;
  const Scalar _tmp1480 = _tmp1460 * _tmp248;
  const Scalar _tmp1481 = _tmp1042 * _tmp1274;
  const Scalar _tmp1482 = _tmp1027 * _tmp1116;
  const Scalar _tmp1483 = -_tmp1308 * _tmp1389 + _tmp1314 * _tmp1463;
  const Scalar _tmp1484 =
      -_tmp1029 * _tmp1480 + _tmp1041 * _tmp1467 - _tmp1041 * _tmp1469 + _tmp1042 * _tmp1477 -
      _tmp1043 * _tmp1456 - _tmp1044 * _tmp1467 + _tmp1045 * _tmp1456 + _tmp1047 * _tmp1454 -
      _tmp1050 * _tmp1456 - _tmp1052 * _tmp1116 + _tmp1147 * _tmp1456 + _tmp1204 +
      _tmp1271 * _tmp1475 - _tmp1283 * _tmp1465 + _tmp1286 * _tmp1465 - _tmp1289 * _tmp1462 -
      _tmp1291 * _tmp1475 + _tmp1295 * _tmp1458 + _tmp1300 * _tmp1462 - _tmp1304 * _tmp1458 +
      _tmp1361 + _tmp138 * _tmp1482 - _tmp1422 * _tmp1465 - _tmp1457 * _tmp85 +
      _tmp1461 * _tmp1476 - _tmp1465 * _tmp1481 + _tmp1474 * _tmp274 - _tmp1479 * _tmp274 +
      _tmp1483;
  const Scalar _tmp1485 = _tmp250 * _tmp84;
  const Scalar _tmp1486 = _tmp1024 * _tmp1460;
  const Scalar _tmp1487 = _tmp1274 * _tmp251;
  const Scalar _tmp1488 = -_tmp1332 * _tmp1463 + _tmp1389 * _tmp278;
  const Scalar _tmp1489 =
      -_tmp1056 * _tmp1467 + _tmp1056 * _tmp1469 - _tmp1059 * _tmp1456 + _tmp1060 * _tmp1467 +
      _tmp1061 * _tmp1454 + _tmp1062 * _tmp1456 - _tmp1116 * _tmp1134 + _tmp1202 + _tmp1309 -
      _tmp1324 * _tmp1475 + _tmp1331 * _tmp1475 - _tmp1351 * _tmp1465 + _tmp1353 * _tmp1458 -
      _tmp1355 * _tmp1462 - _tmp1356 * _tmp1465 + _tmp1357 * _tmp1465 - _tmp1414 * _tmp1456 -
      _tmp1417 * _tmp1462 + _tmp1418 * _tmp1458 + _tmp1427 - _tmp1457 * _tmp92 +
      _tmp1465 * _tmp1487 + _tmp1466 * _tmp274 - _tmp1473 * _tmp1485 - _tmp1477 * _tmp251 +
      _tmp1478 * _tmp1485 + _tmp1480 * _tmp975 - _tmp1482 * _tmp983 - _tmp1486 * _tmp37 + _tmp1488;
  const Scalar _tmp1490 = _tmp1331 * _tmp250;
  const Scalar _tmp1491 = _tmp1013 * _tmp1274;
  const Scalar _tmp1492 = _tmp1290 * _tmp95;
  const Scalar _tmp1493 = -_tmp1308 * _tmp1463 - _tmp1314 * _tmp1389;
  const Scalar _tmp1494 =
      _tmp1013 * _tmp1296 * _tmp1462 - _tmp1013 * _tmp1459 + _tmp1014 * _tmp1456 -
      _tmp1015 * _tmp1467 + _tmp1015 * _tmp1469 + _tmp1018 * _tmp1482 - _tmp1019 * _tmp1467 +
      _tmp1020 * _tmp1469 - _tmp1021 * _tmp1454 - _tmp1026 * _tmp1456 - _tmp1029 * _tmp1461 +
      _tmp1031 * _tmp1456 + _tmp1196 - _tmp1321 * _tmp1458 + _tmp1322 * _tmp1462 -
      _tmp1325 * _tmp1465 - _tmp1327 * _tmp1465 + _tmp1328 * _tmp1465 + _tmp1336 +
      _tmp1358 * _tmp1475 + _tmp1413 + _tmp1425 * _tmp1456 - _tmp1465 * _tmp1490 +
      _tmp1465 * _tmp1491 - _tmp1474 * _tmp248 - _tmp1475 * _tmp1492 - _tmp1476 * _tmp1480 +
      _tmp1479 * _tmp248 - _tmp1486 * _tmp17 + _tmp1493;
  const Scalar _tmp1495 =
      -_tmp1472 * _tmp284 - _tmp1484 * _tmp358 - _tmp1489 * _tmp272 + _tmp1494 * _tmp288;
  const Scalar _tmp1496 =
      _tmp1472 * _tmp272 + _tmp1484 * _tmp288 - _tmp1489 * _tmp284 + _tmp1494 * _tmp358;
  const Scalar _tmp1497 =
      -_tmp1472 * _tmp358 + _tmp1484 * _tmp284 + _tmp1489 * _tmp288 + _tmp1494 * _tmp272;
  const Scalar _tmp1498 =
      _tmp1472 * _tmp288 - _tmp1484 * _tmp272 + _tmp1489 * _tmp358 + _tmp1494 * _tmp284;
  const Scalar _tmp1499 =
      _tmp1495 * _tmp351 - _tmp1496 * _tmp400 - _tmp1497 * _tmp399 - _tmp1498 * _tmp398;
  const Scalar _tmp1500 =
      _tmp1495 * _tmp399 + _tmp1496 * _tmp398 + _tmp1497 * _tmp351 - _tmp1498 * _tmp400;
  const Scalar _tmp1501 =
      _tmp1495 * _tmp398 - _tmp1496 * _tmp399 + _tmp1497 * _tmp400 + _tmp1498 * _tmp351;
  const Scalar _tmp1502 =
      _tmp1495 * _tmp400 + _tmp1496 * _tmp351 - _tmp1497 * _tmp398 + _tmp1498 * _tmp399;
  const Scalar _tmp1503 =
      _tmp1499 * _x0[0] + _tmp1500 * _x0[3] - _tmp1501 * _x0[2] + _tmp1502 * _x0[1];
  const Scalar _tmp1504 =
      _tmp1499 * _x0[3] - _tmp1500 * _x0[0] - _tmp1501 * _x0[1] - _tmp1502 * _x0[2];
  const Scalar _tmp1505 =
      _tmp1499 * _x0[2] - _tmp1500 * _x0[1] + _tmp1501 * _x0[0] + _tmp1502 * _x0[3];
  const Scalar _tmp1506 =
      _tmp1499 * _x0[1] + _tmp1500 * _x0[2] + _tmp1501 * _x0[3] - _tmp1502 * _x0[0];
  const Scalar _tmp1507 = _tmp1503 * _y[3] - _tmp1504 * _y[0] - _tmp1505 * _y[1] + _tmp1506 * _y[2];
  const Scalar _tmp1508 = _tmp1507 * _tmp522;
  const Scalar _tmp1509 =
      -_tmp1503 * _y[0] - _tmp1504 * _y[3] - _tmp1505 * _y[2] - _tmp1506 * _y[1];
  const Scalar _tmp1510 = _tmp1509 * _tmp526;
  const Scalar _tmp1511 = _tmp1509 * _tmp511;
  const Scalar _tmp1512 =
      _tmp522 * (-_tmp1503 * _y[2] - _tmp1504 * _y[1] + _tmp1505 * _y[0] + _tmp1506 * _y[3]);
  const Scalar _tmp1513 = _tmp1503 * _y[1] - _tmp1504 * _y[2] + _tmp1505 * _y[3] - _tmp1506 * _y[0];
  const Scalar _tmp1514 = _tmp1513 * _tmp522;
  const Scalar _tmp1515 = _tmp1509 * _tmp531;
  const Scalar _tmp1516 = _tmp1510 * _tmp524;
  const Scalar _tmp1517 = _tmp1509 * _tmp597;
  const Scalar _tmp1518 = lambdas(2, 0) - lambdas(3, 0);
  const Scalar _tmp1519 = _tmp1247 + _tmp1248 + _tmp1249 + _tmp1250;
  const Scalar _tmp1520 = _tmp1519 * _tmp278;
  const Scalar _tmp1521 = _tmp1238 * _tmp1463;
  const Scalar _tmp1522 = _tmp1521 * _tmp44;
  const Scalar _tmp1523 = _tmp1243 * _tmp1521;
  const Scalar _tmp1524 = _tmp1240 * _tmp1522 + _tmp1242 * _tmp1521 - _tmp1243 * _tmp1522 +
                          _tmp1246 * _tmp1521 + _tmp1253 * _tmp1519 + _tmp1266 - _tmp1523 * _tmp27 -
                          _tmp1523 * _tmp38;
  const Scalar _tmp1525 = _tmp1290 * _tmp1524;
  const Scalar _tmp1526 = _tmp1301 * _tmp1523;
  const Scalar _tmp1527 = _tmp1296 * _tmp1521;
  const Scalar _tmp1528 = -_tmp1351 * _tmp1524 + _tmp1353 * _tmp1523 - _tmp1354 * _tmp1524 -
                          _tmp1355 * _tmp1521 - _tmp1356 * _tmp1524 + _tmp1357 * _tmp1524 +
                          _tmp1360 + _tmp1487 * _tmp1524 + _tmp1520 + _tmp1525 * _tmp249 -
                          _tmp1525 * _tmp251 + _tmp1526 * _tmp249 - _tmp1526 * _tmp251 -
                          _tmp1527 * _tmp249 + _tmp1527 * _tmp251;
  const Scalar _tmp1529 = _tmp1314 * _tmp1519;
  const Scalar _tmp1530 = -_tmp1529;
  const Scalar _tmp1531 = _tmp1525 * _tmp274;
  const Scalar _tmp1532 = _tmp1274 * _tmp286;
  const Scalar _tmp1533 = -_tmp1013 * _tmp1525 - _tmp1013 * _tmp1526 + _tmp1013 * _tmp1527 -
                          _tmp1321 * _tmp1523 + _tmp1322 * _tmp1521 - _tmp1327 * _tmp1524 +
                          _tmp1328 * _tmp1524 + _tmp1333 + _tmp1491 * _tmp1524 +
                          _tmp1524 * _tmp1532 - _tmp1525 * _tmp286 - _tmp1526 * _tmp286 +
                          _tmp1527 * _tmp286 + _tmp1530 - _tmp1531 * _tmp92;
  const Scalar _tmp1534 = _tmp1308 * _tmp1519;
  const Scalar _tmp1535 = -_tmp1534;
  const Scalar _tmp1536 = _tmp1042 * _tmp1526 - _tmp1042 * _tmp1527 + _tmp1272 * _tmp1524 -
                          _tmp1283 * _tmp1524 + _tmp1286 * _tmp1524 - _tmp1289 * _tmp1521 +
                          _tmp1295 * _tmp1523 + _tmp1300 * _tmp1521 - _tmp1304 * _tmp1523 +
                          _tmp1315 - _tmp1422 * _tmp1524 - _tmp1481 * _tmp1524 -
                          _tmp1525 * _tmp273 + _tmp1531 * _tmp95 + _tmp1535;
  const Scalar _tmp1537 = _tmp1332 * _tmp1519;
  const Scalar _tmp1538 = -_tmp1189 * _tmp1526 + _tmp1337 * _tmp1523 - _tmp1338 * _tmp1524 +
                          _tmp1339 * _tmp1524 + _tmp1340 * _tmp1523 - _tmp1341 * _tmp1521 -
                          _tmp1344 * _tmp1524 + _tmp1345 * _tmp1524 - _tmp1347 * _tmp1521 +
                          _tmp1348 * _tmp1521 + _tmp1349 - _tmp1398 * _tmp1524 +
                          _tmp1399 * _tmp1524 - _tmp1531 * _tmp85 + _tmp1537;
  const Scalar _tmp1539 =
      _tmp1528 * _tmp288 + _tmp1533 * _tmp272 + _tmp1536 * _tmp284 - _tmp1538 * _tmp358;
  const Scalar _tmp1540 =
      -_tmp1528 * _tmp284 + _tmp1533 * _tmp358 + _tmp1536 * _tmp288 + _tmp1538 * _tmp272;
  const Scalar _tmp1541 =
      _tmp1528 * _tmp358 + _tmp1533 * _tmp284 - _tmp1536 * _tmp272 + _tmp1538 * _tmp288;
  const Scalar _tmp1542 =
      -_tmp1528 * _tmp272 + _tmp1533 * _tmp288 - _tmp1536 * _tmp358 - _tmp1538 * _tmp284;
  const Scalar _tmp1543 =
      _tmp1539 * _tmp351 + _tmp1540 * _tmp398 - _tmp1541 * _tmp400 + _tmp1542 * _tmp399;
  const Scalar _tmp1544 =
      _tmp1539 * _tmp400 - _tmp1540 * _tmp399 + _tmp1541 * _tmp351 + _tmp1542 * _tmp398;
  const Scalar _tmp1545 =
      -_tmp1539 * _tmp399 - _tmp1540 * _tmp400 - _tmp1541 * _tmp398 + _tmp1542 * _tmp351;
  const Scalar _tmp1546 =
      -_tmp1539 * _tmp398 + _tmp1540 * _tmp351 + _tmp1541 * _tmp399 + _tmp1542 * _tmp400;
  const Scalar _tmp1547 =
      _tmp1543 * _x0[3] - _tmp1544 * _x0[2] + _tmp1545 * _x0[0] + _tmp1546 * _x0[1];
  const Scalar _tmp1548 =
      -_tmp1543 * _x0[0] - _tmp1544 * _x0[1] + _tmp1545 * _x0[3] - _tmp1546 * _x0[2];
  const Scalar _tmp1549 =
      -_tmp1543 * _x0[1] + _tmp1544 * _x0[0] + _tmp1545 * _x0[2] + _tmp1546 * _x0[3];
  const Scalar _tmp1550 =
      _tmp1543 * _x0[2] + _tmp1544 * _x0[3] + _tmp1545 * _x0[1] - _tmp1546 * _x0[0];
  const Scalar _tmp1551 =
      -_tmp1547 * _y[0] - _tmp1548 * _y[3] - _tmp1549 * _y[2] - _tmp1550 * _y[1];
  const Scalar _tmp1552 = _tmp1551 * _tmp531;
  const Scalar _tmp1553 = _tmp1551 * _tmp526;
  const Scalar _tmp1554 = _tmp1547 * _y[1] - _tmp1548 * _y[2] + _tmp1549 * _y[3] - _tmp1550 * _y[0];
  const Scalar _tmp1555 = _tmp1554 * _tmp522;
  const Scalar _tmp1556 = _tmp1547 * _y[3] - _tmp1548 * _y[0] - _tmp1549 * _y[1] + _tmp1550 * _y[2];
  const Scalar _tmp1557 = _tmp1556 * _tmp522;
  const Scalar _tmp1558 =
      _tmp522 * (-_tmp1547 * _y[2] - _tmp1548 * _y[1] + _tmp1549 * _y[0] + _tmp1550 * _y[3]);
  const Scalar _tmp1559 = _tmp1551 * _tmp511;
  const Scalar _tmp1560 = _tmp1551 * _tmp597;
  const Scalar _tmp1561 = _tmp1244 * _tmp1264;
  const Scalar _tmp1562 = _tmp1238 * _tmp1264;
  const Scalar _tmp1563 = _tmp1241 * _tmp1562 + _tmp1242 * _tmp1562 + _tmp1246 * _tmp1562 +
                          _tmp1394 * _tmp1519 + _tmp1396 - _tmp1561 * _tmp27 - _tmp1561 * _tmp38 -
                          _tmp1561 * _tmp44;
  const Scalar _tmp1564 = _tmp1290 * _tmp251;
  const Scalar _tmp1565 = -_tmp1537;
  const Scalar _tmp1566 = _tmp1296 * _tmp1562;
  const Scalar _tmp1567 = _tmp1301 * _tmp1561;
  const Scalar _tmp1568 = _tmp1563 * _tmp253;
  const Scalar _tmp1569 = -_tmp1269 * _tmp1568 - _tmp1351 * _tmp1563 + _tmp1353 * _tmp1561 -
                          _tmp1354 * _tmp1563 - _tmp1355 * _tmp1562 + _tmp1357 * _tmp1563 +
                          _tmp1359 * _tmp1563 - _tmp1417 * _tmp1562 + _tmp1418 * _tmp1561 +
                          _tmp1419 + _tmp1487 * _tmp1563 - _tmp1563 * _tmp1564 + _tmp1565 +
                          _tmp1566 * _tmp251 - _tmp1567 * _tmp251;
  const Scalar _tmp1570 = _tmp1492 * _tmp274;
  const Scalar _tmp1571 = _tmp1268 * _tmp1568;
  const Scalar _tmp1572 = -_tmp1042 * _tmp1566 + _tmp1042 * _tmp1567 + _tmp1272 * _tmp1563 +
                          _tmp1286 * _tmp1563 - _tmp1289 * _tmp1562 - _tmp1292 * _tmp1563 +
                          _tmp1295 * _tmp1561 + _tmp1300 * _tmp1562 - _tmp1304 * _tmp1561 -
                          _tmp1422 * _tmp1563 + _tmp1423 - _tmp1481 * _tmp1563 + _tmp1529 +
                          _tmp1563 * _tmp1570 - _tmp1571 * _tmp85;
  const Scalar _tmp1573 = -_tmp1189 * _tmp1567 + _tmp1337 * _tmp1561 + _tmp1339 * _tmp1563 +
                          _tmp1340 * _tmp1561 - _tmp1341 * _tmp1562 - _tmp1343 * _tmp1563 -
                          _tmp1344 * _tmp1563 + _tmp1345 * _tmp1563 - _tmp1347 * _tmp1562 +
                          _tmp1348 * _tmp1562 - _tmp1398 * _tmp1563 + _tmp1399 * _tmp1563 +
                          _tmp1411 + _tmp1520 - _tmp1571 * _tmp95;
  const Scalar _tmp1574 = _tmp1013 * _tmp1566 - _tmp1013 * _tmp1567 - _tmp1320 * _tmp1563 * _tmp95 -
                          _tmp1321 * _tmp1561 + _tmp1322 * _tmp1562 - _tmp1325 * _tmp1563 -
                          _tmp1326 * _tmp1568 + _tmp1328 * _tmp1563 + _tmp1428 -
                          _tmp1490 * _tmp1563 + _tmp1491 * _tmp1563 + _tmp1532 * _tmp1563 +
                          _tmp1535 + _tmp1566 * _tmp286 - _tmp1567 * _tmp286;
  const Scalar _tmp1575 =
      -_tmp1569 * _tmp284 + _tmp1572 * _tmp288 + _tmp1573 * _tmp272 + _tmp1574 * _tmp358;
  const Scalar _tmp1576 =
      _tmp1569 * _tmp288 + _tmp1572 * _tmp284 - _tmp1573 * _tmp358 + _tmp1574 * _tmp272;
  const Scalar _tmp1577 =
      -_tmp1569 * _tmp272 - _tmp1572 * _tmp358 - _tmp1573 * _tmp284 + _tmp1574 * _tmp288;
  const Scalar _tmp1578 =
      _tmp1569 * _tmp358 - _tmp1572 * _tmp272 + _tmp1573 * _tmp288 + _tmp1574 * _tmp284;
  const Scalar _tmp1579 =
      -_tmp1575 * _tmp399 + _tmp1576 * _tmp400 + _tmp1577 * _tmp398 + _tmp1578 * _tmp351;
  const Scalar _tmp1580 =
      -_tmp1575 * _tmp400 - _tmp1576 * _tmp399 + _tmp1577 * _tmp351 - _tmp1578 * _tmp398;
  const Scalar _tmp1581 =
      _tmp1575 * _tmp398 + _tmp1576 * _tmp351 + _tmp1577 * _tmp399 - _tmp1578 * _tmp400;
  const Scalar _tmp1582 =
      _tmp1575 * _tmp351 - _tmp1576 * _tmp398 + _tmp1577 * _tmp400 + _tmp1578 * _tmp399;
  const Scalar _tmp1583 =
      _tmp1579 * _x0[3] + _tmp1580 * _x0[1] + _tmp1581 * _x0[2] - _tmp1582 * _x0[0];
  const Scalar _tmp1584 =
      -_tmp1579 * _x0[2] + _tmp1580 * _x0[0] + _tmp1581 * _x0[3] + _tmp1582 * _x0[1];
  const Scalar _tmp1585 =
      -_tmp1579 * _x0[1] + _tmp1580 * _x0[3] - _tmp1581 * _x0[0] - _tmp1582 * _x0[2];
  const Scalar _tmp1586 =
      _tmp1579 * _x0[0] + _tmp1580 * _x0[2] - _tmp1581 * _x0[1] + _tmp1582 * _x0[3];
  const Scalar _tmp1587 =
      -_tmp1583 * _y[1] - _tmp1584 * _y[0] - _tmp1585 * _y[3] - _tmp1586 * _y[2];
  const Scalar _tmp1588 = _tmp1587 * _tmp511;
  const Scalar _tmp1589 = _tmp1587 * _tmp526;
  const Scalar _tmp1590 =
      _tmp521 * (_tmp1583 * _y[2] + _tmp1584 * _y[3] - _tmp1585 * _y[0] - _tmp1586 * _y[1]);
  const Scalar _tmp1591 = _tmp1590 * _tmp519;
  const Scalar _tmp1592 = _tmp1587 * _tmp531;
  const Scalar _tmp1593 = _tmp1588 * _tmp516;
  const Scalar _tmp1594 =
      -_tmp1583 * _y[0] + _tmp1584 * _y[1] - _tmp1585 * _y[2] + _tmp1586 * _y[3];
  const Scalar _tmp1595 = _tmp1594 * _tmp522;
  const Scalar _tmp1596 =
      _tmp522 * (_tmp1583 * _y[3] - _tmp1584 * _y[2] - _tmp1585 * _y[1] + _tmp1586 * _y[0]);
  const Scalar _tmp1597 = _tmp1587 * _tmp597;
  const Scalar _tmp1598 = _tmp1244 * _tmp1395;
  const Scalar _tmp1599 = _tmp1238 * _tmp1395;
  const Scalar _tmp1600 = _tmp1296 * _tmp1599;
  const Scalar _tmp1601 = _tmp1241 * _tmp1599 + _tmp1242 * _tmp1599 + _tmp1246 * _tmp1599 +
                          _tmp1265 * _tmp1519 + _tmp1464 - _tmp1598 * _tmp27 - _tmp1598 * _tmp38 -
                          _tmp1598 * _tmp44;
  const Scalar _tmp1602 = _tmp1301 * _tmp1598;
  const Scalar _tmp1603 = _tmp1601 * _tmp248;
  const Scalar _tmp1604 = -_tmp1324 * _tmp1603 + _tmp1331 * _tmp1603 - _tmp1351 * _tmp1601 +
                          _tmp1353 * _tmp1598 - _tmp1355 * _tmp1599 - _tmp1356 * _tmp1601 +
                          _tmp1357 * _tmp1601 + _tmp1418 * _tmp1598 + _tmp1487 * _tmp1601 +
                          _tmp1488 + _tmp1534 - _tmp1564 * _tmp1601 - _tmp1600 * _tmp249 +
                          _tmp1600 * _tmp251 - _tmp1602 * _tmp251;
  const Scalar _tmp1605 = _tmp1303 * _tmp1598;
  const Scalar _tmp1606 = _tmp1013 * _tmp1600 - _tmp1013 * _tmp1602 + _tmp1322 * _tmp1599 -
                          _tmp1325 * _tmp1601 - _tmp1327 * _tmp1601 + _tmp1328 * _tmp1601 +
                          _tmp1358 * _tmp1603 - _tmp1490 * _tmp1601 + _tmp1491 * _tmp1601 -
                          _tmp1492 * _tmp1603 + _tmp1493 + _tmp1565 + _tmp1600 * _tmp286 -
                          _tmp1602 * _tmp286 - _tmp1605 * _tmp274;
  const Scalar _tmp1607 = _tmp1189 * _tmp1600 - _tmp1189 * _tmp1602 - _tmp1338 * _tmp1601 +
                          _tmp1339 * _tmp1601 + _tmp1340 * _tmp1598 - _tmp1341 * _tmp1599 -
                          _tmp1343 * _tmp1601 - _tmp1344 * _tmp1601 + _tmp1345 * _tmp1601 -
                          _tmp1347 * _tmp1599 - _tmp1398 * _tmp1601 + _tmp1399 * _tmp1601 +
                          _tmp1471 + _tmp1530 + _tmp1605 * _tmp250;
  const Scalar _tmp1608 = -_tmp1042 * _tmp1600 + _tmp1042 * _tmp1602 + _tmp1271 * _tmp1603 -
                          _tmp1283 * _tmp1601 + _tmp1286 * _tmp1601 - _tmp1289 * _tmp1599 -
                          _tmp1291 * _tmp1603 + _tmp1295 * _tmp1598 + _tmp1300 * _tmp1599 -
                          _tmp1422 * _tmp1601 - _tmp1481 * _tmp1601 + _tmp1483 + _tmp1520 +
                          _tmp1570 * _tmp1601 - _tmp1605 * _tmp248;
  const Scalar _tmp1609 =
      _tmp1604 * _tmp288 + _tmp1606 * _tmp272 - _tmp1607 * _tmp358 + _tmp1608 * _tmp284;
  const Scalar _tmp1610 =
      -_tmp1604 * _tmp284 + _tmp1606 * _tmp358 + _tmp1607 * _tmp272 + _tmp1608 * _tmp288;
  const Scalar _tmp1611 =
      -_tmp1604 * _tmp272 + _tmp1606 * _tmp288 - _tmp1607 * _tmp284 - _tmp1608 * _tmp358;
  const Scalar _tmp1612 =
      _tmp1604 * _tmp358 + _tmp1606 * _tmp284 + _tmp1607 * _tmp288 - _tmp1608 * _tmp272;
  const Scalar _tmp1613 =
      _tmp1609 * _tmp351 + _tmp1610 * _tmp398 + _tmp1611 * _tmp399 - _tmp1612 * _tmp400;
  const Scalar _tmp1614 =
      -_tmp1609 * _tmp399 - _tmp1610 * _tmp400 + _tmp1611 * _tmp351 - _tmp1612 * _tmp398;
  const Scalar _tmp1615 =
      -_tmp1609 * _tmp398 + _tmp1610 * _tmp351 + _tmp1611 * _tmp400 + _tmp1612 * _tmp399;
  const Scalar _tmp1616 =
      _tmp1609 * _tmp400 - _tmp1610 * _tmp399 + _tmp1611 * _tmp398 + _tmp1612 * _tmp351;
  const Scalar _tmp1617 =
      _tmp1613 * _x0[2] + _tmp1614 * _x0[1] - _tmp1615 * _x0[0] + _tmp1616 * _x0[3];
  const Scalar _tmp1618 =
      -_tmp1613 * _x0[1] + _tmp1614 * _x0[2] + _tmp1615 * _x0[3] + _tmp1616 * _x0[0];
  const Scalar _tmp1619 =
      -_tmp1613 * _x0[0] + _tmp1614 * _x0[3] - _tmp1615 * _x0[2] - _tmp1616 * _x0[1];
  const Scalar _tmp1620 =
      _tmp1613 * _x0[3] + _tmp1614 * _x0[0] + _tmp1615 * _x0[1] - _tmp1616 * _x0[2];
  const Scalar _tmp1621 =
      -_tmp1617 * _y[1] - _tmp1618 * _y[2] - _tmp1619 * _y[3] - _tmp1620 * _y[0];
  const Scalar _tmp1622 = _tmp1621 * _tmp511;
  const Scalar _tmp1623 = _tmp1617 * _y[2] - _tmp1618 * _y[1] - _tmp1619 * _y[0] + _tmp1620 * _y[3];
  const Scalar _tmp1624 = _tmp1623 * _tmp522;
  const Scalar _tmp1625 =
      _tmp522 * (_tmp1617 * _y[3] + _tmp1618 * _y[0] - _tmp1619 * _y[1] - _tmp1620 * _y[2]);
  const Scalar _tmp1626 = _tmp1621 * _tmp526;
  const Scalar _tmp1627 =
      -_tmp1617 * _y[0] + _tmp1618 * _y[3] - _tmp1619 * _y[2] + _tmp1620 * _y[1];
  const Scalar _tmp1628 = _tmp1627 * _tmp522;
  const Scalar _tmp1629 = _tmp1621 * _tmp531;
  const Scalar _tmp1630 = _tmp1622 * _tmp528;
  const Scalar _tmp1631 = _tmp1626 * _tmp524;

  // Output terms (6)
  Eigen::Matrix<Scalar, 6, 1> _res;

  _res(0, 0) = _tmp197 * sqrt_info(0, 0) + _tmp198 * sqrt_info(0, 2) + _tmp199 * sqrt_info(0, 3) +
               _tmp200 * sqrt_info(0, 1) + _tmp201 * sqrt_info(0, 4) + _tmp202 * sqrt_info(0, 5);
  _res(1, 0) = _tmp197 * sqrt_info(1, 0) + _tmp198 * sqrt_info(1, 2) + _tmp199 * sqrt_info(1, 3) +
               _tmp200 * sqrt_info(1, 1) + _tmp201 * sqrt_info(1, 4) + _tmp202 * sqrt_info(1, 5);
  _res(2, 0) = _tmp197 * sqrt_info(2, 0) + _tmp198 * sqrt_info(2, 2) + _tmp199 * sqrt_info(2, 3) +
               _tmp200 * sqrt_info(2, 1) + _tmp201 * sqrt_info(2, 4) + _tmp202 * sqrt_info(2, 5);
  _res(3, 0) = _tmp197 * sqrt_info(3, 0) + _tmp198 * sqrt_info(3, 2) + _tmp199 * sqrt_info(3, 3) +
               _tmp200 * sqrt_info(3, 1) + _tmp201 * sqrt_info(3, 4) + _tmp202 * sqrt_info(3, 5);
  _res(4, 0) = _tmp197 * sqrt_info(4, 0) + _tmp198 * sqrt_info(4, 2) + _tmp199 * sqrt_info(4, 3) +
               _tmp200 * sqrt_info(4, 1) + _tmp201 * sqrt_info(4, 4) + _tmp202 * sqrt_info(4, 5);
  _res(5, 0) = _tmp197 * sqrt_info(5, 0) + _tmp198 * sqrt_info(5, 2) + _tmp199 * sqrt_info(5, 3) +
               _tmp200 * sqrt_info(5, 1) + _tmp201 * sqrt_info(5, 4) + _tmp202 * sqrt_info(5, 5);

  if (res_D_x0 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x0{res_D_x0};

    _res_D_x0(0, 0) = -_tmp512 * _tmp517 - _tmp512 * _tmp529 + _tmp517 * _tmp527 +
                      _tmp523 * sqrt_info(0, 2) + _tmp525 * _tmp527 + _tmp527 * _tmp529 +
                      _tmp530 * sqrt_info(0, 1) - _tmp532 * sqrt_info(0, 0) +
                      _tmp534 * sqrt_info(0, 0);
    _res_D_x0(1, 0) = -_tmp512 * _tmp535 + _tmp518 * _tmp536 + _tmp527 * _tmp535 +
                      _tmp527 * _tmp537 + _tmp527 * _tmp538 + _tmp530 * sqrt_info(1, 1) -
                      _tmp532 * sqrt_info(1, 0) + _tmp534 * sqrt_info(1, 0) -
                      _tmp539 * sqrt_info(1, 1);
    _res_D_x0(2, 0) = -_tmp512 * _tmp540 - _tmp512 * _tmp542 + _tmp523 * sqrt_info(2, 2) +
                      _tmp527 * _tmp540 + _tmp527 * _tmp541 + _tmp527 * _tmp542 +
                      _tmp530 * sqrt_info(2, 1) - _tmp532 * sqrt_info(2, 0) + _tmp533 * _tmp543;
    _res_D_x0(3, 0) = -_tmp497 * _tmp547 - _tmp512 * _tmp544 - _tmp512 * _tmp546 +
                      _tmp523 * sqrt_info(3, 2) + _tmp527 * _tmp544 + _tmp527 * _tmp545 +
                      _tmp527 * _tmp546 + _tmp530 * sqrt_info(3, 1) + _tmp533 * _tmp548;
    _res_D_x0(4, 0) = _tmp497 * _tmp552 - _tmp512 * _tmp549 - _tmp512 * _tmp550 +
                      _tmp523 * sqrt_info(4, 2) + _tmp527 * _tmp550 + _tmp527 * _tmp551 +
                      _tmp530 * sqrt_info(4, 1) + _tmp533 * _tmp554 - _tmp539 * sqrt_info(4, 1);
    _res_D_x0(5, 0) = -_tmp512 * _tmp555 + _tmp523 * sqrt_info(5, 2) + _tmp527 * _tmp555 +
                      _tmp527 * _tmp556 + _tmp527 * _tmp557 + _tmp530 * sqrt_info(5, 1) -
                      _tmp532 * sqrt_info(5, 0) + _tmp534 * sqrt_info(5, 0) -
                      _tmp539 * sqrt_info(5, 1);
    _res_D_x0(0, 1) = -_tmp517 * _tmp591 + _tmp517 * _tmp594 + _tmp525 * _tmp594 -
                      _tmp529 * _tmp591 + _tmp529 * _tmp594 + _tmp589 * sqrt_info(0, 2) +
                      _tmp593 * sqrt_info(0, 0) + _tmp595 * sqrt_info(0, 1) -
                      _tmp596 * sqrt_info(0, 0);
    _res_D_x0(1, 1) = -_tmp535 * _tmp591 + _tmp535 * _tmp594 + _tmp536 * _tmp588 +
                      _tmp537 * _tmp594 + _tmp538 * _tmp594 + _tmp593 * sqrt_info(1, 0) +
                      _tmp595 * sqrt_info(1, 1) - _tmp596 * sqrt_info(1, 0) -
                      _tmp598 * sqrt_info(1, 1);
    _res_D_x0(2, 1) = -_tmp540 * _tmp591 + _tmp540 * _tmp594 + _tmp541 * _tmp594 -
                      _tmp542 * _tmp591 + _tmp542 * _tmp594 + _tmp543 * _tmp592 +
                      _tmp588 * _tmp599 + _tmp595 * sqrt_info(2, 1) - _tmp596 * sqrt_info(2, 0);
    _res_D_x0(3, 1) = -_tmp544 * _tmp591 + _tmp544 * _tmp594 + _tmp545 * _tmp594 -
                      _tmp546 * _tmp591 + _tmp546 * _tmp594 - _tmp547 * _tmp590 +
                      _tmp589 * sqrt_info(3, 2) + _tmp593 * sqrt_info(3, 0) +
                      _tmp595 * sqrt_info(3, 1);
    _res_D_x0(4, 1) = -_tmp549 * _tmp591 - _tmp550 * _tmp591 + _tmp550 * _tmp594 +
                      _tmp551 * _tmp594 + _tmp552 * _tmp590 + _tmp554 * _tmp592 +
                      _tmp589 * sqrt_info(4, 2) - _tmp590 * _tmp600 + _tmp595 * sqrt_info(4, 1);
    _res_D_x0(5, 1) = -_tmp555 * _tmp591 + _tmp555 * _tmp594 + _tmp556 * _tmp594 +
                      _tmp557 * _tmp594 + _tmp589 * sqrt_info(5, 2) + _tmp593 * sqrt_info(5, 0) +
                      _tmp595 * sqrt_info(5, 1) - _tmp596 * sqrt_info(5, 0) -
                      _tmp598 * sqrt_info(5, 1);
    _res_D_x0(0, 2) = _tmp517 * _tmp625 + _tmp525 * _tmp625 + _tmp529 * _tmp625 -
                      _tmp529 * _tmp628 - _tmp624 * _tmp630 + _tmp627 * sqrt_info(0, 0) +
                      _tmp629 * sqrt_info(0, 1) + _tmp632 * sqrt_info(0, 2) -
                      _tmp633 * sqrt_info(0, 0);
    _res_D_x0(1, 2) = _tmp535 * _tmp625 - _tmp535 * _tmp628 + _tmp536 * _tmp631 +
                      _tmp537 * _tmp625 + _tmp538 * _tmp625 + _tmp627 * sqrt_info(1, 0) +
                      _tmp629 * sqrt_info(1, 1) - _tmp633 * sqrt_info(1, 0) -
                      _tmp634 * sqrt_info(1, 1);
    _res_D_x0(2, 2) = _tmp540 * _tmp625 - _tmp540 * _tmp628 + _tmp541 * _tmp625 +
                      _tmp542 * _tmp625 - _tmp542 * _tmp628 + _tmp543 * _tmp626 +
                      _tmp599 * _tmp631 + _tmp629 * sqrt_info(2, 1) - _tmp633 * sqrt_info(2, 0);
    _res_D_x0(3, 2) = _tmp544 * _tmp625 - _tmp544 * _tmp628 + _tmp545 * _tmp625 +
                      _tmp546 * _tmp625 - _tmp546 * _tmp628 - _tmp547 * _tmp624 +
                      _tmp548 * _tmp626 + _tmp629 * sqrt_info(3, 1) + _tmp632 * sqrt_info(3, 2);
    _res_D_x0(4, 2) = -_tmp549 * _tmp628 + _tmp550 * _tmp625 + _tmp551 * _tmp625 +
                      _tmp552 * _tmp624 + _tmp554 * _tmp626 - _tmp600 * _tmp624 -
                      _tmp624 * _tmp635 + _tmp629 * sqrt_info(4, 1) + _tmp632 * sqrt_info(4, 2);
    _res_D_x0(5, 2) = _tmp555 * _tmp625 - _tmp555 * _tmp628 + _tmp556 * _tmp625 +
                      _tmp557 * _tmp625 + _tmp627 * sqrt_info(5, 0) + _tmp629 * sqrt_info(5, 1) +
                      _tmp632 * sqrt_info(5, 2) - _tmp633 * sqrt_info(5, 0) -
                      _tmp634 * sqrt_info(5, 1);
    _res_D_x0(0, 3) = _tmp636 * sqrt_info(0, 3);
    _res_D_x0(1, 3) = _tmp636 * sqrt_info(1, 3);
    _res_D_x0(2, 3) = _tmp636 * sqrt_info(2, 3);
    _res_D_x0(3, 3) = _tmp636 * sqrt_info(3, 3);
    _res_D_x0(4, 3) = _tmp636 * sqrt_info(4, 3);
    _res_D_x0(5, 3) = _tmp636 * sqrt_info(5, 3);
    _res_D_x0(0, 4) = _tmp636 * sqrt_info(0, 4);
    _res_D_x0(1, 4) = _tmp636 * sqrt_info(1, 4);
    _res_D_x0(2, 4) = _tmp636 * sqrt_info(2, 4);
    _res_D_x0(3, 4) = _tmp636 * sqrt_info(3, 4);
    _res_D_x0(4, 4) = _tmp636 * sqrt_info(4, 4);
    _res_D_x0(5, 4) = _tmp636 * sqrt_info(5, 4);
    _res_D_x0(0, 5) = _tmp636 * sqrt_info(0, 5);
    _res_D_x0(1, 5) = _tmp636 * sqrt_info(1, 5);
    _res_D_x0(2, 5) = _tmp636 * sqrt_info(2, 5);
    _res_D_x0(3, 5) = _tmp636 * sqrt_info(3, 5);
    _res_D_x0(4, 5) = _tmp636 * sqrt_info(4, 5);
    _res_D_x0(5, 5) = _tmp636 * sqrt_info(5, 5);
  }

  if (res_D_x1 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x1{res_D_x1};

    _res_D_x1(0, 0) = -_tmp517 * _tmp788 + _tmp517 * _tmp789 - _tmp529 * _tmp788 +
                      _tmp529 * _tmp789 + _tmp786 * sqrt_info(0, 0) - _tmp790 * sqrt_info(0, 0) +
                      _tmp792 * sqrt_info(0, 1) + _tmp794 * sqrt_info(0, 2) +
                      _tmp795 * sqrt_info(0, 0);
    _res_D_x1(1, 0) = _tmp535 * _tmp789 + _tmp536 * _tmp793 + _tmp538 * _tmp789 +
                      _tmp786 * sqrt_info(1, 0) - _tmp790 * sqrt_info(1, 0) + _tmp791 * _tmp798 +
                      _tmp795 * sqrt_info(1, 0) - _tmp796 * sqrt_info(1, 2) -
                      _tmp797 * sqrt_info(1, 1);
    _res_D_x1(2, 0) = _tmp540 * _tmp789 + _tmp541 * _tmp789 + _tmp542 * _tmp789 +
                      _tmp543 * _tmp785 - _tmp790 * sqrt_info(2, 0) + _tmp792 * sqrt_info(2, 1) +
                      _tmp794 * sqrt_info(2, 2) - _tmp796 * sqrt_info(2, 2) -
                      _tmp797 * sqrt_info(2, 1);
    _res_D_x1(3, 0) = -_tmp544 * _tmp788 + _tmp544 * _tmp789 + _tmp545 * _tmp789 -
                      _tmp546 * _tmp788 + _tmp546 * _tmp789 + _tmp786 * sqrt_info(3, 0) -
                      _tmp790 * sqrt_info(3, 0) + _tmp791 * _tmp799 + _tmp794 * sqrt_info(3, 2);
    _res_D_x1(4, 0) = -_tmp549 * _tmp788 - _tmp550 * _tmp788 + _tmp550 * _tmp789 +
                      _tmp551 * _tmp789 + _tmp552 * _tmp787 + _tmp554 * _tmp785 +
                      _tmp792 * sqrt_info(4, 1) + _tmp794 * sqrt_info(4, 2) -
                      _tmp797 * sqrt_info(4, 1);
    _res_D_x1(5, 0) = -_tmp555 * _tmp788 + _tmp555 * _tmp789 + _tmp557 * _tmp789 +
                      _tmp786 * sqrt_info(5, 0) - _tmp790 * sqrt_info(5, 0) +
                      _tmp792 * sqrt_info(5, 1) + _tmp794 * sqrt_info(5, 2) +
                      _tmp795 * sqrt_info(5, 0) - _tmp797 * sqrt_info(5, 1);
    _res_D_x1(0, 1) = _tmp517 * _tmp854 + _tmp529 * _tmp854 - _tmp529 * _tmp858 -
                      _tmp630 * _tmp848 + _tmp850 * sqrt_info(0, 0) + _tmp852 * sqrt_info(0, 2) -
                      _tmp853 * sqrt_info(0, 0) + _tmp856 * sqrt_info(0, 1) +
                      _tmp857 * sqrt_info(0, 0);
    _res_D_x1(1, 1) = _tmp535 * _tmp854 - _tmp535 * _tmp858 + _tmp536 * _tmp851 +
                      _tmp538 * _tmp854 + _tmp798 * _tmp855 + _tmp850 * sqrt_info(1, 0) -
                      _tmp853 * sqrt_info(1, 0) + _tmp857 * sqrt_info(1, 0) -
                      _tmp859 * sqrt_info(1, 1);
    _res_D_x1(2, 1) = _tmp540 * _tmp854 - _tmp540 * _tmp858 + _tmp542 * _tmp854 -
                      _tmp542 * _tmp858 + _tmp543 * _tmp849 + _tmp852 * sqrt_info(2, 2) -
                      _tmp853 * sqrt_info(2, 0) + _tmp856 * sqrt_info(2, 1) +
                      _tmp857 * sqrt_info(2, 0);
    _res_D_x1(3, 1) = _tmp544 * _tmp854 - _tmp544 * _tmp858 + _tmp545 * _tmp854 +
                      _tmp546 * _tmp854 - _tmp546 * _tmp858 - _tmp547 * _tmp848 +
                      _tmp548 * _tmp849 + _tmp799 * _tmp855 + _tmp852 * sqrt_info(3, 2);
    _res_D_x1(4, 1) = -_tmp549 * _tmp858 + _tmp550 * _tmp854 + _tmp551 * _tmp854 +
                      _tmp552 * _tmp848 + _tmp554 * _tmp849 - _tmp600 * _tmp848 -
                      _tmp635 * _tmp848 + _tmp852 * sqrt_info(4, 2) + _tmp856 * sqrt_info(4, 1);
    _res_D_x1(5, 1) = _tmp555 * _tmp854 - _tmp555 * _tmp858 + _tmp557 * _tmp854 +
                      _tmp850 * sqrt_info(5, 0) + _tmp852 * sqrt_info(5, 2) -
                      _tmp853 * sqrt_info(5, 0) + _tmp856 * sqrt_info(5, 1) +
                      _tmp857 * sqrt_info(5, 0) - _tmp859 * sqrt_info(5, 1);
    _res_D_x1(0, 2) = -_tmp517 * _tmp912 + _tmp517 * _tmp913 + _tmp525 * _tmp913 -
                      _tmp529 * _tmp912 + _tmp529 * _tmp913 + _tmp910 * sqrt_info(0, 2) +
                      _tmp914 * sqrt_info(0, 1) - _tmp915 * sqrt_info(0, 0) +
                      _tmp917 * sqrt_info(0, 0);
    _res_D_x1(1, 2) = -_tmp535 * _tmp912 + _tmp535 * _tmp913 + _tmp536 * _tmp909 +
                      _tmp537 * _tmp913 + _tmp538 * _tmp913 + _tmp914 * sqrt_info(1, 1) -
                      _tmp915 * sqrt_info(1, 0) + _tmp917 * sqrt_info(1, 0) -
                      _tmp918 * sqrt_info(1, 1);
    _res_D_x1(2, 2) = -_tmp540 * _tmp912 + _tmp540 * _tmp913 + _tmp541 * _tmp913 -
                      _tmp542 * _tmp912 + _tmp542 * _tmp913 + _tmp543 * _tmp916 +
                      _tmp599 * _tmp909 + _tmp914 * sqrt_info(2, 1) - _tmp915 * sqrt_info(2, 0);
    _res_D_x1(3, 2) = -_tmp544 * _tmp912 + _tmp544 * _tmp913 + _tmp545 * _tmp913 -
                      _tmp546 * _tmp912 + _tmp546 * _tmp913 + _tmp548 * _tmp916 +
                      _tmp910 * sqrt_info(3, 2) + _tmp914 * sqrt_info(3, 1) -
                      _tmp915 * sqrt_info(3, 0);
    _res_D_x1(4, 2) = -_tmp549 * _tmp912 - _tmp550 * _tmp912 + _tmp550 * _tmp913 -
                      _tmp551 * _tmp912 + _tmp551 * _tmp913 + _tmp552 * _tmp911 +
                      _tmp554 * _tmp916 + _tmp910 * sqrt_info(4, 2) + _tmp914 * sqrt_info(4, 1);
    _res_D_x1(5, 2) = -_tmp555 * _tmp912 + _tmp555 * _tmp913 + _tmp556 * _tmp913 +
                      _tmp557 * _tmp913 + _tmp910 * sqrt_info(5, 2) + _tmp914 * sqrt_info(5, 1) -
                      _tmp915 * sqrt_info(5, 0) + _tmp917 * sqrt_info(5, 0) -
                      _tmp918 * sqrt_info(5, 1);
    _res_D_x1(0, 3) = _tmp919 * sqrt_info(0, 3);
    _res_D_x1(1, 3) = _tmp919 * sqrt_info(1, 3);
    _res_D_x1(2, 3) = _tmp919 * sqrt_info(2, 3);
    _res_D_x1(3, 3) = _tmp919 * sqrt_info(3, 3);
    _res_D_x1(4, 3) = _tmp919 * sqrt_info(4, 3);
    _res_D_x1(5, 3) = _tmp919 * sqrt_info(5, 3);
    _res_D_x1(0, 4) = _tmp919 * sqrt_info(0, 4);
    _res_D_x1(1, 4) = _tmp919 * sqrt_info(1, 4);
    _res_D_x1(2, 4) = _tmp919 * sqrt_info(2, 4);
    _res_D_x1(3, 4) = _tmp919 * sqrt_info(3, 4);
    _res_D_x1(4, 4) = _tmp919 * sqrt_info(4, 4);
    _res_D_x1(5, 4) = _tmp919 * sqrt_info(5, 4);
    _res_D_x1(0, 5) = _tmp919 * sqrt_info(0, 5);
    _res_D_x1(1, 5) = _tmp919 * sqrt_info(1, 5);
    _res_D_x1(2, 5) = _tmp919 * sqrt_info(2, 5);
    _res_D_x1(3, 5) = _tmp919 * sqrt_info(3, 5);
    _res_D_x1(4, 5) = _tmp919 * sqrt_info(4, 5);
    _res_D_x1(5, 5) = _tmp919 * sqrt_info(5, 5);
  }

  if (res_D_x2 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x2{res_D_x2};

    _res_D_x2(0, 0) = _tmp1095 * sqrt_info(0, 0) + _tmp1096 * sqrt_info(0, 1) + _tmp1100 * _tmp517 +
                      _tmp1100 * _tmp529 - _tmp1102 * _tmp517 - _tmp1102 * _tmp529 +
                      _tmp1103 * sqrt_info(0, 2) - _tmp1104 * sqrt_info(0, 0) +
                      _tmp1105 * sqrt_info(0, 0);
    _res_D_x2(1, 0) = _tmp1095 * sqrt_info(1, 0) + _tmp1096 * sqrt_info(1, 1) + _tmp1100 * _tmp535 +
                      _tmp1100 * _tmp538 - _tmp1102 * _tmp535 + _tmp1103 * sqrt_info(1, 2) -
                      _tmp1104 * sqrt_info(1, 0) + _tmp1105 * sqrt_info(1, 0) -
                      _tmp1106 * sqrt_info(1, 1);
    _res_D_x2(2, 0) = _tmp1095 * sqrt_info(2, 0) + _tmp1096 * sqrt_info(2, 1) + _tmp1100 * _tmp540 +
                      _tmp1100 * _tmp542 - _tmp1102 * _tmp540 + _tmp1103 * sqrt_info(2, 2) -
                      _tmp1104 * sqrt_info(2, 0) + _tmp1105 * sqrt_info(2, 0) -
                      _tmp1106 * sqrt_info(2, 1);
    _res_D_x2(3, 0) = _tmp1095 * sqrt_info(3, 0) + _tmp1096 * sqrt_info(3, 1) + _tmp1100 * _tmp544 +
                      _tmp1100 * _tmp545 + _tmp1100 * _tmp546 - _tmp1102 * _tmp544 +
                      _tmp1103 * sqrt_info(3, 2) - _tmp1104 * sqrt_info(3, 0) -
                      _tmp1106 * sqrt_info(3, 1);
    _res_D_x2(4, 0) = _tmp1088 * _tmp1107 + _tmp1096 * sqrt_info(4, 1) + _tmp1100 * _tmp549 +
                      _tmp1100 * _tmp550 + _tmp1100 * _tmp551 - _tmp1102 * _tmp549 -
                      _tmp1102 * _tmp550 + _tmp1103 * sqrt_info(4, 2) - _tmp1106 * sqrt_info(4, 1);
    _res_D_x2(5, 0) = _tmp1095 * sqrt_info(5, 0) + _tmp1096 * sqrt_info(5, 1) + _tmp1100 * _tmp555 +
                      _tmp1100 * _tmp557 - _tmp1102 * _tmp555 + _tmp1103 * sqrt_info(5, 2) -
                      _tmp1104 * sqrt_info(5, 0) + _tmp1105 * sqrt_info(5, 0) -
                      _tmp1106 * sqrt_info(5, 1);
    _res_D_x2(0, 1) = _tmp1169 * _tmp517 + _tmp1169 * _tmp525 + _tmp1169 * _tmp529 -
                      _tmp1170 * _tmp517 - _tmp1170 * _tmp529 - _tmp1171 * sqrt_info(0, 0) +
                      _tmp1172 * sqrt_info(0, 1) + _tmp1173 * sqrt_info(0, 2) +
                      _tmp1175 * sqrt_info(0, 0);
    _res_D_x2(1, 1) = _tmp1169 * _tmp535 + _tmp1169 * _tmp537 + _tmp1169 * _tmp538 -
                      _tmp1171 * sqrt_info(1, 0) + _tmp1172 * sqrt_info(1, 1) +
                      _tmp1173 * sqrt_info(1, 2) + _tmp1175 * sqrt_info(1, 0) -
                      _tmp1176 * sqrt_info(1, 2) - _tmp1177 * sqrt_info(1, 1);
    _res_D_x2(2, 1) = _tmp1169 * _tmp540 + _tmp1169 * _tmp541 + _tmp1169 * _tmp542 -
                      _tmp1170 * _tmp542 - _tmp1171 * sqrt_info(2, 0) + _tmp1172 * sqrt_info(2, 1) +
                      _tmp1173 * sqrt_info(2, 2) + _tmp1175 * sqrt_info(2, 0) -
                      _tmp1176 * sqrt_info(2, 2);
    _res_D_x2(3, 1) = _tmp1169 * _tmp544 + _tmp1169 * _tmp545 + _tmp1169 * _tmp546 -
                      _tmp1170 * _tmp546 - _tmp1171 * sqrt_info(3, 0) + _tmp1172 * sqrt_info(3, 1) +
                      _tmp1173 * sqrt_info(3, 2) + _tmp1175 * sqrt_info(3, 0) -
                      _tmp1176 * sqrt_info(3, 2);
    _res_D_x2(4, 1) = _tmp1107 * _tmp1174 + _tmp1169 * _tmp549 + _tmp1169 * _tmp550 +
                      _tmp1169 * _tmp551 - _tmp1170 * _tmp549 - _tmp1170 * _tmp550 -
                      _tmp1170 * _tmp551 + _tmp1172 * sqrt_info(4, 1) + _tmp1173 * sqrt_info(4, 2);
    _res_D_x2(5, 1) = _tmp1169 * _tmp555 + _tmp1169 * _tmp556 + _tmp1169 * _tmp557 -
                      _tmp1170 * _tmp555 - _tmp1171 * sqrt_info(5, 0) + _tmp1172 * sqrt_info(5, 1) +
                      _tmp1173 * sqrt_info(5, 2) + _tmp1175 * sqrt_info(5, 0) -
                      _tmp1177 * sqrt_info(5, 1);
    _res_D_x2(0, 2) = -_tmp1224 * _tmp517 - _tmp1224 * _tmp529 - _tmp1225 * sqrt_info(0, 0) +
                      _tmp1226 * _tmp517 + _tmp1226 * _tmp525 + _tmp1226 * _tmp529 +
                      _tmp1227 * sqrt_info(0, 1) + _tmp1229 * sqrt_info(0, 0) +
                      _tmp1230 * sqrt_info(0, 2);
    _res_D_x2(1, 2) = -_tmp1224 * _tmp535 - _tmp1225 * sqrt_info(1, 0) + _tmp1226 * _tmp535 +
                      _tmp1226 * _tmp537 + _tmp1226 * _tmp538 + _tmp1227 * sqrt_info(1, 1) +
                      _tmp1229 * sqrt_info(1, 0) + _tmp1230 * sqrt_info(1, 2) -
                      _tmp1231 * sqrt_info(1, 1);
    _res_D_x2(2, 2) = -_tmp1224 * _tmp540 - _tmp1224 * _tmp542 - _tmp1225 * sqrt_info(2, 0) +
                      _tmp1226 * _tmp540 + _tmp1226 * _tmp541 + _tmp1226 * _tmp542 +
                      _tmp1227 * sqrt_info(2, 1) + _tmp1229 * sqrt_info(2, 0) +
                      _tmp1230 * sqrt_info(2, 2);
    _res_D_x2(3, 2) = -_tmp1224 * _tmp544 - _tmp1224 * _tmp546 - _tmp1225 * sqrt_info(3, 0) +
                      _tmp1226 * _tmp544 + _tmp1226 * _tmp545 + _tmp1226 * _tmp546 +
                      _tmp1227 * sqrt_info(3, 1) + _tmp1229 * sqrt_info(3, 0) +
                      _tmp1230 * sqrt_info(3, 2);
    _res_D_x2(4, 2) = _tmp1107 * _tmp1228 - _tmp1224 * _tmp549 - _tmp1224 * _tmp550 -
                      _tmp1224 * _tmp551 + _tmp1226 * _tmp549 + _tmp1226 * _tmp550 +
                      _tmp1226 * _tmp551 + _tmp1227 * sqrt_info(4, 1) + _tmp1230 * sqrt_info(4, 2);
    _res_D_x2(5, 2) = -_tmp1224 * _tmp555 - _tmp1225 * sqrt_info(5, 0) + _tmp1226 * _tmp555 +
                      _tmp1226 * _tmp556 + _tmp1226 * _tmp557 + _tmp1227 * sqrt_info(5, 1) +
                      _tmp1229 * sqrt_info(5, 0) + _tmp1230 * sqrt_info(5, 2) -
                      _tmp1231 * sqrt_info(5, 1);
    _res_D_x2(0, 3) = _tmp1232 * sqrt_info(0, 3);
    _res_D_x2(1, 3) = _tmp1232 * sqrt_info(1, 3);
    _res_D_x2(2, 3) = _tmp1232 * sqrt_info(2, 3);
    _res_D_x2(3, 3) = _tmp1232 * sqrt_info(3, 3);
    _res_D_x2(4, 3) = _tmp1232 * sqrt_info(4, 3);
    _res_D_x2(5, 3) = _tmp1232 * sqrt_info(5, 3);
    _res_D_x2(0, 4) = _tmp1232 * sqrt_info(0, 4);
    _res_D_x2(1, 4) = _tmp1232 * sqrt_info(1, 4);
    _res_D_x2(2, 4) = _tmp1232 * sqrt_info(2, 4);
    _res_D_x2(3, 4) = _tmp1232 * sqrt_info(3, 4);
    _res_D_x2(4, 4) = _tmp1232 * sqrt_info(4, 4);
    _res_D_x2(5, 4) = _tmp1232 * sqrt_info(5, 4);
    _res_D_x2(0, 5) = _tmp1232 * sqrt_info(0, 5);
    _res_D_x2(1, 5) = _tmp1232 * sqrt_info(1, 5);
    _res_D_x2(2, 5) = _tmp1232 * sqrt_info(2, 5);
    _res_D_x2(3, 5) = _tmp1232 * sqrt_info(3, 5);
    _res_D_x2(4, 5) = _tmp1232 * sqrt_info(4, 5);
    _res_D_x2(5, 5) = _tmp1232 * sqrt_info(5, 5);
  }

  if (res_D_x3 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x3{res_D_x3};

    _res_D_x3(0, 0) = _tmp1376 * sqrt_info(0, 0) + _tmp1378 * _tmp517 + _tmp1378 * _tmp529 -
                      _tmp1379 * sqrt_info(0, 0) + _tmp1381 * sqrt_info(0, 2) +
                      _tmp1383 * sqrt_info(0, 1) - _tmp1384 * _tmp517 - _tmp1384 * _tmp529 +
                      _tmp1385 * sqrt_info(0, 0);
    _res_D_x3(1, 0) = _tmp1376 * sqrt_info(1, 0) + _tmp1378 * _tmp535 + _tmp1378 * _tmp538 -
                      _tmp1379 * sqrt_info(1, 0) + _tmp1380 * _tmp536 + _tmp1382 * _tmp798 -
                      _tmp1384 * _tmp535 + _tmp1385 * sqrt_info(1, 0) - _tmp1386 * sqrt_info(1, 1);
    _res_D_x3(2, 0) = _tmp1375 * _tmp543 + _tmp1378 * _tmp540 + _tmp1378 * _tmp541 +
                      _tmp1378 * _tmp542 - _tmp1379 * sqrt_info(2, 0) + _tmp1381 * sqrt_info(2, 2) +
                      _tmp1383 * sqrt_info(2, 1) - _tmp1384 * _tmp540 - _tmp1384 * _tmp542;
    _res_D_x3(3, 0) = _tmp1375 * _tmp548 - _tmp1377 * _tmp547 + _tmp1378 * _tmp544 +
                      _tmp1378 * _tmp545 + _tmp1378 * _tmp546 + _tmp1381 * sqrt_info(3, 2) +
                      _tmp1382 * _tmp799 - _tmp1384 * _tmp544 - _tmp1384 * _tmp546;
    _res_D_x3(4, 0) = _tmp1375 * _tmp554 + _tmp1377 * _tmp552 - _tmp1377 * _tmp600 +
                      _tmp1378 * _tmp550 + _tmp1378 * _tmp551 + _tmp1381 * sqrt_info(4, 2) +
                      _tmp1383 * sqrt_info(4, 1) - _tmp1384 * _tmp549 - _tmp1384 * _tmp550;
    _res_D_x3(5, 0) = _tmp1376 * sqrt_info(5, 0) + _tmp1378 * _tmp555 + _tmp1378 * _tmp557 -
                      _tmp1379 * sqrt_info(5, 0) + _tmp1381 * sqrt_info(5, 2) +
                      _tmp1383 * sqrt_info(5, 1) - _tmp1384 * _tmp555 + _tmp1385 * sqrt_info(5, 0) -
                      _tmp1386 * sqrt_info(5, 1);
    _res_D_x3(0, 1) = _tmp1443 * _tmp517 + _tmp1443 * _tmp525 + _tmp1443 * _tmp529 -
                      _tmp1444 * _tmp517 - _tmp1444 * _tmp529 + _tmp1446 * sqrt_info(0, 0) -
                      _tmp1447 * sqrt_info(0, 0) + _tmp1448 * sqrt_info(0, 1) +
                      _tmp1450 * sqrt_info(0, 2);
    _res_D_x3(1, 1) = _tmp1443 * _tmp535 + _tmp1443 * _tmp538 + _tmp1446 * sqrt_info(1, 0) -
                      _tmp1447 * sqrt_info(1, 0) + _tmp1448 * sqrt_info(1, 1) + _tmp1449 * _tmp536 -
                      _tmp1451 * sqrt_info(1, 1) - _tmp1452 * sqrt_info(1, 2) +
                      _tmp1453 * sqrt_info(1, 0);
    _res_D_x3(2, 1) = _tmp1443 * _tmp540 + _tmp1443 * _tmp541 + _tmp1443 * _tmp542 -
                      _tmp1444 * _tmp542 + _tmp1445 * _tmp543 - _tmp1447 * sqrt_info(2, 0) +
                      _tmp1448 * sqrt_info(2, 1) + _tmp1449 * _tmp599 - _tmp1452 * sqrt_info(2, 2);
    _res_D_x3(3, 1) = -_tmp1442 * _tmp547 + _tmp1443 * _tmp544 + _tmp1443 * _tmp545 +
                      _tmp1443 * _tmp546 - _tmp1444 * _tmp546 + _tmp1445 * _tmp548 +
                      _tmp1448 * sqrt_info(3, 1) + _tmp1450 * sqrt_info(3, 2) -
                      _tmp1452 * sqrt_info(3, 2);
    _res_D_x3(4, 1) = _tmp1442 * _tmp552 + _tmp1443 * _tmp550 + _tmp1443 * _tmp551 -
                      _tmp1444 * _tmp549 - _tmp1444 * _tmp550 + _tmp1445 * _tmp554 +
                      _tmp1448 * sqrt_info(4, 1) + _tmp1450 * sqrt_info(4, 2) -
                      _tmp1451 * sqrt_info(4, 1);
    _res_D_x3(5, 1) = _tmp1443 * _tmp555 + _tmp1443 * _tmp557 - _tmp1444 * _tmp555 +
                      _tmp1446 * sqrt_info(5, 0) - _tmp1447 * sqrt_info(5, 0) +
                      _tmp1448 * sqrt_info(5, 1) + _tmp1450 * sqrt_info(5, 2) -
                      _tmp1451 * sqrt_info(5, 1) + _tmp1453 * sqrt_info(5, 0);
    _res_D_x3(0, 2) = _tmp1508 * sqrt_info(0, 0) + _tmp1510 * _tmp517 + _tmp1510 * _tmp529 -
                      _tmp1511 * _tmp517 - _tmp1511 * _tmp529 + _tmp1512 * sqrt_info(0, 1) +
                      _tmp1514 * sqrt_info(0, 2) - _tmp1515 * sqrt_info(0, 0) +
                      _tmp1516 * sqrt_info(0, 0);
    _res_D_x3(1, 2) = _tmp1508 * sqrt_info(1, 0) + _tmp1510 * _tmp535 + _tmp1510 * _tmp538 -
                      _tmp1511 * _tmp535 + _tmp1512 * sqrt_info(1, 1) + _tmp1513 * _tmp536 -
                      _tmp1515 * sqrt_info(1, 0) + _tmp1516 * sqrt_info(1, 0) -
                      _tmp1517 * sqrt_info(1, 1);
    _res_D_x3(2, 2) = _tmp1507 * _tmp543 + _tmp1510 * _tmp540 + _tmp1510 * _tmp542 -
                      _tmp1511 * _tmp540 - _tmp1511 * _tmp542 + _tmp1512 * sqrt_info(2, 1) +
                      _tmp1514 * sqrt_info(2, 2) - _tmp1515 * sqrt_info(2, 0) +
                      _tmp1516 * sqrt_info(2, 0);
    _res_D_x3(3, 2) = _tmp1508 * sqrt_info(3, 0) - _tmp1509 * _tmp547 + _tmp1510 * _tmp544 +
                      _tmp1510 * _tmp545 + _tmp1510 * _tmp546 - _tmp1511 * _tmp544 -
                      _tmp1511 * _tmp546 + _tmp1512 * sqrt_info(3, 1) + _tmp1514 * sqrt_info(3, 2);
    _res_D_x3(4, 2) = _tmp1507 * _tmp554 + _tmp1509 * _tmp552 - _tmp1509 * _tmp600 +
                      _tmp1510 * _tmp550 + _tmp1510 * _tmp551 - _tmp1511 * _tmp549 -
                      _tmp1511 * _tmp550 + _tmp1512 * sqrt_info(4, 1) + _tmp1514 * sqrt_info(4, 2);
    _res_D_x3(5, 2) = _tmp1508 * sqrt_info(5, 0) + _tmp1510 * _tmp555 + _tmp1510 * _tmp557 -
                      _tmp1511 * _tmp555 + _tmp1512 * sqrt_info(5, 1) + _tmp1514 * sqrt_info(5, 2) -
                      _tmp1515 * sqrt_info(5, 0) + _tmp1516 * sqrt_info(5, 0) -
                      _tmp1517 * sqrt_info(5, 1);
    _res_D_x3(0, 3) = _tmp1518 * sqrt_info(0, 3);
    _res_D_x3(1, 3) = _tmp1518 * sqrt_info(1, 3);
    _res_D_x3(2, 3) = _tmp1518 * sqrt_info(2, 3);
    _res_D_x3(3, 3) = _tmp1518 * sqrt_info(3, 3);
    _res_D_x3(4, 3) = _tmp1518 * sqrt_info(4, 3);
    _res_D_x3(5, 3) = _tmp1518 * sqrt_info(5, 3);
    _res_D_x3(0, 4) = _tmp1518 * sqrt_info(0, 4);
    _res_D_x3(1, 4) = _tmp1518 * sqrt_info(1, 4);
    _res_D_x3(2, 4) = _tmp1518 * sqrt_info(2, 4);
    _res_D_x3(3, 4) = _tmp1518 * sqrt_info(3, 4);
    _res_D_x3(4, 4) = _tmp1518 * sqrt_info(4, 4);
    _res_D_x3(5, 4) = _tmp1518 * sqrt_info(5, 4);
    _res_D_x3(0, 5) = _tmp1518 * sqrt_info(0, 5);
    _res_D_x3(1, 5) = _tmp1518 * sqrt_info(1, 5);
    _res_D_x3(2, 5) = _tmp1518 * sqrt_info(2, 5);
    _res_D_x3(3, 5) = _tmp1518 * sqrt_info(3, 5);
    _res_D_x3(4, 5) = _tmp1518 * sqrt_info(4, 5);
    _res_D_x3(5, 5) = _tmp1518 * sqrt_info(5, 5);
  }

  if (res_D_x4 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x4{res_D_x4};

    _res_D_x4(0, 0) = -_tmp1551 * _tmp630 - _tmp1552 * sqrt_info(0, 0) + _tmp1553 * _tmp517 +
                      _tmp1553 * _tmp525 + _tmp1553 * _tmp529 + _tmp1555 * sqrt_info(0, 2) +
                      _tmp1557 * sqrt_info(0, 0) + _tmp1558 * sqrt_info(0, 1) - _tmp1559 * _tmp529;
    _res_D_x4(1, 0) = -_tmp1552 * sqrt_info(1, 0) + _tmp1553 * _tmp535 + _tmp1553 * _tmp537 +
                      _tmp1553 * _tmp538 + _tmp1554 * _tmp536 + _tmp1557 * sqrt_info(1, 0) +
                      _tmp1558 * sqrt_info(1, 1) - _tmp1559 * _tmp535 - _tmp1560 * sqrt_info(1, 1);
    _res_D_x4(2, 0) = -_tmp1552 * sqrt_info(2, 0) + _tmp1553 * _tmp540 + _tmp1553 * _tmp541 +
                      _tmp1553 * _tmp542 + _tmp1555 * sqrt_info(2, 2) + _tmp1556 * _tmp543 +
                      _tmp1558 * sqrt_info(2, 1) - _tmp1559 * _tmp540 - _tmp1559 * _tmp542;
    _res_D_x4(3, 0) = -_tmp1551 * _tmp547 + _tmp1553 * _tmp544 + _tmp1553 * _tmp545 +
                      _tmp1553 * _tmp546 + _tmp1555 * sqrt_info(3, 2) + _tmp1557 * sqrt_info(3, 0) +
                      _tmp1558 * sqrt_info(3, 1) - _tmp1559 * _tmp544 - _tmp1559 * _tmp546;
    _res_D_x4(4, 0) = _tmp1551 * _tmp552 - _tmp1551 * _tmp600 - _tmp1551 * _tmp635 +
                      _tmp1553 * _tmp550 + _tmp1553 * _tmp551 + _tmp1555 * sqrt_info(4, 2) +
                      _tmp1556 * _tmp554 + _tmp1558 * sqrt_info(4, 1) - _tmp1559 * _tmp549;
    _res_D_x4(5, 0) = -_tmp1552 * sqrt_info(5, 0) + _tmp1553 * _tmp555 + _tmp1553 * _tmp556 +
                      _tmp1553 * _tmp557 + _tmp1555 * sqrt_info(5, 2) + _tmp1557 * sqrt_info(5, 0) +
                      _tmp1558 * sqrt_info(5, 1) - _tmp1559 * _tmp555 - _tmp1560 * sqrt_info(5, 1);
    _res_D_x4(0, 1) = -_tmp1588 * _tmp529 + _tmp1589 * _tmp517 + _tmp1589 * _tmp525 +
                      _tmp1589 * _tmp529 + _tmp1591 * sqrt_info(0, 0) - _tmp1592 * sqrt_info(0, 0) -
                      _tmp1593 * sqrt_info(0, 2) + _tmp1595 * sqrt_info(0, 2) +
                      _tmp1596 * sqrt_info(0, 1);
    _res_D_x4(1, 1) = _tmp1589 * _tmp535 + _tmp1589 * _tmp537 + _tmp1589 * _tmp538 +
                      _tmp1591 * sqrt_info(1, 0) - _tmp1592 * sqrt_info(1, 0) -
                      _tmp1593 * sqrt_info(1, 2) + _tmp1594 * _tmp536 + _tmp1596 * sqrt_info(1, 1) -
                      _tmp1597 * sqrt_info(1, 1);
    _res_D_x4(2, 1) = -_tmp1588 * _tmp542 + _tmp1589 * _tmp540 + _tmp1589 * _tmp541 +
                      _tmp1589 * _tmp542 + _tmp1591 * sqrt_info(2, 0) - _tmp1592 * sqrt_info(2, 0) -
                      _tmp1593 * sqrt_info(2, 2) + _tmp1595 * sqrt_info(2, 2) +
                      _tmp1596 * sqrt_info(2, 1);
    _res_D_x4(3, 1) = -_tmp1587 * _tmp547 - _tmp1588 * _tmp546 + _tmp1589 * _tmp544 +
                      _tmp1589 * _tmp545 + _tmp1589 * _tmp546 + _tmp1591 * sqrt_info(3, 0) -
                      _tmp1593 * sqrt_info(3, 2) + _tmp1595 * sqrt_info(3, 2) +
                      _tmp1596 * sqrt_info(3, 1);
    _res_D_x4(4, 1) = _tmp1587 * _tmp552 - _tmp1587 * _tmp600 - _tmp1588 * _tmp549 -
                      _tmp1588 * _tmp550 + _tmp1589 * _tmp550 + _tmp1589 * _tmp551 +
                      _tmp1590 * _tmp553 + _tmp1595 * sqrt_info(4, 2) + _tmp1596 * sqrt_info(4, 1);
    _res_D_x4(5, 1) = -_tmp1588 * _tmp555 + _tmp1589 * _tmp555 + _tmp1589 * _tmp556 +
                      _tmp1589 * _tmp557 + _tmp1591 * sqrt_info(5, 0) - _tmp1592 * sqrt_info(5, 0) +
                      _tmp1595 * sqrt_info(5, 2) + _tmp1596 * sqrt_info(5, 1) -
                      _tmp1597 * sqrt_info(5, 1);
    _res_D_x4(0, 2) = -_tmp1622 * _tmp517 - _tmp1622 * _tmp529 + _tmp1624 * sqrt_info(0, 0) +
                      _tmp1625 * sqrt_info(0, 1) + _tmp1626 * _tmp517 + _tmp1626 * _tmp525 +
                      _tmp1626 * _tmp529 + _tmp1628 * sqrt_info(0, 2) - _tmp1629 * sqrt_info(0, 0);
    _res_D_x4(1, 2) = -_tmp1622 * _tmp535 + _tmp1624 * sqrt_info(1, 0) +
                      _tmp1625 * sqrt_info(1, 1) + _tmp1626 * _tmp535 + _tmp1626 * _tmp538 +
                      _tmp1627 * _tmp536 - _tmp1629 * sqrt_info(1, 0) - _tmp1630 * sqrt_info(1, 1) +
                      _tmp1631 * sqrt_info(1, 0);
    _res_D_x4(2, 2) = -_tmp1622 * _tmp540 - _tmp1622 * _tmp542 + _tmp1623 * _tmp543 +
                      _tmp1625 * sqrt_info(2, 1) + _tmp1626 * _tmp540 + _tmp1626 * _tmp541 +
                      _tmp1626 * _tmp542 + _tmp1627 * _tmp599 - _tmp1629 * sqrt_info(2, 0);
    _res_D_x4(3, 2) = -_tmp1621 * _tmp547 - _tmp1622 * _tmp544 - _tmp1622 * _tmp546 +
                      _tmp1623 * _tmp548 + _tmp1625 * sqrt_info(3, 1) + _tmp1626 * _tmp544 +
                      _tmp1626 * _tmp545 + _tmp1626 * _tmp546 + _tmp1628 * sqrt_info(3, 2);
    _res_D_x4(4, 2) = _tmp1621 * _tmp552 - _tmp1622 * _tmp549 - _tmp1622 * _tmp550 -
                      _tmp1622 * _tmp551 + _tmp1623 * _tmp554 + _tmp1625 * sqrt_info(4, 1) +
                      _tmp1626 * _tmp550 + _tmp1626 * _tmp551 + _tmp1628 * sqrt_info(4, 2);
    _res_D_x4(5, 2) = -_tmp1622 * _tmp555 + _tmp1624 * sqrt_info(5, 0) +
                      _tmp1625 * sqrt_info(5, 1) + _tmp1626 * _tmp555 + _tmp1626 * _tmp557 +
                      _tmp1628 * sqrt_info(5, 2) - _tmp1629 * sqrt_info(5, 0) -
                      _tmp1630 * sqrt_info(5, 1) + _tmp1631 * sqrt_info(5, 0);
    _res_D_x4(0, 3) = lambdas(3, 0) * sqrt_info(0, 3);
    _res_D_x4(1, 3) = lambdas(3, 0) * sqrt_info(1, 3);
    _res_D_x4(2, 3) = lambdas(3, 0) * sqrt_info(2, 3);
    _res_D_x4(3, 3) = lambdas(3, 0) * sqrt_info(3, 3);
    _res_D_x4(4, 3) = lambdas(3, 0) * sqrt_info(4, 3);
    _res_D_x4(5, 3) = lambdas(3, 0) * sqrt_info(5, 3);
    _res_D_x4(0, 4) = lambdas(3, 0) * sqrt_info(0, 4);
    _res_D_x4(1, 4) = lambdas(3, 0) * sqrt_info(1, 4);
    _res_D_x4(2, 4) = lambdas(3, 0) * sqrt_info(2, 4);
    _res_D_x4(3, 4) = lambdas(3, 0) * sqrt_info(3, 4);
    _res_D_x4(4, 4) = lambdas(3, 0) * sqrt_info(4, 4);
    _res_D_x4(5, 4) = lambdas(3, 0) * sqrt_info(5, 4);
    _res_D_x4(0, 5) = lambdas(3, 0) * sqrt_info(0, 5);
    _res_D_x4(1, 5) = lambdas(3, 0) * sqrt_info(1, 5);
    _res_D_x4(2, 5) = lambdas(3, 0) * sqrt_info(2, 5);
    _res_D_x4(3, 5) = lambdas(3, 0) * sqrt_info(3, 5);
    _res_D_x4(4, 5) = lambdas(3, 0) * sqrt_info(4, 5);
    _res_D_x4(5, 5) = lambdas(3, 0) * sqrt_info(5, 5);
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_hyperion
