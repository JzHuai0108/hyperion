// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     FACTOR.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Core>

#include <sym/pose3.h>

namespace sym_hyperion {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline3_pose3_velocity_factor
 *
 * Args:
 *     dt: Scalar
 *     lambdas: Matrix32
 *     x0: Pose3
 *     x1: Pose3
 *     x2: Pose3
 *     x3: Pose3
 *     velocity: Matrix61
 *     sqrt_info: Matrix66
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix61
 *     res_D_x0: (6x6) jacobian of res (6) wrt arg x0 (6)
 *     res_D_x1: (6x6) jacobian of res (6) wrt arg x1 (6)
 *     res_D_x2: (6x6) jacobian of res (6) wrt arg x2 (6)
 *     res_D_x3: (6x6) jacobian of res (6) wrt arg x3 (6)
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 6, 1> Spline3Pose3VelocityGlobalFactorWithJacobians2345(
    const Scalar dt, const Eigen::Matrix<Scalar, 3, 2>& lambdas, const sym::Pose3<Scalar>& x0,
    const sym::Pose3<Scalar>& x1, const sym::Pose3<Scalar>& x2, const sym::Pose3<Scalar>& x3,
    const Eigen::Matrix<Scalar, 6, 1>& velocity, const Eigen::Matrix<Scalar, 6, 6>& sqrt_info,
    const Scalar epsilon, Scalar* const res_D_x0 = nullptr, Scalar* const res_D_x1 = nullptr,
    Scalar* const res_D_x2 = nullptr, Scalar* const res_D_x3 = nullptr) {
  // Total ops: 5151

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x3 = x3.Data();

  // Intermediate terms (1379)
  const Scalar _tmp0 = Scalar(1.0) / (dt);
  const Scalar _tmp1 = 2 * _x0[1];
  const Scalar _tmp2 = _tmp1 * _x0[0];
  const Scalar _tmp3 = 2 * _x0[2];
  const Scalar _tmp4 = _tmp3 * _x0[3];
  const Scalar _tmp5 = -_tmp4;
  const Scalar _tmp6 = _tmp2 + _tmp5;
  const Scalar _tmp7 = _x0[2] * _x1[2];
  const Scalar _tmp8 = _x0[1] * _x1[1];
  const Scalar _tmp9 = _x0[0] * _x1[0];
  const Scalar _tmp10 = -_tmp7 - _tmp8 - _tmp9;
  const Scalar _tmp11 = _x0[3] * _x1[3];
  const Scalar _tmp12 =
      2 * std::min<Scalar>(0, (((-_tmp10 + _tmp11) > 0) - ((-_tmp10 + _tmp11) < 0))) + 1;
  const Scalar _tmp13 = std::pow(_tmp12, Scalar(2)) * std::pow(lambdas(0, 0), Scalar(2));
  const Scalar _tmp14 = 8 * _tmp13;
  const Scalar _tmp15 = _x0[1] * _x1[2];
  const Scalar _tmp16 = _x0[2] * _x1[1];
  const Scalar _tmp17 = _x0[0] * _x1[3];
  const Scalar _tmp18 = _x0[3] * _x1[0];
  const Scalar _tmp19 = -_tmp15 + _tmp16 - _tmp17 + _tmp18;
  const Scalar _tmp20 = std::pow(_tmp19, Scalar(2));
  const Scalar _tmp21 = 4 * _tmp13;
  const Scalar _tmp22 = _tmp20 * _tmp21;
  const Scalar _tmp23 = 1 - epsilon;
  const Scalar _tmp24 = std::min<Scalar>(_tmp23, std::fabs(_tmp10 - _tmp11));
  const Scalar _tmp25 = std::acos(_tmp24);
  const Scalar _tmp26 = 1 - std::pow(_tmp24, Scalar(2));
  const Scalar _tmp27 = std::pow(_tmp25, Scalar(2)) / _tmp26;
  const Scalar _tmp28 = _x0[0] * _x1[2];
  const Scalar _tmp29 = _x0[3] * _x1[1];
  const Scalar _tmp30 = _x0[1] * _x1[3];
  const Scalar _tmp31 = _x0[2] * _x1[0];
  const Scalar _tmp32 = _tmp28 + _tmp29 - _tmp30 - _tmp31;
  const Scalar _tmp33 = std::pow(_tmp32, Scalar(2));
  const Scalar _tmp34 = _tmp21 * _tmp33;
  const Scalar _tmp35 = _x0[3] * _x1[2];
  const Scalar _tmp36 = _x0[0] * _x1[1];
  const Scalar _tmp37 = _x0[2] * _x1[3];
  const Scalar _tmp38 = _x0[1] * _x1[0];
  const Scalar _tmp39 = _tmp35 - _tmp36 - _tmp37 + _tmp38;
  const Scalar _tmp40 = std::pow(_tmp39, Scalar(2));
  const Scalar _tmp41 = _tmp21 * _tmp40;
  const Scalar _tmp42 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp43 = _tmp22 * _tmp27 + _tmp27 * _tmp34 + _tmp27 * _tmp41 + _tmp42;
  const Scalar _tmp44 = std::sqrt(_tmp43);
  const Scalar _tmp45 = (Scalar(1) / Scalar(2)) * _tmp44;
  const Scalar _tmp46 = std::sin(_tmp45);
  const Scalar _tmp47 = _tmp27 * std::pow(_tmp46, Scalar(2)) / _tmp43;
  const Scalar _tmp48 = _tmp14 * _tmp47;
  const Scalar _tmp49 = _tmp32 * _tmp39;
  const Scalar _tmp50 = _tmp48 * _tmp49;
  const Scalar _tmp51 = _tmp12 * lambdas(0, 0);
  const Scalar _tmp52 = _tmp19 * _tmp51;
  const Scalar _tmp53 = _tmp25 / std::sqrt(_tmp26);
  const Scalar _tmp54 = 4 * _tmp46 * _tmp53 * std::cos(_tmp45) / _tmp44;
  const Scalar _tmp55 = _tmp52 * _tmp54;
  const Scalar _tmp56 = _x1[2] * _x2[3];
  const Scalar _tmp57 = _x1[1] * _x2[0];
  const Scalar _tmp58 = _x1[0] * _x2[1];
  const Scalar _tmp59 = _x1[3] * _x2[2];
  const Scalar _tmp60 = -_tmp56 + _tmp57 - _tmp58 + _tmp59;
  const Scalar _tmp61 = _x1[0] * _x2[0];
  const Scalar _tmp62 = _x1[1] * _x2[1];
  const Scalar _tmp63 = _x1[2] * _x2[2];
  const Scalar _tmp64 = -_tmp61 - _tmp62 - _tmp63;
  const Scalar _tmp65 = _x1[3] * _x2[3];
  const Scalar _tmp66 =
      2 * std::min<Scalar>(0, (((-_tmp64 + _tmp65) > 0) - ((-_tmp64 + _tmp65) < 0))) + 1;
  const Scalar _tmp67 = _tmp66 * lambdas(1, 1);
  const Scalar _tmp68 = 2 * _tmp67;
  const Scalar _tmp69 = std::min<Scalar>(_tmp23, std::fabs(_tmp64 - _tmp65));
  const Scalar _tmp70 = 1 - std::pow(_tmp69, Scalar(2));
  const Scalar _tmp71 = std::acos(_tmp69);
  const Scalar _tmp72 = _tmp71 / std::sqrt(_tmp70);
  const Scalar _tmp73 = _tmp68 * _tmp72;
  const Scalar _tmp74 = _x1[1] * _x2[3];
  const Scalar _tmp75 = _x1[2] * _x2[0];
  const Scalar _tmp76 = _x1[3] * _x2[1];
  const Scalar _tmp77 = _x1[0] * _x2[2];
  const Scalar _tmp78 = -_tmp74 - _tmp75 + _tmp76 + _tmp77;
  const Scalar _tmp79 = std::pow(_tmp66, Scalar(2)) * std::pow(lambdas(1, 0), Scalar(2));
  const Scalar _tmp80 = 8 * _tmp79;
  const Scalar _tmp81 = std::pow(_tmp71, Scalar(2)) / _tmp70;
  const Scalar _tmp82 = _x1[0] * _x2[3];
  const Scalar _tmp83 = _x1[3] * _x2[0];
  const Scalar _tmp84 = _x1[2] * _x2[1];
  const Scalar _tmp85 = _x1[1] * _x2[2];
  const Scalar _tmp86 = -_tmp82 + _tmp83 + _tmp84 - _tmp85;
  const Scalar _tmp87 = std::pow(_tmp86, Scalar(2));
  const Scalar _tmp88 = 4 * _tmp79;
  const Scalar _tmp89 = _tmp87 * _tmp88;
  const Scalar _tmp90 = std::pow(_tmp60, Scalar(2));
  const Scalar _tmp91 = _tmp88 * _tmp90;
  const Scalar _tmp92 = std::pow(_tmp78, Scalar(2));
  const Scalar _tmp93 = _tmp88 * _tmp92;
  const Scalar _tmp94 = _tmp42 + _tmp81 * _tmp89 + _tmp81 * _tmp91 + _tmp81 * _tmp93;
  const Scalar _tmp95 = std::sqrt(_tmp94);
  const Scalar _tmp96 = (Scalar(1) / Scalar(2)) * _tmp95;
  const Scalar _tmp97 = std::sin(_tmp96);
  const Scalar _tmp98 = _tmp81 * std::pow(_tmp97, Scalar(2)) / _tmp94;
  const Scalar _tmp99 = _tmp80 * _tmp98;
  const Scalar _tmp100 = _tmp78 * _tmp99;
  const Scalar _tmp101 = _tmp100 * _tmp60;
  const Scalar _tmp102 = _tmp66 * lambdas(1, 0);
  const Scalar _tmp103 = 4 * _tmp72 * _tmp97 * std::cos(_tmp96) / _tmp95;
  const Scalar _tmp104 = _tmp102 * _tmp103;
  const Scalar _tmp105 = _tmp104 * _tmp86;
  const Scalar _tmp106 = _x2[2] * _x3[0];
  const Scalar _tmp107 = _x2[0] * _x3[2];
  const Scalar _tmp108 = _x2[3] * _x3[1];
  const Scalar _tmp109 = _x2[1] * _x3[3];
  const Scalar _tmp110 = -_tmp106 + _tmp107 + _tmp108 - _tmp109;
  const Scalar _tmp111 = _x2[2] * _x3[2];
  const Scalar _tmp112 = _x2[0] * _x3[0];
  const Scalar _tmp113 = _x2[1] * _x3[1];
  const Scalar _tmp114 = -_tmp111 - _tmp112 - _tmp113;
  const Scalar _tmp115 = _x2[3] * _x3[3];
  const Scalar _tmp116 =
      lambdas(2, 1) *
      (2 * std::min<Scalar>(0, (((-_tmp114 + _tmp115) > 0) - ((-_tmp114 + _tmp115) < 0))) + 1);
  const Scalar _tmp117 = 2 * _tmp116;
  const Scalar _tmp118 = _tmp110 * _tmp117;
  const Scalar _tmp119 = std::min<Scalar>(_tmp23, std::fabs(_tmp114 - _tmp115));
  const Scalar _tmp120 = std::acos(_tmp119) / std::sqrt(Scalar(1 - std::pow(_tmp119, Scalar(2))));
  const Scalar _tmp121 = _tmp118 * _tmp120;
  const Scalar _tmp122 = -_tmp92 * _tmp99;
  const Scalar _tmp123 = -_tmp87 * _tmp99;
  const Scalar _tmp124 = _x2[2] * _x3[3];
  const Scalar _tmp125 = _x2[0] * _x3[1];
  const Scalar _tmp126 = _x2[3] * _x3[2];
  const Scalar _tmp127 = _x2[1] * _x3[0];
  const Scalar _tmp128 = -_tmp124 - _tmp125 + _tmp126 + _tmp127;
  const Scalar _tmp129 = _tmp117 * _tmp120;
  const Scalar _tmp130 = _tmp128 * _tmp129;
  const Scalar _tmp131 = _tmp102 * _tmp78;
  const Scalar _tmp132 = _tmp103 * _tmp131;
  const Scalar _tmp133 = _tmp60 * _tmp86;
  const Scalar _tmp134 = _tmp133 * _tmp99;
  const Scalar _tmp135 = _x2[2] * _x3[1];
  const Scalar _tmp136 = _x2[0] * _x3[3];
  const Scalar _tmp137 = _x2[3] * _x3[0];
  const Scalar _tmp138 = _x2[1] * _x3[2];
  const Scalar _tmp139 = _tmp135 - _tmp136 + _tmp137 - _tmp138;
  const Scalar _tmp140 = _tmp129 * _tmp139;
  const Scalar _tmp141 = _tmp121 * (_tmp101 + _tmp105) + _tmp130 * (_tmp122 + _tmp123 + 1) +
                         _tmp140 * (-_tmp132 + _tmp134) + _tmp60 * _tmp73;
  const Scalar _tmp142 = _tmp100 * _tmp86;
  const Scalar _tmp143 = _tmp104 * _tmp60;
  const Scalar _tmp144 = _tmp80 * _tmp90;
  const Scalar _tmp145 = -_tmp144 * _tmp98 + 1;
  const Scalar _tmp146 = _tmp121 * (_tmp142 - _tmp143) + _tmp130 * (_tmp132 + _tmp134) +
                         _tmp140 * (_tmp122 + _tmp145) + _tmp73 * _tmp86;
  const Scalar _tmp147 = _tmp19 * _tmp48;
  const Scalar _tmp148 = _tmp147 * _tmp32;
  const Scalar _tmp149 = _tmp51 * _tmp54;
  const Scalar _tmp150 = _tmp149 * _tmp39;
  const Scalar _tmp151 = _tmp121 * (_tmp123 + _tmp145) + _tmp130 * (_tmp101 - _tmp105) +
                         _tmp140 * (_tmp142 + _tmp143) + _tmp73 * _tmp78;
  const Scalar _tmp152 = _tmp14 * _tmp20;
  const Scalar _tmp153 = -_tmp152 * _tmp47;
  const Scalar _tmp154 = -_tmp40 * _tmp48 + 1;
  const Scalar _tmp155 = _tmp12 * lambdas(0, 1);
  const Scalar _tmp156 = 2 * _tmp155;
  const Scalar _tmp157 = _tmp156 * _tmp32;
  const Scalar _tmp158 = _tmp141 * (_tmp50 - _tmp55) + _tmp146 * (_tmp148 + _tmp150) +
                         _tmp151 * (_tmp153 + _tmp154) + _tmp157 * _tmp53;
  const Scalar _tmp159 = _tmp1 * _x0[3];
  const Scalar _tmp160 = _tmp3 * _x0[0];
  const Scalar _tmp161 = _tmp159 + _tmp160;
  const Scalar _tmp162 = -_tmp33 * _tmp48;
  const Scalar _tmp163 = _tmp156 * _tmp53;
  const Scalar _tmp164 = _tmp149 * _tmp32;
  const Scalar _tmp165 = _tmp147 * _tmp39;
  const Scalar _tmp166 = _tmp141 * (_tmp153 + _tmp162 + 1) + _tmp146 * (-_tmp164 + _tmp165) +
                         _tmp151 * (_tmp50 + _tmp55) + _tmp163 * _tmp39;
  const Scalar _tmp167 = std::pow(_x0[2], Scalar(2));
  const Scalar _tmp168 = -2 * _tmp167;
  const Scalar _tmp169 = std::pow(_x0[1], Scalar(2));
  const Scalar _tmp170 = 1 - 2 * _tmp169;
  const Scalar _tmp171 = _tmp168 + _tmp170;
  const Scalar _tmp172 = _tmp141 * (_tmp164 + _tmp165) + _tmp146 * (_tmp154 + _tmp162) +
                         _tmp151 * (_tmp148 - _tmp150) + _tmp163 * _tmp19;
  const Scalar _tmp173 = _tmp158 * _tmp6 + _tmp161 * _tmp166 + _tmp171 * _tmp172;
  const Scalar _tmp174 = _tmp0 * _tmp173 - velocity(0, 0);
  const Scalar _tmp175 = 2 * _x0[0] * _x0[3];
  const Scalar _tmp176 = _tmp1 * _x0[2];
  const Scalar _tmp177 = _tmp175 + _tmp176;
  const Scalar _tmp178 = std::pow(_x0[0], Scalar(2));
  const Scalar _tmp179 = -2 * _tmp178;
  const Scalar _tmp180 = _tmp170 + _tmp179;
  const Scalar _tmp181 = -_tmp159;
  const Scalar _tmp182 = _tmp160 + _tmp181;
  const Scalar _tmp183 = _tmp158 * _tmp177 + _tmp166 * _tmp180 + _tmp172 * _tmp182;
  const Scalar _tmp184 = _tmp0 * _tmp183 - velocity(2, 0);
  const Scalar _tmp185 = -_x1[6] + _x2[6];
  const Scalar _tmp186 = -_x2[6] + _x3[6];
  const Scalar _tmp187 = -_x0[6] + _x1[6];
  const Scalar _tmp188 = -_x1[4] + _x2[4];
  const Scalar _tmp189 = -_x2[4] + _x3[4];
  const Scalar _tmp190 = -_x0[4] + _x1[4];
  const Scalar _tmp191 =
      _tmp188 * lambdas(1, 0) + _tmp189 * lambdas(2, 0) + _tmp190 * lambdas(0, 0) + _x0[4];
  const Scalar _tmp192 = _tmp168 + _tmp179 + 1;
  const Scalar _tmp193 = -_tmp175;
  const Scalar _tmp194 = _tmp176 + _tmp193;
  const Scalar _tmp195 = _tmp2 + _tmp4;
  const Scalar _tmp196 = _tmp158 * _tmp192 + _tmp166 * _tmp194 + _tmp172 * _tmp195;
  const Scalar _tmp197 = -_x1[5] + _x2[5];
  const Scalar _tmp198 = -_x2[5] + _x3[5];
  const Scalar _tmp199 = -_x0[5] + _x1[5];
  const Scalar _tmp200 =
      _tmp197 * lambdas(1, 0) + _tmp198 * lambdas(2, 0) + _tmp199 * lambdas(0, 0) + _x0[5];
  const Scalar _tmp201 =
      _tmp0 * (-_tmp173 * _tmp200 + _tmp185 * lambdas(1, 1) + _tmp186 * lambdas(2, 1) +
               _tmp187 * lambdas(0, 1) + _tmp191 * _tmp196) -
      velocity(5, 0);
  const Scalar _tmp202 =
      _tmp185 * lambdas(1, 0) + _tmp186 * lambdas(2, 0) + _tmp187 * lambdas(0, 0) + _x0[6];
  const Scalar _tmp203 =
      _tmp0 * (_tmp183 * _tmp200 + _tmp188 * lambdas(1, 1) + _tmp189 * lambdas(2, 1) +
               _tmp190 * lambdas(0, 1) - _tmp196 * _tmp202) -
      velocity(3, 0);
  const Scalar _tmp204 = _tmp0 * (_tmp173 * _tmp202 - _tmp183 * _tmp191 + _tmp197 * lambdas(1, 1) +
                                  _tmp198 * lambdas(2, 1) + _tmp199 * lambdas(0, 1)) -
                         velocity(4, 0);
  const Scalar _tmp205 = _tmp0 * _tmp196 - velocity(1, 0);
  const Scalar _tmp206 = _tmp11 + _tmp7 + _tmp8 + _tmp9;
  const Scalar _tmp207 = std::fabs(_tmp206);
  const Scalar _tmp208 = std::min<Scalar>(_tmp207, _tmp23);
  const Scalar _tmp209 = 1 - std::pow(_tmp208, Scalar(2));
  const Scalar _tmp210 = Scalar(1.0) / (_tmp209);
  const Scalar _tmp211 = std::acos(_tmp208);
  const Scalar _tmp212 = std::pow(_tmp211, Scalar(2));
  const Scalar _tmp213 = _tmp210 * _tmp212;
  const Scalar _tmp214 = _tmp213 * _tmp41;
  const Scalar _tmp215 = _tmp213 * _tmp22;
  const Scalar _tmp216 = _tmp213 * _tmp34;
  const Scalar _tmp217 = _tmp214 + _tmp215 + _tmp216 + _tmp42;
  const Scalar _tmp218 = Scalar(1.0) / (_tmp217);
  const Scalar _tmp219 = std::sqrt(_tmp217);
  const Scalar _tmp220 = (Scalar(1) / Scalar(2)) * _tmp219;
  const Scalar _tmp221 = std::cos(_tmp220);
  const Scalar _tmp222 = std::pow(_tmp209, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp223 = _tmp211 * _tmp222;
  const Scalar _tmp224 = _tmp223 * _tmp51;
  const Scalar _tmp225 = _tmp218 * std::pow(_tmp221, Scalar(2)) * _tmp224;
  const Scalar _tmp226 = ((((-_tmp207 + _tmp23) > 0) - ((-_tmp207 + _tmp23) < 0)) + 1) *
                         (((_tmp206) > 0) - ((_tmp206) < 0));
  const Scalar _tmp227 = std::pow(_tmp209, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp228 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp229 = (Scalar(1) / Scalar(2)) * _tmp16;
  const Scalar _tmp230 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp231 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp232 = -_tmp228 + _tmp229 - _tmp230 + _tmp231;
  const Scalar _tmp233 = _tmp211 * _tmp232;
  const Scalar _tmp234 = _tmp227 * _tmp233;
  const Scalar _tmp235 = _tmp226 * _tmp234;
  const Scalar _tmp236 = _tmp212 / std::pow(_tmp209, Scalar(2));
  const Scalar _tmp237 = _tmp208 * _tmp236;
  const Scalar _tmp238 = _tmp226 * _tmp237;
  const Scalar _tmp239 = _tmp22 * _tmp238;
  const Scalar _tmp240 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp241 = (Scalar(1) / Scalar(2)) * _tmp8;
  const Scalar _tmp242 = (Scalar(1) / Scalar(2)) * _tmp11;
  const Scalar _tmp243 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp244 = -_tmp240 - _tmp241 - _tmp242 - _tmp243;
  const Scalar _tmp245 = _tmp14 * _tmp213;
  const Scalar _tmp246 = _tmp19 * _tmp245;
  const Scalar _tmp247 = _tmp244 * _tmp246;
  const Scalar _tmp248 = _tmp238 * _tmp41;
  const Scalar _tmp249 = _tmp237 * _tmp34;
  const Scalar _tmp250 = _tmp226 * _tmp249;
  const Scalar _tmp251 = (Scalar(1) / Scalar(2)) * _tmp35;
  const Scalar _tmp252 = (Scalar(1) / Scalar(2)) * _tmp36;
  const Scalar _tmp253 = (Scalar(1) / Scalar(2)) * _tmp37;
  const Scalar _tmp254 = (Scalar(1) / Scalar(2)) * _tmp38;
  const Scalar _tmp255 = _tmp251 - _tmp252 - _tmp253 + _tmp254;
  const Scalar _tmp256 = _tmp245 * _tmp32;
  const Scalar _tmp257 = (Scalar(1) / Scalar(2)) * _tmp28;
  const Scalar _tmp258 = (Scalar(1) / Scalar(2)) * _tmp29;
  const Scalar _tmp259 = (Scalar(1) / Scalar(2)) * _tmp30;
  const Scalar _tmp260 = (Scalar(1) / Scalar(2)) * _tmp31;
  const Scalar _tmp261 = -_tmp257 - _tmp258 + _tmp259 + _tmp260;
  const Scalar _tmp262 = _tmp245 * _tmp39;
  const Scalar _tmp263 = _tmp255 * _tmp256 + _tmp261 * _tmp262;
  const Scalar _tmp264 = -_tmp22 * _tmp235 + _tmp232 * _tmp239 + _tmp232 * _tmp248 +
                         _tmp232 * _tmp250 - _tmp235 * _tmp34 - _tmp235 * _tmp41 + _tmp247 +
                         _tmp263;
  const Scalar _tmp265 = _tmp264 * _tmp32;
  const Scalar _tmp266 = _tmp225 * _tmp265;
  const Scalar _tmp267 = std::sin(_tmp220);
  const Scalar _tmp268 = _tmp221 * _tmp267;
  const Scalar _tmp269 = _tmp268 * _tmp51;
  const Scalar _tmp270 = Scalar(1.0) / (_tmp219);
  const Scalar _tmp271 = 2 * _tmp270;
  const Scalar _tmp272 = _tmp208 * _tmp271;
  const Scalar _tmp273 = _tmp269 * _tmp272;
  const Scalar _tmp274 = _tmp273 * _tmp32;
  const Scalar _tmp275 = _tmp235 * _tmp274;
  const Scalar _tmp276 = _tmp226 * _tmp32;
  const Scalar _tmp277 = _tmp210 * _tmp271;
  const Scalar _tmp278 = _tmp269 * _tmp277;
  const Scalar _tmp279 = _tmp276 * _tmp278;
  const Scalar _tmp280 = _tmp232 * _tmp279;
  const Scalar _tmp281 = std::pow(_tmp217, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp282 = _tmp224 * _tmp268;
  const Scalar _tmp283 = 2 * _tmp281 * _tmp282;
  const Scalar _tmp284 = _tmp265 * _tmp283;
  const Scalar _tmp285 = std::pow(_tmp267, Scalar(2));
  const Scalar _tmp286 = _tmp218 * _tmp285;
  const Scalar _tmp287 = _tmp224 * _tmp286;
  const Scalar _tmp288 = _tmp265 * _tmp287;
  const Scalar _tmp289 = _tmp244 * _tmp262;
  const Scalar _tmp290 = _tmp286 * _tmp289;
  const Scalar _tmp291 = _tmp285 / std::pow(_tmp217, Scalar(2));
  const Scalar _tmp292 = _tmp19 * _tmp264;
  const Scalar _tmp293 = _tmp264 * _tmp39;
  const Scalar _tmp294 = _tmp268 * _tmp281;
  const Scalar _tmp295 = _tmp21 * _tmp294;
  const Scalar _tmp296 = _tmp213 * _tmp295;
  const Scalar _tmp297 = _tmp19 * _tmp296;
  const Scalar _tmp298 = _tmp232 * _tmp39;
  const Scalar _tmp299 = _tmp14 * _tmp286;
  const Scalar _tmp300 = _tmp299 * _tmp39;
  const Scalar _tmp301 = _tmp19 * _tmp235;
  const Scalar _tmp302 = _tmp19 * _tmp238 * _tmp298 * _tmp299 - _tmp262 * _tmp291 * _tmp292 +
                         _tmp290 + _tmp293 * _tmp297 - _tmp300 * _tmp301;
  const Scalar _tmp303 = _tmp246 * _tmp286;
  const Scalar _tmp304 = _tmp261 * _tmp303;
  const Scalar _tmp305 = 4 * _tmp270;
  const Scalar _tmp306 = _tmp282 * _tmp305;
  const Scalar _tmp307 = _tmp255 * _tmp306;
  const Scalar _tmp308 = _tmp304 - _tmp307;
  const Scalar _tmp309 = _tmp61 + _tmp62 + _tmp63 + _tmp65;
  const Scalar _tmp310 = std::fabs(_tmp309);
  const Scalar _tmp311 = std::min<Scalar>(_tmp23, _tmp310);
  const Scalar _tmp312 = 1 - std::pow(_tmp311, Scalar(2));
  const Scalar _tmp313 = Scalar(1.0) / (_tmp312);
  const Scalar _tmp314 = std::acos(_tmp311);
  const Scalar _tmp315 = std::pow(_tmp314, Scalar(2));
  const Scalar _tmp316 = _tmp313 * _tmp315;
  const Scalar _tmp317 = _tmp316 * _tmp80;
  const Scalar _tmp318 = _tmp317 * _tmp86;
  const Scalar _tmp319 = _tmp316 * _tmp89;
  const Scalar _tmp320 = _tmp316 * _tmp93;
  const Scalar _tmp321 = _tmp316 * _tmp91;
  const Scalar _tmp322 = _tmp319 + _tmp320 + _tmp321 + _tmp42;
  const Scalar _tmp323 = Scalar(1.0) / (_tmp322);
  const Scalar _tmp324 = std::sqrt(_tmp322);
  const Scalar _tmp325 = (Scalar(1) / Scalar(2)) * _tmp324;
  const Scalar _tmp326 = std::sin(_tmp325);
  const Scalar _tmp327 = std::pow(_tmp326, Scalar(2));
  const Scalar _tmp328 = _tmp323 * _tmp327;
  const Scalar _tmp329 = _tmp318 * _tmp328;
  const Scalar _tmp330 = _tmp329 * _tmp78;
  const Scalar _tmp331 = _tmp314 / std::sqrt(_tmp312);
  const Scalar _tmp332 = _tmp102 * _tmp331;
  const Scalar _tmp333 = _tmp332 * _tmp60;
  const Scalar _tmp334 = std::cos(_tmp325);
  const Scalar _tmp335 = _tmp326 * _tmp334;
  const Scalar _tmp336 = Scalar(1.0) / (_tmp324);
  const Scalar _tmp337 = 4 * _tmp336;
  const Scalar _tmp338 = _tmp335 * _tmp337;
  const Scalar _tmp339 = _tmp333 * _tmp338;
  const Scalar _tmp340 = _tmp330 - _tmp339;
  const Scalar _tmp341 = _tmp111 + _tmp112 + _tmp113 + _tmp115;
  const Scalar _tmp342 = std::fabs(_tmp341);
  const Scalar _tmp343 = std::min<Scalar>(_tmp23, _tmp342);
  const Scalar _tmp344 = 1 - std::pow(_tmp343, Scalar(2));
  const Scalar _tmp345 = std::acos(_tmp343);
  const Scalar _tmp346 = _tmp345 / std::sqrt(_tmp344);
  const Scalar _tmp347 = _tmp118 * _tmp346;
  const Scalar _tmp348 = _tmp331 * _tmp68;
  const Scalar _tmp349 = _tmp332 * _tmp335;
  const Scalar _tmp350 = _tmp337 * _tmp349;
  const Scalar _tmp351 = _tmp350 * _tmp78;
  const Scalar _tmp352 = _tmp317 * _tmp60;
  const Scalar _tmp353 = _tmp328 * _tmp352;
  const Scalar _tmp354 = _tmp353 * _tmp86;
  const Scalar _tmp355 = _tmp351 + _tmp354;
  const Scalar _tmp356 = _tmp117 * _tmp346;
  const Scalar _tmp357 = _tmp128 * _tmp356;
  const Scalar _tmp358 = _tmp317 * _tmp328;
  const Scalar _tmp359 = -_tmp358 * _tmp90;
  const Scalar _tmp360 = -_tmp358 * _tmp92;
  const Scalar _tmp361 = _tmp359 + _tmp360 + 1;
  const Scalar _tmp362 = _tmp139 * _tmp356;
  const Scalar _tmp363 =
      _tmp340 * _tmp347 + _tmp348 * _tmp86 + _tmp355 * _tmp357 + _tmp361 * _tmp362;
  const Scalar _tmp364 = _tmp156 * _tmp223;
  const Scalar _tmp365 = _tmp261 * _tmp364;
  const Scalar _tmp366 = _tmp155 * _tmp226;
  const Scalar _tmp367 = _tmp210 * _tmp366;
  const Scalar _tmp368 = _tmp330 + _tmp339;
  const Scalar _tmp369 = -_tmp358 * _tmp87 + 1;
  const Scalar _tmp370 = _tmp359 + _tmp369;
  const Scalar _tmp371 = _tmp350 * _tmp86;
  const Scalar _tmp372 = _tmp353 * _tmp78;
  const Scalar _tmp373 = -_tmp371 + _tmp372;
  const Scalar _tmp374 =
      _tmp347 * _tmp370 + _tmp348 * _tmp78 + _tmp357 * _tmp373 + _tmp362 * _tmp368;
  const Scalar _tmp375 = _tmp244 * _tmp306;
  const Scalar _tmp376 = _tmp19 * _tmp225;
  const Scalar _tmp377 = _tmp264 * _tmp376;
  const Scalar _tmp378 = _tmp268 * _tmp52;
  const Scalar _tmp379 = _tmp277 * _tmp378;
  const Scalar _tmp380 = _tmp226 * _tmp379;
  const Scalar _tmp381 = _tmp232 * _tmp380;
  const Scalar _tmp382 = _tmp19 * _tmp287;
  const Scalar _tmp383 = _tmp264 * _tmp382;
  const Scalar _tmp384 = _tmp283 * _tmp292;
  const Scalar _tmp385 = _tmp272 * _tmp378;
  const Scalar _tmp386 = _tmp235 * _tmp385;
  const Scalar _tmp387 = _tmp299 * _tmp49;
  const Scalar _tmp388 = _tmp213 * _tmp32;
  const Scalar _tmp389 = _tmp256 * _tmp291;
  const Scalar _tmp390 = _tmp299 * _tmp32;
  const Scalar _tmp391 = _tmp238 * _tmp390;
  const Scalar _tmp392 = _tmp262 * _tmp286;
  const Scalar _tmp393 = _tmp256 * _tmp286;
  const Scalar _tmp394 = _tmp255 * _tmp392 + _tmp261 * _tmp393;
  const Scalar _tmp395 = -_tmp235 * _tmp387 + _tmp293 * _tmp295 * _tmp388 - _tmp293 * _tmp389 +
                         _tmp298 * _tmp391 + _tmp394;
  const Scalar _tmp396 = _tmp152 * _tmp286;
  const Scalar _tmp397 = _tmp232 * _tmp238;
  const Scalar _tmp398 = 16 * _tmp13 * _tmp286;
  const Scalar _tmp399 = _tmp244 * _tmp398;
  const Scalar _tmp400 = _tmp213 * _tmp399;
  const Scalar _tmp401 = _tmp264 * _tmp294;
  const Scalar _tmp402 = _tmp245 * _tmp291;
  const Scalar _tmp403 = _tmp20 * _tmp402;
  const Scalar _tmp404 = -_tmp19 * _tmp400 - _tmp215 * _tmp401 + _tmp235 * _tmp396 +
                         _tmp264 * _tmp403 - _tmp396 * _tmp397;
  const Scalar _tmp405 = _tmp299 * _tmp33;
  const Scalar _tmp406 = _tmp388 * _tmp398;
  const Scalar _tmp407 = -_tmp255 * _tmp406;
  const Scalar _tmp408 = _tmp33 * _tmp402;
  const Scalar _tmp409 =
      -_tmp216 * _tmp401 + _tmp235 * _tmp405 + _tmp264 * _tmp408 - _tmp397 * _tmp405 + _tmp407;
  const Scalar _tmp410 = _tmp371 + _tmp372;
  const Scalar _tmp411 = -_tmp351 + _tmp354;
  const Scalar _tmp412 = _tmp360 + _tmp369;
  const Scalar _tmp413 =
      _tmp347 * _tmp410 + _tmp348 * _tmp60 + _tmp357 * _tmp412 + _tmp362 * _tmp411;
  const Scalar _tmp414 = _tmp208 * _tmp39;
  const Scalar _tmp415 = _tmp366 * _tmp414;
  const Scalar _tmp416 =
      _tmp234 * _tmp415 - _tmp298 * _tmp367 +
      _tmp363 * (-_tmp266 - _tmp275 + _tmp280 + _tmp284 + _tmp288 + _tmp302 + _tmp308) + _tmp365 +
      _tmp374 * (_tmp375 + _tmp377 - _tmp381 - _tmp383 - _tmp384 + _tmp386 + _tmp395) +
      _tmp413 * (_tmp404 + _tmp409);
  const Scalar _tmp417 = _tmp213 * _tmp398;
  const Scalar _tmp418 = _tmp39 * _tmp417;
  const Scalar _tmp419 = -_tmp261 * _tmp418;
  const Scalar _tmp420 = _tmp40 * _tmp402;
  const Scalar _tmp421 = _tmp299 * _tmp40;
  const Scalar _tmp422 = _tmp238 * _tmp421;
  const Scalar _tmp423 =
      -_tmp214 * _tmp401 - _tmp232 * _tmp422 + _tmp235 * _tmp421 + _tmp264 * _tmp420 + _tmp419;
  const Scalar _tmp424 = _tmp287 * _tmp293;
  const Scalar _tmp425 = _tmp283 * _tmp293;
  const Scalar _tmp426 = _tmp226 * _tmp278;
  const Scalar _tmp427 = _tmp298 * _tmp426;
  const Scalar _tmp428 = _tmp269 * _tmp271 * _tmp414;
  const Scalar _tmp429 = _tmp235 * _tmp428;
  const Scalar _tmp430 = _tmp225 * _tmp293;
  const Scalar _tmp431 = _tmp19 * _tmp255;
  const Scalar _tmp432 = _tmp245 * _tmp286;
  const Scalar _tmp433 = _tmp431 * _tmp432;
  const Scalar _tmp434 = _tmp261 * _tmp306;
  const Scalar _tmp435 = _tmp433 + _tmp434;
  const Scalar _tmp436 = _tmp19 * _tmp390;
  const Scalar _tmp437 = _tmp244 * _tmp256;
  const Scalar _tmp438 = _tmp286 * _tmp437;
  const Scalar _tmp439 =
      _tmp265 * _tmp297 - _tmp292 * _tmp389 - _tmp301 * _tmp390 + _tmp397 * _tmp436 + _tmp438;
  const Scalar _tmp440 = _tmp32 * _tmp367;
  const Scalar _tmp441 = _tmp255 * _tmp364;
  const Scalar _tmp442 = _tmp208 * _tmp366;
  const Scalar _tmp443 = _tmp32 * _tmp442;
  const Scalar _tmp444 = -_tmp375;
  const Scalar _tmp445 =
      -_tmp232 * _tmp440 + _tmp234 * _tmp443 +
      _tmp363 * (-_tmp424 - _tmp425 - _tmp427 + _tmp429 + _tmp430 + _tmp435 + _tmp439) +
      _tmp374 * (_tmp404 + _tmp423) +
      _tmp413 * (-_tmp377 + _tmp381 + _tmp383 + _tmp384 - _tmp386 + _tmp395 + _tmp444) + _tmp441;
  const Scalar _tmp446 = _tmp433 - _tmp434;
  const Scalar _tmp447 = _tmp304 + _tmp307;
  const Scalar _tmp448 = _tmp19 * _tmp367;
  const Scalar _tmp449 = _tmp19 * _tmp442;
  const Scalar _tmp450 = _tmp244 * _tmp364;
  const Scalar _tmp451 =
      -_tmp232 * _tmp448 + _tmp234 * _tmp449 + _tmp363 * (_tmp409 + _tmp423) +
      _tmp374 * (_tmp424 + _tmp425 + _tmp427 - _tmp429 - _tmp430 + _tmp439 + _tmp446) +
      _tmp413 * (_tmp266 + _tmp275 - _tmp280 - _tmp284 - _tmp288 + _tmp302 + _tmp447) + _tmp450;
  const Scalar _tmp452 = std::pow(_x0[3], Scalar(2));
  const Scalar _tmp453 = -_tmp452;
  const Scalar _tmp454 = _tmp178 + _tmp453;
  const Scalar _tmp455 = -_tmp169;
  const Scalar _tmp456 = _tmp167 + _tmp455;
  const Scalar _tmp457 = -_tmp33 * _tmp432;
  const Scalar _tmp458 = -_tmp20 * _tmp432;
  const Scalar _tmp459 = _tmp457 + _tmp458 + 1;
  const Scalar _tmp460 = _tmp39 * _tmp393;
  const Scalar _tmp461 = _tmp19 * _tmp306;
  const Scalar _tmp462 = _tmp460 + _tmp461;
  const Scalar _tmp463 = _tmp306 * _tmp32;
  const Scalar _tmp464 = _tmp19 * _tmp392;
  const Scalar _tmp465 = -_tmp463 + _tmp464;
  const Scalar _tmp466 =
      _tmp363 * _tmp465 + _tmp364 * _tmp39 + _tmp374 * _tmp462 + _tmp413 * _tmp459;
  const Scalar _tmp467 = -_tmp40 * _tmp432 + 1;
  const Scalar _tmp468 = _tmp458 + _tmp467;
  const Scalar _tmp469 = _tmp306 * _tmp39;
  const Scalar _tmp470 = _tmp19 * _tmp393;
  const Scalar _tmp471 = _tmp469 + _tmp470;
  const Scalar _tmp472 = _tmp460 - _tmp461;
  const Scalar _tmp473 =
      _tmp157 * _tmp223 + _tmp363 * _tmp471 + _tmp374 * _tmp468 + _tmp413 * _tmp472;
  const Scalar _tmp474 = _tmp192 * _tmp445 + _tmp194 * _tmp416 + _tmp194 * _tmp473 +
                         _tmp195 * _tmp451 + _tmp466 * (_tmp454 + _tmp456);
  const Scalar _tmp475 = _tmp0 * _tmp474;
  const Scalar _tmp476 = -_tmp176;
  const Scalar _tmp477 = -_tmp178;
  const Scalar _tmp478 = _tmp452 + _tmp477;
  const Scalar _tmp479 = _tmp177 * _tmp445 + _tmp180 * _tmp416 + _tmp182 * _tmp451 +
                         _tmp466 * (_tmp193 + _tmp476) + _tmp473 * (_tmp456 + _tmp478);
  const Scalar _tmp480 = _tmp0 * _tmp479;
  const Scalar _tmp481 = -_tmp2;
  const Scalar _tmp482 = _tmp161 * _tmp416 + _tmp161 * _tmp473 + _tmp171 * _tmp451 +
                         _tmp445 * _tmp6 + _tmp466 * (_tmp4 + _tmp481);
  const Scalar _tmp483 = _tmp0 * _tmp482;
  const Scalar _tmp484 = _tmp0 * (_tmp200 * _tmp479 - _tmp202 * _tmp474);
  const Scalar _tmp485 = _tmp0 * (_tmp191 * _tmp474 - _tmp200 * _tmp482);
  const Scalar _tmp486 = -_tmp191 * _tmp479 + _tmp202 * _tmp482;
  const Scalar _tmp487 = _tmp0 * _tmp486;
  const Scalar _tmp488 = _tmp0 * sqrt_info(1, 1);
  const Scalar _tmp489 = _tmp0 * sqrt_info(3, 4);
  const Scalar _tmp490 = _tmp0 * sqrt_info(4, 2);
  const Scalar _tmp491 = _tmp0 * sqrt_info(5, 1);
  const Scalar _tmp492 = _tmp257 + _tmp258 - _tmp259 - _tmp260;
  const Scalar _tmp493 = _tmp211 * _tmp227;
  const Scalar _tmp494 = _tmp492 * _tmp493;
  const Scalar _tmp495 = _tmp226 * _tmp494;
  const Scalar _tmp496 = -_tmp251 + _tmp252 + _tmp253 - _tmp254;
  const Scalar _tmp497 = _tmp245 * _tmp298 + _tmp246 * _tmp496;
  const Scalar _tmp498 = -_tmp22 * _tmp495 + _tmp239 * _tmp492 + _tmp248 * _tmp492 +
                         _tmp250 * _tmp492 - _tmp34 * _tmp495 - _tmp41 * _tmp495 + _tmp437 +
                         _tmp497;
  const Scalar _tmp499 = _tmp287 * _tmp39;
  const Scalar _tmp500 = _tmp498 * _tmp499;
  const Scalar _tmp501 = _tmp225 * _tmp498;
  const Scalar _tmp502 = _tmp39 * _tmp501;
  const Scalar _tmp503 = _tmp283 * _tmp39;
  const Scalar _tmp504 = _tmp498 * _tmp503;
  const Scalar _tmp505 = _tmp428 * _tmp495;
  const Scalar _tmp506 = _tmp39 * _tmp426;
  const Scalar _tmp507 = _tmp492 * _tmp506;
  const Scalar _tmp508 = _tmp222 * _tmp233;
  const Scalar _tmp509 = _tmp269 * _tmp305 * _tmp508;
  const Scalar _tmp510 = _tmp393 * _tmp496;
  const Scalar _tmp511 = _tmp509 + _tmp510;
  const Scalar _tmp512 = _tmp32 * _tmp498;
  const Scalar _tmp513 = _tmp247 * _tmp286;
  const Scalar _tmp514 = _tmp19 * _tmp492;
  const Scalar _tmp515 = _tmp226 * _tmp493;
  const Scalar _tmp516 = _tmp390 * _tmp515;
  const Scalar _tmp517 = _tmp291 * _tmp498;
  const Scalar _tmp518 = _tmp256 * _tmp517;
  const Scalar _tmp519 =
      -_tmp19 * _tmp518 + _tmp297 * _tmp512 + _tmp391 * _tmp514 + _tmp513 - _tmp514 * _tmp516;
  const Scalar _tmp520 = _tmp238 * _tmp492;
  const Scalar _tmp521 = _tmp19 * _tmp417;
  const Scalar _tmp522 = -_tmp496 * _tmp521;
  const Scalar _tmp523 = _tmp215 * _tmp294;
  const Scalar _tmp524 = _tmp402 * _tmp498;
  const Scalar _tmp525 =
      _tmp20 * _tmp524 + _tmp396 * _tmp495 - _tmp396 * _tmp520 - _tmp498 * _tmp523 + _tmp522;
  const Scalar _tmp526 = -_tmp298 * _tmp417;
  const Scalar _tmp527 = _tmp214 * _tmp294;
  const Scalar _tmp528 =
      _tmp40 * _tmp524 + _tmp421 * _tmp495 - _tmp422 * _tmp492 - _tmp498 * _tmp527 + _tmp526;
  const Scalar _tmp529 = _tmp19 * _tmp501;
  const Scalar _tmp530 = _tmp273 * _tmp515;
  const Scalar _tmp531 = _tmp514 * _tmp530;
  const Scalar _tmp532 = _tmp426 * _tmp514;
  const Scalar _tmp533 = _tmp19 * _tmp283;
  const Scalar _tmp534 = _tmp498 * _tmp533;
  const Scalar _tmp535 = _tmp382 * _tmp498;
  const Scalar _tmp536 = _tmp232 * _tmp393;
  const Scalar _tmp537 = _tmp306 * _tmp496;
  const Scalar _tmp538 = _tmp536 - _tmp537;
  const Scalar _tmp539 = _tmp296 * _tmp39;
  const Scalar _tmp540 = _tmp276 * _tmp492;
  const Scalar _tmp541 = _tmp236 * _tmp414;
  const Scalar _tmp542 = _tmp299 * _tmp541;
  const Scalar _tmp543 =
      _tmp290 - _tmp387 * _tmp495 - _tmp39 * _tmp518 + _tmp512 * _tmp539 + _tmp540 * _tmp542;
  const Scalar _tmp544 =
      _tmp363 * (-_tmp500 + _tmp502 - _tmp504 + _tmp505 - _tmp507 + _tmp511 + _tmp519) +
      _tmp374 * (_tmp525 + _tmp528) +
      _tmp413 * (-_tmp529 - _tmp531 + _tmp532 + _tmp534 + _tmp535 + _tmp538 + _tmp543) -
      _tmp440 * _tmp492 + _tmp443 * _tmp494 + _tmp450;
  const Scalar _tmp545 = _tmp156 * _tmp508;
  const Scalar _tmp546 = _tmp287 * _tmp512;
  const Scalar _tmp547 = _tmp278 * _tmp540;
  const Scalar _tmp548 = _tmp32 * _tmp501;
  const Scalar _tmp549 = _tmp283 * _tmp512;
  const Scalar _tmp550 = _tmp274 * _tmp495;
  const Scalar _tmp551 = _tmp300 * _tmp515;
  const Scalar _tmp552 = _tmp297 * _tmp39;
  const Scalar _tmp553 = _tmp226 * _tmp542;
  const Scalar _tmp554 = _tmp19 * _tmp262;
  const Scalar _tmp555 = _tmp232 * _tmp303 + _tmp392 * _tmp496;
  const Scalar _tmp556 =
      _tmp498 * _tmp552 - _tmp514 * _tmp551 + _tmp514 * _tmp553 - _tmp517 * _tmp554 + _tmp555;
  const Scalar _tmp557 = _tmp415 * _tmp493;
  const Scalar _tmp558 = _tmp367 * _tmp39;
  const Scalar _tmp559 = _tmp536 + _tmp537;
  const Scalar _tmp560 = _tmp216 * _tmp294;
  const Scalar _tmp561 = -_tmp388 * _tmp399 + _tmp405 * _tmp495 - _tmp405 * _tmp520 +
                         _tmp408 * _tmp498 - _tmp498 * _tmp560;
  const Scalar _tmp562 =
      _tmp363 * (_tmp444 + _tmp546 + _tmp547 - _tmp548 + _tmp549 - _tmp550 + _tmp556) +
      _tmp374 * (_tmp529 + _tmp531 - _tmp532 - _tmp534 - _tmp535 + _tmp543 + _tmp559) +
      _tmp413 * (_tmp525 + _tmp561) + _tmp492 * _tmp557 - _tmp492 * _tmp558 + _tmp545;
  const Scalar _tmp563 = _tmp463 + _tmp464;
  const Scalar _tmp564 = _tmp457 + _tmp467;
  const Scalar _tmp565 = -_tmp469 + _tmp470;
  const Scalar _tmp566 =
      _tmp19 * _tmp364 + _tmp363 * _tmp564 + _tmp374 * _tmp565 + _tmp413 * _tmp563;
  const Scalar _tmp567 = _tmp364 * _tmp496;
  const Scalar _tmp568 = -_tmp509 + _tmp510;
  const Scalar _tmp569 = _tmp442 * _tmp493;
  const Scalar _tmp570 =
      _tmp363 * (_tmp528 + _tmp561) - _tmp367 * _tmp514 +
      _tmp374 * (_tmp500 - _tmp502 + _tmp504 - _tmp505 + _tmp507 + _tmp519 + _tmp568) +
      _tmp413 * (_tmp375 - _tmp546 - _tmp547 + _tmp548 - _tmp549 + _tmp550 + _tmp556) +
      _tmp514 * _tmp569 + _tmp567;
  const Scalar _tmp571 = _tmp192 * _tmp544 + _tmp194 * _tmp562 + _tmp195 * _tmp466 +
                         _tmp195 * _tmp570 + _tmp566 * (_tmp175 + _tmp476);
  const Scalar _tmp572 = _tmp0 * _tmp571;
  const Scalar _tmp573 = -_tmp167;
  const Scalar _tmp574 = -_tmp160;
  const Scalar _tmp575 = _tmp161 * _tmp562 + _tmp171 * _tmp570 +
                         _tmp466 * (_tmp178 + _tmp452 + _tmp455 + _tmp573) + _tmp544 * _tmp6 +
                         _tmp566 * (_tmp181 + _tmp574);
  const Scalar _tmp576 = _tmp0 * _tmp575;
  const Scalar _tmp577 = _tmp0 * (_tmp191 * _tmp571 - _tmp200 * _tmp575);
  const Scalar _tmp578 = _tmp169 + _tmp573;
  const Scalar _tmp579 = _tmp177 * _tmp544 + _tmp180 * _tmp562 + _tmp182 * _tmp466 +
                         _tmp182 * _tmp570 + _tmp566 * (_tmp454 + _tmp578);
  const Scalar _tmp580 = -_tmp191 * _tmp579 + _tmp202 * _tmp575;
  const Scalar _tmp581 = _tmp0 * _tmp580;
  const Scalar _tmp582 = _tmp200 * _tmp579 - _tmp202 * _tmp571;
  const Scalar _tmp583 = _tmp0 * _tmp582;
  const Scalar _tmp584 = _tmp0 * _tmp579;
  const Scalar _tmp585 = _tmp0 * sqrt_info(5, 3);
  const Scalar _tmp586 = _tmp22 * _tmp515;
  const Scalar _tmp587 = _tmp41 * _tmp515;
  const Scalar _tmp588 = _tmp34 * _tmp515;
  const Scalar _tmp589 = _tmp228 - _tmp229 + _tmp230 - _tmp231;
  const Scalar _tmp590 = _tmp245 * _tmp514 + _tmp256 * _tmp589;
  const Scalar _tmp591 = _tmp239 * _tmp255 + _tmp248 * _tmp255 + _tmp250 * _tmp255 -
                         _tmp255 * _tmp586 - _tmp255 * _tmp587 - _tmp255 * _tmp588 + _tmp289 +
                         _tmp590;
  const Scalar _tmp592 = _tmp32 * _tmp591;
  const Scalar _tmp593 = _tmp287 * _tmp592;
  const Scalar _tmp594 = _tmp255 * _tmp515;
  const Scalar _tmp595 = _tmp274 * _tmp594;
  const Scalar _tmp596 = _tmp225 * _tmp592;
  const Scalar _tmp597 = _tmp283 * _tmp592;
  const Scalar _tmp598 = _tmp255 * _tmp279;
  const Scalar _tmp599 = _tmp392 * _tmp492;
  const Scalar _tmp600 = _tmp306 * _tmp589;
  const Scalar _tmp601 = _tmp599 - _tmp600;
  const Scalar _tmp602 = _tmp19 * _tmp591;
  const Scalar _tmp603 = _tmp291 * _tmp554;
  const Scalar _tmp604 =
      -_tmp431 * _tmp551 + _tmp431 * _tmp553 + _tmp513 + _tmp539 * _tmp602 - _tmp591 * _tmp603;
  const Scalar _tmp605 = -_tmp406 * _tmp589;
  const Scalar _tmp606 = _tmp238 * _tmp255;
  const Scalar _tmp607 =
      _tmp405 * _tmp594 - _tmp405 * _tmp606 + _tmp408 * _tmp591 - _tmp560 * _tmp591 + _tmp605;
  const Scalar _tmp608 = -_tmp417 * _tmp514;
  const Scalar _tmp609 = _tmp396 * _tmp515;
  const Scalar _tmp610 =
      _tmp255 * _tmp609 - _tmp396 * _tmp606 + _tmp403 * _tmp591 - _tmp523 * _tmp591 + _tmp608;
  const Scalar _tmp611 = _tmp376 * _tmp591;
  const Scalar _tmp612 = _tmp382 * _tmp591;
  const Scalar _tmp613 = _tmp426 * _tmp431;
  const Scalar _tmp614 = _tmp283 * _tmp602;
  const Scalar _tmp615 = _tmp431 * _tmp530;
  const Scalar _tmp616 = _tmp306 * _tmp492;
  const Scalar _tmp617 = _tmp392 * _tmp589;
  const Scalar _tmp618 = _tmp616 + _tmp617;
  const Scalar _tmp619 = _tmp276 * _tmp542;
  const Scalar _tmp620 = _tmp389 * _tmp39;
  const Scalar _tmp621 =
      _tmp255 * _tmp619 - _tmp387 * _tmp594 + _tmp438 + _tmp539 * _tmp592 - _tmp591 * _tmp620;
  const Scalar _tmp622 =
      _tmp255 * _tmp557 - _tmp255 * _tmp558 +
      _tmp363 * (_tmp593 - _tmp595 - _tmp596 + _tmp597 + _tmp598 + _tmp601 + _tmp604) +
      _tmp374 * (_tmp611 - _tmp612 - _tmp613 - _tmp614 + _tmp615 + _tmp618 + _tmp621) +
      _tmp413 * (_tmp607 + _tmp610) + _tmp450;
  const Scalar _tmp623 = _tmp599 + _tmp600;
  const Scalar _tmp624 = _tmp499 * _tmp591;
  const Scalar _tmp625 = _tmp255 * _tmp506;
  const Scalar _tmp626 = _tmp225 * _tmp39;
  const Scalar _tmp627 = _tmp591 * _tmp626;
  const Scalar _tmp628 = _tmp503 * _tmp591;
  const Scalar _tmp629 = _tmp428 * _tmp594;
  const Scalar _tmp630 = _tmp303 * _tmp589 + _tmp393 * _tmp492;
  const Scalar _tmp631 =
      _tmp297 * _tmp592 - _tmp389 * _tmp602 + _tmp391 * _tmp431 - _tmp431 * _tmp516 + _tmp630;
  const Scalar _tmp632 = _tmp364 * _tmp492;
  const Scalar _tmp633 = -_tmp255 * _tmp422 - _tmp39 * _tmp400 + _tmp420 * _tmp591 +
                         _tmp421 * _tmp594 - _tmp527 * _tmp591;
  const Scalar _tmp634 =
      _tmp363 * (_tmp607 + _tmp633) - _tmp367 * _tmp431 +
      _tmp374 * (_tmp444 + _tmp624 + _tmp625 - _tmp627 + _tmp628 - _tmp629 + _tmp631) +
      _tmp413 * (-_tmp593 + _tmp595 + _tmp596 - _tmp597 - _tmp598 + _tmp604 + _tmp623) +
      _tmp431 * _tmp569 + _tmp632;
  const Scalar _tmp635 = _tmp364 * _tmp589;
  const Scalar _tmp636 = _tmp443 * _tmp493;
  const Scalar _tmp637 = -_tmp616 + _tmp617;
  const Scalar _tmp638 =
      -_tmp255 * _tmp440 + _tmp255 * _tmp636 +
      _tmp363 * (_tmp375 - _tmp624 - _tmp625 + _tmp627 - _tmp628 + _tmp629 + _tmp631) +
      _tmp374 * (_tmp610 + _tmp633) +
      _tmp413 * (-_tmp611 + _tmp612 + _tmp613 + _tmp614 - _tmp615 + _tmp621 + _tmp637) + _tmp635;
  const Scalar _tmp639 = _tmp177 * _tmp566 + _tmp177 * _tmp638 + _tmp180 * _tmp622 +
                         _tmp182 * _tmp634 + _tmp473 * (_tmp159 + _tmp574);
  const Scalar _tmp640 = _tmp192 * _tmp638 + _tmp194 * _tmp622 + _tmp195 * _tmp634 +
                         _tmp473 * (_tmp481 + _tmp5) + _tmp566 * (_tmp478 + _tmp578);
  const Scalar _tmp641 = _tmp0 * (_tmp200 * _tmp639 - _tmp202 * _tmp640);
  const Scalar _tmp642 = _tmp0 * _tmp640;
  const Scalar _tmp643 = _tmp0 * _tmp639;
  const Scalar _tmp644 = _tmp161 * _tmp622 + _tmp171 * _tmp634 +
                         _tmp473 * (_tmp167 + _tmp169 + _tmp453 + _tmp477) + _tmp566 * _tmp6 +
                         _tmp6 * _tmp638;
  const Scalar _tmp645 = _tmp0 * (_tmp191 * _tmp640 - _tmp200 * _tmp644);
  const Scalar _tmp646 = _tmp0 * _tmp644;
  const Scalar _tmp647 = -_tmp191 * _tmp639 + _tmp202 * _tmp644;
  const Scalar _tmp648 = _tmp0 * _tmp647;
  const Scalar _tmp649 = _tmp0 * lambdas(0, 1);
  const Scalar _tmp650 = 1 - lambdas(0, 0);
  const Scalar _tmp651 = _tmp192 * _tmp473 + _tmp194 * _tmp466 + _tmp195 * _tmp566;
  const Scalar _tmp652 = _tmp650 * _tmp651;
  const Scalar _tmp653 = _tmp0 * _tmp652;
  const Scalar _tmp654 = _tmp177 * _tmp473 + _tmp180 * _tmp466 + _tmp182 * _tmp566;
  const Scalar _tmp655 = _tmp650 * _tmp654;
  const Scalar _tmp656 = _tmp0 * _tmp655;
  const Scalar _tmp657 = _tmp0 * sqrt_info(2, 4);
  const Scalar _tmp658 = _tmp0 * sqrt_info(5, 5);
  const Scalar _tmp659 = _tmp161 * _tmp466 + _tmp171 * _tmp566 + _tmp473 * _tmp6;
  const Scalar _tmp660 = _tmp650 * _tmp659;
  const Scalar _tmp661 = _tmp0 * _tmp660;
  const Scalar _tmp662 = _tmp0 * sqrt_info(1, 3);
  const Scalar _tmp663 = _tmp0 * sqrt_info(2, 3);
  const Scalar _tmp664 = ((((_tmp23 - _tmp310) > 0) - ((_tmp23 - _tmp310) < 0)) + 1) *
                         (((_tmp309) > 0) - ((_tmp309) < 0));
  const Scalar _tmp665 = 2 * _tmp313 * _tmp335 * _tmp336;
  const Scalar _tmp666 = _tmp102 * _tmp665;
  const Scalar _tmp667 = _tmp664 * _tmp666;
  const Scalar _tmp668 = (Scalar(1) / Scalar(2)) * _tmp82;
  const Scalar _tmp669 = (Scalar(1) / Scalar(2)) * _tmp83;
  const Scalar _tmp670 = (Scalar(1) / Scalar(2)) * _tmp84;
  const Scalar _tmp671 = (Scalar(1) / Scalar(2)) * _tmp85;
  const Scalar _tmp672 = -_tmp668 + _tmp669 + _tmp670 - _tmp671;
  const Scalar _tmp673 = _tmp672 * _tmp86;
  const Scalar _tmp674 = _tmp667 * _tmp673;
  const Scalar _tmp675 = _tmp315 / std::pow(_tmp312, Scalar(2));
  const Scalar _tmp676 = _tmp675 * _tmp89;
  const Scalar _tmp677 = _tmp311 * _tmp664;
  const Scalar _tmp678 = _tmp672 * _tmp677;
  const Scalar _tmp679 = _tmp314 / (_tmp312 * std::sqrt(_tmp312));
  const Scalar _tmp680 = _tmp664 * _tmp679;
  const Scalar _tmp681 = _tmp680 * _tmp89;
  const Scalar _tmp682 = _tmp680 * _tmp91;
  const Scalar _tmp683 = _tmp680 * _tmp93;
  const Scalar _tmp684 = _tmp675 * _tmp93;
  const Scalar _tmp685 = (Scalar(1) / Scalar(2)) * _tmp65;
  const Scalar _tmp686 = (Scalar(1) / Scalar(2)) * _tmp61;
  const Scalar _tmp687 = (Scalar(1) / Scalar(2)) * _tmp62;
  const Scalar _tmp688 = (Scalar(1) / Scalar(2)) * _tmp63;
  const Scalar _tmp689 = -_tmp685 - _tmp686 - _tmp687 - _tmp688;
  const Scalar _tmp690 = _tmp318 * _tmp689;
  const Scalar _tmp691 = _tmp675 * _tmp91;
  const Scalar _tmp692 = (Scalar(1) / Scalar(2)) * _tmp56;
  const Scalar _tmp693 = (Scalar(1) / Scalar(2)) * _tmp57;
  const Scalar _tmp694 = (Scalar(1) / Scalar(2)) * _tmp58;
  const Scalar _tmp695 = (Scalar(1) / Scalar(2)) * _tmp59;
  const Scalar _tmp696 = -_tmp692 + _tmp693 - _tmp694 + _tmp695;
  const Scalar _tmp697 = _tmp317 * _tmp78;
  const Scalar _tmp698 = (Scalar(1) / Scalar(2)) * _tmp74;
  const Scalar _tmp699 = (Scalar(1) / Scalar(2)) * _tmp75;
  const Scalar _tmp700 = (Scalar(1) / Scalar(2)) * _tmp76;
  const Scalar _tmp701 = (Scalar(1) / Scalar(2)) * _tmp77;
  const Scalar _tmp702 = _tmp698 + _tmp699 - _tmp700 - _tmp701;
  const Scalar _tmp703 = _tmp352 * _tmp702 + _tmp696 * _tmp697;
  const Scalar _tmp704 = -_tmp672 * _tmp681 - _tmp672 * _tmp682 - _tmp672 * _tmp683 +
                         _tmp676 * _tmp678 + _tmp678 * _tmp684 + _tmp678 * _tmp691 + _tmp690 +
                         _tmp703;
  const Scalar _tmp705 = _tmp323 * std::pow(_tmp334, Scalar(2));
  const Scalar _tmp706 = _tmp332 * _tmp705;
  const Scalar _tmp707 = _tmp706 * _tmp86;
  const Scalar _tmp708 = _tmp704 * _tmp707;
  const Scalar _tmp709 = std::pow(_tmp322, Scalar(Scalar(-3) / Scalar(2)));
  const Scalar _tmp710 = 2 * _tmp709;
  const Scalar _tmp711 = _tmp349 * _tmp710;
  const Scalar _tmp712 = _tmp711 * _tmp86;
  const Scalar _tmp713 = _tmp704 * _tmp712;
  const Scalar _tmp714 = _tmp350 * _tmp689;
  const Scalar _tmp715 = -_tmp714;
  const Scalar _tmp716 = 2 * _tmp102 * _tmp335 * _tmp336;
  const Scalar _tmp717 = _tmp680 * _tmp716;
  const Scalar _tmp718 = _tmp311 * _tmp717;
  const Scalar _tmp719 = _tmp673 * _tmp718;
  const Scalar _tmp720 = _tmp328 * _tmp332;
  const Scalar _tmp721 = _tmp720 * _tmp86;
  const Scalar _tmp722 = _tmp704 * _tmp721;
  const Scalar _tmp723 = _tmp60 * _tmp78;
  const Scalar _tmp724 = _tmp328 * _tmp675;
  const Scalar _tmp725 = _tmp724 * _tmp80;
  const Scalar _tmp726 = _tmp723 * _tmp725;
  const Scalar _tmp727 = _tmp327 / std::pow(_tmp322, Scalar(2));
  const Scalar _tmp728 = _tmp352 * _tmp727;
  const Scalar _tmp729 = _tmp704 * _tmp78;
  const Scalar _tmp730 = _tmp679 * _tmp78;
  const Scalar _tmp731 = _tmp664 * _tmp730;
  const Scalar _tmp732 = _tmp60 * _tmp80;
  const Scalar _tmp733 = _tmp328 * _tmp732;
  const Scalar _tmp734 = _tmp731 * _tmp733;
  const Scalar _tmp735 = _tmp335 * _tmp709;
  const Scalar _tmp736 = _tmp316 * _tmp735 * _tmp88;
  const Scalar _tmp737 = _tmp60 * _tmp736;
  const Scalar _tmp738 = _tmp328 * _tmp697;
  const Scalar _tmp739 = _tmp353 * _tmp696 + _tmp702 * _tmp738;
  const Scalar _tmp740 =
      -_tmp672 * _tmp734 + _tmp678 * _tmp726 - _tmp728 * _tmp729 + _tmp729 * _tmp737 + _tmp739;
  const Scalar _tmp741 = _tmp348 * _tmp696;
  const Scalar _tmp742 = _tmp664 * _tmp67;
  const Scalar _tmp743 = _tmp311 * _tmp742;
  const Scalar _tmp744 = _tmp730 * _tmp743;
  const Scalar _tmp745 = _tmp317 * _tmp727;
  const Scalar _tmp746 = _tmp745 * _tmp87;
  const Scalar _tmp747 = 16 * _tmp316 * _tmp79;
  const Scalar _tmp748 = _tmp328 * _tmp747;
  const Scalar _tmp749 = _tmp689 * _tmp748;
  const Scalar _tmp750 = _tmp80 * _tmp87;
  const Scalar _tmp751 = _tmp328 * _tmp680;
  const Scalar _tmp752 = _tmp672 * _tmp751;
  const Scalar _tmp753 = _tmp319 * _tmp735;
  const Scalar _tmp754 = _tmp724 * _tmp750;
  const Scalar _tmp755 = -_tmp678 * _tmp754 + _tmp704 * _tmp746 - _tmp704 * _tmp753 -
                         _tmp749 * _tmp86 + _tmp750 * _tmp752;
  const Scalar _tmp756 = _tmp60 * _tmp748;
  const Scalar _tmp757 = -_tmp702 * _tmp756;
  const Scalar _tmp758 = _tmp745 * _tmp90;
  const Scalar _tmp759 = _tmp144 * _tmp724;
  const Scalar _tmp760 = _tmp321 * _tmp735;
  const Scalar _tmp761 = _tmp144 * _tmp751;
  const Scalar _tmp762 =
      _tmp672 * _tmp761 - _tmp678 * _tmp759 + _tmp704 * _tmp758 - _tmp704 * _tmp760 + _tmp757;
  const Scalar _tmp763 = _tmp60 * _tmp718;
  const Scalar _tmp764 = _tmp672 * _tmp763;
  const Scalar _tmp765 = _tmp60 * _tmp667;
  const Scalar _tmp766 = _tmp672 * _tmp765;
  const Scalar _tmp767 = _tmp335 * _tmp710;
  const Scalar _tmp768 = _tmp333 * _tmp767;
  const Scalar _tmp769 = _tmp704 * _tmp768;
  const Scalar _tmp770 = _tmp60 * _tmp720;
  const Scalar _tmp771 = _tmp704 * _tmp770;
  const Scalar _tmp772 = _tmp333 * _tmp705;
  const Scalar _tmp773 = _tmp704 * _tmp772;
  const Scalar _tmp774 = _tmp329 * _tmp696;
  const Scalar _tmp775 = _tmp350 * _tmp702;
  const Scalar _tmp776 = _tmp774 + _tmp775;
  const Scalar _tmp777 = _tmp689 * _tmp697;
  const Scalar _tmp778 = _tmp328 * _tmp777;
  const Scalar _tmp779 = _tmp318 * _tmp727;
  const Scalar _tmp780 = _tmp328 * _tmp731;
  const Scalar _tmp781 = _tmp780 * _tmp80;
  const Scalar _tmp782 = _tmp78 * _tmp86;
  const Scalar _tmp783 = _tmp725 * _tmp782;
  const Scalar _tmp784 = -_tmp673 * _tmp781 + _tmp678 * _tmp783 + _tmp729 * _tmp736 * _tmp86 -
                         _tmp729 * _tmp779 + _tmp778;
  const Scalar _tmp785 = _tmp313 * _tmp742;
  const Scalar _tmp786 = _tmp78 * _tmp785;
  const Scalar _tmp787 =
      _tmp347 * (_tmp755 + _tmp762) +
      _tmp357 * (_tmp674 - _tmp708 + _tmp713 + _tmp715 - _tmp719 + _tmp722 + _tmp740) +
      _tmp362 * (_tmp764 - _tmp766 - _tmp769 - _tmp771 + _tmp773 + _tmp776 + _tmp784) +
      _tmp672 * _tmp744 - _tmp672 * _tmp786 + _tmp741;
  const Scalar _tmp788 = _tmp785 * _tmp86;
  const Scalar _tmp789 = _tmp774 - _tmp775;
  const Scalar _tmp790 = _tmp716 * _tmp730;
  const Scalar _tmp791 = _tmp678 * _tmp790;
  const Scalar _tmp792 = _tmp131 * _tmp665;
  const Scalar _tmp793 = _tmp664 * _tmp792;
  const Scalar _tmp794 = _tmp672 * _tmp793;
  const Scalar _tmp795 = _tmp711 * _tmp729;
  const Scalar _tmp796 = _tmp720 * _tmp78;
  const Scalar _tmp797 = _tmp704 * _tmp796;
  const Scalar _tmp798 = _tmp706 * _tmp78;
  const Scalar _tmp799 = _tmp704 * _tmp798;
  const Scalar _tmp800 = _tmp352 * _tmp689;
  const Scalar _tmp801 = _tmp328 * _tmp800;
  const Scalar _tmp802 = _tmp133 * _tmp736;
  const Scalar _tmp803 = _tmp133 * _tmp80;
  const Scalar _tmp804 = _tmp724 * _tmp803;
  const Scalar _tmp805 = _tmp728 * _tmp86;
  const Scalar _tmp806 =
      _tmp678 * _tmp804 + _tmp704 * _tmp802 - _tmp704 * _tmp805 - _tmp752 * _tmp803 + _tmp801;
  const Scalar _tmp807 = _tmp329 * _tmp702;
  const Scalar _tmp808 = _tmp350 * _tmp696;
  const Scalar _tmp809 = _tmp807 + _tmp808;
  const Scalar _tmp810 = _tmp348 * _tmp689;
  const Scalar _tmp811 = _tmp320 * _tmp735;
  const Scalar _tmp812 = _tmp745 * _tmp92;
  const Scalar _tmp813 = _tmp80 * _tmp92;
  const Scalar _tmp814 = _tmp724 * _tmp813;
  const Scalar _tmp815 = _tmp748 * _tmp78;
  const Scalar _tmp816 = -_tmp696 * _tmp815;
  const Scalar _tmp817 =
      -_tmp678 * _tmp814 - _tmp704 * _tmp811 + _tmp704 * _tmp812 + _tmp752 * _tmp813 + _tmp816;
  const Scalar _tmp818 = _tmp679 * _tmp743;
  const Scalar _tmp819 = _tmp818 * _tmp86;
  const Scalar _tmp820 =
      _tmp347 * (-_tmp764 + _tmp766 + _tmp769 + _tmp771 - _tmp773 + _tmp784 + _tmp789) +
      _tmp357 * (_tmp791 - _tmp794 - _tmp795 - _tmp797 + _tmp799 + _tmp806 + _tmp809) +
      _tmp362 * (_tmp762 + _tmp817) - _tmp672 * _tmp788 + _tmp672 * _tmp819 + _tmp810;
  const Scalar _tmp821 = _tmp421 * _tmp515;
  const Scalar _tmp822 = _tmp240 + _tmp241 + _tmp242 + _tmp243;
  const Scalar _tmp823 = _tmp245 * _tmp822;
  const Scalar _tmp824 = _tmp19 * _tmp823;
  const Scalar _tmp825 = _tmp239 * _tmp589 + _tmp248 * _tmp589 + _tmp250 * _tmp589 + _tmp263 -
                         _tmp586 * _tmp589 - _tmp587 * _tmp589 - _tmp588 * _tmp589 + _tmp824;
  const Scalar _tmp826 = _tmp294 * _tmp825;
  const Scalar _tmp827 =
      -_tmp214 * _tmp826 + _tmp419 + _tmp420 * _tmp825 - _tmp422 * _tmp589 + _tmp589 * _tmp821;
  const Scalar _tmp828 = _tmp238 * _tmp589;
  const Scalar _tmp829 = -_tmp215 * _tmp826 - _tmp396 * _tmp828 + _tmp403 * _tmp825 -
                         _tmp521 * _tmp822 + _tmp589 * _tmp609;
  const Scalar _tmp830 = _tmp60 * _tmp785;
  const Scalar _tmp831 = _tmp807 - _tmp808;
  const Scalar _tmp832 = _tmp348 * _tmp702;
  const Scalar _tmp833 = _tmp60 * _tmp818;
  const Scalar _tmp834 =
      _tmp347 * (-_tmp674 + _tmp708 - _tmp713 + _tmp714 + _tmp719 - _tmp722 + _tmp740) +
      _tmp357 * (_tmp755 + _tmp817) +
      _tmp362 * (-_tmp791 + _tmp794 + _tmp795 + _tmp797 - _tmp799 + _tmp806 + _tmp831) -
      _tmp672 * _tmp830 + _tmp672 * _tmp833 + _tmp832;
  const Scalar _tmp835 = _tmp39 * _tmp825;
  const Scalar _tmp836 = _tmp283 * _tmp835;
  const Scalar _tmp837 = _tmp506 * _tmp589;
  const Scalar _tmp838 = _tmp515 * _tmp589;
  const Scalar _tmp839 = _tmp428 * _tmp838;
  const Scalar _tmp840 = _tmp287 * _tmp835;
  const Scalar _tmp841 = _tmp225 * _tmp835;
  const Scalar _tmp842 = _tmp32 * _tmp823;
  const Scalar _tmp843 = _tmp286 * _tmp842;
  const Scalar _tmp844 = _tmp32 * _tmp825;
  const Scalar _tmp845 = _tmp19 * _tmp389;
  const Scalar _tmp846 =
      _tmp297 * _tmp844 + _tmp436 * _tmp828 - _tmp436 * _tmp838 - _tmp825 * _tmp845 + _tmp843;
  const Scalar _tmp847 = _tmp306 * _tmp822;
  const Scalar _tmp848 = -_tmp847;
  const Scalar _tmp849 = _tmp385 * _tmp838;
  const Scalar _tmp850 = _tmp533 * _tmp825;
  const Scalar _tmp851 = _tmp382 * _tmp825;
  const Scalar _tmp852 = _tmp380 * _tmp589;
  const Scalar _tmp853 = _tmp376 * _tmp825;
  const Scalar _tmp854 = _tmp295 * _tmp835;
  const Scalar _tmp855 =
      -_tmp387 * _tmp838 + _tmp388 * _tmp854 - _tmp389 * _tmp835 + _tmp394 + _tmp589 * _tmp619;
  const Scalar _tmp856 =
      _tmp363 * (_tmp435 - _tmp836 - _tmp837 + _tmp839 - _tmp840 + _tmp841 + _tmp846) +
      _tmp374 * (_tmp827 + _tmp829) +
      _tmp413 * (_tmp848 - _tmp849 + _tmp850 + _tmp851 + _tmp852 - _tmp853 + _tmp855) -
      _tmp440 * _tmp589 + _tmp441 + _tmp468 * _tmp787 + _tmp471 * _tmp820 + _tmp472 * _tmp834 +
      _tmp589 * _tmp636;
  const Scalar _tmp857 = _tmp364 * _tmp822;
  const Scalar _tmp858 = _tmp274 * _tmp838;
  const Scalar _tmp859 = _tmp283 * _tmp844;
  const Scalar _tmp860 = _tmp279 * _tmp589;
  const Scalar _tmp861 = _tmp225 * _tmp844;
  const Scalar _tmp862 = _tmp287 * _tmp844;
  const Scalar _tmp863 = _tmp39 * _tmp823;
  const Scalar _tmp864 = _tmp286 * _tmp863;
  const Scalar _tmp865 = _tmp19 * _tmp300;
  const Scalar _tmp866 = _tmp19 * _tmp553;
  const Scalar _tmp867 = _tmp19 * _tmp213 * _tmp854 + _tmp589 * _tmp866 - _tmp603 * _tmp825 -
                         _tmp838 * _tmp865 + _tmp864;
  const Scalar _tmp868 = _tmp449 * _tmp493;
  const Scalar _tmp869 = _tmp405 * _tmp515;
  const Scalar _tmp870 =
      -_tmp216 * _tmp826 - _tmp405 * _tmp828 + _tmp407 + _tmp408 * _tmp825 + _tmp589 * _tmp869;
  const Scalar _tmp871 =
      _tmp363 * (_tmp827 + _tmp870) +
      _tmp374 * (_tmp446 + _tmp836 + _tmp837 - _tmp839 + _tmp840 - _tmp841 + _tmp846) +
      _tmp413 * (_tmp447 + _tmp858 - _tmp859 - _tmp860 + _tmp861 - _tmp862 + _tmp867) -
      _tmp448 * _tmp589 + _tmp563 * _tmp834 + _tmp564 * _tmp820 + _tmp565 * _tmp787 +
      _tmp589 * _tmp868 + _tmp857;
  const Scalar _tmp872 =
      _tmp363 * (_tmp308 - _tmp858 + _tmp859 + _tmp860 - _tmp861 + _tmp862 + _tmp867) + _tmp365 +
      _tmp374 * (_tmp847 + _tmp849 - _tmp850 - _tmp851 - _tmp852 + _tmp853 + _tmp855) +
      _tmp413 * (_tmp829 + _tmp870) + _tmp459 * _tmp834 + _tmp462 * _tmp787 + _tmp465 * _tmp820 +
      _tmp557 * _tmp589 - _tmp558 * _tmp589;
  const Scalar _tmp873 = _tmp177 * _tmp856 + _tmp180 * _tmp872 + _tmp182 * _tmp871;
  const Scalar _tmp874 = _tmp0 * _tmp873;
  const Scalar _tmp875 = _tmp161 * _tmp872 + _tmp171 * _tmp871 + _tmp6 * _tmp856;
  const Scalar _tmp876 = _tmp192 * _tmp856 + _tmp194 * _tmp872 + _tmp195 * _tmp871;
  const Scalar _tmp877 = _tmp0 * (_tmp191 * _tmp876 - _tmp200 * _tmp875);
  const Scalar _tmp878 = _tmp0 * _tmp876;
  const Scalar _tmp879 = _tmp0 * _tmp875;
  const Scalar _tmp880 = -_tmp191 * _tmp873 + _tmp202 * _tmp875;
  const Scalar _tmp881 = _tmp0 * _tmp880;
  const Scalar _tmp882 = _tmp200 * _tmp873 - _tmp202 * _tmp876;
  const Scalar _tmp883 = _tmp0 * _tmp882;
  const Scalar _tmp884 = _tmp238 * _tmp261;
  const Scalar _tmp885 = _tmp239 * _tmp261 + _tmp248 * _tmp261 + _tmp250 * _tmp261 -
                         _tmp261 * _tmp586 - _tmp261 * _tmp587 - _tmp261 * _tmp588 + _tmp497 +
                         _tmp842;
  const Scalar _tmp886 = _tmp402 * _tmp885;
  const Scalar _tmp887 = _tmp261 * _tmp515;
  const Scalar _tmp888 = _tmp33 * _tmp886 - _tmp405 * _tmp884 + _tmp405 * _tmp887 -
                         _tmp406 * _tmp822 - _tmp560 * _tmp885;
  const Scalar _tmp889 =
      -_tmp261 * _tmp422 + _tmp40 * _tmp886 + _tmp421 * _tmp887 + _tmp526 - _tmp527 * _tmp885;
  const Scalar _tmp890 = _tmp348 * _tmp672;
  const Scalar _tmp891 = -_tmp698 - _tmp699 + _tmp700 + _tmp701;
  const Scalar _tmp892 = _tmp751 * _tmp813;
  const Scalar _tmp893 = _tmp664 * _tmp891;
  const Scalar _tmp894 = _tmp311 * _tmp893;
  const Scalar _tmp895 = _tmp692 - _tmp693 + _tmp694 - _tmp695;
  const Scalar _tmp896 = _tmp318 * _tmp895 + _tmp352 * _tmp672;
  const Scalar _tmp897 = _tmp676 * _tmp894 - _tmp681 * _tmp891 - _tmp682 * _tmp891 -
                         _tmp683 * _tmp891 + _tmp684 * _tmp894 + _tmp691 * _tmp894 + _tmp777 +
                         _tmp896;
  const Scalar _tmp898 = -_tmp749 * _tmp78 - _tmp811 * _tmp897 + _tmp812 * _tmp897 -
                         _tmp814 * _tmp894 + _tmp891 * _tmp892;
  const Scalar _tmp899 = _tmp86 * _tmp895;
  const Scalar _tmp900 = _tmp328 * _tmp899;
  const Scalar _tmp901 = -_tmp747 * _tmp900;
  const Scalar _tmp902 = _tmp750 * _tmp751;
  const Scalar _tmp903 =
      _tmp746 * _tmp897 - _tmp753 * _tmp897 - _tmp754 * _tmp894 + _tmp891 * _tmp902 + _tmp901;
  const Scalar _tmp904 = _tmp792 * _tmp893;
  const Scalar _tmp905 = _tmp790 * _tmp894;
  const Scalar _tmp906 = _tmp796 * _tmp897;
  const Scalar _tmp907 = _tmp711 * _tmp78;
  const Scalar _tmp908 = _tmp897 * _tmp907;
  const Scalar _tmp909 = _tmp798 * _tmp897;
  const Scalar _tmp910 = _tmp751 * _tmp803;
  const Scalar _tmp911 = _tmp60 * _tmp895;
  const Scalar _tmp912 = _tmp329 * _tmp672 + _tmp358 * _tmp911;
  const Scalar _tmp913 =
      _tmp802 * _tmp897 + _tmp804 * _tmp894 - _tmp805 * _tmp897 - _tmp891 * _tmp910 + _tmp912;
  const Scalar _tmp914 = _tmp86 * _tmp893;
  const Scalar _tmp915 = _tmp666 * _tmp914;
  const Scalar _tmp916 = _tmp707 * _tmp897;
  const Scalar _tmp917 = _tmp721 * _tmp897;
  const Scalar _tmp918 = _tmp712 * _tmp897;
  const Scalar _tmp919 = _tmp718 * _tmp86;
  const Scalar _tmp920 = _tmp891 * _tmp919;
  const Scalar _tmp921 = _tmp350 * _tmp895;
  const Scalar _tmp922 = _tmp672 * _tmp738;
  const Scalar _tmp923 = _tmp921 + _tmp922;
  const Scalar _tmp924 = _tmp723 * _tmp736;
  const Scalar _tmp925 = _tmp60 * _tmp893;
  const Scalar _tmp926 = _tmp328 * _tmp730 * _tmp80;
  const Scalar _tmp927 = _tmp728 * _tmp78;
  const Scalar _tmp928 =
      _tmp726 * _tmp894 + _tmp801 + _tmp897 * _tmp924 - _tmp897 * _tmp927 - _tmp925 * _tmp926;
  const Scalar _tmp929 =
      _tmp347 * (-_tmp915 + _tmp916 - _tmp917 - _tmp918 + _tmp920 + _tmp923 + _tmp928) +
      _tmp357 * (_tmp898 + _tmp903) +
      _tmp362 * (_tmp715 + _tmp904 - _tmp905 + _tmp906 + _tmp908 - _tmp909 + _tmp913) -
      _tmp830 * _tmp891 + _tmp833 * _tmp891 + _tmp890;
  const Scalar _tmp930 = _tmp772 * _tmp897;
  const Scalar _tmp931 = _tmp770 * _tmp897;
  const Scalar _tmp932 = _tmp768 * _tmp897;
  const Scalar _tmp933 = _tmp763 * _tmp891;
  const Scalar _tmp934 = _tmp666 * _tmp925;
  const Scalar _tmp935 = _tmp738 * _tmp895;
  const Scalar _tmp936 = _tmp350 * _tmp672;
  const Scalar _tmp937 = _tmp935 - _tmp936;
  const Scalar _tmp938 = _tmp779 * _tmp78;
  const Scalar _tmp939 = _tmp736 * _tmp782;
  const Scalar _tmp940 = _tmp328 * _tmp690;
  const Scalar _tmp941 =
      _tmp783 * _tmp894 - _tmp897 * _tmp938 + _tmp897 * _tmp939 - _tmp914 * _tmp926 + _tmp940;
  const Scalar _tmp942 = _tmp348 * _tmp895;
  const Scalar _tmp943 = -_tmp672 * _tmp756;
  const Scalar _tmp944 =
      _tmp758 * _tmp897 - _tmp759 * _tmp894 - _tmp760 * _tmp897 + _tmp761 * _tmp891 + _tmp943;
  const Scalar _tmp945 =
      _tmp347 * (-_tmp930 + _tmp931 + _tmp932 - _tmp933 + _tmp934 + _tmp937 + _tmp941) +
      _tmp357 * (_tmp714 - _tmp904 + _tmp905 - _tmp906 - _tmp908 + _tmp909 + _tmp913) +
      _tmp362 * (_tmp898 + _tmp944) - _tmp788 * _tmp891 + _tmp819 * _tmp891 + _tmp942;
  const Scalar _tmp946 = _tmp935 + _tmp936;
  const Scalar _tmp947 = -_tmp921 + _tmp922;
  const Scalar _tmp948 =
      _tmp347 * (_tmp903 + _tmp944) +
      _tmp357 * (_tmp915 - _tmp916 + _tmp917 + _tmp918 - _tmp920 + _tmp928 + _tmp947) +
      _tmp362 * (_tmp930 - _tmp931 - _tmp932 + _tmp933 - _tmp934 + _tmp941 + _tmp946) +
      _tmp744 * _tmp891 - _tmp786 * _tmp891 + _tmp810;
  const Scalar _tmp949 = _tmp32 * _tmp885;
  const Scalar _tmp950 = _tmp283 * _tmp949;
  const Scalar _tmp951 = _tmp225 * _tmp949;
  const Scalar _tmp952 = _tmp261 * _tmp279;
  const Scalar _tmp953 = _tmp287 * _tmp949;
  const Scalar _tmp954 = _tmp274 * _tmp887;
  const Scalar _tmp955 =
      _tmp261 * _tmp866 + _tmp552 * _tmp885 + _tmp555 - _tmp603 * _tmp885 - _tmp865 * _tmp887;
  const Scalar _tmp956 = _tmp261 * _tmp506;
  const Scalar _tmp957 = _tmp503 * _tmp885;
  const Scalar _tmp958 = _tmp626 * _tmp885;
  const Scalar _tmp959 = _tmp428 * _tmp887;
  const Scalar _tmp960 = _tmp499 * _tmp885;
  const Scalar _tmp961 = _tmp286 * _tmp824;
  const Scalar _tmp962 =
      _tmp297 * _tmp949 + _tmp436 * _tmp884 - _tmp436 * _tmp887 - _tmp845 * _tmp885 + _tmp961;
  const Scalar _tmp963 =
      -_tmp261 * _tmp448 + _tmp261 * _tmp868 + _tmp363 * (_tmp888 + _tmp889) +
      _tmp374 * (_tmp568 + _tmp956 + _tmp957 - _tmp958 - _tmp959 + _tmp960 + _tmp962) +
      _tmp413 * (_tmp847 - _tmp950 + _tmp951 - _tmp952 - _tmp953 + _tmp954 + _tmp955) +
      _tmp563 * _tmp929 + _tmp564 * _tmp945 + _tmp565 * _tmp948 + _tmp567;
  const Scalar _tmp964 = _tmp382 * _tmp885;
  const Scalar _tmp965 = _tmp261 * _tmp380;
  const Scalar _tmp966 = _tmp533 * _tmp885;
  const Scalar _tmp967 = _tmp385 * _tmp887;
  const Scalar _tmp968 = _tmp376 * _tmp885;
  const Scalar _tmp969 =
      _tmp261 * _tmp619 - _tmp387 * _tmp887 + _tmp539 * _tmp949 - _tmp620 * _tmp885 + _tmp864;
  const Scalar _tmp970 =
      _tmp20 * _tmp886 - _tmp396 * _tmp884 + _tmp396 * _tmp887 + _tmp522 - _tmp523 * _tmp885;
  const Scalar _tmp971 =
      -_tmp261 * _tmp440 + _tmp261 * _tmp636 +
      _tmp363 * (_tmp511 - _tmp956 - _tmp957 + _tmp958 + _tmp959 - _tmp960 + _tmp962) +
      _tmp374 * (_tmp889 + _tmp970) +
      _tmp413 * (_tmp538 + _tmp964 + _tmp965 + _tmp966 - _tmp967 - _tmp968 + _tmp969) +
      _tmp468 * _tmp948 + _tmp471 * _tmp945 + _tmp472 * _tmp929 + _tmp857;
  const Scalar _tmp972 =
      _tmp261 * _tmp557 - _tmp261 * _tmp558 +
      _tmp363 * (_tmp848 + _tmp950 - _tmp951 + _tmp952 + _tmp953 - _tmp954 + _tmp955) +
      _tmp374 * (_tmp559 - _tmp964 - _tmp965 - _tmp966 + _tmp967 + _tmp968 + _tmp969) +
      _tmp413 * (_tmp888 + _tmp970) + _tmp459 * _tmp929 + _tmp462 * _tmp948 + _tmp465 * _tmp945 +
      _tmp545;
  const Scalar _tmp973 = _tmp192 * _tmp971 + _tmp194 * _tmp972 + _tmp195 * _tmp963;
  const Scalar _tmp974 = _tmp0 * _tmp973;
  const Scalar _tmp975 = _tmp177 * _tmp971 + _tmp180 * _tmp972 + _tmp182 * _tmp963;
  const Scalar _tmp976 = _tmp0 * _tmp975;
  const Scalar _tmp977 = _tmp161 * _tmp972 + _tmp171 * _tmp963 + _tmp6 * _tmp971;
  const Scalar _tmp978 = -_tmp191 * _tmp975 + _tmp202 * _tmp977;
  const Scalar _tmp979 = _tmp0 * _tmp978;
  const Scalar _tmp980 = _tmp0 * sqrt_info(0, 0);
  const Scalar _tmp981 = _tmp0 * (_tmp200 * _tmp975 - _tmp202 * _tmp973);
  const Scalar _tmp982 = _tmp0 * (_tmp191 * _tmp973 - _tmp200 * _tmp977);
  const Scalar _tmp983 = _tmp0 * _tmp977;
  const Scalar _tmp984 = _tmp496 * _tmp515;
  const Scalar _tmp985 = _tmp385 * _tmp984;
  const Scalar _tmp986 = _tmp226 * _tmp496;
  const Scalar _tmp987 = _tmp237 * _tmp986;
  const Scalar _tmp988 = _tmp22 * _tmp987 + _tmp249 * _tmp986 + _tmp41 * _tmp987 -
                         _tmp496 * _tmp586 - _tmp496 * _tmp587 - _tmp496 * _tmp588 + _tmp590 +
                         _tmp863;
  const Scalar _tmp989 = _tmp382 * _tmp988;
  const Scalar _tmp990 = _tmp379 * _tmp986;
  const Scalar _tmp991 = _tmp376 * _tmp988;
  const Scalar _tmp992 = _tmp533 * _tmp988;
  const Scalar _tmp993 = _tmp32 * _tmp988;
  const Scalar _tmp994 = _tmp39 * _tmp988;
  const Scalar _tmp995 = -_tmp387 * _tmp984 - _tmp389 * _tmp994 + _tmp390 * _tmp541 * _tmp986 +
                         _tmp539 * _tmp993 + _tmp843;
  const Scalar _tmp996 = _tmp677 * _tmp696;
  const Scalar _tmp997 = _tmp668 - _tmp669 - _tmp670 + _tmp671;
  const Scalar _tmp998 = _tmp78 * _tmp997;
  const Scalar _tmp999 = _tmp317 * _tmp998 + _tmp318 * _tmp891;
  const Scalar _tmp1000 = _tmp676 * _tmp996 - _tmp681 * _tmp696 - _tmp682 * _tmp696 -
                          _tmp683 * _tmp696 + _tmp684 * _tmp996 + _tmp691 * _tmp996 + _tmp800 +
                          _tmp999;
  const Scalar _tmp1001 = _tmp1000 * _tmp772;
  const Scalar _tmp1002 = _tmp696 * _tmp765;
  const Scalar _tmp1003 = _tmp1000 * _tmp768;
  const Scalar _tmp1004 = _tmp696 * _tmp763;
  const Scalar _tmp1005 = _tmp1000 * _tmp770;
  const Scalar _tmp1006 = _tmp696 * _tmp86;
  const Scalar _tmp1007 = _tmp677 * _tmp78;
  const Scalar _tmp1008 = _tmp1000 * _tmp86;
  const Scalar _tmp1009 = _tmp736 * _tmp78;
  const Scalar _tmp1010 = _tmp1000 * _tmp78;
  const Scalar _tmp1011 = _tmp329 * _tmp997 + _tmp738 * _tmp891;
  const Scalar _tmp1012 = _tmp1006 * _tmp1007 * _tmp725 - _tmp1006 * _tmp781 + _tmp1008 * _tmp1009 -
                          _tmp1010 * _tmp779 + _tmp1011;
  const Scalar _tmp1013 = _tmp748 * _tmp86;
  const Scalar _tmp1014 = -_tmp1013 * _tmp891;
  const Scalar _tmp1015 =
      _tmp1000 * _tmp746 - _tmp1000 * _tmp753 + _tmp696 * _tmp902 - _tmp754 * _tmp996;
  const Scalar _tmp1016 = _tmp1000 * _tmp758 - _tmp1000 * _tmp760 - _tmp60 * _tmp749 +
                          _tmp696 * _tmp761 - _tmp759 * _tmp996;
  const Scalar _tmp1017 = _tmp348 * _tmp997;
  const Scalar _tmp1018 = _tmp1008 * _tmp706;
  const Scalar _tmp1019 = _tmp1006 * _tmp667;
  const Scalar _tmp1020 = _tmp1008 * _tmp711;
  const Scalar _tmp1021 = _tmp1006 * _tmp718;
  const Scalar _tmp1022 = _tmp1008 * _tmp720;
  const Scalar _tmp1023 = _tmp353 * _tmp997;
  const Scalar _tmp1024 = _tmp350 * _tmp891;
  const Scalar _tmp1025 = _tmp1023 - _tmp1024;
  const Scalar _tmp1026 =
      -_tmp1010 * _tmp728 + _tmp1010 * _tmp737 - _tmp696 * _tmp734 + _tmp726 * _tmp996 + _tmp778;
  const Scalar _tmp1027 =
      _tmp1017 + _tmp347 * (_tmp1014 + _tmp1015 + _tmp1016) +
      _tmp357 * (-_tmp1018 + _tmp1019 + _tmp1020 - _tmp1021 + _tmp1022 + _tmp1025 + _tmp1026) +
      _tmp362 * (_tmp1001 - _tmp1002 - _tmp1003 + _tmp1004 - _tmp1005 + _tmp1012 + _tmp714) +
      _tmp696 * _tmp744 - _tmp696 * _tmp786;
  const Scalar _tmp1028 = _tmp493 * _tmp496;
  const Scalar _tmp1029 = _tmp1010 * _tmp720;
  const Scalar _tmp1030 = _tmp696 * _tmp793;
  const Scalar _tmp1031 = _tmp1010 * _tmp711;
  const Scalar _tmp1032 = _tmp790 * _tmp996;
  const Scalar _tmp1033 = _tmp1010 * _tmp706;
  const Scalar _tmp1034 = _tmp353 * _tmp891;
  const Scalar _tmp1035 = _tmp350 * _tmp997;
  const Scalar _tmp1036 = _tmp1034 + _tmp1035;
  const Scalar _tmp1037 = _tmp732 * _tmp751;
  const Scalar _tmp1038 = _tmp675 * _tmp677 * _tmp733;
  const Scalar _tmp1039 = -_tmp1006 * _tmp1037 + _tmp1006 * _tmp1038 - _tmp1008 * _tmp728 +
                          _tmp1008 * _tmp737 + _tmp940;
  const Scalar _tmp1040 = _tmp348 * _tmp891;
  const Scalar _tmp1041 = -_tmp748 * _tmp998;
  const Scalar _tmp1042 =
      -_tmp1000 * _tmp811 + _tmp1000 * _tmp812 + _tmp696 * _tmp892 - _tmp814 * _tmp996;
  const Scalar _tmp1043 =
      _tmp1006 * _tmp818 + _tmp1040 +
      _tmp347 * (-_tmp1001 + _tmp1002 + _tmp1003 - _tmp1004 + _tmp1005 + _tmp1012 + _tmp715) +
      _tmp357 * (-_tmp1029 - _tmp1030 - _tmp1031 + _tmp1032 + _tmp1033 + _tmp1036 + _tmp1039) +
      _tmp362 * (_tmp1016 + _tmp1041 + _tmp1042) - _tmp696 * _tmp788;
  const Scalar _tmp1044 = _tmp1023 + _tmp1024;
  const Scalar _tmp1045 = _tmp1014 + _tmp1041;
  const Scalar _tmp1046 = _tmp1034 - _tmp1035;
  const Scalar _tmp1047 =
      _tmp347 * (_tmp1018 - _tmp1019 - _tmp1020 + _tmp1021 - _tmp1022 + _tmp1026 + _tmp1044) +
      _tmp357 * (_tmp1015 + _tmp1042 + _tmp1045) +
      _tmp362 * (_tmp1029 + _tmp1030 + _tmp1031 - _tmp1032 - _tmp1033 + _tmp1039 + _tmp1046) -
      _tmp696 * _tmp830 + _tmp696 * _tmp833 + _tmp810;
  const Scalar _tmp1048 =
      -_tmp396 * _tmp987 + _tmp403 * _tmp988 + _tmp496 * _tmp609 - _tmp523 * _tmp988 + _tmp608;
  const Scalar _tmp1049 = -_tmp418 * _tmp822 + _tmp420 * _tmp988 - _tmp421 * _tmp987 +
                          _tmp496 * _tmp821 - _tmp527 * _tmp988;
  const Scalar _tmp1050 = _tmp283 * _tmp994;
  const Scalar _tmp1051 = _tmp499 * _tmp988;
  const Scalar _tmp1052 = _tmp626 * _tmp988;
  const Scalar _tmp1053 = _tmp278 * _tmp986;
  const Scalar _tmp1054 = _tmp1053 * _tmp39;
  const Scalar _tmp1055 = _tmp428 * _tmp984;
  const Scalar _tmp1056 = _tmp19 * _tmp496;
  const Scalar _tmp1057 =
      -_tmp1056 * _tmp516 + _tmp297 * _tmp993 + _tmp436 * _tmp987 + _tmp630 - _tmp845 * _tmp988;
  const Scalar _tmp1058 =
      _tmp1027 * _tmp468 + _tmp1028 * _tmp443 + _tmp1043 * _tmp471 + _tmp1047 * _tmp472 +
      _tmp363 * (-_tmp1050 - _tmp1051 + _tmp1052 - _tmp1054 + _tmp1055 + _tmp1057 + _tmp847) +
      _tmp374 * (_tmp1048 + _tmp1049) +
      _tmp413 * (_tmp637 - _tmp985 + _tmp989 + _tmp990 - _tmp991 + _tmp992 + _tmp995) -
      _tmp440 * _tmp496 + _tmp635;
  const Scalar _tmp1059 = _tmp1053 * _tmp32;
  const Scalar _tmp1060 = _tmp225 * _tmp993;
  const Scalar _tmp1061 = _tmp274 * _tmp984;
  const Scalar _tmp1062 = _tmp283 * _tmp993;
  const Scalar _tmp1063 = _tmp287 * _tmp993;
  const Scalar _tmp1064 = -_tmp1056 * _tmp551 + _tmp19 * _tmp542 * _tmp986 + _tmp297 * _tmp994 -
                          _tmp603 * _tmp988 + _tmp961;
  const Scalar _tmp1065 =
      -_tmp405 * _tmp987 + _tmp408 * _tmp988 + _tmp496 * _tmp869 - _tmp560 * _tmp988 + _tmp605;
  const Scalar _tmp1066 =
      _tmp1027 * _tmp565 + _tmp1028 * _tmp449 + _tmp1043 * _tmp564 + _tmp1047 * _tmp563 +
      _tmp363 * (_tmp1049 + _tmp1065) +
      _tmp374 * (_tmp1050 + _tmp1051 - _tmp1052 + _tmp1054 - _tmp1055 + _tmp1057 + _tmp848) +
      _tmp413 * (-_tmp1059 + _tmp1060 + _tmp1061 - _tmp1062 - _tmp1063 + _tmp1064 + _tmp623) -
      _tmp448 * _tmp496 + _tmp632;
  const Scalar _tmp1067 =
      _tmp1027 * _tmp462 + _tmp1043 * _tmp465 + _tmp1047 * _tmp459 +
      _tmp363 * (_tmp1059 - _tmp1060 - _tmp1061 + _tmp1062 + _tmp1063 + _tmp1064 + _tmp601) +
      _tmp374 * (_tmp618 + _tmp985 - _tmp989 - _tmp990 + _tmp991 - _tmp992 + _tmp995) +
      _tmp413 * (_tmp1048 + _tmp1065) + _tmp496 * _tmp557 - _tmp496 * _tmp558 + _tmp857;
  const Scalar _tmp1068 = _tmp1058 * _tmp6 + _tmp1066 * _tmp171 + _tmp1067 * _tmp161;
  const Scalar _tmp1069 = _tmp1058 * _tmp192 + _tmp1066 * _tmp195 + _tmp1067 * _tmp194;
  const Scalar _tmp1070 = _tmp0 * (-_tmp1068 * _tmp200 + _tmp1069 * _tmp191);
  const Scalar _tmp1071 = _tmp0 * _tmp1068;
  const Scalar _tmp1072 = _tmp1058 * _tmp177 + _tmp1066 * _tmp182 + _tmp1067 * _tmp180;
  const Scalar _tmp1073 = _tmp1068 * _tmp202 - _tmp1072 * _tmp191;
  const Scalar _tmp1074 = _tmp0 * _tmp1073;
  const Scalar _tmp1075 = _tmp0 * _tmp1072;
  const Scalar _tmp1076 = _tmp0 * (-_tmp1069 * _tmp202 + _tmp1072 * _tmp200);
  const Scalar _tmp1077 = _tmp0 * _tmp1069;
  const Scalar _tmp1078 = lambdas(0, 0) - lambdas(1, 0);
  const Scalar _tmp1079 = _tmp1078 * _tmp651;
  const Scalar _tmp1080 = _tmp0 * _tmp1079;
  const Scalar _tmp1081 = lambdas(0, 1) - lambdas(1, 1);
  const Scalar _tmp1082 = _tmp0 * _tmp1081;
  const Scalar _tmp1083 = _tmp1078 * _tmp654;
  const Scalar _tmp1084 = _tmp0 * _tmp1083;
  const Scalar _tmp1085 = _tmp0 * _tmp659;
  const Scalar _tmp1086 = _tmp1085 * sqrt_info(0, 5);
  const Scalar _tmp1087 = _tmp1078 * _tmp1085;
  const Scalar _tmp1088 = _tmp1078 * _tmp659;
  const Scalar _tmp1089 = (Scalar(1) / Scalar(2)) * _tmp135;
  const Scalar _tmp1090 = (Scalar(1) / Scalar(2)) * _tmp136;
  const Scalar _tmp1091 = (Scalar(1) / Scalar(2)) * _tmp137;
  const Scalar _tmp1092 = (Scalar(1) / Scalar(2)) * _tmp138;
  const Scalar _tmp1093 = _tmp1089 - _tmp1090 + _tmp1091 - _tmp1092;
  const Scalar _tmp1094 = _tmp116 * ((((_tmp23 - _tmp342) > 0) - ((_tmp23 - _tmp342) < 0)) + 1) *
                          (((_tmp341) > 0) - ((_tmp341) < 0));
  const Scalar _tmp1095 = _tmp1094 / _tmp344;
  const Scalar _tmp1096 = _tmp1093 * _tmp1095;
  const Scalar _tmp1097 = _tmp1096 * _tmp139;
  const Scalar _tmp1098 = (Scalar(1) / Scalar(2)) * _tmp111;
  const Scalar _tmp1099 = (Scalar(1) / Scalar(2)) * _tmp112;
  const Scalar _tmp1100 = (Scalar(1) / Scalar(2)) * _tmp115;
  const Scalar _tmp1101 = (Scalar(1) / Scalar(2)) * _tmp113;
  const Scalar _tmp1102 = _tmp356 * (-_tmp1098 - _tmp1099 - _tmp1100 - _tmp1101);
  const Scalar _tmp1103 = _tmp677 * _tmp997;
  const Scalar _tmp1104 = _tmp685 + _tmp686 + _tmp687 + _tmp688;
  const Scalar _tmp1105 = _tmp1104 * _tmp318;
  const Scalar _tmp1106 = _tmp1103 * _tmp676 + _tmp1103 * _tmp684 + _tmp1103 * _tmp691 + _tmp1105 -
                          _tmp681 * _tmp997 - _tmp682 * _tmp997 - _tmp683 * _tmp997 + _tmp703;
  const Scalar _tmp1107 = _tmp1103 * _tmp724;
  const Scalar _tmp1108 =
      _tmp1106 * _tmp758 - _tmp1106 * _tmp760 - _tmp1107 * _tmp144 + _tmp757 + _tmp761 * _tmp997;
  const Scalar _tmp1109 = -_tmp1013 * _tmp1104 - _tmp1103 * _tmp754 + _tmp1106 * _tmp746 -
                          _tmp1106 * _tmp753 + _tmp902 * _tmp997;
  const Scalar _tmp1110 = _tmp128 * _tmp373;
  const Scalar _tmp1111 = _tmp1095 * _tmp110;
  const Scalar _tmp1112 = _tmp1111 * _tmp370;
  const Scalar _tmp1113 = _tmp1094 * _tmp343 * _tmp345 / (_tmp344 * std::sqrt(_tmp344));
  const Scalar _tmp1114 = _tmp1110 * _tmp1113;
  const Scalar _tmp1115 = _tmp1093 * _tmp1113;
  const Scalar _tmp1116 = _tmp110 * _tmp370;
  const Scalar _tmp1117 = _tmp1106 * _tmp772;
  const Scalar _tmp1118 = _tmp765 * _tmp997;
  const Scalar _tmp1119 = _tmp763 * _tmp997;
  const Scalar _tmp1120 = _tmp1106 * _tmp768;
  const Scalar _tmp1121 = _tmp1106 * _tmp770;
  const Scalar _tmp1122 = _tmp80 * _tmp998;
  const Scalar _tmp1123 = _tmp677 * _tmp86;
  const Scalar _tmp1124 = _tmp751 * _tmp86;
  const Scalar _tmp1125 = _tmp1106 * _tmp736;
  const Scalar _tmp1126 = _tmp1104 * _tmp697;
  const Scalar _tmp1127 = _tmp1126 * _tmp328;
  const Scalar _tmp1128 = -_tmp1106 * _tmp938 + _tmp1122 * _tmp1123 * _tmp724 -
                          _tmp1122 * _tmp1124 + _tmp1125 * _tmp782 + _tmp1127;
  const Scalar _tmp1129 = _tmp139 * _tmp368;
  const Scalar _tmp1130 = _tmp1104 * _tmp331;
  const Scalar _tmp1131 = _tmp102 * _tmp1130 * _tmp338;
  const Scalar _tmp1132 = -_tmp1131;
  const Scalar _tmp1133 = _tmp1106 * _tmp712;
  const Scalar _tmp1134 = _tmp1106 * _tmp721;
  const Scalar _tmp1135 = _tmp667 * _tmp86;
  const Scalar _tmp1136 = _tmp1135 * _tmp997;
  const Scalar _tmp1137 = _tmp919 * _tmp997;
  const Scalar _tmp1138 = _tmp1106 * _tmp707;
  const Scalar _tmp1139 =
      -_tmp1037 * _tmp998 + _tmp1038 * _tmp998 - _tmp1106 * _tmp927 + _tmp1125 * _tmp723 + _tmp739;
  const Scalar _tmp1140 = (Scalar(1) / Scalar(2)) * _tmp106;
  const Scalar _tmp1141 = (Scalar(1) / Scalar(2)) * _tmp107;
  const Scalar _tmp1142 = (Scalar(1) / Scalar(2)) * _tmp108;
  const Scalar _tmp1143 = (Scalar(1) / Scalar(2)) * _tmp109;
  const Scalar _tmp1144 = _tmp1140 - _tmp1141 - _tmp1142 + _tmp1143;
  const Scalar _tmp1145 = _tmp1144 * _tmp373;
  const Scalar _tmp1146 = (Scalar(1) / Scalar(2)) * _tmp124;
  const Scalar _tmp1147 = (Scalar(1) / Scalar(2)) * _tmp125;
  const Scalar _tmp1148 = (Scalar(1) / Scalar(2)) * _tmp126;
  const Scalar _tmp1149 = (Scalar(1) / Scalar(2)) * _tmp127;
  const Scalar _tmp1150 = -_tmp1146 - _tmp1147 + _tmp1148 + _tmp1149;
  const Scalar _tmp1151 = _tmp1150 * _tmp356;
  const Scalar _tmp1152 = _tmp1145 * _tmp356 + _tmp1151 * _tmp370;
  const Scalar _tmp1153 =
      -_tmp1093 * _tmp1112 + _tmp1093 * _tmp1114 - _tmp1096 * _tmp1110 - _tmp1097 * _tmp368 +
      _tmp1102 * _tmp368 + _tmp1115 * _tmp1116 + _tmp1115 * _tmp1129 + _tmp1152 +
      _tmp347 * (_tmp1108 + _tmp1109) +
      _tmp357 * (_tmp1132 + _tmp1133 + _tmp1134 + _tmp1136 - _tmp1137 - _tmp1138 + _tmp1139) +
      _tmp362 * (_tmp1117 - _tmp1118 + _tmp1119 - _tmp1120 - _tmp1121 + _tmp1128 + _tmp776) +
      _tmp741 - _tmp785 * _tmp998 + _tmp818 * _tmp998;
  const Scalar _tmp1154 = _tmp139 * _tmp411;
  const Scalar _tmp1155 = _tmp110 * _tmp410;
  const Scalar _tmp1156 = _tmp1106 * _tmp907;
  const Scalar _tmp1157 = _tmp1106 * _tmp796;
  const Scalar _tmp1158 = _tmp718 * _tmp998;
  const Scalar _tmp1159 = _tmp1106 * _tmp798;
  const Scalar _tmp1160 = _tmp667 * _tmp998;
  const Scalar _tmp1161 = _tmp1104 * _tmp352;
  const Scalar _tmp1162 = _tmp1161 * _tmp328;
  const Scalar _tmp1163 =
      -_tmp1106 * _tmp805 + _tmp1107 * _tmp803 + _tmp1125 * _tmp133 + _tmp1162 - _tmp910 * _tmp997;
  const Scalar _tmp1164 = _tmp128 * _tmp412;
  const Scalar _tmp1165 = _tmp1111 * _tmp410;
  const Scalar _tmp1166 = _tmp1113 * _tmp1164;
  const Scalar _tmp1167 =
      -_tmp1106 * _tmp811 + _tmp1106 * _tmp812 - _tmp1107 * _tmp813 + _tmp816 + _tmp892 * _tmp997;
  const Scalar _tmp1168 = _tmp1144 * _tmp356;
  const Scalar _tmp1169 = _tmp1151 * _tmp410 + _tmp1168 * _tmp412;
  const Scalar _tmp1170 =
      -_tmp1093 * _tmp1165 + _tmp1093 * _tmp1166 - _tmp1096 * _tmp1154 - _tmp1096 * _tmp1164 +
      _tmp1102 * _tmp411 + _tmp1115 * _tmp1154 + _tmp1115 * _tmp1155 + _tmp1169 +
      _tmp347 * (_tmp1131 - _tmp1133 - _tmp1134 - _tmp1136 + _tmp1137 + _tmp1138 + _tmp1139) +
      _tmp357 * (_tmp1109 + _tmp1167) +
      _tmp362 * (_tmp1156 + _tmp1157 - _tmp1158 - _tmp1159 + _tmp1160 + _tmp1163 + _tmp831) -
      _tmp830 * _tmp997 + _tmp832 + _tmp833 * _tmp997;
  const Scalar _tmp1171 = _tmp1111 * _tmp340;
  const Scalar _tmp1172 = _tmp139 * _tmp361;
  const Scalar _tmp1173 = _tmp1113 * _tmp1172;
  const Scalar _tmp1174 = _tmp128 * _tmp355;
  const Scalar _tmp1175 = _tmp1095 * _tmp1174;
  const Scalar _tmp1176 = _tmp1130 * _tmp68;
  const Scalar _tmp1177 = _tmp110 * _tmp340;
  const Scalar _tmp1178 = _tmp1113 * _tmp1177;
  const Scalar _tmp1179 = _tmp340 * _tmp356;
  const Scalar _tmp1180 = _tmp1150 * _tmp1179 + _tmp1168 * _tmp355;
  const Scalar _tmp1181 =
      -_tmp1093 * _tmp1171 + _tmp1093 * _tmp1173 - _tmp1093 * _tmp1175 + _tmp1093 * _tmp1178 -
      _tmp1097 * _tmp361 + _tmp1102 * _tmp361 + _tmp1115 * _tmp1174 + _tmp1176 + _tmp1180 +
      _tmp347 * (-_tmp1117 + _tmp1118 - _tmp1119 + _tmp1120 + _tmp1121 + _tmp1128 + _tmp789) +
      _tmp357 * (-_tmp1156 - _tmp1157 + _tmp1158 + _tmp1159 - _tmp1160 + _tmp1163 + _tmp809) +
      _tmp362 * (_tmp1108 + _tmp1167) - _tmp788 * _tmp997 + _tmp819 * _tmp997;
  const Scalar _tmp1182 = _tmp1153 * _tmp468 + _tmp1170 * _tmp472 + _tmp1181 * _tmp471;
  const Scalar _tmp1183 = _tmp1153 * _tmp565 + _tmp1170 * _tmp563 + _tmp1181 * _tmp564;
  const Scalar _tmp1184 = _tmp1153 * _tmp462 + _tmp1170 * _tmp459 + _tmp1181 * _tmp465;
  const Scalar _tmp1185 = _tmp1182 * _tmp6 + _tmp1183 * _tmp171 + _tmp1184 * _tmp161;
  const Scalar _tmp1186 = _tmp1182 * _tmp192 + _tmp1183 * _tmp195 + _tmp1184 * _tmp194;
  const Scalar _tmp1187 = _tmp0 * (-_tmp1185 * _tmp200 + _tmp1186 * _tmp191);
  const Scalar _tmp1188 = _tmp1182 * _tmp177 + _tmp1183 * _tmp182 + _tmp1184 * _tmp180;
  const Scalar _tmp1189 = _tmp1185 * _tmp202 - _tmp1188 * _tmp191;
  const Scalar _tmp1190 = _tmp0 * _tmp1189;
  const Scalar _tmp1191 = _tmp0 * _tmp1186;
  const Scalar _tmp1192 = _tmp0 * _tmp1188;
  const Scalar _tmp1193 = _tmp0 * (-_tmp1186 * _tmp202 + _tmp1188 * _tmp200);
  const Scalar _tmp1194 = _tmp0 * _tmp1185;
  const Scalar _tmp1195 = _tmp311 * _tmp702;
  const Scalar _tmp1196 = _tmp1195 * _tmp664;
  const Scalar _tmp1197 = _tmp1126 + _tmp1196 * _tmp676 + _tmp1196 * _tmp684 + _tmp1196 * _tmp691 -
                          _tmp681 * _tmp702 - _tmp682 * _tmp702 - _tmp683 * _tmp702 + _tmp896;
  const Scalar _tmp1198 = _tmp1197 * _tmp770;
  const Scalar _tmp1199 = _tmp1197 * _tmp768;
  const Scalar _tmp1200 = _tmp702 * _tmp765;
  const Scalar _tmp1201 = _tmp1195 * _tmp717;
  const Scalar _tmp1202 = _tmp1201 * _tmp60;
  const Scalar _tmp1203 = _tmp1197 * _tmp772;
  const Scalar _tmp1204 = _tmp1197 * _tmp86;
  const Scalar _tmp1205 = _tmp1105 * _tmp328;
  const Scalar _tmp1206 = _tmp1009 * _tmp1204 + _tmp1196 * _tmp783 - _tmp1197 * _tmp938 + _tmp1205 -
                          _tmp702 * _tmp781 * _tmp86;
  const Scalar _tmp1207 = _tmp1195 * _tmp742;
  const Scalar _tmp1208 = _tmp1207 * _tmp679;
  const Scalar _tmp1209 = _tmp702 * _tmp751;
  const Scalar _tmp1210 = -_tmp1104 * _tmp815 - _tmp1196 * _tmp814 - _tmp1197 * _tmp811 +
                          _tmp1197 * _tmp812 + _tmp1209 * _tmp813;
  const Scalar _tmp1211 =
      -_tmp1196 * _tmp759 + _tmp1197 * _tmp758 - _tmp1197 * _tmp760 + _tmp1209 * _tmp144 + _tmp943;
  const Scalar _tmp1212 = -_tmp1140 + _tmp1141 + _tmp1142 - _tmp1143;
  const Scalar _tmp1213 = _tmp1197 * _tmp796;
  const Scalar _tmp1214 = _tmp702 * _tmp793;
  const Scalar _tmp1215 = _tmp1197 * _tmp798;
  const Scalar _tmp1216 = _tmp1196 * _tmp790;
  const Scalar _tmp1217 = _tmp1197 * _tmp907;
  const Scalar _tmp1218 =
      _tmp1196 * _tmp804 + _tmp1197 * _tmp802 - _tmp1204 * _tmp728 - _tmp1209 * _tmp803 + _tmp912;
  const Scalar _tmp1219 = _tmp1113 * _tmp1212;
  const Scalar _tmp1220 = _tmp1095 * _tmp1212;
  const Scalar _tmp1221 = _tmp1111 * _tmp1212;
  const Scalar _tmp1222 = _tmp1146 + _tmp1147 - _tmp1148 - _tmp1149;
  const Scalar _tmp1223 = _tmp1222 * _tmp356;
  const Scalar _tmp1224 = _tmp1093 * _tmp356;
  const Scalar _tmp1225 = _tmp1223 * _tmp361 + _tmp1224 * _tmp355;
  const Scalar _tmp1226 =
      _tmp1102 * _tmp340 - _tmp1172 * _tmp1220 + _tmp1173 * _tmp1212 + _tmp1174 * _tmp1219 -
      _tmp1175 * _tmp1212 + _tmp1178 * _tmp1212 + _tmp1208 * _tmp86 - _tmp1221 * _tmp340 +
      _tmp1225 +
      _tmp347 * (_tmp1198 + _tmp1199 + _tmp1200 - _tmp1202 - _tmp1203 + _tmp1206 + _tmp937) +
      _tmp357 * (_tmp1131 - _tmp1213 - _tmp1214 + _tmp1215 + _tmp1216 - _tmp1217 + _tmp1218) +
      _tmp362 * (_tmp1210 + _tmp1211) - _tmp702 * _tmp788 + _tmp942;
  const Scalar _tmp1227 = _tmp1201 * _tmp86;
  const Scalar _tmp1228 = _tmp1204 * _tmp711;
  const Scalar _tmp1229 = _tmp1197 * _tmp721;
  const Scalar _tmp1230 = _tmp1197 * _tmp707;
  const Scalar _tmp1231 = _tmp1135 * _tmp702;
  const Scalar _tmp1232 =
      _tmp1162 + _tmp1196 * _tmp726 + _tmp1197 * _tmp924 - _tmp1197 * _tmp927 - _tmp702 * _tmp734;
  const Scalar _tmp1233 = _tmp1113 * _tmp1129;
  const Scalar _tmp1234 =
      -_tmp1196 * _tmp754 + _tmp1197 * _tmp746 - _tmp1197 * _tmp753 + _tmp1209 * _tmp750 + _tmp901;
  const Scalar _tmp1235 = _tmp1223 * _tmp368 + _tmp1224 * _tmp373;
  const Scalar _tmp1236 =
      _tmp1102 * _tmp370 - _tmp1110 * _tmp1220 + _tmp1114 * _tmp1212 + _tmp1116 * _tmp1219 -
      _tmp1129 * _tmp1220 + _tmp1176 + _tmp1207 * _tmp730 + _tmp1212 * _tmp1233 -
      _tmp1221 * _tmp370 + _tmp1235 + _tmp347 * (_tmp1211 + _tmp1234) +
      _tmp357 * (-_tmp1227 + _tmp1228 + _tmp1229 - _tmp1230 + _tmp1231 + _tmp1232 + _tmp947) +
      _tmp362 * (-_tmp1198 - _tmp1199 - _tmp1200 + _tmp1202 + _tmp1203 + _tmp1206 + _tmp946) -
      _tmp702 * _tmp786;
  const Scalar _tmp1237 = _tmp1223 * _tmp411 + _tmp1224 * _tmp412;
  const Scalar _tmp1238 =
      _tmp1102 * _tmp410 + _tmp1154 * _tmp1219 - _tmp1154 * _tmp1220 + _tmp1155 * _tmp1219 -
      _tmp1164 * _tmp1220 + _tmp1166 * _tmp1212 + _tmp1208 * _tmp60 - _tmp1221 * _tmp410 +
      _tmp1237 +
      _tmp347 * (_tmp1227 - _tmp1228 - _tmp1229 + _tmp1230 - _tmp1231 + _tmp1232 + _tmp923) +
      _tmp357 * (_tmp1210 + _tmp1234) +
      _tmp362 * (_tmp1132 + _tmp1213 + _tmp1214 - _tmp1215 - _tmp1216 + _tmp1217 + _tmp1218) -
      _tmp702 * _tmp830 + _tmp890;
  const Scalar _tmp1239 = _tmp1226 * _tmp465 + _tmp1236 * _tmp462 + _tmp1238 * _tmp459;
  const Scalar _tmp1240 = _tmp1226 * _tmp471 + _tmp1236 * _tmp468 + _tmp1238 * _tmp472;
  const Scalar _tmp1241 = _tmp1226 * _tmp564 + _tmp1236 * _tmp565 + _tmp1238 * _tmp563;
  const Scalar _tmp1242 = _tmp1239 * _tmp180 + _tmp1240 * _tmp177 + _tmp1241 * _tmp182;
  const Scalar _tmp1243 = _tmp0 * _tmp1242;
  const Scalar _tmp1244 = _tmp1239 * _tmp194 + _tmp1240 * _tmp192 + _tmp1241 * _tmp195;
  const Scalar _tmp1245 = _tmp0 * _tmp1244;
  const Scalar _tmp1246 = _tmp0 * (_tmp1242 * _tmp200 - _tmp1244 * _tmp202);
  const Scalar _tmp1247 = _tmp1239 * _tmp161 + _tmp1240 * _tmp6 + _tmp1241 * _tmp171;
  const Scalar _tmp1248 = -_tmp1242 * _tmp191 + _tmp1247 * _tmp202;
  const Scalar _tmp1249 = _tmp0 * _tmp1248;
  const Scalar _tmp1250 = _tmp0 * (_tmp1244 * _tmp191 - _tmp1247 * _tmp200);
  const Scalar _tmp1251 = _tmp0 * _tmp1247;
  const Scalar _tmp1252 = _tmp1095 * _tmp1150;
  const Scalar _tmp1253 = _tmp793 * _tmp895;
  const Scalar _tmp1254 = _tmp677 * _tmp895;
  const Scalar _tmp1255 = _tmp1254 * _tmp790;
  const Scalar _tmp1256 = _tmp1161 + _tmp1254 * _tmp676 + _tmp1254 * _tmp684 + _tmp1254 * _tmp691 -
                          _tmp681 * _tmp895 - _tmp682 * _tmp895 - _tmp683 * _tmp895 + _tmp999;
  const Scalar _tmp1257 = _tmp1256 * _tmp798;
  const Scalar _tmp1258 = _tmp1256 * _tmp796;
  const Scalar _tmp1259 = _tmp1256 * _tmp907;
  const Scalar _tmp1260 = _tmp80 * _tmp911;
  const Scalar _tmp1261 = _tmp1260 * _tmp724;
  const Scalar _tmp1262 = _tmp1123 * _tmp1261 - _tmp1124 * _tmp1260 + _tmp1205 +
                          _tmp1256 * _tmp802 - _tmp1256 * _tmp805;
  const Scalar _tmp1263 =
      -_tmp1254 * _tmp814 - _tmp1256 * _tmp811 + _tmp1256 * _tmp812 + _tmp892 * _tmp895;
  const Scalar _tmp1264 =
      -_tmp1254 * _tmp754 + _tmp1256 * _tmp746 - _tmp1256 * _tmp753 + _tmp895 * _tmp902;
  const Scalar _tmp1265 = _tmp1113 * _tmp1150;
  const Scalar _tmp1266 = _tmp718 * _tmp899;
  const Scalar _tmp1267 = _tmp667 * _tmp899;
  const Scalar _tmp1268 = _tmp1256 * _tmp721;
  const Scalar _tmp1269 = _tmp1256 * _tmp707;
  const Scalar _tmp1270 = _tmp1256 * _tmp712;
  const Scalar _tmp1271 =
      _tmp1007 * _tmp1261 + _tmp1127 + _tmp1256 * _tmp924 - _tmp1256 * _tmp927 - _tmp1260 * _tmp780;
  const Scalar _tmp1272 = -_tmp1089 + _tmp1090 - _tmp1091 + _tmp1092;
  const Scalar _tmp1273 = _tmp1272 * _tmp356;
  const Scalar _tmp1274 = _tmp1212 * _tmp356;
  const Scalar _tmp1275 = _tmp1273 * _tmp410 + _tmp1274 * _tmp411;
  const Scalar _tmp1276 =
      _tmp1102 * _tmp412 - _tmp1150 * _tmp1165 + _tmp1150 * _tmp1166 - _tmp1154 * _tmp1252 +
      _tmp1154 * _tmp1265 + _tmp1155 * _tmp1265 - _tmp1164 * _tmp1252 + _tmp1176 + _tmp1275 +
      _tmp347 * (_tmp1044 + _tmp1266 - _tmp1267 - _tmp1268 + _tmp1269 - _tmp1270 + _tmp1271) +
      _tmp357 * (_tmp1045 + _tmp1263 + _tmp1264) +
      _tmp362 * (_tmp1046 + _tmp1253 - _tmp1255 - _tmp1257 + _tmp1258 + _tmp1259 + _tmp1262) -
      _tmp785 * _tmp911 + _tmp818 * _tmp911;
  const Scalar _tmp1277 = -_tmp1104 * _tmp756 - _tmp1254 * _tmp759 + _tmp1256 * _tmp758 -
                          _tmp1256 * _tmp760 + _tmp761 * _tmp895;
  const Scalar _tmp1278 = _tmp667 * _tmp911;
  const Scalar _tmp1279 = _tmp718 * _tmp911;
  const Scalar _tmp1280 = _tmp1256 * _tmp333;
  const Scalar _tmp1281 = _tmp1280 * _tmp705;
  const Scalar _tmp1282 = _tmp1280 * _tmp767;
  const Scalar _tmp1283 = _tmp1256 * _tmp770;
  const Scalar _tmp1284 = _tmp80 * _tmp900;
  const Scalar _tmp1285 = _tmp1007 * _tmp1284 * _tmp675 + _tmp1011 - _tmp1256 * _tmp938 +
                          _tmp1256 * _tmp939 - _tmp1284 * _tmp731;
  const Scalar _tmp1286 = _tmp1179 * _tmp1272 + _tmp1274 * _tmp361;
  const Scalar _tmp1287 =
      _tmp1040 + _tmp1102 * _tmp355 - _tmp1150 * _tmp1171 + _tmp1150 * _tmp1173 +
      _tmp1150 * _tmp1178 - _tmp1172 * _tmp1252 - _tmp1174 * _tmp1252 + _tmp1174 * _tmp1265 +
      _tmp1286 +
      _tmp347 * (_tmp1132 + _tmp1278 - _tmp1279 - _tmp1281 + _tmp1282 + _tmp1283 + _tmp1285) +
      _tmp357 * (_tmp1036 - _tmp1253 + _tmp1255 + _tmp1257 - _tmp1258 - _tmp1259 + _tmp1262) +
      _tmp362 * (_tmp1041 + _tmp1263 + _tmp1277) - _tmp788 * _tmp895 + _tmp818 * _tmp899;
  const Scalar _tmp1288 = _tmp1273 * _tmp370 + _tmp1274 * _tmp368;
  const Scalar _tmp1289 =
      _tmp1017 + _tmp1102 * _tmp373 - _tmp1110 * _tmp1252 - _tmp1112 * _tmp1150 +
      _tmp1114 * _tmp1150 + _tmp1116 * _tmp1265 - _tmp1129 * _tmp1252 + _tmp1150 * _tmp1233 +
      _tmp1288 + _tmp347 * (_tmp1014 + _tmp1264 + _tmp1277) +
      _tmp357 * (_tmp1025 - _tmp1266 + _tmp1267 + _tmp1268 - _tmp1269 + _tmp1270 + _tmp1271) +
      _tmp362 * (_tmp1131 - _tmp1278 + _tmp1279 + _tmp1281 - _tmp1282 - _tmp1283 + _tmp1285) +
      _tmp744 * _tmp895 - _tmp786 * _tmp895;
  const Scalar _tmp1290 = _tmp1276 * _tmp459 + _tmp1287 * _tmp465 + _tmp1289 * _tmp462;
  const Scalar _tmp1291 = _tmp1276 * _tmp563 + _tmp1287 * _tmp564 + _tmp1289 * _tmp565;
  const Scalar _tmp1292 = _tmp1276 * _tmp472 + _tmp1287 * _tmp471 + _tmp1289 * _tmp468;
  const Scalar _tmp1293 = _tmp1290 * _tmp161 + _tmp1291 * _tmp171 + _tmp1292 * _tmp6;
  const Scalar _tmp1294 = _tmp1290 * _tmp194 + _tmp1291 * _tmp195 + _tmp1292 * _tmp192;
  const Scalar _tmp1295 = _tmp0 * _tmp1294;
  const Scalar _tmp1296 = _tmp1290 * _tmp180 + _tmp1291 * _tmp182 + _tmp1292 * _tmp177;
  const Scalar _tmp1297 = _tmp1293 * _tmp202 - _tmp1296 * _tmp191;
  const Scalar _tmp1298 = _tmp0 * _tmp1297;
  const Scalar _tmp1299 = _tmp0 * _tmp1296;
  const Scalar _tmp1300 = _tmp0 * (-_tmp1294 * _tmp202 + _tmp1296 * _tmp200);
  const Scalar _tmp1301 = _tmp0 * (-_tmp1293 * _tmp200 + _tmp1294 * _tmp191);
  const Scalar _tmp1302 = _tmp0 * _tmp1293;
  const Scalar _tmp1303 = lambdas(1, 0) - lambdas(2, 0);
  const Scalar _tmp1304 = _tmp0 * _tmp1303;
  const Scalar _tmp1305 = _tmp1304 * _tmp654;
  const Scalar _tmp1306 = _tmp1304 * _tmp651;
  const Scalar _tmp1307 = lambdas(1, 1) - lambdas(2, 1);
  const Scalar _tmp1308 = _tmp0 * _tmp1307;
  const Scalar _tmp1309 = _tmp1303 * _tmp654;
  const Scalar _tmp1310 = _tmp1303 * _tmp651;
  const Scalar _tmp1311 = _tmp1085 * _tmp1303;
  const Scalar _tmp1312 = _tmp1304 * sqrt_info(4, 3);
  const Scalar _tmp1313 = _tmp1303 * _tmp659;
  const Scalar _tmp1314 = _tmp1098 + _tmp1099 + _tmp1100 + _tmp1101;
  const Scalar _tmp1315 = _tmp1314 * _tmp356;
  const Scalar _tmp1316 = _tmp1095 * _tmp1272;
  const Scalar _tmp1317 = _tmp1316 * _tmp139;
  const Scalar _tmp1318 = _tmp1113 * _tmp1272;
  const Scalar _tmp1319 = -_tmp1171 * _tmp1272 + _tmp1173 * _tmp1272 - _tmp1174 * _tmp1316 +
                          _tmp1174 * _tmp1318 + _tmp1178 * _tmp1272 + _tmp1180 +
                          _tmp1315 * _tmp361 - _tmp1317 * _tmp361;
  const Scalar _tmp1320 = -_tmp1110 * _tmp1316 - _tmp1112 * _tmp1272 + _tmp1114 * _tmp1272 +
                          _tmp1116 * _tmp1318 + _tmp1152 + _tmp1233 * _tmp1272 +
                          _tmp1315 * _tmp368 - _tmp1317 * _tmp368;
  const Scalar _tmp1321 = -_tmp1154 * _tmp1316 + _tmp1154 * _tmp1318 + _tmp1155 * _tmp1318 -
                          _tmp1164 * _tmp1316 - _tmp1165 * _tmp1272 + _tmp1166 * _tmp1272 +
                          _tmp1169 + _tmp1315 * _tmp411;
  const Scalar _tmp1322 = _tmp1319 * _tmp465 + _tmp1320 * _tmp462 + _tmp1321 * _tmp459;
  const Scalar _tmp1323 = _tmp1319 * _tmp471 + _tmp1320 * _tmp468 + _tmp1321 * _tmp472;
  const Scalar _tmp1324 = _tmp1319 * _tmp564 + _tmp1320 * _tmp565 + _tmp1321 * _tmp563;
  const Scalar _tmp1325 = _tmp1322 * _tmp161 + _tmp1323 * _tmp6 + _tmp1324 * _tmp171;
  const Scalar _tmp1326 = _tmp0 * _tmp1325;
  const Scalar _tmp1327 = _tmp1322 * _tmp180 + _tmp1323 * _tmp177 + _tmp1324 * _tmp182;
  const Scalar _tmp1328 = _tmp0 * _tmp1327;
  const Scalar _tmp1329 = _tmp1322 * _tmp194 + _tmp1323 * _tmp192 + _tmp1324 * _tmp195;
  const Scalar _tmp1330 = _tmp0 * _tmp1329;
  const Scalar _tmp1331 = _tmp1325 * _tmp202 - _tmp1327 * _tmp191;
  const Scalar _tmp1332 = _tmp0 * _tmp1331;
  const Scalar _tmp1333 = _tmp0 * (-_tmp1325 * _tmp200 + _tmp1329 * _tmp191);
  const Scalar _tmp1334 = _tmp0 * (_tmp1327 * _tmp200 - _tmp1329 * _tmp202);
  const Scalar _tmp1335 = _tmp1095 * _tmp1144;
  const Scalar _tmp1336 = _tmp1145 * _tmp128;
  const Scalar _tmp1337 = _tmp1113 * _tmp1144;
  const Scalar _tmp1338 = -_tmp1095 * _tmp1336 - _tmp1112 * _tmp1144 + _tmp1113 * _tmp1336 +
                          _tmp1116 * _tmp1337 - _tmp1129 * _tmp1335 + _tmp1129 * _tmp1337 +
                          _tmp1235 + _tmp1315 * _tmp370;
  const Scalar _tmp1339 = -_tmp1144 * _tmp1165 + _tmp1144 * _tmp1166 - _tmp1154 * _tmp1335 +
                          _tmp1154 * _tmp1337 + _tmp1155 * _tmp1337 - _tmp1164 * _tmp1335 +
                          _tmp1237 + _tmp1315 * _tmp410;
  const Scalar _tmp1340 = -_tmp1144 * _tmp1171 - _tmp1144 * _tmp1175 - _tmp1172 * _tmp1335 +
                          _tmp1172 * _tmp1337 + _tmp1174 * _tmp1337 + _tmp1177 * _tmp1337 +
                          _tmp1179 * _tmp1314 + _tmp1225;
  const Scalar _tmp1341 = _tmp1338 * _tmp565 + _tmp1339 * _tmp563 + _tmp1340 * _tmp564;
  const Scalar _tmp1342 = _tmp1338 * _tmp462 + _tmp1339 * _tmp459 + _tmp1340 * _tmp465;
  const Scalar _tmp1343 = _tmp1338 * _tmp468 + _tmp1339 * _tmp472 + _tmp1340 * _tmp471;
  const Scalar _tmp1344 = _tmp1341 * _tmp195 + _tmp1342 * _tmp194 + _tmp1343 * _tmp192;
  const Scalar _tmp1345 = _tmp0 * _tmp1344;
  const Scalar _tmp1346 = _tmp1341 * _tmp182 + _tmp1342 * _tmp180 + _tmp1343 * _tmp177;
  const Scalar _tmp1347 = _tmp0 * (-_tmp1344 * _tmp202 + _tmp1346 * _tmp200);
  const Scalar _tmp1348 = _tmp1341 * _tmp171 + _tmp1342 * _tmp161 + _tmp1343 * _tmp6;
  const Scalar _tmp1349 = _tmp0 * _tmp1348;
  const Scalar _tmp1350 = -_tmp1346 * _tmp191 + _tmp1348 * _tmp202;
  const Scalar _tmp1351 = _tmp0 * _tmp1350;
  const Scalar _tmp1352 = _tmp0 * _tmp1346;
  const Scalar _tmp1353 = _tmp0 * (_tmp1344 * _tmp191 - _tmp1348 * _tmp200);
  const Scalar _tmp1354 = _tmp1113 * _tmp1222;
  const Scalar _tmp1355 = _tmp1095 * _tmp1222;
  const Scalar _tmp1356 = -_tmp1110 * _tmp1355 - _tmp1112 * _tmp1222 + _tmp1114 * _tmp1222 +
                          _tmp1116 * _tmp1354 + _tmp1129 * _tmp1354 - _tmp1129 * _tmp1355 +
                          _tmp1288 + _tmp1315 * _tmp373;
  const Scalar _tmp1357 = _tmp1154 * _tmp1354 - _tmp1154 * _tmp1355 + _tmp1155 * _tmp1354 -
                          _tmp1164 * _tmp1355 - _tmp1165 * _tmp1222 + _tmp1166 * _tmp1222 +
                          _tmp1275 + _tmp1315 * _tmp412;
  const Scalar _tmp1358 = -_tmp1171 * _tmp1222 - _tmp1172 * _tmp1355 + _tmp1173 * _tmp1222 +
                          _tmp1174 * _tmp1354 - _tmp1175 * _tmp1222 + _tmp1178 * _tmp1222 +
                          _tmp1286 + _tmp1315 * _tmp355;
  const Scalar _tmp1359 = _tmp1356 * _tmp565 + _tmp1357 * _tmp563 + _tmp1358 * _tmp564;
  const Scalar _tmp1360 = _tmp1356 * _tmp462 + _tmp1357 * _tmp459 + _tmp1358 * _tmp465;
  const Scalar _tmp1361 = _tmp1356 * _tmp468 + _tmp1357 * _tmp472 + _tmp1358 * _tmp471;
  const Scalar _tmp1362 = _tmp1359 * _tmp171 + _tmp1360 * _tmp161 + _tmp1361 * _tmp6;
  const Scalar _tmp1363 = _tmp1359 * _tmp182 + _tmp1360 * _tmp180 + _tmp1361 * _tmp177;
  const Scalar _tmp1364 = _tmp0 * _tmp1363;
  const Scalar _tmp1365 = _tmp1359 * _tmp195 + _tmp1360 * _tmp194 + _tmp1361 * _tmp192;
  const Scalar _tmp1366 = _tmp0 * _tmp1365;
  const Scalar _tmp1367 = _tmp1362 * _tmp202 - _tmp1363 * _tmp191;
  const Scalar _tmp1368 = _tmp0 * _tmp1367;
  const Scalar _tmp1369 = _tmp0 * (-_tmp1362 * _tmp200 + _tmp1365 * _tmp191);
  const Scalar _tmp1370 = _tmp0 * (_tmp1363 * _tmp200 - _tmp1365 * _tmp202);
  const Scalar _tmp1371 = _tmp0 * _tmp1362;
  const Scalar _tmp1372 = _tmp654 * lambdas(2, 0);
  const Scalar _tmp1373 = _tmp0 * _tmp1372;
  const Scalar _tmp1374 = _tmp0 * lambdas(2, 1);
  const Scalar _tmp1375 = _tmp651 * lambdas(2, 0);
  const Scalar _tmp1376 = _tmp0 * _tmp1375;
  const Scalar _tmp1377 = _tmp1085 * lambdas(2, 0);
  const Scalar _tmp1378 = _tmp659 * lambdas(2, 0);

  // Output terms (5)
  Eigen::Matrix<Scalar, 6, 1> _res;

  _res(0, 0) = _tmp174 * sqrt_info(0, 0) + _tmp184 * sqrt_info(0, 2) + _tmp201 * sqrt_info(0, 5) +
               _tmp203 * sqrt_info(0, 3) + _tmp204 * sqrt_info(0, 4) + _tmp205 * sqrt_info(0, 1);
  _res(1, 0) = _tmp174 * sqrt_info(1, 0) + _tmp184 * sqrt_info(1, 2) + _tmp201 * sqrt_info(1, 5) +
               _tmp203 * sqrt_info(1, 3) + _tmp204 * sqrt_info(1, 4) + _tmp205 * sqrt_info(1, 1);
  _res(2, 0) = _tmp174 * sqrt_info(2, 0) + _tmp184 * sqrt_info(2, 2) + _tmp201 * sqrt_info(2, 5) +
               _tmp203 * sqrt_info(2, 3) + _tmp204 * sqrt_info(2, 4) + _tmp205 * sqrt_info(2, 1);
  _res(3, 0) = _tmp174 * sqrt_info(3, 0) + _tmp184 * sqrt_info(3, 2) + _tmp201 * sqrt_info(3, 5) +
               _tmp203 * sqrt_info(3, 3) + _tmp204 * sqrt_info(3, 4) + _tmp205 * sqrt_info(3, 1);
  _res(4, 0) = _tmp174 * sqrt_info(4, 0) + _tmp184 * sqrt_info(4, 2) + _tmp201 * sqrt_info(4, 5) +
               _tmp203 * sqrt_info(4, 3) + _tmp204 * sqrt_info(4, 4) + _tmp205 * sqrt_info(4, 1);
  _res(5, 0) = _tmp174 * sqrt_info(5, 0) + _tmp184 * sqrt_info(5, 2) + _tmp201 * sqrt_info(5, 5) +
               _tmp203 * sqrt_info(5, 3) + _tmp204 * sqrt_info(5, 4) + _tmp205 * sqrt_info(5, 1);

  if (res_D_x0 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x0{res_D_x0};

    _res_D_x0(0, 0) = _tmp475 * sqrt_info(0, 1) + _tmp480 * sqrt_info(0, 2) +
                      _tmp483 * sqrt_info(0, 0) + _tmp484 * sqrt_info(0, 3) +
                      _tmp485 * sqrt_info(0, 5) + _tmp487 * sqrt_info(0, 4);
    _res_D_x0(1, 0) = _tmp474 * _tmp488 + _tmp480 * sqrt_info(1, 2) + _tmp483 * sqrt_info(1, 0) +
                      _tmp484 * sqrt_info(1, 3) + _tmp485 * sqrt_info(1, 5) +
                      _tmp487 * sqrt_info(1, 4);
    _res_D_x0(2, 0) = _tmp475 * sqrt_info(2, 1) + _tmp480 * sqrt_info(2, 2) +
                      _tmp483 * sqrt_info(2, 0) + _tmp484 * sqrt_info(2, 3) +
                      _tmp485 * sqrt_info(2, 5) + _tmp487 * sqrt_info(2, 4);
    _res_D_x0(3, 0) = _tmp475 * sqrt_info(3, 1) + _tmp480 * sqrt_info(3, 2) +
                      _tmp483 * sqrt_info(3, 0) + _tmp484 * sqrt_info(3, 3) +
                      _tmp485 * sqrt_info(3, 5) + _tmp486 * _tmp489;
    _res_D_x0(4, 0) = _tmp475 * sqrt_info(4, 1) + _tmp479 * _tmp490 + _tmp483 * sqrt_info(4, 0) +
                      _tmp484 * sqrt_info(4, 3) + _tmp485 * sqrt_info(4, 5) +
                      _tmp487 * sqrt_info(4, 4);
    _res_D_x0(5, 0) = _tmp474 * _tmp491 + _tmp480 * sqrt_info(5, 2) + _tmp483 * sqrt_info(5, 0) +
                      _tmp484 * sqrt_info(5, 3) + _tmp485 * sqrt_info(5, 5) +
                      _tmp487 * sqrt_info(5, 4);
    _res_D_x0(0, 1) = _tmp572 * sqrt_info(0, 1) + _tmp576 * sqrt_info(0, 0) +
                      _tmp577 * sqrt_info(0, 5) + _tmp581 * sqrt_info(0, 4) +
                      _tmp583 * sqrt_info(0, 3) + _tmp584 * sqrt_info(0, 2);
    _res_D_x0(1, 1) = _tmp572 * sqrt_info(1, 1) + _tmp576 * sqrt_info(1, 0) +
                      _tmp577 * sqrt_info(1, 5) + _tmp581 * sqrt_info(1, 4) +
                      _tmp583 * sqrt_info(1, 3) + _tmp584 * sqrt_info(1, 2);
    _res_D_x0(2, 1) = _tmp572 * sqrt_info(2, 1) + _tmp576 * sqrt_info(2, 0) +
                      _tmp577 * sqrt_info(2, 5) + _tmp581 * sqrt_info(2, 4) +
                      _tmp583 * sqrt_info(2, 3) + _tmp584 * sqrt_info(2, 2);
    _res_D_x0(3, 1) = _tmp489 * _tmp580 + _tmp572 * sqrt_info(3, 1) + _tmp576 * sqrt_info(3, 0) +
                      _tmp577 * sqrt_info(3, 5) + _tmp583 * sqrt_info(3, 3) +
                      _tmp584 * sqrt_info(3, 2);
    _res_D_x0(4, 1) = _tmp490 * _tmp579 + _tmp572 * sqrt_info(4, 1) + _tmp576 * sqrt_info(4, 0) +
                      _tmp577 * sqrt_info(4, 5) + _tmp581 * sqrt_info(4, 4) +
                      _tmp583 * sqrt_info(4, 3);
    _res_D_x0(5, 1) = _tmp572 * sqrt_info(5, 1) + _tmp576 * sqrt_info(5, 0) +
                      _tmp577 * sqrt_info(5, 5) + _tmp581 * sqrt_info(5, 4) + _tmp582 * _tmp585 +
                      _tmp584 * sqrt_info(5, 2);
    _res_D_x0(0, 2) = _tmp641 * sqrt_info(0, 3) + _tmp642 * sqrt_info(0, 1) +
                      _tmp643 * sqrt_info(0, 2) + _tmp645 * sqrt_info(0, 5) +
                      _tmp646 * sqrt_info(0, 0) + _tmp648 * sqrt_info(0, 4);
    _res_D_x0(1, 2) = _tmp488 * _tmp640 + _tmp641 * sqrt_info(1, 3) + _tmp643 * sqrt_info(1, 2) +
                      _tmp645 * sqrt_info(1, 5) + _tmp646 * sqrt_info(1, 0) +
                      _tmp648 * sqrt_info(1, 4);
    _res_D_x0(2, 2) = _tmp641 * sqrt_info(2, 3) + _tmp642 * sqrt_info(2, 1) +
                      _tmp643 * sqrt_info(2, 2) + _tmp645 * sqrt_info(2, 5) +
                      _tmp646 * sqrt_info(2, 0) + _tmp648 * sqrt_info(2, 4);
    _res_D_x0(3, 2) = _tmp489 * _tmp647 + _tmp641 * sqrt_info(3, 3) + _tmp642 * sqrt_info(3, 1) +
                      _tmp643 * sqrt_info(3, 2) + _tmp645 * sqrt_info(3, 5) +
                      _tmp646 * sqrt_info(3, 0);
    _res_D_x0(4, 2) = _tmp490 * _tmp639 + _tmp641 * sqrt_info(4, 3) + _tmp642 * sqrt_info(4, 1) +
                      _tmp645 * sqrt_info(4, 5) + _tmp646 * sqrt_info(4, 0) +
                      _tmp648 * sqrt_info(4, 4);
    _res_D_x0(5, 2) = _tmp491 * _tmp640 + _tmp641 * sqrt_info(5, 3) + _tmp643 * sqrt_info(5, 2) +
                      _tmp645 * sqrt_info(5, 5) + _tmp646 * sqrt_info(5, 0) +
                      _tmp648 * sqrt_info(5, 4);
    _res_D_x0(0, 3) =
        -_tmp649 * sqrt_info(0, 3) + _tmp653 * sqrt_info(0, 5) - _tmp656 * sqrt_info(0, 4);
    _res_D_x0(1, 3) =
        -_tmp649 * sqrt_info(1, 3) + _tmp653 * sqrt_info(1, 5) - _tmp656 * sqrt_info(1, 4);
    _res_D_x0(2, 3) = -_tmp649 * sqrt_info(2, 3) + _tmp653 * sqrt_info(2, 5) - _tmp655 * _tmp657;
    _res_D_x0(3, 3) = -_tmp489 * _tmp655 - _tmp649 * sqrt_info(3, 3) + _tmp653 * sqrt_info(3, 5);
    _res_D_x0(4, 3) =
        -_tmp649 * sqrt_info(4, 3) + _tmp653 * sqrt_info(4, 5) - _tmp656 * sqrt_info(4, 4);
    _res_D_x0(5, 3) = -_tmp649 * sqrt_info(5, 3) + _tmp652 * _tmp658 - _tmp656 * sqrt_info(5, 4);
    _res_D_x0(0, 4) =
        -_tmp649 * sqrt_info(0, 4) + _tmp656 * sqrt_info(0, 3) - _tmp661 * sqrt_info(0, 5);
    _res_D_x0(1, 4) = -_tmp649 * sqrt_info(1, 4) + _tmp655 * _tmp662 - _tmp661 * sqrt_info(1, 5);
    _res_D_x0(2, 4) = -_tmp649 * sqrt_info(2, 4) + _tmp655 * _tmp663 - _tmp661 * sqrt_info(2, 5);
    _res_D_x0(3, 4) =
        -_tmp489 * lambdas(0, 1) + _tmp656 * sqrt_info(3, 3) - _tmp661 * sqrt_info(3, 5);
    _res_D_x0(4, 4) =
        -_tmp649 * sqrt_info(4, 4) + _tmp656 * sqrt_info(4, 3) - _tmp661 * sqrt_info(4, 5);
    _res_D_x0(5, 4) = _tmp585 * _tmp655 - _tmp649 * sqrt_info(5, 4) - _tmp658 * _tmp660;
    _res_D_x0(0, 5) =
        -_tmp649 * sqrt_info(0, 5) - _tmp653 * sqrt_info(0, 3) + _tmp661 * sqrt_info(0, 4);
    _res_D_x0(1, 5) =
        -_tmp649 * sqrt_info(1, 5) - _tmp653 * sqrt_info(1, 3) + _tmp661 * sqrt_info(1, 4);
    _res_D_x0(2, 5) = -_tmp649 * sqrt_info(2, 5) - _tmp653 * sqrt_info(2, 3) + _tmp657 * _tmp660;
    _res_D_x0(3, 5) = _tmp489 * _tmp660 - _tmp649 * sqrt_info(3, 5) - _tmp653 * sqrt_info(3, 3);
    _res_D_x0(4, 5) =
        -_tmp649 * sqrt_info(4, 5) - _tmp653 * sqrt_info(4, 3) + _tmp661 * sqrt_info(4, 4);
    _res_D_x0(5, 5) = -_tmp585 * _tmp652 - _tmp649 * sqrt_info(5, 5) + _tmp661 * sqrt_info(5, 4);
  }

  if (res_D_x1 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x1{res_D_x1};

    _res_D_x1(0, 0) = _tmp874 * sqrt_info(0, 2) + _tmp877 * sqrt_info(0, 5) +
                      _tmp878 * sqrt_info(0, 1) + _tmp879 * sqrt_info(0, 0) +
                      _tmp881 * sqrt_info(0, 4) + _tmp883 * sqrt_info(0, 3);
    _res_D_x1(1, 0) = _tmp874 * sqrt_info(1, 2) + _tmp877 * sqrt_info(1, 5) +
                      _tmp878 * sqrt_info(1, 1) + _tmp879 * sqrt_info(1, 0) +
                      _tmp881 * sqrt_info(1, 4) + _tmp883 * sqrt_info(1, 3);
    _res_D_x1(2, 0) = _tmp874 * sqrt_info(2, 2) + _tmp877 * sqrt_info(2, 5) +
                      _tmp878 * sqrt_info(2, 1) + _tmp879 * sqrt_info(2, 0) +
                      _tmp881 * sqrt_info(2, 4) + _tmp883 * sqrt_info(2, 3);
    _res_D_x1(3, 0) = _tmp489 * _tmp880 + _tmp874 * sqrt_info(3, 2) + _tmp877 * sqrt_info(3, 5) +
                      _tmp878 * sqrt_info(3, 1) + _tmp879 * sqrt_info(3, 0) +
                      _tmp883 * sqrt_info(3, 3);
    _res_D_x1(4, 0) = _tmp490 * _tmp873 + _tmp877 * sqrt_info(4, 5) + _tmp878 * sqrt_info(4, 1) +
                      _tmp879 * sqrt_info(4, 0) + _tmp881 * sqrt_info(4, 4) +
                      _tmp883 * sqrt_info(4, 3);
    _res_D_x1(5, 0) = _tmp585 * _tmp882 + _tmp874 * sqrt_info(5, 2) + _tmp877 * sqrt_info(5, 5) +
                      _tmp878 * sqrt_info(5, 1) + _tmp879 * sqrt_info(5, 0) +
                      _tmp881 * sqrt_info(5, 4);
    _res_D_x1(0, 1) = _tmp974 * sqrt_info(0, 1) + _tmp976 * sqrt_info(0, 2) + _tmp977 * _tmp980 +
                      _tmp979 * sqrt_info(0, 4) + _tmp981 * sqrt_info(0, 3) +
                      _tmp982 * sqrt_info(0, 5);
    _res_D_x1(1, 1) = _tmp974 * sqrt_info(1, 1) + _tmp976 * sqrt_info(1, 2) +
                      _tmp979 * sqrt_info(1, 4) + _tmp981 * sqrt_info(1, 3) +
                      _tmp982 * sqrt_info(1, 5) + _tmp983 * sqrt_info(1, 0);
    _res_D_x1(2, 1) = _tmp974 * sqrt_info(2, 1) + _tmp976 * sqrt_info(2, 2) +
                      _tmp979 * sqrt_info(2, 4) + _tmp981 * sqrt_info(2, 3) +
                      _tmp982 * sqrt_info(2, 5) + _tmp983 * sqrt_info(2, 0);
    _res_D_x1(3, 1) = _tmp489 * _tmp978 + _tmp974 * sqrt_info(3, 1) + _tmp976 * sqrt_info(3, 2) +
                      _tmp981 * sqrt_info(3, 3) + _tmp982 * sqrt_info(3, 5) +
                      _tmp983 * sqrt_info(3, 0);
    _res_D_x1(4, 1) = _tmp490 * _tmp975 + _tmp974 * sqrt_info(4, 1) + _tmp979 * sqrt_info(4, 4) +
                      _tmp981 * sqrt_info(4, 3) + _tmp982 * sqrt_info(4, 5) +
                      _tmp983 * sqrt_info(4, 0);
    _res_D_x1(5, 1) = _tmp974 * sqrt_info(5, 1) + _tmp976 * sqrt_info(5, 2) +
                      _tmp979 * sqrt_info(5, 4) + _tmp981 * sqrt_info(5, 3) +
                      _tmp982 * sqrt_info(5, 5) + _tmp983 * sqrt_info(5, 0);
    _res_D_x1(0, 2) = _tmp1070 * sqrt_info(0, 5) + _tmp1071 * sqrt_info(0, 0) +
                      _tmp1074 * sqrt_info(0, 4) + _tmp1075 * sqrt_info(0, 2) +
                      _tmp1076 * sqrt_info(0, 3) + _tmp1077 * sqrt_info(0, 1);
    _res_D_x1(1, 2) = _tmp1069 * _tmp488 + _tmp1070 * sqrt_info(1, 5) + _tmp1071 * sqrt_info(1, 0) +
                      _tmp1074 * sqrt_info(1, 4) + _tmp1075 * sqrt_info(1, 2) +
                      _tmp1076 * sqrt_info(1, 3);
    _res_D_x1(2, 2) = _tmp1070 * sqrt_info(2, 5) + _tmp1071 * sqrt_info(2, 0) +
                      _tmp1074 * sqrt_info(2, 4) + _tmp1075 * sqrt_info(2, 2) +
                      _tmp1076 * sqrt_info(2, 3) + _tmp1077 * sqrt_info(2, 1);
    _res_D_x1(3, 2) = _tmp1070 * sqrt_info(3, 5) + _tmp1071 * sqrt_info(3, 0) + _tmp1073 * _tmp489 +
                      _tmp1075 * sqrt_info(3, 2) + _tmp1076 * sqrt_info(3, 3) +
                      _tmp1077 * sqrt_info(3, 1);
    _res_D_x1(4, 2) = _tmp1070 * sqrt_info(4, 5) + _tmp1071 * sqrt_info(4, 0) + _tmp1072 * _tmp490 +
                      _tmp1074 * sqrt_info(4, 4) + _tmp1076 * sqrt_info(4, 3) +
                      _tmp1077 * sqrt_info(4, 1);
    _res_D_x1(5, 2) = _tmp1070 * sqrt_info(5, 5) + _tmp1071 * sqrt_info(5, 0) +
                      _tmp1074 * sqrt_info(5, 4) + _tmp1075 * sqrt_info(5, 2) +
                      _tmp1076 * sqrt_info(5, 3) + _tmp1077 * sqrt_info(5, 1);
    _res_D_x1(0, 3) =
        _tmp1080 * sqrt_info(0, 5) + _tmp1082 * sqrt_info(0, 3) - _tmp1084 * sqrt_info(0, 4);
    _res_D_x1(1, 3) =
        _tmp1080 * sqrt_info(1, 5) + _tmp1082 * sqrt_info(1, 3) - _tmp1084 * sqrt_info(1, 4);
    _res_D_x1(2, 3) = _tmp1080 * sqrt_info(2, 5) + _tmp1082 * sqrt_info(2, 3) - _tmp1083 * _tmp657;
    _res_D_x1(3, 3) = _tmp1080 * sqrt_info(3, 5) + _tmp1082 * sqrt_info(3, 3) - _tmp1083 * _tmp489;
    _res_D_x1(4, 3) =
        _tmp1080 * sqrt_info(4, 5) + _tmp1082 * sqrt_info(4, 3) - _tmp1084 * sqrt_info(4, 4);
    _res_D_x1(5, 3) = _tmp1079 * _tmp658 + _tmp1082 * sqrt_info(5, 3) - _tmp1084 * sqrt_info(5, 4);
    _res_D_x1(0, 4) =
        -_tmp1078 * _tmp1086 + _tmp1082 * sqrt_info(0, 4) + _tmp1084 * sqrt_info(0, 3);
    _res_D_x1(1, 4) =
        _tmp1082 * sqrt_info(1, 4) + _tmp1084 * sqrt_info(1, 3) - _tmp1087 * sqrt_info(1, 5);
    _res_D_x1(2, 4) = _tmp1082 * sqrt_info(2, 4) + _tmp1083 * _tmp663 - _tmp1087 * sqrt_info(2, 5);
    _res_D_x1(3, 4) = _tmp1081 * _tmp489 + _tmp1084 * sqrt_info(3, 3) - _tmp1087 * sqrt_info(3, 5);
    _res_D_x1(4, 4) =
        _tmp1082 * sqrt_info(4, 4) + _tmp1084 * sqrt_info(4, 3) - _tmp1087 * sqrt_info(4, 5);
    _res_D_x1(5, 4) = _tmp1082 * sqrt_info(5, 4) + _tmp1083 * _tmp585 - _tmp1088 * _tmp658;
    _res_D_x1(0, 5) =
        -_tmp1080 * sqrt_info(0, 3) + _tmp1082 * sqrt_info(0, 5) + _tmp1087 * sqrt_info(0, 4);
    _res_D_x1(1, 5) = -_tmp1079 * _tmp662 + _tmp1082 * sqrt_info(1, 5) + _tmp1087 * sqrt_info(1, 4);
    _res_D_x1(2, 5) = -_tmp1079 * _tmp663 + _tmp1082 * sqrt_info(2, 5) + _tmp1088 * _tmp657;
    _res_D_x1(3, 5) = -_tmp1080 * sqrt_info(3, 3) + _tmp1082 * sqrt_info(3, 5) + _tmp1088 * _tmp489;
    _res_D_x1(4, 5) =
        -_tmp1080 * sqrt_info(4, 3) + _tmp1082 * sqrt_info(4, 5) + _tmp1087 * sqrt_info(4, 4);
    _res_D_x1(5, 5) = -_tmp1079 * _tmp585 + _tmp1082 * sqrt_info(5, 5) + _tmp1087 * sqrt_info(5, 4);
  }

  if (res_D_x2 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x2{res_D_x2};

    _res_D_x2(0, 0) = _tmp1185 * _tmp980 + _tmp1187 * sqrt_info(0, 5) + _tmp1190 * sqrt_info(0, 4) +
                      _tmp1191 * sqrt_info(0, 1) + _tmp1192 * sqrt_info(0, 2) +
                      _tmp1193 * sqrt_info(0, 3);
    _res_D_x2(1, 0) = _tmp1187 * sqrt_info(1, 5) + _tmp1190 * sqrt_info(1, 4) +
                      _tmp1191 * sqrt_info(1, 1) + _tmp1192 * sqrt_info(1, 2) +
                      _tmp1193 * sqrt_info(1, 3) + _tmp1194 * sqrt_info(1, 0);
    _res_D_x2(2, 0) = _tmp1187 * sqrt_info(2, 5) + _tmp1190 * sqrt_info(2, 4) +
                      _tmp1191 * sqrt_info(2, 1) + _tmp1192 * sqrt_info(2, 2) +
                      _tmp1193 * sqrt_info(2, 3) + _tmp1194 * sqrt_info(2, 0);
    _res_D_x2(3, 0) = _tmp1187 * sqrt_info(3, 5) + _tmp1189 * _tmp489 + _tmp1191 * sqrt_info(3, 1) +
                      _tmp1192 * sqrt_info(3, 2) + _tmp1193 * sqrt_info(3, 3) +
                      _tmp1194 * sqrt_info(3, 0);
    _res_D_x2(4, 0) = _tmp1187 * sqrt_info(4, 5) + _tmp1188 * _tmp490 + _tmp1190 * sqrt_info(4, 4) +
                      _tmp1191 * sqrt_info(4, 1) + _tmp1193 * sqrt_info(4, 3) +
                      _tmp1194 * sqrt_info(4, 0);
    _res_D_x2(5, 0) = _tmp1187 * sqrt_info(5, 5) + _tmp1190 * sqrt_info(5, 4) +
                      _tmp1191 * sqrt_info(5, 1) + _tmp1192 * sqrt_info(5, 2) +
                      _tmp1193 * sqrt_info(5, 3) + _tmp1194 * sqrt_info(5, 0);
    _res_D_x2(0, 1) = _tmp1243 * sqrt_info(0, 2) + _tmp1245 * sqrt_info(0, 1) +
                      _tmp1246 * sqrt_info(0, 3) + _tmp1247 * _tmp980 + _tmp1249 * sqrt_info(0, 4) +
                      _tmp1250 * sqrt_info(0, 5);
    _res_D_x2(1, 1) = _tmp1243 * sqrt_info(1, 2) + _tmp1244 * _tmp488 + _tmp1246 * sqrt_info(1, 3) +
                      _tmp1249 * sqrt_info(1, 4) + _tmp1250 * sqrt_info(1, 5) +
                      _tmp1251 * sqrt_info(1, 0);
    _res_D_x2(2, 1) = _tmp1243 * sqrt_info(2, 2) + _tmp1245 * sqrt_info(2, 1) +
                      _tmp1246 * sqrt_info(2, 3) + _tmp1249 * sqrt_info(2, 4) +
                      _tmp1250 * sqrt_info(2, 5) + _tmp1251 * sqrt_info(2, 0);
    _res_D_x2(3, 1) = _tmp1243 * sqrt_info(3, 2) + _tmp1245 * sqrt_info(3, 1) +
                      _tmp1246 * sqrt_info(3, 3) + _tmp1248 * _tmp489 + _tmp1250 * sqrt_info(3, 5) +
                      _tmp1251 * sqrt_info(3, 0);
    _res_D_x2(4, 1) = _tmp1242 * _tmp490 + _tmp1245 * sqrt_info(4, 1) + _tmp1246 * sqrt_info(4, 3) +
                      _tmp1249 * sqrt_info(4, 4) + _tmp1250 * sqrt_info(4, 5) +
                      _tmp1251 * sqrt_info(4, 0);
    _res_D_x2(5, 1) = _tmp1243 * sqrt_info(5, 2) + _tmp1245 * sqrt_info(5, 1) +
                      _tmp1246 * sqrt_info(5, 3) + _tmp1249 * sqrt_info(5, 4) +
                      _tmp1250 * sqrt_info(5, 5) + _tmp1251 * sqrt_info(5, 0);
    _res_D_x2(0, 2) = _tmp1293 * _tmp980 + _tmp1295 * sqrt_info(0, 1) + _tmp1298 * sqrt_info(0, 4) +
                      _tmp1299 * sqrt_info(0, 2) + _tmp1300 * sqrt_info(0, 3) +
                      _tmp1301 * sqrt_info(0, 5);
    _res_D_x2(1, 2) = _tmp1294 * _tmp488 + _tmp1298 * sqrt_info(1, 4) + _tmp1299 * sqrt_info(1, 2) +
                      _tmp1300 * sqrt_info(1, 3) + _tmp1301 * sqrt_info(1, 5) +
                      _tmp1302 * sqrt_info(1, 0);
    _res_D_x2(2, 2) = _tmp1295 * sqrt_info(2, 1) + _tmp1298 * sqrt_info(2, 4) +
                      _tmp1299 * sqrt_info(2, 2) + _tmp1300 * sqrt_info(2, 3) +
                      _tmp1301 * sqrt_info(2, 5) + _tmp1302 * sqrt_info(2, 0);
    _res_D_x2(3, 2) = _tmp1295 * sqrt_info(3, 1) + _tmp1297 * _tmp489 + _tmp1299 * sqrt_info(3, 2) +
                      _tmp1300 * sqrt_info(3, 3) + _tmp1301 * sqrt_info(3, 5) +
                      _tmp1302 * sqrt_info(3, 0);
    _res_D_x2(4, 2) = _tmp1295 * sqrt_info(4, 1) + _tmp1296 * _tmp490 + _tmp1298 * sqrt_info(4, 4) +
                      _tmp1300 * sqrt_info(4, 3) + _tmp1301 * sqrt_info(4, 5) +
                      _tmp1302 * sqrt_info(4, 0);
    _res_D_x2(5, 2) = _tmp1295 * sqrt_info(5, 1) + _tmp1298 * sqrt_info(5, 4) +
                      _tmp1299 * sqrt_info(5, 2) + _tmp1300 * sqrt_info(5, 3) +
                      _tmp1301 * sqrt_info(5, 5) + _tmp1302 * sqrt_info(5, 0);
    _res_D_x2(0, 3) =
        -_tmp1305 * sqrt_info(0, 4) + _tmp1306 * sqrt_info(0, 5) + _tmp1308 * sqrt_info(0, 3);
    _res_D_x2(1, 3) =
        -_tmp1305 * sqrt_info(1, 4) + _tmp1306 * sqrt_info(1, 5) + _tmp1308 * sqrt_info(1, 3);
    _res_D_x2(2, 3) = _tmp1306 * sqrt_info(2, 5) + _tmp1308 * sqrt_info(2, 3) - _tmp1309 * _tmp657;
    _res_D_x2(3, 3) = _tmp1306 * sqrt_info(3, 5) + _tmp1308 * sqrt_info(3, 3) - _tmp1309 * _tmp489;
    _res_D_x2(4, 3) =
        -_tmp1305 * sqrt_info(4, 4) + _tmp1306 * sqrt_info(4, 5) + _tmp1308 * sqrt_info(4, 3);
    _res_D_x2(5, 3) = -_tmp1305 * sqrt_info(5, 4) + _tmp1308 * sqrt_info(5, 3) + _tmp1310 * _tmp658;
    _res_D_x2(0, 4) =
        -_tmp1086 * _tmp1303 + _tmp1305 * sqrt_info(0, 3) + _tmp1308 * sqrt_info(0, 4);
    _res_D_x2(1, 4) = _tmp1308 * sqrt_info(1, 4) + _tmp1309 * _tmp662 - _tmp1311 * sqrt_info(1, 5);
    _res_D_x2(2, 4) = _tmp1308 * sqrt_info(2, 4) + _tmp1309 * _tmp663 - _tmp1311 * sqrt_info(2, 5);
    _res_D_x2(3, 4) = _tmp1305 * sqrt_info(3, 3) + _tmp1307 * _tmp489 - _tmp1311 * sqrt_info(3, 5);
    _res_D_x2(4, 4) = _tmp1308 * sqrt_info(4, 4) - _tmp1311 * sqrt_info(4, 5) + _tmp1312 * _tmp654;
    _res_D_x2(5, 4) = _tmp1308 * sqrt_info(5, 4) + _tmp1309 * _tmp585 - _tmp1313 * _tmp658;
    _res_D_x2(0, 5) =
        -_tmp1306 * sqrt_info(0, 3) + _tmp1308 * sqrt_info(0, 5) + _tmp1311 * sqrt_info(0, 4);
    _res_D_x2(1, 5) = _tmp1308 * sqrt_info(1, 5) - _tmp1310 * _tmp662 + _tmp1311 * sqrt_info(1, 4);
    _res_D_x2(2, 5) = _tmp1308 * sqrt_info(2, 5) - _tmp1310 * _tmp663 + _tmp1313 * _tmp657;
    _res_D_x2(3, 5) = -_tmp1306 * sqrt_info(3, 3) + _tmp1308 * sqrt_info(3, 5) + _tmp1313 * _tmp489;
    _res_D_x2(4, 5) = _tmp1308 * sqrt_info(4, 5) + _tmp1311 * sqrt_info(4, 4) - _tmp1312 * _tmp651;
    _res_D_x2(5, 5) = _tmp1308 * sqrt_info(5, 5) - _tmp1310 * _tmp585 + _tmp1311 * sqrt_info(5, 4);
  }

  if (res_D_x3 != nullptr) {
    Eigen::Map<Eigen::Matrix<Scalar, 6, 6>> _res_D_x3{res_D_x3};

    _res_D_x3(0, 0) = _tmp1326 * sqrt_info(0, 0) + _tmp1328 * sqrt_info(0, 2) +
                      _tmp1330 * sqrt_info(0, 1) + _tmp1332 * sqrt_info(0, 4) +
                      _tmp1333 * sqrt_info(0, 5) + _tmp1334 * sqrt_info(0, 3);
    _res_D_x3(1, 0) = _tmp1326 * sqrt_info(1, 0) + _tmp1328 * sqrt_info(1, 2) + _tmp1329 * _tmp488 +
                      _tmp1332 * sqrt_info(1, 4) + _tmp1333 * sqrt_info(1, 5) +
                      _tmp1334 * sqrt_info(1, 3);
    _res_D_x3(2, 0) = _tmp1326 * sqrt_info(2, 0) + _tmp1328 * sqrt_info(2, 2) +
                      _tmp1330 * sqrt_info(2, 1) + _tmp1332 * sqrt_info(2, 4) +
                      _tmp1333 * sqrt_info(2, 5) + _tmp1334 * sqrt_info(2, 3);
    _res_D_x3(3, 0) = _tmp1326 * sqrt_info(3, 0) + _tmp1328 * sqrt_info(3, 2) +
                      _tmp1330 * sqrt_info(3, 1) + _tmp1331 * _tmp489 + _tmp1333 * sqrt_info(3, 5) +
                      _tmp1334 * sqrt_info(3, 3);
    _res_D_x3(4, 0) = _tmp1326 * sqrt_info(4, 0) + _tmp1327 * _tmp490 + _tmp1330 * sqrt_info(4, 1) +
                      _tmp1332 * sqrt_info(4, 4) + _tmp1333 * sqrt_info(4, 5) +
                      _tmp1334 * sqrt_info(4, 3);
    _res_D_x3(5, 0) = _tmp1326 * sqrt_info(5, 0) + _tmp1328 * sqrt_info(5, 2) + _tmp1329 * _tmp491 +
                      _tmp1332 * sqrt_info(5, 4) + _tmp1333 * sqrt_info(5, 5) +
                      _tmp1334 * sqrt_info(5, 3);
    _res_D_x3(0, 1) = _tmp1345 * sqrt_info(0, 1) + _tmp1347 * sqrt_info(0, 3) +
                      _tmp1349 * sqrt_info(0, 0) + _tmp1351 * sqrt_info(0, 4) +
                      _tmp1352 * sqrt_info(0, 2) + _tmp1353 * sqrt_info(0, 5);
    _res_D_x3(1, 1) = _tmp1344 * _tmp488 + _tmp1347 * sqrt_info(1, 3) + _tmp1349 * sqrt_info(1, 0) +
                      _tmp1351 * sqrt_info(1, 4) + _tmp1352 * sqrt_info(1, 2) +
                      _tmp1353 * sqrt_info(1, 5);
    _res_D_x3(2, 1) = _tmp1345 * sqrt_info(2, 1) + _tmp1347 * sqrt_info(2, 3) +
                      _tmp1349 * sqrt_info(2, 0) + _tmp1351 * sqrt_info(2, 4) +
                      _tmp1352 * sqrt_info(2, 2) + _tmp1353 * sqrt_info(2, 5);
    _res_D_x3(3, 1) = _tmp1345 * sqrt_info(3, 1) + _tmp1347 * sqrt_info(3, 3) +
                      _tmp1349 * sqrt_info(3, 0) + _tmp1350 * _tmp489 + _tmp1352 * sqrt_info(3, 2) +
                      _tmp1353 * sqrt_info(3, 5);
    _res_D_x3(4, 1) = _tmp1345 * sqrt_info(4, 1) + _tmp1346 * _tmp490 + _tmp1347 * sqrt_info(4, 3) +
                      _tmp1349 * sqrt_info(4, 0) + _tmp1351 * sqrt_info(4, 4) +
                      _tmp1353 * sqrt_info(4, 5);
    _res_D_x3(5, 1) = _tmp1344 * _tmp491 + _tmp1347 * sqrt_info(5, 3) + _tmp1349 * sqrt_info(5, 0) +
                      _tmp1351 * sqrt_info(5, 4) + _tmp1352 * sqrt_info(5, 2) +
                      _tmp1353 * sqrt_info(5, 5);
    _res_D_x3(0, 2) = _tmp1362 * _tmp980 + _tmp1364 * sqrt_info(0, 2) + _tmp1366 * sqrt_info(0, 1) +
                      _tmp1368 * sqrt_info(0, 4) + _tmp1369 * sqrt_info(0, 5) +
                      _tmp1370 * sqrt_info(0, 3);
    _res_D_x3(1, 2) = _tmp1364 * sqrt_info(1, 2) + _tmp1366 * sqrt_info(1, 1) +
                      _tmp1368 * sqrt_info(1, 4) + _tmp1369 * sqrt_info(1, 5) +
                      _tmp1370 * sqrt_info(1, 3) + _tmp1371 * sqrt_info(1, 0);
    _res_D_x3(2, 2) = _tmp1364 * sqrt_info(2, 2) + _tmp1366 * sqrt_info(2, 1) +
                      _tmp1368 * sqrt_info(2, 4) + _tmp1369 * sqrt_info(2, 5) +
                      _tmp1370 * sqrt_info(2, 3) + _tmp1371 * sqrt_info(2, 0);
    _res_D_x3(3, 2) = _tmp1364 * sqrt_info(3, 2) + _tmp1366 * sqrt_info(3, 1) + _tmp1367 * _tmp489 +
                      _tmp1369 * sqrt_info(3, 5) + _tmp1370 * sqrt_info(3, 3) +
                      _tmp1371 * sqrt_info(3, 0);
    _res_D_x3(4, 2) = _tmp1363 * _tmp490 + _tmp1366 * sqrt_info(4, 1) + _tmp1368 * sqrt_info(4, 4) +
                      _tmp1369 * sqrt_info(4, 5) + _tmp1370 * sqrt_info(4, 3) +
                      _tmp1371 * sqrt_info(4, 0);
    _res_D_x3(5, 2) = _tmp1364 * sqrt_info(5, 2) + _tmp1366 * sqrt_info(5, 1) +
                      _tmp1368 * sqrt_info(5, 4) + _tmp1369 * sqrt_info(5, 5) +
                      _tmp1370 * sqrt_info(5, 3) + _tmp1371 * sqrt_info(5, 0);
    _res_D_x3(0, 3) =
        -_tmp1373 * sqrt_info(0, 4) + _tmp1374 * sqrt_info(0, 3) + _tmp1376 * sqrt_info(0, 5);
    _res_D_x3(1, 3) =
        -_tmp1373 * sqrt_info(1, 4) + _tmp1374 * sqrt_info(1, 3) + _tmp1376 * sqrt_info(1, 5);
    _res_D_x3(2, 3) = -_tmp1372 * _tmp657 + _tmp1374 * sqrt_info(2, 3) + _tmp1376 * sqrt_info(2, 5);
    _res_D_x3(3, 3) = -_tmp1372 * _tmp489 + _tmp1374 * sqrt_info(3, 3) + _tmp1376 * sqrt_info(3, 5);
    _res_D_x3(4, 3) =
        -_tmp1373 * sqrt_info(4, 4) + _tmp1374 * sqrt_info(4, 3) + _tmp1376 * sqrt_info(4, 5);
    _res_D_x3(5, 3) = -_tmp1373 * sqrt_info(5, 4) + _tmp1374 * sqrt_info(5, 3) + _tmp1375 * _tmp658;
    _res_D_x3(0, 4) =
        -_tmp1086 * lambdas(2, 0) + _tmp1373 * sqrt_info(0, 3) + _tmp1374 * sqrt_info(0, 4);
    _res_D_x3(1, 4) = _tmp1372 * _tmp662 + _tmp1374 * sqrt_info(1, 4) - _tmp1377 * sqrt_info(1, 5);
    _res_D_x3(2, 4) = _tmp1372 * _tmp663 + _tmp1374 * sqrt_info(2, 4) - _tmp1377 * sqrt_info(2, 5);
    _res_D_x3(3, 4) =
        _tmp1373 * sqrt_info(3, 3) - _tmp1377 * sqrt_info(3, 5) + _tmp489 * lambdas(2, 1);
    _res_D_x3(4, 4) =
        _tmp1373 * sqrt_info(4, 3) + _tmp1374 * sqrt_info(4, 4) - _tmp1377 * sqrt_info(4, 5);
    _res_D_x3(5, 4) = _tmp1372 * _tmp585 + _tmp1374 * sqrt_info(5, 4) - _tmp1378 * _tmp658;
    _res_D_x3(0, 5) =
        _tmp1374 * sqrt_info(0, 5) - _tmp1376 * sqrt_info(0, 3) + _tmp1377 * sqrt_info(0, 4);
    _res_D_x3(1, 5) = _tmp1374 * sqrt_info(1, 5) - _tmp1375 * _tmp662 + _tmp1377 * sqrt_info(1, 4);
    _res_D_x3(2, 5) = _tmp1374 * sqrt_info(2, 5) - _tmp1375 * _tmp663 + _tmp1378 * _tmp657;
    _res_D_x3(3, 5) = _tmp1374 * sqrt_info(3, 5) - _tmp1376 * sqrt_info(3, 3) + _tmp1378 * _tmp489;
    _res_D_x3(4, 5) =
        _tmp1374 * sqrt_info(4, 5) - _tmp1376 * sqrt_info(4, 3) + _tmp1377 * sqrt_info(4, 4);
    _res_D_x3(5, 5) = _tmp1374 * sqrt_info(5, 5) - _tmp1375 * _tmp585 + _tmp1377 * sqrt_info(5, 4);
  }

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym_hyperion
