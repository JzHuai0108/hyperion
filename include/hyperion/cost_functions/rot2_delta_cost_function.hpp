// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     COST_FUNCTION.hpp.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <sym/rot2.h>

#include "hyperion/cost_functions/sized_cost_function.hpp"

namespace hyperion {

class Rot2DeltaCostFunction final
    : public SizedCostFunction<1, ConstexprGroupDims<2, 1>, ConstexprGroupDims<2, 1>> {
 public:
  /// Constructor.
  explicit Rot2DeltaCostFunction(const Eigen::Matrix<Scalar, 1, 1>& sqrtInfo)
      : sqrt_info_{sqrtInfo} {}

  /// sqrtInfo accessor.
  [[nodiscard]] auto sqrtInfo() const -> const Eigen::Matrix<Scalar, 1, 1>& {
    return sqrt_info_;
  }

  /// sqrtInfo modifier.
  auto sqrtInfo() -> Eigen::Matrix<Scalar, 1, 1>& {
    return sqrt_info_;
  }

  /// See documentation of base class.
  /// @note Returns (tangent_dim x tangent_dim) Jacobians stored in column-major order.
  auto evaluate(Scalar const* const* parameters, Scalar* residuals, Scalar** jacobians) const
      -> bool override;

 private:
  Eigen::Matrix<Scalar, 1, 1> sqrt_info_;
};

}  // namespace hyperion
