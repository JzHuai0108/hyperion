// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline3_pose3_acceleration
 *
 * Args:
 *     dt: Scalar
 *     lambdas: Matrix33
 *     x0: Pose3
 *     x1: Pose3
 *     x2: Pose3
 *     x3: Pose3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix61
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 6, 1> Spline3Pose3AccelerationLocal(
    const Scalar dt, const Eigen::Matrix<Scalar, 3, 3>& lambdas, const sym::Pose3<Scalar>& x0,
    const sym::Pose3<Scalar>& x1, const sym::Pose3<Scalar>& x2, const sym::Pose3<Scalar>& x3,
    const Scalar epsilon) {
  // Total ops: 596

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x3 = x3.Data();

  // Intermediate terms (194)
  const Scalar _tmp0 = std::pow(dt, Scalar(-2));
  const Scalar _tmp1 = -_x2[0] * _x3[3] - _x2[1] * _x3[2] + _x2[2] * _x3[1] + _x2[3] * _x3[0];
  const Scalar _tmp2 = _x2[0] * _x3[2] - _x2[1] * _x3[3] - _x2[2] * _x3[0] + _x2[3] * _x3[1];
  const Scalar _tmp3 = std::pow(_tmp2, Scalar(2));
  const Scalar _tmp4 = 1 - epsilon;
  const Scalar _tmp5 = -_x2[0] * _x3[0] - _x2[1] * _x3[1] - _x2[2] * _x3[2];
  const Scalar _tmp6 = _x2[3] * _x3[3];
  const Scalar _tmp7 = std::min<Scalar>(_tmp4, std::fabs(_tmp5 - _tmp6));
  const Scalar _tmp8 = 1 - std::pow(_tmp7, Scalar(2));
  const Scalar _tmp9 =
      2 * std::min<Scalar>(0, (((-_tmp5 + _tmp6) > 0) - ((-_tmp5 + _tmp6) < 0))) + 1;
  const Scalar _tmp10 = std::acos(_tmp7);
  const Scalar _tmp11 = std::pow(_tmp10, Scalar(2)) * std::pow(_tmp9, Scalar(2)) *
                        std::pow(lambdas(2, 0), Scalar(2)) / _tmp8;
  const Scalar _tmp12 = 4 * _tmp11;
  const Scalar _tmp13 = std::pow(_tmp1, Scalar(2));
  const Scalar _tmp14 = -_x2[0] * _x3[1] + _x2[1] * _x3[0] - _x2[2] * _x3[3] + _x2[3] * _x3[2];
  const Scalar _tmp15 = std::pow(_tmp14, Scalar(2));
  const Scalar _tmp16 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp17 = _tmp12 * _tmp13 + _tmp12 * _tmp15 + _tmp12 * _tmp3 + _tmp16;
  const Scalar _tmp18 = std::sqrt(_tmp17);
  const Scalar _tmp19 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp20 = std::cos(_tmp19);
  const Scalar _tmp21 = _tmp10 * _tmp9 / std::sqrt(_tmp8);
  const Scalar _tmp22 = std::sin(_tmp19);
  const Scalar _tmp23 = _tmp22 * lambdas(2, 0) / _tmp18;
  const Scalar _tmp24 = 4 * _tmp20 * _tmp21 * _tmp23;
  const Scalar _tmp25 = _tmp1 * _tmp24;
  const Scalar _tmp26 = 8 * _tmp11 * std::pow(_tmp22, Scalar(2)) / _tmp17;
  const Scalar _tmp27 = _tmp14 * _tmp26;
  const Scalar _tmp28 = _tmp2 * _tmp27;
  const Scalar _tmp29 = -_tmp25 + _tmp28;
  const Scalar _tmp30 = _x1[0] * _x2[2] - _x1[1] * _x2[3] - _x1[2] * _x2[0] + _x1[3] * _x2[1];
  const Scalar _tmp31 = -_x1[0] * _x2[0] - _x1[1] * _x2[1] - _x1[2] * _x2[2];
  const Scalar _tmp32 = _x1[3] * _x2[3];
  const Scalar _tmp33 = std::min<Scalar>(_tmp4, std::fabs(_tmp31 - _tmp32));
  const Scalar _tmp34 = 1 - std::pow(_tmp33, Scalar(2));
  const Scalar _tmp35 =
      2 * std::min<Scalar>(0, (((-_tmp31 + _tmp32) > 0) - ((-_tmp31 + _tmp32) < 0))) + 1;
  const Scalar _tmp36 = std::acos(_tmp33);
  const Scalar _tmp37 = _tmp35 * _tmp36 / std::sqrt(_tmp34);
  const Scalar _tmp38 = 2 * _tmp37;
  const Scalar _tmp39 = _tmp38 * lambdas(1, 1);
  const Scalar _tmp40 = _tmp30 * _tmp39;
  const Scalar _tmp41 = -_x0[0] * _x1[0] - _x0[1] * _x1[1] - _x0[2] * _x1[2];
  const Scalar _tmp42 = _x0[3] * _x1[3];
  const Scalar _tmp43 =
      2 * std::min<Scalar>(0, (((-_tmp41 + _tmp42) > 0) - ((-_tmp41 + _tmp42) < 0))) + 1;
  const Scalar _tmp44 = std::min<Scalar>(_tmp4, std::fabs(_tmp41 - _tmp42));
  const Scalar _tmp45 = std::acos(_tmp44);
  const Scalar _tmp46 = 1 - std::pow(_tmp44, Scalar(2));
  const Scalar _tmp47 = 2 * _tmp43 * _tmp45 / std::sqrt(_tmp46);
  const Scalar _tmp48 = _tmp47 * lambdas(0, 1);
  const Scalar _tmp49 = -_x0[0] * _x1[3] - _x0[1] * _x1[2] + _x0[2] * _x1[1] + _x0[3] * _x1[0];
  const Scalar _tmp50 = -_x1[0] * _x2[3] - _x1[1] * _x2[2] + _x1[2] * _x2[1] + _x1[3] * _x2[0];
  const Scalar _tmp51 = std::pow(_tmp50, Scalar(2));
  const Scalar _tmp52 = std::pow(_tmp35, Scalar(2)) * std::pow(_tmp36, Scalar(2)) *
                        std::pow(lambdas(1, 0), Scalar(2)) / _tmp34;
  const Scalar _tmp53 = 4 * _tmp52;
  const Scalar _tmp54 = -_x1[0] * _x2[1] + _x1[1] * _x2[0] - _x1[2] * _x2[3] + _x1[3] * _x2[2];
  const Scalar _tmp55 = std::pow(_tmp54, Scalar(2));
  const Scalar _tmp56 = std::pow(_tmp30, Scalar(2));
  const Scalar _tmp57 = _tmp16 + _tmp51 * _tmp53 + _tmp53 * _tmp55 + _tmp53 * _tmp56;
  const Scalar _tmp58 = std::sqrt(_tmp57);
  const Scalar _tmp59 = (Scalar(1) / Scalar(2)) * _tmp58;
  const Scalar _tmp60 = std::sin(_tmp59);
  const Scalar _tmp61 = 8 * _tmp52 * std::pow(_tmp60, Scalar(2)) / _tmp57;
  const Scalar _tmp62 = _tmp50 * _tmp61;
  const Scalar _tmp63 = _tmp30 * _tmp62;
  const Scalar _tmp64 = std::cos(_tmp59);
  const Scalar _tmp65 = _tmp60 * lambdas(1, 0) / _tmp58;
  const Scalar _tmp66 = 4 * _tmp37 * _tmp64 * _tmp65;
  const Scalar _tmp67 = _tmp54 * _tmp66;
  const Scalar _tmp68 = _tmp49 * (_tmp63 - _tmp67);
  const Scalar _tmp69 = -_x0[0] * _x1[1] + _x0[1] * _x1[0] - _x0[2] * _x1[3] + _x0[3] * _x1[2];
  const Scalar _tmp70 = _tmp30 * _tmp54 * _tmp61;
  const Scalar _tmp71 = _tmp50 * _tmp66;
  const Scalar _tmp72 = _tmp69 * (_tmp70 + _tmp71);
  const Scalar _tmp73 = _x0[0] * _x1[2] - _x0[1] * _x1[3] - _x0[2] * _x1[0] + _x0[3] * _x1[1];
  const Scalar _tmp74 = -_tmp55 * _tmp61;
  const Scalar _tmp75 = -_tmp51 * _tmp61 + 1;
  const Scalar _tmp76 = _tmp73 * (_tmp74 + _tmp75);
  const Scalar _tmp77 = _tmp48 * _tmp68 + _tmp48 * _tmp72 + _tmp48 * _tmp76;
  const Scalar _tmp78 = _tmp40 + _tmp77;
  const Scalar _tmp79 = _tmp38 * _tmp50;
  const Scalar _tmp80 = _tmp79 * lambdas(1, 1);
  const Scalar _tmp81 = _tmp30 * _tmp66;
  const Scalar _tmp82 = _tmp54 * _tmp62;
  const Scalar _tmp83 = _tmp69 * (-_tmp81 + _tmp82);
  const Scalar _tmp84 = -_tmp56 * _tmp61;
  const Scalar _tmp85 = _tmp49 * (_tmp74 + _tmp84 + 1);
  const Scalar _tmp86 = _tmp73 * (_tmp63 + _tmp67);
  const Scalar _tmp87 = _tmp48 * _tmp83 + _tmp48 * _tmp85 + _tmp48 * _tmp86;
  const Scalar _tmp88 = _tmp80 + _tmp87;
  const Scalar _tmp89 = _tmp2 * _tmp24;
  const Scalar _tmp90 = _tmp1 * _tmp27;
  const Scalar _tmp91 = _tmp89 + _tmp90;
  const Scalar _tmp92 = -_tmp13 * _tmp26;
  const Scalar _tmp93 = -_tmp26 * _tmp3 + 1;
  const Scalar _tmp94 = _tmp92 + _tmp93;
  const Scalar _tmp95 = _tmp39 * _tmp54;
  const Scalar _tmp96 = _tmp69 * (_tmp75 + _tmp84);
  const Scalar _tmp97 = _tmp49 * (_tmp81 + _tmp82);
  const Scalar _tmp98 = _tmp73 * (_tmp70 - _tmp71);
  const Scalar _tmp99 = _tmp48 * _tmp96 + _tmp48 * _tmp97 + _tmp48 * _tmp98;
  const Scalar _tmp100 = _tmp95 + _tmp99;
  const Scalar _tmp101 = _tmp100 * _tmp94 + _tmp29 * _tmp78 + _tmp88 * _tmp91;
  const Scalar _tmp102 = 2 * _tmp21;
  const Scalar _tmp103 = _tmp102 * _tmp2;
  const Scalar _tmp104 = _tmp103 * lambdas(2, 1);
  const Scalar _tmp105 = _tmp38 * lambdas(1, 2);
  const Scalar _tmp106 = _tmp47 * lambdas(0, 2);
  const Scalar _tmp107 = _tmp105 * _tmp54 + _tmp106 * _tmp96 + _tmp106 * _tmp97 + _tmp106 * _tmp98 +
                         _tmp40 * _tmp87 - _tmp77 * _tmp80;
  const Scalar _tmp108 = -_tmp89 + _tmp90;
  const Scalar _tmp109 = _tmp106 * _tmp83 + _tmp106 * _tmp85 + _tmp106 * _tmp86 - _tmp40 * _tmp99 +
                         _tmp77 * _tmp95 + _tmp79 * lambdas(1, 2);
  const Scalar _tmp110 = -_tmp15 * _tmp26;
  const Scalar _tmp111 = _tmp110 + _tmp93;
  const Scalar _tmp112 = _tmp25 + _tmp28;
  const Scalar _tmp113 = _tmp1 * _tmp2 * _tmp26;
  const Scalar _tmp114 = _tmp14 * _tmp24;
  const Scalar _tmp115 = _tmp113 - _tmp114;
  const Scalar _tmp116 = _tmp110 + _tmp92 + 1;
  const Scalar _tmp117 = _tmp100 * _tmp112 + _tmp115 * _tmp88 + _tmp116 * _tmp78;
  const Scalar _tmp118 = _tmp102 * _tmp14;
  const Scalar _tmp119 = _tmp118 * lambdas(2, 1);
  const Scalar _tmp120 = _tmp105 * _tmp30 + _tmp106 * _tmp68 + _tmp106 * _tmp72 + _tmp106 * _tmp76 +
                         _tmp80 * _tmp99 - _tmp87 * _tmp95;
  const Scalar _tmp121 = _tmp113 + _tmp114;
  const Scalar _tmp122 = _tmp1 * _tmp102;
  const Scalar _tmp123 = _tmp122 * lambdas(2, 1);
  const Scalar _tmp124 = _tmp100 * _tmp108 + _tmp111 * _tmp88 + _tmp121 * _tmp78;
  const Scalar _tmp125 = 4 * std::pow(_tmp43, Scalar(2)) * std::pow(_tmp45, Scalar(2)) *
                         std::pow(lambdas(0, 0), Scalar(2)) / _tmp46;
  const Scalar _tmp126 = std::sqrt(Scalar(_tmp125 * std::pow(_tmp49, Scalar(2)) +
                                          _tmp125 * std::pow(_tmp69, Scalar(2)) +
                                          _tmp125 * std::pow(_tmp73, Scalar(2)) + _tmp16));
  const Scalar _tmp127 = (Scalar(1) / Scalar(2)) * _tmp126;
  const Scalar _tmp128 = _tmp47 * lambdas(0, 0) * std::sin(_tmp127) / _tmp126;
  const Scalar _tmp129 = _tmp128 * _tmp73;
  const Scalar _tmp130 = std::cos(_tmp127);
  const Scalar _tmp131 = _tmp128 * _tmp49;
  const Scalar _tmp132 = _tmp128 * _tmp69;
  const Scalar _tmp133 = _tmp129 * _x0[0] + _tmp130 * _x0[2] - _tmp131 * _x0[1] + _tmp132 * _x0[3];
  const Scalar _tmp134 = _tmp65 * _tmp79;
  const Scalar _tmp135 = -_tmp129 * _x0[2] + _tmp130 * _x0[0] + _tmp131 * _x0[3] + _tmp132 * _x0[1];
  const Scalar _tmp136 = _tmp38 * _tmp65;
  const Scalar _tmp137 = _tmp136 * _tmp54;
  const Scalar _tmp138 = _tmp129 * _x0[3] + _tmp130 * _x0[1] + _tmp131 * _x0[2] - _tmp132 * _x0[0];
  const Scalar _tmp139 = -_tmp129 * _x0[1] + _tmp130 * _x0[3] - _tmp131 * _x0[0] - _tmp132 * _x0[2];
  const Scalar _tmp140 = _tmp136 * _tmp30;
  const Scalar _tmp141 =
      _tmp133 * _tmp134 - _tmp135 * _tmp137 + _tmp138 * _tmp64 + _tmp139 * _tmp140;
  const Scalar _tmp142 = _tmp118 * _tmp23;
  const Scalar _tmp143 =
      -_tmp133 * _tmp140 + _tmp134 * _tmp139 + _tmp135 * _tmp64 + _tmp137 * _tmp138;
  const Scalar _tmp144 =
      -_tmp133 * _tmp137 - _tmp134 * _tmp135 - _tmp138 * _tmp140 + _tmp139 * _tmp64;
  const Scalar _tmp145 = _tmp122 * _tmp23;
  const Scalar _tmp146 =
      _tmp133 * _tmp64 - _tmp134 * _tmp138 + _tmp135 * _tmp140 + _tmp137 * _tmp139;
  const Scalar _tmp147 = _tmp103 * _tmp23;
  const Scalar _tmp148 =
      _tmp141 * _tmp142 + _tmp143 * _tmp20 + _tmp144 * _tmp145 - _tmp146 * _tmp147;
  const Scalar _tmp149 = _tmp143 * _tmp23;
  const Scalar _tmp150 =
      _tmp103 * _tmp149 - _tmp141 * _tmp145 + _tmp142 * _tmp144 + _tmp146 * _tmp20;
  const Scalar _tmp151 = 2 * _tmp150;
  const Scalar _tmp152 = _tmp148 * _tmp151;
  const Scalar _tmp153 =
      -_tmp122 * _tmp149 - _tmp141 * _tmp147 - _tmp142 * _tmp146 + _tmp144 * _tmp20;
  const Scalar _tmp154 =
      -_tmp118 * _tmp149 + _tmp141 * _tmp20 + _tmp144 * _tmp147 + _tmp145 * _tmp146;
  const Scalar _tmp155 = 2 * _tmp154;
  const Scalar _tmp156 = _tmp153 * _tmp155;
  const Scalar _tmp157 = _tmp152 - _tmp156;
  const Scalar _tmp158 = -_x1[6] + _x2[6];
  const Scalar _tmp159 = -_x2[6] + _x3[6];
  const Scalar _tmp160 = -_x0[6] + _x1[6];
  const Scalar _tmp161 =
      _tmp158 * lambdas(1, 2) + _tmp159 * lambdas(2, 2) + _tmp160 * lambdas(0, 2);
  const Scalar _tmp162 = _tmp151 * _tmp153;
  const Scalar _tmp163 = _tmp148 * _tmp155;
  const Scalar _tmp164 = _tmp162 + _tmp163;
  const Scalar _tmp165 = -_x1[5] + _x2[5];
  const Scalar _tmp166 = -_x2[5] + _x3[5];
  const Scalar _tmp167 = -_x0[5] + _x1[5];
  const Scalar _tmp168 =
      _tmp165 * lambdas(1, 2) + _tmp166 * lambdas(2, 2) + _tmp167 * lambdas(0, 2);
  const Scalar _tmp169 = -_x1[4] + _x2[4];
  const Scalar _tmp170 = -_x2[4] + _x3[4];
  const Scalar _tmp171 = -_x0[4] + _x1[4];
  const Scalar _tmp172 =
      _tmp169 * lambdas(1, 2) + _tmp170 * lambdas(2, 2) + _tmp171 * lambdas(0, 2);
  const Scalar _tmp173 = -2 * std::pow(_tmp154, Scalar(2));
  const Scalar _tmp174 = -2 * std::pow(_tmp150, Scalar(2));
  const Scalar _tmp175 = _tmp173 + _tmp174 + 1;
  const Scalar _tmp176 = _tmp152 + _tmp156;
  const Scalar _tmp177 =
      _tmp169 * lambdas(1, 1) + _tmp170 * lambdas(2, 1) + _tmp171 * lambdas(0, 1);
  const Scalar _tmp178 = 1 - 2 * std::pow(_tmp148, Scalar(2));
  const Scalar _tmp179 = _tmp173 + _tmp178;
  const Scalar _tmp180 =
      _tmp158 * lambdas(1, 1) + _tmp159 * lambdas(2, 1) + _tmp160 * lambdas(0, 1);
  const Scalar _tmp181 = _tmp150 * _tmp155;
  const Scalar _tmp182 = 2 * _tmp148 * _tmp153;
  const Scalar _tmp183 = _tmp181 - _tmp182;
  const Scalar _tmp184 =
      _tmp165 * lambdas(1, 1) + _tmp166 * lambdas(2, 1) + _tmp167 * lambdas(0, 1);
  const Scalar _tmp185 = _tmp176 * _tmp177 + _tmp179 * _tmp180 + _tmp183 * _tmp184;
  const Scalar _tmp186 = _tmp104 + _tmp117;
  const Scalar _tmp187 = _tmp101 + _tmp119;
  const Scalar _tmp188 = _tmp174 + _tmp178;
  const Scalar _tmp189 = -_tmp162 + _tmp163;
  const Scalar _tmp190 = _tmp181 + _tmp182;
  const Scalar _tmp191 = _tmp177 * _tmp189 + _tmp180 * _tmp190 + _tmp184 * _tmp188;
  const Scalar _tmp192 = _tmp157 * _tmp180 + _tmp164 * _tmp184 + _tmp175 * _tmp177;
  const Scalar _tmp193 = _tmp123 + _tmp124;

  // Output terms (1)
  Eigen::Matrix<Scalar, 6, 1> _res;

  _res(0, 0) = _tmp0 * (-_tmp101 * _tmp104 + _tmp107 * _tmp108 + _tmp109 * _tmp111 +
                        _tmp117 * _tmp119 + _tmp120 * _tmp121 + _tmp122 * lambdas(2, 2));
  _res(1, 0) = _tmp0 * (_tmp101 * _tmp123 + _tmp103 * lambdas(2, 2) + _tmp107 * _tmp112 +
                        _tmp109 * _tmp115 + _tmp116 * _tmp120 - _tmp119 * _tmp124);
  _res(2, 0) = _tmp0 * (_tmp104 * _tmp124 + _tmp107 * _tmp94 + _tmp109 * _tmp91 -
                        _tmp117 * _tmp123 + _tmp118 * lambdas(2, 2) + _tmp120 * _tmp29);
  _res(3, 0) = _tmp0 * (_tmp157 * _tmp161 + _tmp164 * _tmp168 + _tmp172 * _tmp175 -
                        _tmp185 * _tmp186 + _tmp187 * _tmp191);
  _res(4, 0) = _tmp0 * (_tmp161 * _tmp190 + _tmp168 * _tmp188 + _tmp172 * _tmp189 +
                        _tmp185 * _tmp193 - _tmp187 * _tmp192);
  _res(5, 0) = _tmp0 * (_tmp161 * _tmp179 + _tmp168 * _tmp183 + _tmp172 * _tmp176 +
                        _tmp186 * _tmp192 - _tmp191 * _tmp193);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
