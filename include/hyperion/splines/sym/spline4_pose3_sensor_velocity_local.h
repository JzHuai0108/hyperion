// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline4_pose3_sensor_velocity
 *
 * Args:
 *     dt: Scalar
 *     lambdas: Matrix42
 *     x0: Pose3
 *     x1: Pose3
 *     x2: Pose3
 *     x3: Pose3
 *     x4: Pose3
 *     x_T_s: Pose3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix61
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 6, 1> Spline4Pose3SensorVelocityLocal(
    const Scalar dt, const Eigen::Matrix<Scalar, 4, 2>& lambdas, const sym::Pose3<Scalar>& x0,
    const sym::Pose3<Scalar>& x1, const sym::Pose3<Scalar>& x2, const sym::Pose3<Scalar>& x3,
    const sym::Pose3<Scalar>& x4, const sym::Pose3<Scalar>& x_T_s, const Scalar epsilon) {
  // Total ops: 757

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x3 = x3.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x4 = x4.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x_T_s = x_T_s.Data();

  // Intermediate terms (212)
  const Scalar _tmp0 = 2 * _x_T_s[3];
  const Scalar _tmp1 = _tmp0 * _x_T_s[1];
  const Scalar _tmp2 = 2 * _x_T_s[0];
  const Scalar _tmp3 = _tmp2 * _x_T_s[2];
  const Scalar _tmp4 = -_tmp1 + _tmp3;
  const Scalar _tmp5 = Scalar(1.0) / (dt);
  const Scalar _tmp6 = _x3[0] * _x4[2] - _x3[1] * _x4[3] - _x3[2] * _x4[0] + _x3[3] * _x4[1];
  const Scalar _tmp7 = std::pow(_tmp6, Scalar(2));
  const Scalar _tmp8 = -_x3[0] * _x4[3] - _x3[1] * _x4[2] + _x3[2] * _x4[1] + _x3[3] * _x4[0];
  const Scalar _tmp9 = std::pow(_tmp8, Scalar(2));
  const Scalar _tmp10 = -_x3[0] * _x4[0] - _x3[1] * _x4[1] - _x3[2] * _x4[2];
  const Scalar _tmp11 = _x3[3] * _x4[3];
  const Scalar _tmp12 = 1 - epsilon;
  const Scalar _tmp13 = std::min<Scalar>(_tmp12, std::fabs(_tmp10 - _tmp11));
  const Scalar _tmp14 = std::acos(_tmp13);
  const Scalar _tmp15 =
      2 * std::min<Scalar>(0, (((-_tmp10 + _tmp11) > 0) - ((-_tmp10 + _tmp11) < 0))) + 1;
  const Scalar _tmp16 = 1 - std::pow(_tmp13, Scalar(2));
  const Scalar _tmp17 = std::pow(_tmp14, Scalar(2)) * std::pow(_tmp15, Scalar(2)) *
                        std::pow(lambdas(3, 0), Scalar(2)) / _tmp16;
  const Scalar _tmp18 = 4 * _tmp17;
  const Scalar _tmp19 = -_x3[0] * _x4[1] + _x3[1] * _x4[0] - _x3[2] * _x4[3] + _x3[3] * _x4[2];
  const Scalar _tmp20 = std::pow(_tmp19, Scalar(2));
  const Scalar _tmp21 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp22 = _tmp18 * _tmp20 + _tmp18 * _tmp7 + _tmp18 * _tmp9 + _tmp21;
  const Scalar _tmp23 = std::sqrt(_tmp22);
  const Scalar _tmp24 = (Scalar(1) / Scalar(2)) * _tmp23;
  const Scalar _tmp25 = std::sin(_tmp24);
  const Scalar _tmp26 = 8 * _tmp17 * std::pow(_tmp25, Scalar(2)) / _tmp22;
  const Scalar _tmp27 = -_tmp26 * _tmp7;
  const Scalar _tmp28 = -_tmp26 * _tmp9;
  const Scalar _tmp29 = -_x2[0] * _x3[3] - _x2[1] * _x3[2] + _x2[2] * _x3[1] + _x2[3] * _x3[0];
  const Scalar _tmp30 = _x2[0] * _x3[2] - _x2[1] * _x3[3] - _x2[2] * _x3[0] + _x2[3] * _x3[1];
  const Scalar _tmp31 = std::pow(_tmp30, Scalar(2));
  const Scalar _tmp32 = -_x2[0] * _x3[0] - _x2[1] * _x3[1] - _x2[2] * _x3[2];
  const Scalar _tmp33 = _x2[3] * _x3[3];
  const Scalar _tmp34 = std::min<Scalar>(_tmp12, std::fabs(_tmp32 - _tmp33));
  const Scalar _tmp35 = 1 - std::pow(_tmp34, Scalar(2));
  const Scalar _tmp36 =
      2 * std::min<Scalar>(0, (((-_tmp32 + _tmp33) > 0) - ((-_tmp32 + _tmp33) < 0))) + 1;
  const Scalar _tmp37 = std::acos(_tmp34);
  const Scalar _tmp38 = std::pow(_tmp36, Scalar(2)) * std::pow(_tmp37, Scalar(2)) *
                        std::pow(lambdas(2, 0), Scalar(2)) / _tmp35;
  const Scalar _tmp39 = 4 * _tmp38;
  const Scalar _tmp40 = std::pow(_tmp29, Scalar(2));
  const Scalar _tmp41 = -_x2[0] * _x3[1] + _x2[1] * _x3[0] - _x2[2] * _x3[3] + _x2[3] * _x3[2];
  const Scalar _tmp42 = std::pow(_tmp41, Scalar(2));
  const Scalar _tmp43 = _tmp21 + _tmp31 * _tmp39 + _tmp39 * _tmp40 + _tmp39 * _tmp42;
  const Scalar _tmp44 = std::sqrt(_tmp43);
  const Scalar _tmp45 = (Scalar(1) / Scalar(2)) * _tmp44;
  const Scalar _tmp46 = std::cos(_tmp45);
  const Scalar _tmp47 = _tmp36 * _tmp37 / std::sqrt(_tmp35);
  const Scalar _tmp48 = std::sin(_tmp45);
  const Scalar _tmp49 = _tmp48 * lambdas(2, 0) / _tmp44;
  const Scalar _tmp50 = 4 * _tmp46 * _tmp47 * _tmp49;
  const Scalar _tmp51 = _tmp29 * _tmp50;
  const Scalar _tmp52 = 8 * _tmp38 * std::pow(_tmp48, Scalar(2)) / _tmp43;
  const Scalar _tmp53 = _tmp30 * _tmp41 * _tmp52;
  const Scalar _tmp54 = _x1[0] * _x2[2] - _x1[1] * _x2[3] - _x1[2] * _x2[0] + _x1[3] * _x2[1];
  const Scalar _tmp55 = -_x1[0] * _x2[3] - _x1[1] * _x2[2] + _x1[2] * _x2[1] + _x1[3] * _x2[0];
  const Scalar _tmp56 = std::pow(_tmp55, Scalar(2));
  const Scalar _tmp57 = -_x1[0] * _x2[0] - _x1[1] * _x2[1] - _x1[2] * _x2[2];
  const Scalar _tmp58 = _x1[3] * _x2[3];
  const Scalar _tmp59 = std::min<Scalar>(_tmp12, std::fabs(_tmp57 - _tmp58));
  const Scalar _tmp60 = 1 - std::pow(_tmp59, Scalar(2));
  const Scalar _tmp61 =
      2 * std::min<Scalar>(0, (((-_tmp57 + _tmp58) > 0) - ((-_tmp57 + _tmp58) < 0))) + 1;
  const Scalar _tmp62 = std::acos(_tmp59);
  const Scalar _tmp63 = std::pow(_tmp61, Scalar(2)) * std::pow(_tmp62, Scalar(2)) *
                        std::pow(lambdas(1, 0), Scalar(2)) / _tmp60;
  const Scalar _tmp64 = 4 * _tmp63;
  const Scalar _tmp65 = -_x1[0] * _x2[1] + _x1[1] * _x2[0] - _x1[2] * _x2[3] + _x1[3] * _x2[2];
  const Scalar _tmp66 = std::pow(_tmp65, Scalar(2));
  const Scalar _tmp67 = std::pow(_tmp54, Scalar(2));
  const Scalar _tmp68 = _tmp21 + _tmp56 * _tmp64 + _tmp64 * _tmp66 + _tmp64 * _tmp67;
  const Scalar _tmp69 = std::sqrt(_tmp68);
  const Scalar _tmp70 = (Scalar(1) / Scalar(2)) * _tmp69;
  const Scalar _tmp71 = std::sin(_tmp70);
  const Scalar _tmp72 = 8 * _tmp63 * std::pow(_tmp71, Scalar(2)) / _tmp68;
  const Scalar _tmp73 = _tmp55 * _tmp72;
  const Scalar _tmp74 = _tmp54 * _tmp73;
  const Scalar _tmp75 = std::cos(_tmp70);
  const Scalar _tmp76 = _tmp61 * _tmp62 / std::sqrt(_tmp60);
  const Scalar _tmp77 = _tmp71 * lambdas(1, 0) / _tmp69;
  const Scalar _tmp78 = 4 * _tmp75 * _tmp76 * _tmp77;
  const Scalar _tmp79 = _tmp65 * _tmp78;
  const Scalar _tmp80 = -_x0[0] * _x1[3] - _x0[1] * _x1[2] + _x0[2] * _x1[1] + _x0[3] * _x1[0];
  const Scalar _tmp81 = -_x0[0] * _x1[0] - _x0[1] * _x1[1] - _x0[2] * _x1[2];
  const Scalar _tmp82 = _x0[3] * _x1[3];
  const Scalar _tmp83 =
      2 * std::min<Scalar>(0, (((-_tmp81 + _tmp82) > 0) - ((-_tmp81 + _tmp82) < 0))) + 1;
  const Scalar _tmp84 = std::min<Scalar>(_tmp12, std::fabs(_tmp81 - _tmp82));
  const Scalar _tmp85 = std::acos(_tmp84);
  const Scalar _tmp86 = 1 - std::pow(_tmp84, Scalar(2));
  const Scalar _tmp87 = 2 * _tmp83 * _tmp85 / std::sqrt(_tmp86);
  const Scalar _tmp88 = _tmp87 * lambdas(0, 1);
  const Scalar _tmp89 = _tmp80 * _tmp88;
  const Scalar _tmp90 = _tmp54 * _tmp65 * _tmp72;
  const Scalar _tmp91 = _tmp55 * _tmp78;
  const Scalar _tmp92 = -_x0[0] * _x1[1] + _x0[1] * _x1[0] - _x0[2] * _x1[3] + _x0[3] * _x1[2];
  const Scalar _tmp93 = _tmp88 * _tmp92;
  const Scalar _tmp94 = 2 * _tmp76;
  const Scalar _tmp95 = _tmp94 * lambdas(1, 1);
  const Scalar _tmp96 = -_tmp66 * _tmp72;
  const Scalar _tmp97 = -_tmp56 * _tmp72 + 1;
  const Scalar _tmp98 = _x0[0] * _x1[2] - _x0[1] * _x1[3] - _x0[2] * _x1[0] + _x0[3] * _x1[1];
  const Scalar _tmp99 = _tmp88 * _tmp98;
  const Scalar _tmp100 = _tmp54 * _tmp95 + _tmp89 * (_tmp74 - _tmp79) + _tmp93 * (_tmp90 + _tmp91) +
                         _tmp99 * (_tmp96 + _tmp97);
  const Scalar _tmp101 = _tmp54 * _tmp78;
  const Scalar _tmp102 = _tmp65 * _tmp73;
  const Scalar _tmp103 = -_tmp67 * _tmp72;
  const Scalar _tmp104 = _tmp55 * _tmp95 + _tmp89 * (_tmp103 + _tmp96 + 1) +
                         _tmp93 * (-_tmp101 + _tmp102) + _tmp99 * (_tmp74 + _tmp79);
  const Scalar _tmp105 = _tmp30 * _tmp50;
  const Scalar _tmp106 = _tmp29 * _tmp52;
  const Scalar _tmp107 = _tmp106 * _tmp41;
  const Scalar _tmp108 = 2 * _tmp47;
  const Scalar _tmp109 = _tmp108 * lambdas(2, 1);
  const Scalar _tmp110 = -_tmp40 * _tmp52;
  const Scalar _tmp111 = -_tmp31 * _tmp52 + 1;
  const Scalar _tmp112 = _tmp65 * _tmp95 + _tmp89 * (_tmp101 + _tmp102) +
                         _tmp93 * (_tmp103 + _tmp97) + _tmp99 * (_tmp90 - _tmp91);
  const Scalar _tmp113 = _tmp100 * (-_tmp51 + _tmp53) + _tmp104 * (_tmp105 + _tmp107) +
                         _tmp109 * _tmp41 + _tmp112 * (_tmp110 + _tmp111);
  const Scalar _tmp114 = _tmp106 * _tmp30;
  const Scalar _tmp115 = _tmp41 * _tmp50;
  const Scalar _tmp116 = -_tmp42 * _tmp52;
  const Scalar _tmp117 = _tmp100 * (_tmp114 + _tmp115) + _tmp104 * (_tmp111 + _tmp116) +
                         _tmp109 * _tmp29 + _tmp112 * (-_tmp105 + _tmp107);
  const Scalar _tmp118 = _tmp19 * _tmp26 * _tmp8;
  const Scalar _tmp119 = _tmp14 * _tmp15 / std::sqrt(_tmp16);
  const Scalar _tmp120 = _tmp119 * _tmp6;
  const Scalar _tmp121 = _tmp25 * lambdas(3, 0) / _tmp23;
  const Scalar _tmp122 = _tmp120 * _tmp121;
  const Scalar _tmp123 = std::cos(_tmp24);
  const Scalar _tmp124 = 4 * _tmp123;
  const Scalar _tmp125 = _tmp122 * _tmp124;
  const Scalar _tmp126 = 2 * lambdas(3, 1);
  const Scalar _tmp127 = _tmp119 * _tmp126;
  const Scalar _tmp128 = _tmp100 * (_tmp110 + _tmp116 + 1) + _tmp104 * (_tmp114 - _tmp115) +
                         _tmp109 * _tmp30 + _tmp112 * (_tmp51 + _tmp53);
  const Scalar _tmp129 = _tmp26 * _tmp6;
  const Scalar _tmp130 = _tmp129 * _tmp19;
  const Scalar _tmp131 = _tmp119 * _tmp121;
  const Scalar _tmp132 = _tmp131 * _tmp8;
  const Scalar _tmp133 = _tmp124 * _tmp132;
  const Scalar _tmp134 = _tmp5 * (_tmp113 * (_tmp27 + _tmp28 + 1) + _tmp117 * (_tmp118 + _tmp125) +
                                  _tmp127 * _tmp19 + _tmp128 * (_tmp130 - _tmp133));
  const Scalar _tmp135 = _tmp2 * _x_T_s[1];
  const Scalar _tmp136 = _tmp0 * _x_T_s[2];
  const Scalar _tmp137 = _tmp135 + _tmp136;
  const Scalar _tmp138 = _tmp129 * _tmp8;
  const Scalar _tmp139 = _tmp131 * _tmp19;
  const Scalar _tmp140 = _tmp124 * _tmp139;
  const Scalar _tmp141 = -_tmp20 * _tmp26 + 1;
  const Scalar _tmp142 = _tmp5 * (_tmp113 * (_tmp130 + _tmp133) + _tmp117 * (_tmp138 - _tmp140) +
                                  _tmp120 * _tmp126 + _tmp128 * (_tmp141 + _tmp28));
  const Scalar _tmp143 = -2 * std::pow(_x_T_s[1], Scalar(2));
  const Scalar _tmp144 = -2 * std::pow(_x_T_s[2], Scalar(2));
  const Scalar _tmp145 = _tmp143 + _tmp144 + 1;
  const Scalar _tmp146 = _tmp5 * (_tmp113 * (_tmp118 - _tmp125) + _tmp117 * (_tmp141 + _tmp27) +
                                  _tmp127 * _tmp8 + _tmp128 * (_tmp138 + _tmp140));
  const Scalar _tmp147 = 2 * _x_T_s[1] * _x_T_s[2];
  const Scalar _tmp148 = _tmp0 * _x_T_s[0];
  const Scalar _tmp149 = _tmp147 + _tmp148;
  const Scalar _tmp150 = _tmp135 - _tmp136;
  const Scalar _tmp151 = 1 - 2 * std::pow(_x_T_s[0], Scalar(2));
  const Scalar _tmp152 = _tmp144 + _tmp151;
  const Scalar _tmp153 = _tmp143 + _tmp151;
  const Scalar _tmp154 = _tmp1 + _tmp3;
  const Scalar _tmp155 = _tmp147 - _tmp148;
  const Scalar _tmp156 = lambdas(0, 1) * (-_x0[5] + _x1[5]) + lambdas(1, 1) * (-_x1[5] + _x2[5]) +
                         lambdas(2, 1) * (-_x2[5] + _x3[5]) + lambdas(3, 1) * (-_x3[5] + _x4[5]);
  const Scalar _tmp157 = 4 * std::pow(_tmp83, Scalar(2)) * std::pow(_tmp85, Scalar(2)) *
                         std::pow(lambdas(0, 0), Scalar(2)) / _tmp86;
  const Scalar _tmp158 = std::sqrt(Scalar(_tmp157 * std::pow(_tmp80, Scalar(2)) +
                                          _tmp157 * std::pow(_tmp92, Scalar(2)) +
                                          _tmp157 * std::pow(_tmp98, Scalar(2)) + _tmp21));
  const Scalar _tmp159 = (Scalar(1) / Scalar(2)) * _tmp158;
  const Scalar _tmp160 = _tmp87 * lambdas(0, 0) * std::sin(_tmp159) / _tmp158;
  const Scalar _tmp161 = _tmp160 * _tmp98;
  const Scalar _tmp162 = std::cos(_tmp159);
  const Scalar _tmp163 = _tmp160 * _tmp80;
  const Scalar _tmp164 = _tmp160 * _tmp92;
  const Scalar _tmp165 = -_tmp161 * _x0[2] + _tmp162 * _x0[0] + _tmp163 * _x0[3] + _tmp164 * _x0[1];
  const Scalar _tmp166 = _tmp77 * _tmp94;
  const Scalar _tmp167 = _tmp166 * _tmp55;
  const Scalar _tmp168 = _tmp161 * _x0[3] + _tmp162 * _x0[1] + _tmp163 * _x0[2] - _tmp164 * _x0[0];
  const Scalar _tmp169 = _tmp166 * _tmp54;
  const Scalar _tmp170 = _tmp161 * _x0[0] + _tmp162 * _x0[2] - _tmp163 * _x0[1] + _tmp164 * _x0[3];
  const Scalar _tmp171 = _tmp166 * _tmp65;
  const Scalar _tmp172 = -_tmp161 * _x0[1] + _tmp162 * _x0[3] - _tmp163 * _x0[0] - _tmp164 * _x0[2];
  const Scalar _tmp173 =
      -_tmp165 * _tmp167 - _tmp168 * _tmp169 - _tmp170 * _tmp171 + _tmp172 * _tmp75;
  const Scalar _tmp174 =
      _tmp165 * _tmp169 - _tmp167 * _tmp168 + _tmp170 * _tmp75 + _tmp171 * _tmp172;
  const Scalar _tmp175 = _tmp108 * _tmp49;
  const Scalar _tmp176 = _tmp175 * _tmp41;
  const Scalar _tmp177 =
      -_tmp165 * _tmp171 + _tmp167 * _tmp170 + _tmp168 * _tmp75 + _tmp169 * _tmp172;
  const Scalar _tmp178 = _tmp175 * _tmp30;
  const Scalar _tmp179 =
      _tmp165 * _tmp75 + _tmp167 * _tmp172 + _tmp168 * _tmp171 - _tmp169 * _tmp170;
  const Scalar _tmp180 = _tmp175 * _tmp29;
  const Scalar _tmp181 =
      _tmp173 * _tmp46 - _tmp174 * _tmp176 - _tmp177 * _tmp178 - _tmp179 * _tmp180;
  const Scalar _tmp182 = 2 * _tmp132;
  const Scalar _tmp183 =
      _tmp173 * _tmp178 + _tmp174 * _tmp180 - _tmp176 * _tmp179 + _tmp177 * _tmp46;
  const Scalar _tmp184 = 2 * _tmp183;
  const Scalar _tmp185 =
      _tmp173 * _tmp180 - _tmp174 * _tmp178 + _tmp176 * _tmp177 + _tmp179 * _tmp46;
  const Scalar _tmp186 =
      _tmp173 * _tmp176 + _tmp174 * _tmp46 - _tmp177 * _tmp180 + _tmp178 * _tmp179;
  const Scalar _tmp187 = 2 * _tmp122;
  const Scalar _tmp188 =
      _tmp123 * _tmp185 + _tmp139 * _tmp184 + _tmp181 * _tmp182 - _tmp186 * _tmp187;
  const Scalar _tmp189 = -2 * std::pow(_tmp188, Scalar(2));
  const Scalar _tmp190 = 2 * _tmp139;
  const Scalar _tmp191 =
      _tmp123 * _tmp186 - _tmp132 * _tmp184 + _tmp181 * _tmp190 + _tmp185 * _tmp187;
  const Scalar _tmp192 = 1 - 2 * std::pow(_tmp191, Scalar(2));
  const Scalar _tmp193 = lambdas(0, 1) * (-_x0[6] + _x1[6]) + lambdas(1, 1) * (-_x1[6] + _x2[6]) +
                         lambdas(2, 1) * (-_x2[6] + _x3[6]) + lambdas(3, 1) * (-_x3[6] + _x4[6]);
  const Scalar _tmp194 =
      -_tmp122 * _tmp184 + _tmp123 * _tmp181 - _tmp182 * _tmp185 - _tmp186 * _tmp190;
  const Scalar _tmp195 = 2 * _tmp194;
  const Scalar _tmp196 = _tmp188 * _tmp195;
  const Scalar _tmp197 =
      _tmp123 * _tmp183 + _tmp181 * _tmp187 + _tmp182 * _tmp186 - _tmp185 * _tmp190;
  const Scalar _tmp198 = 2 * _tmp191;
  const Scalar _tmp199 = _tmp197 * _tmp198;
  const Scalar _tmp200 = lambdas(0, 1) * (-_x0[4] + _x1[4]) + lambdas(1, 1) * (-_x1[4] + _x2[4]) +
                         lambdas(2, 1) * (-_x2[4] + _x3[4]) + lambdas(3, 1) * (-_x3[4] + _x4[4]);
  const Scalar _tmp201 = 2 * _tmp188 * _tmp197;
  const Scalar _tmp202 = _tmp194 * _tmp198;
  const Scalar _tmp203 = _tmp5 * (_tmp156 * (_tmp189 + _tmp192) + _tmp193 * (_tmp196 + _tmp199) +
                                  _tmp200 * (_tmp201 - _tmp202));
  const Scalar _tmp204 = _tmp149 * _x_T_s[6] + _tmp150 * _x_T_s[4] + _tmp152 * _x_T_s[5];
  const Scalar _tmp205 = _tmp153 * _x_T_s[6] + _tmp154 * _x_T_s[4] + _tmp155 * _x_T_s[5];
  const Scalar _tmp206 = _tmp195 * _tmp197;
  const Scalar _tmp207 = _tmp188 * _tmp198;
  const Scalar _tmp208 = -2 * std::pow(_tmp197, Scalar(2));
  const Scalar _tmp209 = _tmp5 * (_tmp156 * (_tmp201 + _tmp202) + _tmp193 * (-_tmp206 + _tmp207) +
                                  _tmp200 * (_tmp192 + _tmp208));
  const Scalar _tmp210 =
      _tmp5 * (_tmp156 * (-_tmp196 + _tmp199) + _tmp193 * (_tmp189 + _tmp208 + 1) +
               _tmp200 * (_tmp206 + _tmp207));
  const Scalar _tmp211 = _tmp137 * _x_T_s[5] + _tmp145 * _x_T_s[4] + _tmp4 * _x_T_s[6];

  // Output terms (1)
  Eigen::Matrix<Scalar, 6, 1> _res;

  _res(0, 0) = _tmp134 * _tmp4 + _tmp137 * _tmp142 + _tmp145 * _tmp146;
  _res(1, 0) = _tmp134 * _tmp149 + _tmp142 * _tmp152 + _tmp146 * _tmp150;
  _res(2, 0) = _tmp134 * _tmp153 + _tmp142 * _tmp155 + _tmp146 * _tmp154;
  _res(3, 0) = _tmp134 * (_tmp149 * _tmp205 - _tmp153 * _tmp204) + _tmp137 * _tmp203 +
               _tmp142 * (_tmp152 * _tmp205 - _tmp155 * _tmp204) + _tmp145 * _tmp209 +
               _tmp146 * (_tmp150 * _tmp205 - _tmp154 * _tmp204) + _tmp210 * _tmp4;
  _res(4, 0) = _tmp134 * (_tmp153 * _tmp211 - _tmp205 * _tmp4) +
               _tmp142 * (-_tmp137 * _tmp205 + _tmp155 * _tmp211) +
               _tmp146 * (-_tmp145 * _tmp205 + _tmp154 * _tmp211) + _tmp149 * _tmp210 +
               _tmp150 * _tmp209 + _tmp152 * _tmp203;
  _res(5, 0) = _tmp134 * (-_tmp149 * _tmp211 + _tmp204 * _tmp4) +
               _tmp142 * (_tmp137 * _tmp204 - _tmp152 * _tmp211) +
               _tmp146 * (_tmp145 * _tmp204 - _tmp150 * _tmp211) + _tmp153 * _tmp210 +
               _tmp154 * _tmp209 + _tmp155 * _tmp203;

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
