// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline5_rot3_velocity
 *
 * Args:
 *     dt: Scalar
 *     lambdas: Matrix52
 *     x0: Rot3
 *     x1: Rot3
 *     x2: Rot3
 *     x3: Rot3
 *     x4: Rot3
 *     x5: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix31
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 3, 1> Spline5Rot3VelocityGlobal(
    const Scalar dt, const Eigen::Matrix<Scalar, 5, 2>& lambdas, const sym::Rot3<Scalar>& x0,
    const sym::Rot3<Scalar>& x1, const sym::Rot3<Scalar>& x2, const sym::Rot3<Scalar>& x3,
    const sym::Rot3<Scalar>& x4, const sym::Rot3<Scalar>& x5, const Scalar epsilon) {
  // Total ops: 572

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x3 = x3.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x4 = x4.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x5 = x5.Data();

  // Intermediate terms (173)
  const Scalar _tmp0 = Scalar(1.0) / (dt);
  const Scalar _tmp1 = -2 * std::pow(_x0[1], Scalar(2));
  const Scalar _tmp2 = -2 * std::pow(_x0[2], Scalar(2));
  const Scalar _tmp3 = -_x2[0] * _x3[1] + _x2[1] * _x3[0] - _x2[2] * _x3[3] + _x2[3] * _x3[2];
  const Scalar _tmp4 = -_x2[0] * _x3[0] - _x2[1] * _x3[1] - _x2[2] * _x3[2];
  const Scalar _tmp5 = _x2[3] * _x3[3];
  const Scalar _tmp6 = 1 - epsilon;
  const Scalar _tmp7 = std::min<Scalar>(_tmp6, std::fabs(_tmp4 - _tmp5));
  const Scalar _tmp8 = std::acos(_tmp7);
  const Scalar _tmp9 =
      2 * std::min<Scalar>(0, (((-_tmp4 + _tmp5) > 0) - ((-_tmp4 + _tmp5) < 0))) + 1;
  const Scalar _tmp10 = 1 - std::pow(_tmp7, Scalar(2));
  const Scalar _tmp11 = _tmp8 * _tmp9 / std::sqrt(_tmp10);
  const Scalar _tmp12 = 2 * lambdas(2, 1);
  const Scalar _tmp13 = _tmp11 * _tmp12;
  const Scalar _tmp14 = _x3[0] * _x4[2] - _x3[1] * _x4[3] - _x3[2] * _x4[0] + _x3[3] * _x4[1];
  const Scalar _tmp15 = -_x3[0] * _x4[0] - _x3[1] * _x4[1] - _x3[2] * _x4[2];
  const Scalar _tmp16 = _x3[3] * _x4[3];
  const Scalar _tmp17 = std::min<Scalar>(_tmp6, std::fabs(_tmp15 - _tmp16));
  const Scalar _tmp18 = std::acos(_tmp17);
  const Scalar _tmp19 =
      2 * std::min<Scalar>(0, (((-_tmp15 + _tmp16) > 0) - ((-_tmp15 + _tmp16) < 0))) + 1;
  const Scalar _tmp20 = 1 - std::pow(_tmp17, Scalar(2));
  const Scalar _tmp21 = _tmp18 * _tmp19 / std::sqrt(_tmp20);
  const Scalar _tmp22 = -_x3[0] * _x4[3] - _x3[1] * _x4[2] + _x3[2] * _x4[1] + _x3[3] * _x4[0];
  const Scalar _tmp23 = std::pow(_tmp22, Scalar(2));
  const Scalar _tmp24 = std::pow(_tmp18, Scalar(2)) * std::pow(_tmp19, Scalar(2)) *
                        std::pow(lambdas(3, 0), Scalar(2)) / _tmp20;
  const Scalar _tmp25 = 4 * _tmp24;
  const Scalar _tmp26 = std::pow(_tmp14, Scalar(2));
  const Scalar _tmp27 = -_x3[0] * _x4[1] + _x3[1] * _x4[0] - _x3[2] * _x4[3] + _x3[3] * _x4[2];
  const Scalar _tmp28 = std::pow(_tmp27, Scalar(2));
  const Scalar _tmp29 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp30 = _tmp23 * _tmp25 + _tmp25 * _tmp26 + _tmp25 * _tmp28 + _tmp29;
  const Scalar _tmp31 = std::sqrt(_tmp30);
  const Scalar _tmp32 = (Scalar(1) / Scalar(2)) * _tmp31;
  const Scalar _tmp33 = std::sin(_tmp32);
  const Scalar _tmp34 = 4 * _tmp33 * lambdas(3, 0) * std::cos(_tmp32) / _tmp31;
  const Scalar _tmp35 = _tmp21 * _tmp34;
  const Scalar _tmp36 = _tmp14 * _tmp35;
  const Scalar _tmp37 = 8 * _tmp24 * std::pow(_tmp33, Scalar(2)) / _tmp30;
  const Scalar _tmp38 = _tmp27 * _tmp37;
  const Scalar _tmp39 = _tmp22 * _tmp38;
  const Scalar _tmp40 = -_x4[0] * _x5[0] - _x4[1] * _x5[1] - _x4[2] * _x5[2];
  const Scalar _tmp41 = _x4[3] * _x5[3];
  const Scalar _tmp42 = std::min<Scalar>(_tmp6, std::fabs(_tmp40 - _tmp41));
  const Scalar _tmp43 =
      2 * lambdas(4, 1) *
      (2 * std::min<Scalar>(0, (((-_tmp40 + _tmp41) > 0) - ((-_tmp40 + _tmp41) < 0))) + 1) *
      std::acos(_tmp42) / std::sqrt(Scalar(1 - std::pow(_tmp42, Scalar(2))));
  const Scalar _tmp44 =
      _tmp43 * (-_x4[0] * _x5[1] + _x4[1] * _x5[0] - _x4[2] * _x5[3] + _x4[3] * _x5[2]);
  const Scalar _tmp45 = 2 * lambdas(3, 1);
  const Scalar _tmp46 = _tmp21 * _tmp45;
  const Scalar _tmp47 = _tmp14 * _tmp22 * _tmp37;
  const Scalar _tmp48 = _tmp21 * _tmp27;
  const Scalar _tmp49 = _tmp34 * _tmp48;
  const Scalar _tmp50 =
      _tmp43 * (_x4[0] * _x5[2] - _x4[1] * _x5[3] - _x4[2] * _x5[0] + _x4[3] * _x5[1]);
  const Scalar _tmp51 = -_tmp26 * _tmp37;
  const Scalar _tmp52 = -_tmp28 * _tmp37 + 1;
  const Scalar _tmp53 =
      _tmp43 * (-_x4[0] * _x5[3] - _x4[1] * _x5[2] + _x4[2] * _x5[1] + _x4[3] * _x5[0]);
  const Scalar _tmp54 = _tmp22 * _tmp46 + _tmp44 * (_tmp36 + _tmp39) + _tmp50 * (_tmp47 - _tmp49) +
                        _tmp53 * (_tmp51 + _tmp52);
  const Scalar _tmp55 = -_x2[0] * _x3[3] - _x2[1] * _x3[2] + _x2[2] * _x3[1] + _x2[3] * _x3[0];
  const Scalar _tmp56 = std::pow(_tmp3, Scalar(2));
  const Scalar _tmp57 = std::pow(_tmp8, Scalar(2)) * std::pow(_tmp9, Scalar(2)) *
                        std::pow(lambdas(2, 0), Scalar(2)) / _tmp10;
  const Scalar _tmp58 = 4 * _tmp57;
  const Scalar _tmp59 = _x2[0] * _x3[2] - _x2[1] * _x3[3] - _x2[2] * _x3[0] + _x2[3] * _x3[1];
  const Scalar _tmp60 = std::pow(_tmp59, Scalar(2));
  const Scalar _tmp61 = std::pow(_tmp55, Scalar(2));
  const Scalar _tmp62 = _tmp29 + _tmp56 * _tmp58 + _tmp58 * _tmp60 + _tmp58 * _tmp61;
  const Scalar _tmp63 = std::sqrt(_tmp62);
  const Scalar _tmp64 = (Scalar(1) / Scalar(2)) * _tmp63;
  const Scalar _tmp65 = std::sin(_tmp64);
  const Scalar _tmp66 = 8 * _tmp57 * std::pow(_tmp65, Scalar(2)) / _tmp62;
  const Scalar _tmp67 = _tmp3 * _tmp55 * _tmp66;
  const Scalar _tmp68 = _tmp11 * _tmp59;
  const Scalar _tmp69 = 4 * _tmp65 * lambdas(2, 0) * std::cos(_tmp64) / _tmp63;
  const Scalar _tmp70 = _tmp68 * _tmp69;
  const Scalar _tmp71 = -_tmp23 * _tmp37;
  const Scalar _tmp72 = _tmp14 * _tmp38;
  const Scalar _tmp73 = _tmp22 * _tmp35;
  const Scalar _tmp74 = _tmp14 * _tmp46 + _tmp44 * (_tmp72 - _tmp73) + _tmp50 * (_tmp52 + _tmp71) +
                        _tmp53 * (_tmp47 + _tmp49);
  const Scalar _tmp75 = _tmp11 * _tmp69;
  const Scalar _tmp76 = _tmp55 * _tmp75;
  const Scalar _tmp77 = _tmp59 * _tmp66;
  const Scalar _tmp78 = _tmp3 * _tmp77;
  const Scalar _tmp79 = -_tmp61 * _tmp66;
  const Scalar _tmp80 = -_tmp60 * _tmp66;
  const Scalar _tmp81 = _tmp44 * (_tmp51 + _tmp71 + 1) + _tmp45 * _tmp48 +
                        _tmp50 * (_tmp72 + _tmp73) + _tmp53 * (-_tmp36 + _tmp39);
  const Scalar _tmp82 = _tmp13 * _tmp3 + _tmp54 * (_tmp67 - _tmp70) + _tmp74 * (_tmp76 + _tmp78) +
                        _tmp81 * (_tmp79 + _tmp80 + 1);
  const Scalar _tmp83 = _x1[0] * _x2[2] - _x1[1] * _x2[3] - _x1[2] * _x2[0] + _x1[3] * _x2[1];
  const Scalar _tmp84 = -_x1[0] * _x2[0] - _x1[1] * _x2[1] - _x1[2] * _x2[2];
  const Scalar _tmp85 = _x1[3] * _x2[3];
  const Scalar _tmp86 = std::min<Scalar>(_tmp6, std::fabs(_tmp84 - _tmp85));
  const Scalar _tmp87 = 1 - std::pow(_tmp86, Scalar(2));
  const Scalar _tmp88 = std::acos(_tmp86);
  const Scalar _tmp89 =
      2 * std::min<Scalar>(0, (((-_tmp84 + _tmp85) > 0) - ((-_tmp84 + _tmp85) < 0))) + 1;
  const Scalar _tmp90 = _tmp88 * _tmp89 / std::sqrt(_tmp87);
  const Scalar _tmp91 = std::pow(_tmp83, Scalar(2));
  const Scalar _tmp92 = std::pow(_tmp88, Scalar(2)) * std::pow(_tmp89, Scalar(2)) *
                        std::pow(lambdas(1, 0), Scalar(2)) / _tmp87;
  const Scalar _tmp93 = 4 * _tmp92;
  const Scalar _tmp94 = -_x1[0] * _x2[1] + _x1[1] * _x2[0] - _x1[2] * _x2[3] + _x1[3] * _x2[2];
  const Scalar _tmp95 = std::pow(_tmp94, Scalar(2));
  const Scalar _tmp96 = -_x1[0] * _x2[3] - _x1[1] * _x2[2] + _x1[2] * _x2[1] + _x1[3] * _x2[0];
  const Scalar _tmp97 = std::pow(_tmp96, Scalar(2));
  const Scalar _tmp98 = _tmp29 + _tmp91 * _tmp93 + _tmp93 * _tmp95 + _tmp93 * _tmp97;
  const Scalar _tmp99 = std::sqrt(_tmp98);
  const Scalar _tmp100 = (Scalar(1) / Scalar(2)) * _tmp99;
  const Scalar _tmp101 = std::sin(_tmp100);
  const Scalar _tmp102 = 4 * _tmp101 * lambdas(1, 0) * std::cos(_tmp100) / _tmp99;
  const Scalar _tmp103 = _tmp102 * _tmp90;
  const Scalar _tmp104 = _tmp103 * _tmp83;
  const Scalar _tmp105 = 8 * std::pow(_tmp101, Scalar(2)) * _tmp92 / _tmp98;
  const Scalar _tmp106 = _tmp105 * _tmp94 * _tmp96;
  const Scalar _tmp107 = _tmp3 * _tmp75;
  const Scalar _tmp108 = _tmp55 * _tmp77;
  const Scalar _tmp109 = -_tmp56 * _tmp66 + 1;
  const Scalar _tmp110 = _tmp12 * _tmp68 + _tmp54 * (_tmp107 + _tmp108) +
                         _tmp74 * (_tmp109 + _tmp79) + _tmp81 * (-_tmp76 + _tmp78);
  const Scalar _tmp111 = _tmp90 * _tmp94;
  const Scalar _tmp112 = _tmp102 * _tmp111;
  const Scalar _tmp113 = _tmp105 * _tmp83;
  const Scalar _tmp114 = _tmp113 * _tmp96;
  const Scalar _tmp115 = -_tmp105 * _tmp95;
  const Scalar _tmp116 = -_tmp105 * _tmp91;
  const Scalar _tmp117 = _tmp13 * _tmp55 + _tmp54 * (_tmp109 + _tmp80) +
                         _tmp74 * (-_tmp107 + _tmp108) + _tmp81 * (_tmp67 + _tmp70);
  const Scalar _tmp118 = 2 * lambdas(1, 1);
  const Scalar _tmp119 = _tmp118 * _tmp90;
  const Scalar _tmp120 = _tmp110 * (-_tmp112 + _tmp114) + _tmp117 * (_tmp115 + _tmp116 + 1) +
                         _tmp119 * _tmp96 + _tmp82 * (_tmp104 + _tmp106);
  const Scalar _tmp121 = _x0[0] * _x1[2] - _x0[1] * _x1[3] - _x0[2] * _x1[0] + _x0[3] * _x1[1];
  const Scalar _tmp122 = std::pow(_tmp121, Scalar(2));
  const Scalar _tmp123 = -_x0[0] * _x1[0] - _x0[1] * _x1[1] - _x0[2] * _x1[2];
  const Scalar _tmp124 = _x0[3] * _x1[3];
  const Scalar _tmp125 = std::min<Scalar>(_tmp6, std::fabs(_tmp123 - _tmp124));
  const Scalar _tmp126 = 1 - std::pow(_tmp125, Scalar(2));
  const Scalar _tmp127 = std::acos(_tmp125);
  const Scalar _tmp128 =
      2 * std::min<Scalar>(0, (((-_tmp123 + _tmp124) > 0) - ((-_tmp123 + _tmp124) < 0))) + 1;
  const Scalar _tmp129 = std::pow(_tmp127, Scalar(2)) * std::pow(_tmp128, Scalar(2)) *
                         std::pow(lambdas(0, 0), Scalar(2)) / _tmp126;
  const Scalar _tmp130 = 4 * _tmp129;
  const Scalar _tmp131 = -_x0[0] * _x1[3] - _x0[1] * _x1[2] + _x0[2] * _x1[1] + _x0[3] * _x1[0];
  const Scalar _tmp132 = std::pow(_tmp131, Scalar(2));
  const Scalar _tmp133 = -_x0[0] * _x1[1] + _x0[1] * _x1[0] - _x0[2] * _x1[3] + _x0[3] * _x1[2];
  const Scalar _tmp134 = std::pow(_tmp133, Scalar(2));
  const Scalar _tmp135 = _tmp122 * _tmp130 + _tmp130 * _tmp132 + _tmp130 * _tmp134 + _tmp29;
  const Scalar _tmp136 = std::sqrt(_tmp135);
  const Scalar _tmp137 = (Scalar(1) / Scalar(2)) * _tmp136;
  const Scalar _tmp138 = std::sin(_tmp137);
  const Scalar _tmp139 = 8 * _tmp129 * std::pow(_tmp138, Scalar(2)) / _tmp135;
  const Scalar _tmp140 = -_tmp122 * _tmp139;
  const Scalar _tmp141 = -_tmp134 * _tmp139 + 1;
  const Scalar _tmp142 = -_tmp105 * _tmp97 + 1;
  const Scalar _tmp143 = _tmp113 * _tmp94;
  const Scalar _tmp144 = _tmp103 * _tmp96;
  const Scalar _tmp145 = _tmp110 * (_tmp143 + _tmp144) + _tmp111 * _tmp118 +
                         _tmp117 * (-_tmp104 + _tmp106) + _tmp82 * (_tmp116 + _tmp142);
  const Scalar _tmp146 = _tmp127 * _tmp128 / std::sqrt(_tmp126);
  const Scalar _tmp147 = 4 * _tmp138 * lambdas(0, 0) * std::cos(_tmp137) / _tmp136;
  const Scalar _tmp148 = _tmp146 * _tmp147;
  const Scalar _tmp149 = _tmp121 * _tmp148;
  const Scalar _tmp150 = _tmp133 * _tmp139;
  const Scalar _tmp151 = _tmp131 * _tmp150;
  const Scalar _tmp152 = _tmp133 * _tmp148;
  const Scalar _tmp153 = _tmp121 * _tmp131 * _tmp139;
  const Scalar _tmp154 = _tmp110 * (_tmp115 + _tmp142) + _tmp117 * (_tmp112 + _tmp114) +
                         _tmp119 * _tmp83 + _tmp82 * (_tmp143 - _tmp144);
  const Scalar _tmp155 = _tmp131 * _tmp146;
  const Scalar _tmp156 = 2 * lambdas(0, 1);
  const Scalar _tmp157 = _tmp120 * (_tmp140 + _tmp141) + _tmp145 * (_tmp149 + _tmp151) +
                         _tmp154 * (-_tmp152 + _tmp153) + _tmp155 * _tmp156;
  const Scalar _tmp158 = 2 * _x0[2] * _x0[3];
  const Scalar _tmp159 = 2 * _x0[0];
  const Scalar _tmp160 = _tmp159 * _x0[1];
  const Scalar _tmp161 = -_tmp132 * _tmp139;
  const Scalar _tmp162 = _tmp146 * _tmp156;
  const Scalar _tmp163 = _tmp121 * _tmp150;
  const Scalar _tmp164 = _tmp147 * _tmp155;
  const Scalar _tmp165 = _tmp120 * (_tmp152 + _tmp153) + _tmp121 * _tmp162 +
                         _tmp145 * (_tmp163 - _tmp164) + _tmp154 * (_tmp141 + _tmp161);
  const Scalar _tmp166 = 2 * _x0[1];
  const Scalar _tmp167 = _tmp166 * _x0[3];
  const Scalar _tmp168 = _tmp159 * _x0[2];
  const Scalar _tmp169 = _tmp120 * (-_tmp149 + _tmp151) + _tmp133 * _tmp162 +
                         _tmp145 * (_tmp140 + _tmp161 + 1) + _tmp154 * (_tmp163 + _tmp164);
  const Scalar _tmp170 = 1 - 2 * std::pow(_x0[0], Scalar(2));
  const Scalar _tmp171 = _tmp159 * _x0[3];
  const Scalar _tmp172 = _tmp166 * _x0[2];

  // Output terms (1)
  Eigen::Matrix<Scalar, 3, 1> _res;

  _res(0, 0) = _tmp0 * (_tmp157 * (_tmp1 + _tmp2 + 1) + _tmp165 * (-_tmp158 + _tmp160) +
                        _tmp169 * (_tmp167 + _tmp168));
  _res(1, 0) = _tmp0 * (_tmp157 * (_tmp158 + _tmp160) + _tmp165 * (_tmp170 + _tmp2) +
                        _tmp169 * (-_tmp171 + _tmp172));
  _res(2, 0) = _tmp0 * (_tmp157 * (-_tmp167 + _tmp168) + _tmp165 * (_tmp171 + _tmp172) +
                        _tmp169 * (_tmp1 + _tmp170));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
