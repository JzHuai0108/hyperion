// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline5_rot3_acceleration
 *
 * Args:
 *     dt: Scalar
 *     lambdas: Matrix53
 *     x0: Rot3
 *     x1: Rot3
 *     x2: Rot3
 *     x3: Rot3
 *     x4: Rot3
 *     x5: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix31
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 3, 1> Spline5Rot3AccelerationLocal(
    const Scalar dt, const Eigen::Matrix<Scalar, 5, 3>& lambdas, const sym::Rot3<Scalar>& x0,
    const sym::Rot3<Scalar>& x1, const sym::Rot3<Scalar>& x2, const sym::Rot3<Scalar>& x3,
    const sym::Rot3<Scalar>& x4, const sym::Rot3<Scalar>& x5, const Scalar epsilon) {
  // Total ops: 667

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x3 = x3.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x4 = x4.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x5 = x5.Data();

  // Intermediate terms (228)
  const Scalar _tmp0 = std::pow(dt, Scalar(-2));
  const Scalar _tmp1 = -_x3[0] * _x4[1] + _x3[1] * _x4[0] - _x3[2] * _x4[3] + _x3[3] * _x4[2];
  const Scalar _tmp2 = _x3[0] * _x4[2] - _x3[1] * _x4[3] - _x3[2] * _x4[0] + _x3[3] * _x4[1];
  const Scalar _tmp3 = -_x3[0] * _x4[3] - _x3[1] * _x4[2] + _x3[2] * _x4[1] + _x3[3] * _x4[0];
  const Scalar _tmp4 = std::pow(_tmp3, Scalar(2));
  const Scalar _tmp5 = -_x3[0] * _x4[0] - _x3[1] * _x4[1] - _x3[2] * _x4[2];
  const Scalar _tmp6 = _x3[3] * _x4[3];
  const Scalar _tmp7 = 1 - epsilon;
  const Scalar _tmp8 = std::min<Scalar>(_tmp7, std::fabs(_tmp5 - _tmp6));
  const Scalar _tmp9 = std::acos(_tmp8);
  const Scalar _tmp10 =
      2 * std::min<Scalar>(0, (((-_tmp5 + _tmp6) > 0) - ((-_tmp5 + _tmp6) < 0))) + 1;
  const Scalar _tmp11 = 1 - std::pow(_tmp8, Scalar(2));
  const Scalar _tmp12 = std::pow(_tmp10, Scalar(2)) * std::pow(_tmp9, Scalar(2)) *
                        std::pow(lambdas(3, 0), Scalar(2)) / _tmp11;
  const Scalar _tmp13 = 4 * _tmp12;
  const Scalar _tmp14 = std::pow(_tmp2, Scalar(2));
  const Scalar _tmp15 = std::pow(_tmp1, Scalar(2));
  const Scalar _tmp16 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp17 = _tmp13 * _tmp14 + _tmp13 * _tmp15 + _tmp13 * _tmp4 + _tmp16;
  const Scalar _tmp18 = std::sqrt(_tmp17);
  const Scalar _tmp19 = (Scalar(1) / Scalar(2)) * _tmp18;
  const Scalar _tmp20 = std::sin(_tmp19);
  const Scalar _tmp21 = 8 * _tmp12 * std::pow(_tmp20, Scalar(2)) / _tmp17;
  const Scalar _tmp22 = _tmp1 * _tmp2 * _tmp21;
  const Scalar _tmp23 = _tmp10 * _tmp9 / std::sqrt(_tmp11);
  const Scalar _tmp24 = 4 * _tmp20 * _tmp23 * lambdas(3, 0) * std::cos(_tmp19) / _tmp18;
  const Scalar _tmp25 = _tmp24 * _tmp3;
  const Scalar _tmp26 = _tmp22 + _tmp25;
  const Scalar _tmp27 = -_x2[0] * _x3[1] + _x2[1] * _x3[0] - _x2[2] * _x3[3] + _x2[3] * _x3[2];
  const Scalar _tmp28 = -_x2[0] * _x3[0] - _x2[1] * _x3[1] - _x2[2] * _x3[2];
  const Scalar _tmp29 = _x2[3] * _x3[3];
  const Scalar _tmp30 = std::min<Scalar>(_tmp7, std::fabs(_tmp28 - _tmp29));
  const Scalar _tmp31 = std::acos(_tmp30);
  const Scalar _tmp32 =
      2 * std::min<Scalar>(0, (((-_tmp28 + _tmp29) > 0) - ((-_tmp28 + _tmp29) < 0))) + 1;
  const Scalar _tmp33 = 1 - std::pow(_tmp30, Scalar(2));
  const Scalar _tmp34 = _tmp31 * _tmp32 / std::sqrt(_tmp33);
  const Scalar _tmp35 = 2 * _tmp34;
  const Scalar _tmp36 = _tmp35 * lambdas(2, 1);
  const Scalar _tmp37 = _tmp27 * _tmp36;
  const Scalar _tmp38 = -_x1[0] * _x2[3] - _x1[1] * _x2[2] + _x1[2] * _x2[1] + _x1[3] * _x2[0];
  const Scalar _tmp39 = -_x1[0] * _x2[0] - _x1[1] * _x2[1] - _x1[2] * _x2[2];
  const Scalar _tmp40 = _x1[3] * _x2[3];
  const Scalar _tmp41 = std::min<Scalar>(_tmp7, std::fabs(_tmp39 - _tmp40));
  const Scalar _tmp42 = 1 - std::pow(_tmp41, Scalar(2));
  const Scalar _tmp43 = std::acos(_tmp41);
  const Scalar _tmp44 =
      2 * std::min<Scalar>(0, (((-_tmp39 + _tmp40) > 0) - ((-_tmp39 + _tmp40) < 0))) + 1;
  const Scalar _tmp45 = _tmp43 * _tmp44 / std::sqrt(_tmp42);
  const Scalar _tmp46 = 2 * _tmp45;
  const Scalar _tmp47 = _tmp38 * _tmp46;
  const Scalar _tmp48 = _tmp47 * lambdas(1, 1);
  const Scalar _tmp49 = -_x0[0] * _x1[0] - _x0[1] * _x1[1] - _x0[2] * _x1[2];
  const Scalar _tmp50 = _x0[3] * _x1[3];
  const Scalar _tmp51 = std::min<Scalar>(_tmp7, std::fabs(_tmp49 - _tmp50));
  const Scalar _tmp52 =
      2 * (2 * std::min<Scalar>(0, (((-_tmp49 + _tmp50) > 0) - ((-_tmp49 + _tmp50) < 0))) + 1) *
      std::acos(_tmp51) / std::sqrt(Scalar(1 - std::pow(_tmp51, Scalar(2))));
  const Scalar _tmp53 = _tmp52 * lambdas(0, 1);
  const Scalar _tmp54 = -_x0[0] * _x1[3] - _x0[1] * _x1[2] + _x0[2] * _x1[1] + _x0[3] * _x1[0];
  const Scalar _tmp55 = -_x1[0] * _x2[1] + _x1[1] * _x2[0] - _x1[2] * _x2[3] + _x1[3] * _x2[2];
  const Scalar _tmp56 = std::pow(_tmp55, Scalar(2));
  const Scalar _tmp57 = _x1[0] * _x2[2] - _x1[1] * _x2[3] - _x1[2] * _x2[0] + _x1[3] * _x2[1];
  const Scalar _tmp58 = std::pow(_tmp57, Scalar(2));
  const Scalar _tmp59 = std::pow(_tmp43, Scalar(2)) * std::pow(_tmp44, Scalar(2)) *
                        std::pow(lambdas(1, 0), Scalar(2)) / _tmp42;
  const Scalar _tmp60 = 4 * _tmp59;
  const Scalar _tmp61 = std::pow(_tmp38, Scalar(2));
  const Scalar _tmp62 = _tmp16 + _tmp56 * _tmp60 + _tmp58 * _tmp60 + _tmp60 * _tmp61;
  const Scalar _tmp63 = std::sqrt(_tmp62);
  const Scalar _tmp64 = (Scalar(1) / Scalar(2)) * _tmp63;
  const Scalar _tmp65 = std::sin(_tmp64);
  const Scalar _tmp66 = 8 * _tmp59 * std::pow(_tmp65, Scalar(2)) / _tmp62;
  const Scalar _tmp67 = -_tmp56 * _tmp66;
  const Scalar _tmp68 = -_tmp58 * _tmp66 + 1;
  const Scalar _tmp69 = _tmp54 * (_tmp67 + _tmp68);
  const Scalar _tmp70 = 4 * _tmp45 * _tmp65 * lambdas(1, 0) * std::cos(_tmp64) / _tmp63;
  const Scalar _tmp71 = _tmp55 * _tmp70;
  const Scalar _tmp72 = _tmp38 * _tmp57 * _tmp66;
  const Scalar _tmp73 = _tmp71 + _tmp72;
  const Scalar _tmp74 = _x0[0] * _x1[2] - _x0[1] * _x1[3] - _x0[2] * _x1[0] + _x0[3] * _x1[1];
  const Scalar _tmp75 = _tmp53 * _tmp74;
  const Scalar _tmp76 = -_x0[0] * _x1[1] + _x0[1] * _x1[0] - _x0[2] * _x1[3] + _x0[3] * _x1[2];
  const Scalar _tmp77 = _tmp57 * _tmp70;
  const Scalar _tmp78 = _tmp55 * _tmp66;
  const Scalar _tmp79 = _tmp38 * _tmp78;
  const Scalar _tmp80 = _tmp76 * (-_tmp77 + _tmp79);
  const Scalar _tmp81 = _tmp53 * _tmp69 + _tmp53 * _tmp80 + _tmp73 * _tmp75;
  const Scalar _tmp82 = _tmp48 + _tmp81;
  const Scalar _tmp83 = -_x2[0] * _x3[3] - _x2[1] * _x3[2] + _x2[2] * _x3[1] + _x2[3] * _x3[0];
  const Scalar _tmp84 = std::pow(_tmp27, Scalar(2));
  const Scalar _tmp85 = std::pow(_tmp31, Scalar(2)) * std::pow(_tmp32, Scalar(2)) *
                        std::pow(lambdas(2, 0), Scalar(2)) / _tmp33;
  const Scalar _tmp86 = 4 * _tmp85;
  const Scalar _tmp87 = _x2[0] * _x3[2] - _x2[1] * _x3[3] - _x2[2] * _x3[0] + _x2[3] * _x3[1];
  const Scalar _tmp88 = std::pow(_tmp87, Scalar(2));
  const Scalar _tmp89 = std::pow(_tmp83, Scalar(2));
  const Scalar _tmp90 = _tmp16 + _tmp84 * _tmp86 + _tmp86 * _tmp88 + _tmp86 * _tmp89;
  const Scalar _tmp91 = std::sqrt(_tmp90);
  const Scalar _tmp92 = (Scalar(1) / Scalar(2)) * _tmp91;
  const Scalar _tmp93 = std::sin(_tmp92);
  const Scalar _tmp94 = 8 * _tmp85 * std::pow(_tmp93, Scalar(2)) / _tmp90;
  const Scalar _tmp95 = _tmp27 * _tmp94;
  const Scalar _tmp96 = _tmp83 * _tmp95;
  const Scalar _tmp97 = 4 * _tmp34 * _tmp93 * lambdas(2, 0) * std::cos(_tmp92) / _tmp91;
  const Scalar _tmp98 = _tmp87 * _tmp97;
  const Scalar _tmp99 = _tmp96 + _tmp98;
  const Scalar _tmp100 = _tmp46 * _tmp57;
  const Scalar _tmp101 = _tmp100 * lambdas(1, 1);
  const Scalar _tmp102 = _tmp54 * (-_tmp71 + _tmp72);
  const Scalar _tmp103 = _tmp57 * _tmp78;
  const Scalar _tmp104 = _tmp38 * _tmp70;
  const Scalar _tmp105 = _tmp76 * (_tmp103 + _tmp104);
  const Scalar _tmp106 = -_tmp61 * _tmp66;
  const Scalar _tmp107 = _tmp106 + _tmp67 + 1;
  const Scalar _tmp108 = _tmp102 * _tmp53 + _tmp105 * _tmp53 + _tmp107 * _tmp75;
  const Scalar _tmp109 = _tmp101 + _tmp108;
  const Scalar _tmp110 = _tmp83 * _tmp97;
  const Scalar _tmp111 = _tmp87 * _tmp95;
  const Scalar _tmp112 = -_tmp110 + _tmp111;
  const Scalar _tmp113 = -_tmp88 * _tmp94;
  const Scalar _tmp114 = -_tmp89 * _tmp94 + 1;
  const Scalar _tmp115 = _tmp113 + _tmp114;
  const Scalar _tmp116 = _tmp46 * _tmp55;
  const Scalar _tmp117 = _tmp116 * lambdas(1, 1);
  const Scalar _tmp118 = _tmp76 * (_tmp106 + _tmp68);
  const Scalar _tmp119 = _tmp103 - _tmp104;
  const Scalar _tmp120 = _tmp54 * (_tmp77 + _tmp79);
  const Scalar _tmp121 = _tmp118 * _tmp53 + _tmp119 * _tmp75 + _tmp120 * _tmp53;
  const Scalar _tmp122 = _tmp117 + _tmp121;
  const Scalar _tmp123 = _tmp109 * _tmp112 + _tmp115 * _tmp122 + _tmp82 * _tmp99;
  const Scalar _tmp124 = _tmp123 + _tmp37;
  const Scalar _tmp125 = _tmp36 * _tmp87;
  const Scalar _tmp126 = _tmp27 * _tmp97;
  const Scalar _tmp127 = _tmp83 * _tmp87 * _tmp94;
  const Scalar _tmp128 = -_tmp126 + _tmp127;
  const Scalar _tmp129 = _tmp110 + _tmp111;
  const Scalar _tmp130 = -_tmp84 * _tmp94;
  const Scalar _tmp131 = _tmp114 + _tmp130;
  const Scalar _tmp132 = _tmp109 * _tmp131 + _tmp122 * _tmp129 + _tmp128 * _tmp82;
  const Scalar _tmp133 = _tmp125 + _tmp132;
  const Scalar _tmp134 = -_tmp21 * _tmp4;
  const Scalar _tmp135 = -_tmp15 * _tmp21 + 1;
  const Scalar _tmp136 = _tmp134 + _tmp135;
  const Scalar _tmp137 = _tmp21 * _tmp3;
  const Scalar _tmp138 = _tmp137 * _tmp2;
  const Scalar _tmp139 = _tmp1 * _tmp24;
  const Scalar _tmp140 = _tmp138 - _tmp139;
  const Scalar _tmp141 = _tmp36 * _tmp83;
  const Scalar _tmp142 = _tmp126 + _tmp127;
  const Scalar _tmp143 = _tmp113 + _tmp130 + 1;
  const Scalar _tmp144 = _tmp96 - _tmp98;
  const Scalar _tmp145 = _tmp109 * _tmp142 + _tmp122 * _tmp144 + _tmp143 * _tmp82;
  const Scalar _tmp146 = _tmp141 + _tmp145;
  const Scalar _tmp147 = _tmp124 * _tmp26 + _tmp133 * _tmp136 + _tmp140 * _tmp146;
  const Scalar _tmp148 = 2 * _tmp23;
  const Scalar _tmp149 = _tmp1 * _tmp148;
  const Scalar _tmp150 = _tmp149 * lambdas(3, 1);
  const Scalar _tmp151 = _tmp2 * _tmp24;
  const Scalar _tmp152 = _tmp1 * _tmp137;
  const Scalar _tmp153 = -_tmp151 + _tmp152;
  const Scalar _tmp154 = _tmp35 * lambdas(2, 2);
  const Scalar _tmp155 = _tmp52 * lambdas(0, 2);
  const Scalar _tmp156 = _tmp155 * _tmp74;
  const Scalar _tmp157 = _tmp101 * _tmp81 - _tmp108 * _tmp48 + _tmp116 * lambdas(1, 2) +
                         _tmp118 * _tmp155 + _tmp119 * _tmp156 + _tmp120 * _tmp155;
  const Scalar _tmp158 = -_tmp101 * _tmp121 + _tmp108 * _tmp117 + _tmp155 * _tmp69 +
                         _tmp155 * _tmp80 + _tmp156 * _tmp73 + _tmp47 * lambdas(1, 2);
  const Scalar _tmp159 = _tmp100 * lambdas(1, 2) + _tmp102 * _tmp155 + _tmp105 * _tmp155 +
                         _tmp107 * _tmp156 - _tmp117 * _tmp81 + _tmp121 * _tmp48;
  const Scalar _tmp160 = _tmp112 * _tmp159 + _tmp115 * _tmp157 + _tmp125 * _tmp145 -
                         _tmp132 * _tmp141 + _tmp154 * _tmp27 + _tmp158 * _tmp99;
  const Scalar _tmp161 = _tmp148 * _tmp3;
  const Scalar _tmp162 = -_tmp123 * _tmp125 + _tmp132 * _tmp37 + _tmp142 * _tmp159 +
                         _tmp143 * _tmp158 + _tmp144 * _tmp157 + _tmp154 * _tmp83;
  const Scalar _tmp163 = -_tmp14 * _tmp21;
  const Scalar _tmp164 = _tmp135 + _tmp163;
  const Scalar _tmp165 = _tmp138 + _tmp139;
  const Scalar _tmp166 = _tmp123 * _tmp141 + _tmp128 * _tmp158 + _tmp129 * _tmp157 +
                         _tmp131 * _tmp159 - _tmp145 * _tmp37 + _tmp154 * _tmp87;
  const Scalar _tmp167 = _tmp134 + _tmp163 + 1;
  const Scalar _tmp168 = _tmp22 - _tmp25;
  const Scalar _tmp169 = _tmp151 + _tmp152;
  const Scalar _tmp170 = _tmp124 * _tmp167 + _tmp133 * _tmp168 + _tmp146 * _tmp169;
  const Scalar _tmp171 = _tmp148 * _tmp2;
  const Scalar _tmp172 = _tmp171 * lambdas(3, 1);
  const Scalar _tmp173 = _tmp147 * _tmp150 + _tmp153 * _tmp160 + _tmp161 * lambdas(3, 2) +
                         _tmp162 * _tmp164 + _tmp165 * _tmp166 - _tmp170 * _tmp172;
  const Scalar _tmp174 = _x4[0] * _x5[2] - _x4[1] * _x5[3] - _x4[2] * _x5[0] + _x4[3] * _x5[1];
  const Scalar _tmp175 = std::pow(_tmp174, Scalar(2));
  const Scalar _tmp176 = -_x4[0] * _x5[3] - _x4[1] * _x5[2] + _x4[2] * _x5[1] + _x4[3] * _x5[0];
  const Scalar _tmp177 = std::pow(_tmp176, Scalar(2));
  const Scalar _tmp178 = -_x4[0] * _x5[0] - _x4[1] * _x5[1] - _x4[2] * _x5[2];
  const Scalar _tmp179 = _x4[3] * _x5[3];
  const Scalar _tmp180 = std::min<Scalar>(_tmp7, std::fabs(_tmp178 - _tmp179));
  const Scalar _tmp181 = std::acos(_tmp180);
  const Scalar _tmp182 =
      2 * std::min<Scalar>(0, (((-_tmp178 + _tmp179) > 0) - ((-_tmp178 + _tmp179) < 0))) + 1;
  const Scalar _tmp183 = 1 - std::pow(_tmp180, Scalar(2));
  const Scalar _tmp184 = std::pow(_tmp181, Scalar(2)) * std::pow(_tmp182, Scalar(2)) *
                         std::pow(lambdas(4, 0), Scalar(2)) / _tmp183;
  const Scalar _tmp185 = 4 * _tmp184;
  const Scalar _tmp186 = -_x4[0] * _x5[1] + _x4[1] * _x5[0] - _x4[2] * _x5[3] + _x4[3] * _x5[2];
  const Scalar _tmp187 = std::pow(_tmp186, Scalar(2));
  const Scalar _tmp188 = _tmp16 + _tmp175 * _tmp185 + _tmp177 * _tmp185 + _tmp185 * _tmp187;
  const Scalar _tmp189 = std::sqrt(_tmp188);
  const Scalar _tmp190 = (Scalar(1) / Scalar(2)) * _tmp189;
  const Scalar _tmp191 = std::sin(_tmp190);
  const Scalar _tmp192 = 8 * _tmp184 * std::pow(_tmp191, Scalar(2)) / _tmp188;
  const Scalar _tmp193 = -_tmp175 * _tmp192;
  const Scalar _tmp194 = -_tmp187 * _tmp192 + 1;
  const Scalar _tmp195 = _tmp193 + _tmp194;
  const Scalar _tmp196 = _tmp181 * _tmp182 / std::sqrt(_tmp183);
  const Scalar _tmp197 = 2 * _tmp196;
  const Scalar _tmp198 = _tmp197 * lambdas(4, 2);
  const Scalar _tmp199 = _tmp124 * _tmp153 + _tmp133 * _tmp165 + _tmp146 * _tmp164;
  const Scalar _tmp200 = _tmp161 * lambdas(3, 1);
  const Scalar _tmp201 = -_tmp147 * _tmp200 + _tmp149 * lambdas(3, 2) + _tmp160 * _tmp167 +
                         _tmp162 * _tmp169 + _tmp166 * _tmp168 + _tmp172 * _tmp199;
  const Scalar _tmp202 = _tmp176 * _tmp186 * _tmp192;
  const Scalar _tmp203 = 4 * _tmp191 * _tmp196 * lambdas(4, 0) * std::cos(_tmp190) / _tmp189;
  const Scalar _tmp204 = _tmp174 * _tmp203;
  const Scalar _tmp205 = _tmp202 - _tmp204;
  const Scalar _tmp206 = _tmp199 + _tmp200;
  const Scalar _tmp207 = _tmp202 + _tmp204;
  const Scalar _tmp208 = _tmp147 + _tmp172;
  const Scalar _tmp209 = _tmp176 * _tmp203;
  const Scalar _tmp210 = _tmp174 * _tmp192;
  const Scalar _tmp211 = _tmp186 * _tmp210;
  const Scalar _tmp212 = -_tmp209 + _tmp211;
  const Scalar _tmp213 = -_tmp177 * _tmp192;
  const Scalar _tmp214 = _tmp193 + _tmp213 + 1;
  const Scalar _tmp215 = _tmp150 + _tmp170;
  const Scalar _tmp216 = _tmp206 * _tmp207 + _tmp208 * _tmp212 + _tmp214 * _tmp215;
  const Scalar _tmp217 = _tmp197 * lambdas(4, 1);
  const Scalar _tmp218 = _tmp176 * _tmp210;
  const Scalar _tmp219 = _tmp186 * _tmp203;
  const Scalar _tmp220 = _tmp218 + _tmp219;
  const Scalar _tmp221 = _tmp136 * _tmp166 + _tmp140 * _tmp162 - _tmp150 * _tmp199 +
                         _tmp160 * _tmp26 + _tmp170 * _tmp200 + _tmp171 * lambdas(3, 2);
  const Scalar _tmp222 = _tmp209 + _tmp211;
  const Scalar _tmp223 = _tmp218 - _tmp219;
  const Scalar _tmp224 = _tmp194 + _tmp213;
  const Scalar _tmp225 = _tmp206 * _tmp223 + _tmp208 * _tmp224 + _tmp215 * _tmp222;
  const Scalar _tmp226 = _tmp176 * _tmp217;
  const Scalar _tmp227 = _tmp217 * (_tmp195 * _tmp206 + _tmp205 * _tmp215 + _tmp208 * _tmp220);

  // Output terms (1)
  Eigen::Matrix<Scalar, 3, 1> _res;

  _res(0, 0) = _tmp0 * (_tmp173 * _tmp195 - _tmp174 * _tmp216 * _tmp217 + _tmp176 * _tmp198 +
                        _tmp186 * _tmp217 * _tmp225 + _tmp201 * _tmp205 + _tmp220 * _tmp221);
  _res(1, 0) = _tmp0 * (_tmp173 * _tmp223 + _tmp174 * _tmp198 - _tmp186 * _tmp227 +
                        _tmp201 * _tmp222 + _tmp216 * _tmp226 + _tmp221 * _tmp224);
  _res(2, 0) = _tmp0 * (_tmp173 * _tmp207 + _tmp174 * _tmp227 + _tmp186 * _tmp198 +
                        _tmp201 * _tmp214 + _tmp212 * _tmp221 - _tmp225 * _tmp226);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
