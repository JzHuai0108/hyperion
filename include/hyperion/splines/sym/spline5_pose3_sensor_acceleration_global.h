// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline5_pose3_sensor_acceleration
 *
 * Args:
 *     dt: Scalar
 *     lambdas: Matrix53
 *     x0: Pose3
 *     x1: Pose3
 *     x2: Pose3
 *     x3: Pose3
 *     x4: Pose3
 *     x5: Pose3
 *     x_T_s: Pose3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix61
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 6, 1> Spline5Pose3SensorAccelerationGlobal(
    const Scalar dt, const Eigen::Matrix<Scalar, 5, 3>& lambdas, const sym::Pose3<Scalar>& x0,
    const sym::Pose3<Scalar>& x1, const sym::Pose3<Scalar>& x2, const sym::Pose3<Scalar>& x3,
    const sym::Pose3<Scalar>& x4, const sym::Pose3<Scalar>& x5, const sym::Pose3<Scalar>& x_T_s,
    const Scalar epsilon) {
  // Total ops: 853

  // Unused inputs
  (void)x_T_s;

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x3 = x3.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x4 = x4.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x5 = x5.Data();

  // Intermediate terms (285)
  const Scalar _tmp0 = std::pow(dt, Scalar(-2));
  const Scalar _tmp1 = -2 * std::pow(_x0[1], Scalar(2));
  const Scalar _tmp2 = 1 - 2 * std::pow(_x0[2], Scalar(2));
  const Scalar _tmp3 = _tmp1 + _tmp2;
  const Scalar _tmp4 = _x0[0] * _x1[2] - _x0[1] * _x1[3] - _x0[2] * _x1[0] + _x0[3] * _x1[1];
  const Scalar _tmp5 = -_x0[0] * _x1[3] - _x0[1] * _x1[2] + _x0[2] * _x1[1] + _x0[3] * _x1[0];
  const Scalar _tmp6 = std::pow(_tmp5, Scalar(2));
  const Scalar _tmp7 = -_x0[0] * _x1[0] - _x0[1] * _x1[1] - _x0[2] * _x1[2];
  const Scalar _tmp8 = _x0[3] * _x1[3];
  const Scalar _tmp9 =
      2 * std::min<Scalar>(0, (((-_tmp7 + _tmp8) > 0) - ((-_tmp7 + _tmp8) < 0))) + 1;
  const Scalar _tmp10 = 1 - epsilon;
  const Scalar _tmp11 = std::min<Scalar>(_tmp10, std::fabs(_tmp7 - _tmp8));
  const Scalar _tmp12 = std::acos(_tmp11);
  const Scalar _tmp13 = 1 - std::pow(_tmp11, Scalar(2));
  const Scalar _tmp14 = std::pow(_tmp12, Scalar(2)) * std::pow(_tmp9, Scalar(2)) *
                        std::pow(lambdas(0, 0), Scalar(2)) / _tmp13;
  const Scalar _tmp15 = 4 * _tmp14;
  const Scalar _tmp16 = std::pow(_tmp4, Scalar(2));
  const Scalar _tmp17 = -_x0[0] * _x1[1] + _x0[1] * _x1[0] - _x0[2] * _x1[3] + _x0[3] * _x1[2];
  const Scalar _tmp18 = std::pow(_tmp17, Scalar(2));
  const Scalar _tmp19 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp20 = _tmp15 * _tmp16 + _tmp15 * _tmp18 + _tmp15 * _tmp6 + _tmp19;
  const Scalar _tmp21 = std::sqrt(_tmp20);
  const Scalar _tmp22 = (Scalar(1) / Scalar(2)) * _tmp21;
  const Scalar _tmp23 = std::sin(_tmp22);
  const Scalar _tmp24 = 8 * _tmp14 * std::pow(_tmp23, Scalar(2)) / _tmp20;
  const Scalar _tmp25 = _tmp24 * _tmp5;
  const Scalar _tmp26 = _tmp25 * _tmp4;
  const Scalar _tmp27 = _tmp12 * _tmp9 / std::sqrt(_tmp13);
  const Scalar _tmp28 = 4 * _tmp23 * _tmp27 * lambdas(0, 0) * std::cos(_tmp22) / _tmp21;
  const Scalar _tmp29 = _tmp17 * _tmp28;
  const Scalar _tmp30 = _tmp26 - _tmp29;
  const Scalar _tmp31 = _x1[0] * _x2[2] - _x1[1] * _x2[3] - _x1[2] * _x2[0] + _x1[3] * _x2[1];
  const Scalar _tmp32 = std::pow(_tmp31, Scalar(2));
  const Scalar _tmp33 = -_x1[0] * _x2[3] - _x1[1] * _x2[2] + _x1[2] * _x2[1] + _x1[3] * _x2[0];
  const Scalar _tmp34 = std::pow(_tmp33, Scalar(2));
  const Scalar _tmp35 = -_x1[0] * _x2[0] - _x1[1] * _x2[1] - _x1[2] * _x2[2];
  const Scalar _tmp36 = _x1[3] * _x2[3];
  const Scalar _tmp37 = std::min<Scalar>(_tmp10, std::fabs(_tmp35 - _tmp36));
  const Scalar _tmp38 = 1 - std::pow(_tmp37, Scalar(2));
  const Scalar _tmp39 =
      2 * std::min<Scalar>(0, (((-_tmp35 + _tmp36) > 0) - ((-_tmp35 + _tmp36) < 0))) + 1;
  const Scalar _tmp40 = std::acos(_tmp37);
  const Scalar _tmp41 = std::pow(_tmp39, Scalar(2)) * std::pow(_tmp40, Scalar(2)) *
                        std::pow(lambdas(1, 0), Scalar(2)) / _tmp38;
  const Scalar _tmp42 = 4 * _tmp41;
  const Scalar _tmp43 = -_x1[0] * _x2[1] + _x1[1] * _x2[0] - _x1[2] * _x2[3] + _x1[3] * _x2[2];
  const Scalar _tmp44 = std::pow(_tmp43, Scalar(2));
  const Scalar _tmp45 = _tmp19 + _tmp32 * _tmp42 + _tmp34 * _tmp42 + _tmp42 * _tmp44;
  const Scalar _tmp46 = std::sqrt(_tmp45);
  const Scalar _tmp47 = (Scalar(1) / Scalar(2)) * _tmp46;
  const Scalar _tmp48 = std::sin(_tmp47);
  const Scalar _tmp49 = 8 * _tmp41 * std::pow(_tmp48, Scalar(2)) / _tmp45;
  const Scalar _tmp50 = -_tmp32 * _tmp49;
  const Scalar _tmp51 = -_tmp34 * _tmp49 + 1;
  const Scalar _tmp52 = _tmp50 + _tmp51;
  const Scalar _tmp53 = -_x2[0] * _x3[1] + _x2[1] * _x3[0] - _x2[2] * _x3[3] + _x2[3] * _x3[2];
  const Scalar _tmp54 = -_x2[0] * _x3[0] - _x2[1] * _x3[1] - _x2[2] * _x3[2];
  const Scalar _tmp55 = _x2[3] * _x3[3];
  const Scalar _tmp56 = std::min<Scalar>(_tmp10, std::fabs(_tmp54 - _tmp55));
  const Scalar _tmp57 = 1 - std::pow(_tmp56, Scalar(2));
  const Scalar _tmp58 =
      2 * std::min<Scalar>(0, (((-_tmp54 + _tmp55) > 0) - ((-_tmp54 + _tmp55) < 0))) + 1;
  const Scalar _tmp59 = std::acos(_tmp56);
  const Scalar _tmp60 = _tmp58 * _tmp59 / std::sqrt(_tmp57);
  const Scalar _tmp61 = 2 * _tmp60;
  const Scalar _tmp62 = _tmp61 * lambdas(2, 1);
  const Scalar _tmp63 = _tmp53 * _tmp62;
  const Scalar _tmp64 = _x2[0] * _x3[2] - _x2[1] * _x3[3] - _x2[2] * _x3[0] + _x2[3] * _x3[1];
  const Scalar _tmp65 = std::pow(_tmp64, Scalar(2));
  const Scalar _tmp66 = std::pow(_tmp58, Scalar(2)) * std::pow(_tmp59, Scalar(2)) *
                        std::pow(lambdas(2, 0), Scalar(2)) / _tmp57;
  const Scalar _tmp67 = 4 * _tmp66;
  const Scalar _tmp68 = -_x2[0] * _x3[3] - _x2[1] * _x3[2] + _x2[2] * _x3[1] + _x2[3] * _x3[0];
  const Scalar _tmp69 = std::pow(_tmp68, Scalar(2));
  const Scalar _tmp70 = std::pow(_tmp53, Scalar(2));
  const Scalar _tmp71 = _tmp19 + _tmp65 * _tmp67 + _tmp67 * _tmp69 + _tmp67 * _tmp70;
  const Scalar _tmp72 = std::sqrt(_tmp71);
  const Scalar _tmp73 = (Scalar(1) / Scalar(2)) * _tmp72;
  const Scalar _tmp74 = std::sin(_tmp73);
  const Scalar _tmp75 = 8 * _tmp66 * std::pow(_tmp74, Scalar(2)) / _tmp71;
  const Scalar _tmp76 = -_tmp65 * _tmp75;
  const Scalar _tmp77 = -_tmp69 * _tmp75;
  const Scalar _tmp78 = _tmp76 + _tmp77 + 1;
  const Scalar _tmp79 = -_x3[0] * _x4[1] + _x3[1] * _x4[0] - _x3[2] * _x4[3] + _x3[3] * _x4[2];
  const Scalar _tmp80 = -_x3[0] * _x4[0] - _x3[1] * _x4[1] - _x3[2] * _x4[2];
  const Scalar _tmp81 = _x3[3] * _x4[3];
  const Scalar _tmp82 = std::min<Scalar>(_tmp10, std::fabs(_tmp80 - _tmp81));
  const Scalar _tmp83 = std::acos(_tmp82);
  const Scalar _tmp84 =
      2 * std::min<Scalar>(0, (((-_tmp80 + _tmp81) > 0) - ((-_tmp80 + _tmp81) < 0))) + 1;
  const Scalar _tmp85 = 1 - std::pow(_tmp82, Scalar(2));
  const Scalar _tmp86 = _tmp83 * _tmp84 / std::sqrt(_tmp85);
  const Scalar _tmp87 = 2 * _tmp86;
  const Scalar _tmp88 = _tmp87 * lambdas(3, 1);
  const Scalar _tmp89 = _tmp79 * _tmp88;
  const Scalar _tmp90 = -_x3[0] * _x4[3] - _x3[1] * _x4[2] + _x3[2] * _x4[1] + _x3[3] * _x4[0];
  const Scalar _tmp91 = std::pow(_tmp90, Scalar(2));
  const Scalar _tmp92 = std::pow(_tmp83, Scalar(2)) * std::pow(_tmp84, Scalar(2)) *
                        std::pow(lambdas(3, 0), Scalar(2)) / _tmp85;
  const Scalar _tmp93 = 4 * _tmp92;
  const Scalar _tmp94 = std::pow(_tmp79, Scalar(2));
  const Scalar _tmp95 = _x3[0] * _x4[2] - _x3[1] * _x4[3] - _x3[2] * _x4[0] + _x3[3] * _x4[1];
  const Scalar _tmp96 = std::pow(_tmp95, Scalar(2));
  const Scalar _tmp97 = _tmp19 + _tmp91 * _tmp93 + _tmp93 * _tmp94 + _tmp93 * _tmp96;
  const Scalar _tmp98 = std::sqrt(_tmp97);
  const Scalar _tmp99 = (Scalar(1) / Scalar(2)) * _tmp98;
  const Scalar _tmp100 = std::sin(_tmp99);
  const Scalar _tmp101 = 8 * std::pow(_tmp100, Scalar(2)) * _tmp92 / _tmp97;
  const Scalar _tmp102 = _tmp101 * _tmp79 * _tmp90;
  const Scalar _tmp103 = 4 * _tmp100 * _tmp86 * lambdas(3, 0) * std::cos(_tmp99) / _tmp98;
  const Scalar _tmp104 = _tmp103 * _tmp95;
  const Scalar _tmp105 = _tmp102 - _tmp104;
  const Scalar _tmp106 = -_x4[0] * _x5[3] - _x4[1] * _x5[2] + _x4[2] * _x5[1] + _x4[3] * _x5[0];
  const Scalar _tmp107 = -_x4[0] * _x5[0] - _x4[1] * _x5[1] - _x4[2] * _x5[2];
  const Scalar _tmp108 = _x4[3] * _x5[3];
  const Scalar _tmp109 = std::min<Scalar>(_tmp10, std::fabs(_tmp107 - _tmp108));
  const Scalar _tmp110 =
      2 * (2 * std::min<Scalar>(0, (((-_tmp107 + _tmp108) > 0) - ((-_tmp107 + _tmp108) < 0))) + 1) *
      std::acos(_tmp109) / std::sqrt(Scalar(1 - std::pow(_tmp109, Scalar(2))));
  const Scalar _tmp111 = _tmp110 * lambdas(4, 1);
  const Scalar _tmp112 = _tmp106 * _tmp111;
  const Scalar _tmp113 = _x4[0] * _x5[2] - _x4[1] * _x5[3] - _x4[2] * _x5[0] + _x4[3] * _x5[1];
  const Scalar _tmp114 = _tmp101 * _tmp95;
  const Scalar _tmp115 = _tmp114 * _tmp79;
  const Scalar _tmp116 = _tmp103 * _tmp90;
  const Scalar _tmp117 = _tmp113 * (_tmp115 + _tmp116);
  const Scalar _tmp118 = -_tmp101 * _tmp96;
  const Scalar _tmp119 = -_tmp101 * _tmp91;
  const Scalar _tmp120 = _tmp118 + _tmp119 + 1;
  const Scalar _tmp121 = -_x4[0] * _x5[1] + _x4[1] * _x5[0] - _x4[2] * _x5[3] + _x4[3] * _x5[2];
  const Scalar _tmp122 = _tmp111 * _tmp121;
  const Scalar _tmp123 = _tmp105 * _tmp112 + _tmp111 * _tmp117 + _tmp120 * _tmp122;
  const Scalar _tmp124 = _tmp123 + _tmp89;
  const Scalar _tmp125 = 4 * _tmp60 * _tmp74 * lambdas(2, 0) * std::cos(_tmp73) / _tmp72;
  const Scalar _tmp126 = _tmp125 * _tmp68;
  const Scalar _tmp127 = _tmp53 * _tmp64 * _tmp75;
  const Scalar _tmp128 = _tmp126 + _tmp127;
  const Scalar _tmp129 = _tmp88 * _tmp95;
  const Scalar _tmp130 = -_tmp101 * _tmp94 + 1;
  const Scalar _tmp131 = _tmp113 * (_tmp119 + _tmp130);
  const Scalar _tmp132 = _tmp114 * _tmp90;
  const Scalar _tmp133 = _tmp103 * _tmp79;
  const Scalar _tmp134 = _tmp132 + _tmp133;
  const Scalar _tmp135 = _tmp115 - _tmp116;
  const Scalar _tmp136 = _tmp111 * _tmp131 + _tmp112 * _tmp134 + _tmp122 * _tmp135;
  const Scalar _tmp137 = _tmp129 + _tmp136;
  const Scalar _tmp138 = _tmp88 * _tmp90;
  const Scalar _tmp139 = _tmp113 * (_tmp132 - _tmp133);
  const Scalar _tmp140 = _tmp106 * (_tmp118 + _tmp130);
  const Scalar _tmp141 = _tmp102 + _tmp104;
  const Scalar _tmp142 = _tmp111 * _tmp139 + _tmp111 * _tmp140 + _tmp122 * _tmp141;
  const Scalar _tmp143 = _tmp138 + _tmp142;
  const Scalar _tmp144 = _tmp125 * _tmp64;
  const Scalar _tmp145 = _tmp68 * _tmp75;
  const Scalar _tmp146 = _tmp145 * _tmp53;
  const Scalar _tmp147 = -_tmp144 + _tmp146;
  const Scalar _tmp148 = _tmp124 * _tmp78 + _tmp128 * _tmp137 + _tmp143 * _tmp147;
  const Scalar _tmp149 = _tmp148 + _tmp63;
  const Scalar _tmp150 = _tmp39 * _tmp40 / std::sqrt(_tmp38);
  const Scalar _tmp151 = 4 * _tmp150 * _tmp48 * lambdas(1, 0) * std::cos(_tmp47) / _tmp46;
  const Scalar _tmp152 = _tmp151 * _tmp31;
  const Scalar _tmp153 = _tmp33 * _tmp43 * _tmp49;
  const Scalar _tmp154 = -_tmp152 + _tmp153;
  const Scalar _tmp155 = _tmp62 * _tmp68;
  const Scalar _tmp156 = _tmp145 * _tmp64;
  const Scalar _tmp157 = _tmp125 * _tmp53;
  const Scalar _tmp158 = _tmp156 - _tmp157;
  const Scalar _tmp159 = _tmp144 + _tmp146;
  const Scalar _tmp160 = -_tmp70 * _tmp75 + 1;
  const Scalar _tmp161 = _tmp160 + _tmp76;
  const Scalar _tmp162 = _tmp124 * _tmp159 + _tmp137 * _tmp158 + _tmp143 * _tmp161;
  const Scalar _tmp163 = _tmp155 + _tmp162;
  const Scalar _tmp164 = _tmp62 * _tmp64;
  const Scalar _tmp165 = _tmp156 + _tmp157;
  const Scalar _tmp166 = -_tmp126 + _tmp127;
  const Scalar _tmp167 = _tmp160 + _tmp77;
  const Scalar _tmp168 = _tmp124 * _tmp166 + _tmp137 * _tmp167 + _tmp143 * _tmp165;
  const Scalar _tmp169 = _tmp164 + _tmp168;
  const Scalar _tmp170 = _tmp31 * _tmp49;
  const Scalar _tmp171 = _tmp170 * _tmp43;
  const Scalar _tmp172 = _tmp151 * _tmp33;
  const Scalar _tmp173 = _tmp171 + _tmp172;
  const Scalar _tmp174 = _tmp149 * _tmp52 + _tmp154 * _tmp163 + _tmp169 * _tmp173;
  const Scalar _tmp175 = 2 * _tmp150;
  const Scalar _tmp176 = _tmp175 * lambdas(1, 1);
  const Scalar _tmp177 = _tmp176 * _tmp33;
  const Scalar _tmp178 = _tmp61 * lambdas(2, 2);
  const Scalar _tmp179 = _tmp87 * lambdas(3, 2);
  const Scalar _tmp180 = _tmp110 * lambdas(4, 2);
  const Scalar _tmp181 = _tmp106 * _tmp180;
  const Scalar _tmp182 = _tmp121 * _tmp180;
  const Scalar _tmp183 = -_tmp123 * _tmp138 + _tmp131 * _tmp180 + _tmp134 * _tmp181 +
                         _tmp135 * _tmp182 + _tmp142 * _tmp89 + _tmp179 * _tmp95;
  const Scalar _tmp184 = _tmp105 * _tmp181 + _tmp117 * _tmp180 + _tmp120 * _tmp182 -
                         _tmp129 * _tmp142 + _tmp136 * _tmp138 + _tmp179 * _tmp79;
  const Scalar _tmp185 = _tmp123 * _tmp129 - _tmp136 * _tmp89 + _tmp139 * _tmp180 +
                         _tmp140 * _tmp180 + _tmp141 * _tmp182 + _tmp179 * _tmp90;
  const Scalar _tmp186 = -_tmp148 * _tmp155 + _tmp162 * _tmp63 + _tmp165 * _tmp185 +
                         _tmp166 * _tmp184 + _tmp167 * _tmp183 + _tmp178 * _tmp64;
  const Scalar _tmp187 = -_tmp44 * _tmp49;
  const Scalar _tmp188 = _tmp187 + _tmp51;
  const Scalar _tmp189 = _tmp128 * _tmp183 + _tmp147 * _tmp185 + _tmp155 * _tmp168 -
                         _tmp162 * _tmp164 + _tmp178 * _tmp53 + _tmp184 * _tmp78;
  const Scalar _tmp190 = _tmp171 - _tmp172;
  const Scalar _tmp191 = _tmp152 + _tmp153;
  const Scalar _tmp192 = _tmp187 + _tmp50 + 1;
  const Scalar _tmp193 = _tmp170 * _tmp33;
  const Scalar _tmp194 = _tmp151 * _tmp43;
  const Scalar _tmp195 = _tmp193 - _tmp194;
  const Scalar _tmp196 = _tmp149 * _tmp191 + _tmp163 * _tmp192 + _tmp169 * _tmp195;
  const Scalar _tmp197 = _tmp176 * _tmp43;
  const Scalar _tmp198 = _tmp193 + _tmp194;
  const Scalar _tmp199 = _tmp148 * _tmp164 + _tmp158 * _tmp183 + _tmp159 * _tmp184 +
                         _tmp161 * _tmp185 - _tmp168 * _tmp63 + _tmp178 * _tmp68;
  const Scalar _tmp200 = _tmp175 * _tmp31;
  const Scalar _tmp201 = -_tmp174 * _tmp177 + _tmp186 * _tmp188 + _tmp189 * _tmp190 +
                         _tmp196 * _tmp197 + _tmp198 * _tmp199 + _tmp200 * lambdas(1, 2);
  const Scalar _tmp202 = _tmp177 + _tmp196;
  const Scalar _tmp203 = _tmp26 + _tmp29;
  const Scalar _tmp204 = _tmp200 * lambdas(1, 1);
  const Scalar _tmp205 = _tmp149 * _tmp190 + _tmp163 * _tmp198 + _tmp169 * _tmp188;
  const Scalar _tmp206 = _tmp204 + _tmp205;
  const Scalar _tmp207 = -_tmp18 * _tmp24;
  const Scalar _tmp208 = -_tmp24 * _tmp6 + 1;
  const Scalar _tmp209 = _tmp207 + _tmp208;
  const Scalar _tmp210 = _tmp17 * _tmp24 * _tmp4;
  const Scalar _tmp211 = _tmp28 * _tmp5;
  const Scalar _tmp212 = _tmp210 - _tmp211;
  const Scalar _tmp213 = _tmp174 + _tmp197;
  const Scalar _tmp214 = _tmp202 * _tmp203 + _tmp206 * _tmp209 + _tmp212 * _tmp213;
  const Scalar _tmp215 = 2 * _tmp27;
  const Scalar _tmp216 = _tmp215 * lambdas(0, 1);
  const Scalar _tmp217 = _tmp17 * _tmp216;
  const Scalar _tmp218 = _tmp175 * lambdas(1, 2);
  const Scalar _tmp219 = _tmp154 * _tmp199 + _tmp173 * _tmp186 + _tmp177 * _tmp205 +
                         _tmp189 * _tmp52 - _tmp196 * _tmp204 + _tmp218 * _tmp43;
  const Scalar _tmp220 = _tmp28 * _tmp4;
  const Scalar _tmp221 = _tmp17 * _tmp25;
  const Scalar _tmp222 = _tmp220 + _tmp221;
  const Scalar _tmp223 = _tmp215 * lambdas(0, 2);
  const Scalar _tmp224 = -_tmp16 * _tmp24;
  const Scalar _tmp225 = _tmp207 + _tmp224 + 1;
  const Scalar _tmp226 = _tmp174 * _tmp204 + _tmp186 * _tmp195 + _tmp189 * _tmp191 +
                         _tmp192 * _tmp199 - _tmp197 * _tmp205 + _tmp218 * _tmp33;
  const Scalar _tmp227 = _tmp208 + _tmp224;
  const Scalar _tmp228 = -_tmp220 + _tmp221;
  const Scalar _tmp229 = _tmp210 + _tmp211;
  const Scalar _tmp230 = _tmp202 * _tmp228 + _tmp206 * _tmp229 + _tmp213 * _tmp227;
  const Scalar _tmp231 = _tmp215 * _tmp4;
  const Scalar _tmp232 = _tmp231 * lambdas(0, 1);
  const Scalar _tmp233 = _tmp201 * _tmp30 - _tmp214 * _tmp217 + _tmp219 * _tmp222 +
                         _tmp223 * _tmp5 + _tmp225 * _tmp226 + _tmp230 * _tmp232;
  const Scalar _tmp234 = 2 * _x0[1];
  const Scalar _tmp235 = _tmp234 * _x0[0];
  const Scalar _tmp236 = 2 * _x0[2];
  const Scalar _tmp237 = _tmp236 * _x0[3];
  const Scalar _tmp238 = _tmp235 - _tmp237;
  const Scalar _tmp239 = _tmp216 * _tmp5;
  const Scalar _tmp240 = _tmp202 * _tmp225 + _tmp206 * _tmp30 + _tmp213 * _tmp222;
  const Scalar _tmp241 = _tmp201 * _tmp209 + _tmp203 * _tmp226 + _tmp212 * _tmp219 +
                         _tmp217 * _tmp240 - _tmp230 * _tmp239 + _tmp231 * lambdas(0, 2);
  const Scalar _tmp242 = _tmp234 * _x0[3];
  const Scalar _tmp243 = _tmp236 * _x0[0];
  const Scalar _tmp244 = _tmp242 + _tmp243;
  const Scalar _tmp245 = _tmp17 * _tmp223 + _tmp201 * _tmp229 + _tmp214 * _tmp239 +
                         _tmp219 * _tmp227 + _tmp226 * _tmp228 - _tmp232 * _tmp240;
  const Scalar _tmp246 = _tmp233 * _tmp3 + _tmp238 * _tmp241 + _tmp244 * _tmp245;
  const Scalar _tmp247 = _tmp235 + _tmp237;
  const Scalar _tmp248 = -2 * std::pow(_x0[0], Scalar(2));
  const Scalar _tmp249 = _tmp2 + _tmp248;
  const Scalar _tmp250 = 2 * _x0[0] * _x0[3];
  const Scalar _tmp251 = _tmp234 * _x0[2];
  const Scalar _tmp252 = -_tmp250 + _tmp251;
  const Scalar _tmp253 = _tmp233 * _tmp247 + _tmp241 * _tmp249 + _tmp245 * _tmp252;
  const Scalar _tmp254 = -_tmp242 + _tmp243;
  const Scalar _tmp255 = _tmp250 + _tmp251;
  const Scalar _tmp256 = _tmp1 + _tmp248 + 1;
  const Scalar _tmp257 = _tmp233 * _tmp254 + _tmp241 * _tmp255 + _tmp245 * _tmp256;
  const Scalar _tmp258 = -_x1[4] + _x2[4];
  const Scalar _tmp259 = -_x4[4] + _x5[4];
  const Scalar _tmp260 = -_x3[4] + _x4[4];
  const Scalar _tmp261 = -_x2[4] + _x3[4];
  const Scalar _tmp262 = -_x0[4] + _x1[4];
  const Scalar _tmp263 = -_x1[5] + _x2[5];
  const Scalar _tmp264 = -_x4[5] + _x5[5];
  const Scalar _tmp265 = -_x3[5] + _x4[5];
  const Scalar _tmp266 = -_x2[5] + _x3[5];
  const Scalar _tmp267 = -_x0[5] + _x1[5];
  const Scalar _tmp268 = _tmp263 * lambdas(1, 1) + _tmp264 * lambdas(4, 1) +
                         _tmp265 * lambdas(3, 1) + _tmp266 * lambdas(2, 1) +
                         _tmp267 * lambdas(0, 1);
  const Scalar _tmp269 = _tmp239 + _tmp240;
  const Scalar _tmp270 = _tmp214 + _tmp232;
  const Scalar _tmp271 = _tmp217 + _tmp230;
  const Scalar _tmp272 = _tmp254 * _tmp269 + _tmp255 * _tmp270 + _tmp256 * _tmp271;
  const Scalar _tmp273 = -_x1[6] + _x2[6];
  const Scalar _tmp274 = -_x4[6] + _x5[6];
  const Scalar _tmp275 = -_x3[6] + _x4[6];
  const Scalar _tmp276 = -_x2[6] + _x3[6];
  const Scalar _tmp277 = -_x0[6] + _x1[6];
  const Scalar _tmp278 = _tmp273 * lambdas(1, 1) + _tmp274 * lambdas(4, 1) +
                         _tmp275 * lambdas(3, 1) + _tmp276 * lambdas(2, 1) +
                         _tmp277 * lambdas(0, 1);
  const Scalar _tmp279 = _tmp247 * _tmp269 + _tmp249 * _tmp270 + _tmp252 * _tmp271;
  const Scalar _tmp280 = _tmp273 * lambdas(1, 0) + _tmp274 * lambdas(4, 0) +
                         _tmp275 * lambdas(3, 0) + _tmp276 * lambdas(2, 0) +
                         _tmp277 * lambdas(0, 0) + _x0[6];
  const Scalar _tmp281 = _tmp263 * lambdas(1, 0) + _tmp264 * lambdas(4, 0) +
                         _tmp265 * lambdas(3, 0) + _tmp266 * lambdas(2, 0) +
                         _tmp267 * lambdas(0, 0) + _x0[5];
  const Scalar _tmp282 = _tmp258 * lambdas(1, 1) + _tmp259 * lambdas(4, 1) +
                         _tmp260 * lambdas(3, 1) + _tmp261 * lambdas(2, 1) +
                         _tmp262 * lambdas(0, 1);
  const Scalar _tmp283 = _tmp238 * _tmp270 + _tmp244 * _tmp271 + _tmp269 * _tmp3;
  const Scalar _tmp284 = _tmp258 * lambdas(1, 0) + _tmp259 * lambdas(4, 0) +
                         _tmp260 * lambdas(3, 0) + _tmp261 * lambdas(2, 0) +
                         _tmp262 * lambdas(0, 0) + _x0[4];

  // Output terms (1)
  Eigen::Matrix<Scalar, 6, 1> _res;

  _res(0, 0) = _tmp0 * _tmp246;
  _res(1, 0) = _tmp0 * _tmp253;
  _res(2, 0) = _tmp0 * _tmp257;
  _res(3, 0) =
      _tmp0 * (-_tmp253 * _tmp280 + _tmp257 * _tmp281 + _tmp258 * lambdas(1, 2) +
               _tmp259 * lambdas(4, 2) + _tmp260 * lambdas(3, 2) + _tmp261 * lambdas(2, 2) +
               _tmp262 * lambdas(0, 2) + _tmp268 * _tmp272 - _tmp278 * _tmp279);
  _res(4, 0) =
      _tmp0 * (_tmp246 * _tmp280 - _tmp257 * _tmp284 + _tmp263 * lambdas(1, 2) +
               _tmp264 * lambdas(4, 2) + _tmp265 * lambdas(3, 2) + _tmp266 * lambdas(2, 2) +
               _tmp267 * lambdas(0, 2) - _tmp272 * _tmp282 + _tmp278 * _tmp283);
  _res(5, 0) =
      _tmp0 * (-_tmp246 * _tmp281 + _tmp253 * _tmp284 - _tmp268 * _tmp283 +
               _tmp273 * lambdas(1, 2) + _tmp274 * lambdas(4, 2) + _tmp275 * lambdas(3, 2) +
               _tmp276 * lambdas(2, 2) + _tmp277 * lambdas(0, 2) + _tmp279 * _tmp282);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
