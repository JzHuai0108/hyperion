// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline4_pose3_acceleration
 *
 * Args:
 *     dt: Scalar
 *     lambdas: Matrix43
 *     x0: Pose3
 *     x1: Pose3
 *     x2: Pose3
 *     x3: Pose3
 *     x4: Pose3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix61
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 6, 1> Spline4Pose3AccelerationGlobal(
    const Scalar dt, const Eigen::Matrix<Scalar, 4, 3>& lambdas, const sym::Pose3<Scalar>& x0,
    const sym::Pose3<Scalar>& x1, const sym::Pose3<Scalar>& x2, const sym::Pose3<Scalar>& x3,
    const sym::Pose3<Scalar>& x4, const Scalar epsilon) {
  // Total ops: 682

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x3 = x3.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _x4 = x4.Data();

  // Intermediate terms (224)
  const Scalar _tmp0 = std::pow(dt, Scalar(-2));
  const Scalar _tmp1 = 2 * _x0[3];
  const Scalar _tmp2 = _tmp1 * _x0[1];
  const Scalar _tmp3 = 2 * _x0[2];
  const Scalar _tmp4 = _tmp3 * _x0[0];
  const Scalar _tmp5 = _tmp2 + _tmp4;
  const Scalar _tmp6 = _x0[0] * _x1[2] - _x0[1] * _x1[3] - _x0[2] * _x1[0] + _x0[3] * _x1[1];
  const Scalar _tmp7 = -_x0[0] * _x1[1] + _x0[1] * _x1[0] - _x0[2] * _x1[3] + _x0[3] * _x1[2];
  const Scalar _tmp8 = -_x0[0] * _x1[3] - _x0[1] * _x1[2] + _x0[2] * _x1[1] + _x0[3] * _x1[0];
  const Scalar _tmp9 = std::pow(_tmp8, Scalar(2));
  const Scalar _tmp10 = -_x0[0] * _x1[0] - _x0[1] * _x1[1] - _x0[2] * _x1[2];
  const Scalar _tmp11 = _x0[3] * _x1[3];
  const Scalar _tmp12 =
      2 * std::min<Scalar>(0, (((-_tmp10 + _tmp11) > 0) - ((-_tmp10 + _tmp11) < 0))) + 1;
  const Scalar _tmp13 = 1 - epsilon;
  const Scalar _tmp14 = std::min<Scalar>(_tmp13, std::fabs(_tmp10 - _tmp11));
  const Scalar _tmp15 = std::acos(_tmp14);
  const Scalar _tmp16 = 1 - std::pow(_tmp14, Scalar(2));
  const Scalar _tmp17 = std::pow(_tmp12, Scalar(2)) * std::pow(_tmp15, Scalar(2)) *
                        std::pow(lambdas(0, 0), Scalar(2)) / _tmp16;
  const Scalar _tmp18 = 4 * _tmp17;
  const Scalar _tmp19 = std::pow(_tmp6, Scalar(2));
  const Scalar _tmp20 = std::pow(_tmp7, Scalar(2));
  const Scalar _tmp21 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp22 = _tmp18 * _tmp19 + _tmp18 * _tmp20 + _tmp18 * _tmp9 + _tmp21;
  const Scalar _tmp23 = std::sqrt(_tmp22);
  const Scalar _tmp24 = (Scalar(1) / Scalar(2)) * _tmp23;
  const Scalar _tmp25 = std::sin(_tmp24);
  const Scalar _tmp26 = 8 * _tmp17 * std::pow(_tmp25, Scalar(2)) / _tmp22;
  const Scalar _tmp27 = _tmp26 * _tmp6 * _tmp7;
  const Scalar _tmp28 = _tmp12 * _tmp15 / std::sqrt(_tmp16);
  const Scalar _tmp29 = 4 * _tmp25 * _tmp28 * lambdas(0, 0) * std::cos(_tmp24) / _tmp23;
  const Scalar _tmp30 = _tmp29 * _tmp8;
  const Scalar _tmp31 = _tmp27 - _tmp30;
  const Scalar _tmp32 = -_x1[0] * _x2[1] + _x1[1] * _x2[0] - _x1[2] * _x2[3] + _x1[3] * _x2[2];
  const Scalar _tmp33 = -_x1[0] * _x2[0] - _x1[1] * _x2[1] - _x1[2] * _x2[2];
  const Scalar _tmp34 = _x1[3] * _x2[3];
  const Scalar _tmp35 = std::min<Scalar>(_tmp13, std::fabs(_tmp33 - _tmp34));
  const Scalar _tmp36 = 1 - std::pow(_tmp35, Scalar(2));
  const Scalar _tmp37 =
      2 * std::min<Scalar>(0, (((-_tmp33 + _tmp34) > 0) - ((-_tmp33 + _tmp34) < 0))) + 1;
  const Scalar _tmp38 = std::acos(_tmp35);
  const Scalar _tmp39 = _tmp37 * _tmp38 / std::sqrt(_tmp36);
  const Scalar _tmp40 = 2 * _tmp39;
  const Scalar _tmp41 = _tmp32 * _tmp40;
  const Scalar _tmp42 = _tmp41 * lambdas(1, 1);
  const Scalar _tmp43 = _x1[0] * _x2[2] - _x1[1] * _x2[3] - _x1[2] * _x2[0] + _x1[3] * _x2[1];
  const Scalar _tmp44 = -_x1[0] * _x2[3] - _x1[1] * _x2[2] + _x1[2] * _x2[1] + _x1[3] * _x2[0];
  const Scalar _tmp45 = std::pow(_tmp44, Scalar(2));
  const Scalar _tmp46 = std::pow(_tmp37, Scalar(2)) * std::pow(_tmp38, Scalar(2)) *
                        std::pow(lambdas(1, 0), Scalar(2)) / _tmp36;
  const Scalar _tmp47 = 4 * _tmp46;
  const Scalar _tmp48 = std::pow(_tmp32, Scalar(2));
  const Scalar _tmp49 = std::pow(_tmp43, Scalar(2));
  const Scalar _tmp50 = _tmp21 + _tmp45 * _tmp47 + _tmp47 * _tmp48 + _tmp47 * _tmp49;
  const Scalar _tmp51 = std::sqrt(_tmp50);
  const Scalar _tmp52 = (Scalar(1) / Scalar(2)) * _tmp51;
  const Scalar _tmp53 = std::sin(_tmp52);
  const Scalar _tmp54 = 4 * _tmp39 * _tmp53 * lambdas(1, 0) * std::cos(_tmp52) / _tmp51;
  const Scalar _tmp55 = _tmp43 * _tmp54;
  const Scalar _tmp56 = 8 * _tmp46 * std::pow(_tmp53, Scalar(2)) / _tmp50;
  const Scalar _tmp57 = _tmp44 * _tmp56;
  const Scalar _tmp58 = _tmp32 * _tmp57;
  const Scalar _tmp59 = -_tmp55 + _tmp58;
  const Scalar _tmp60 = -_x2[0] * _x3[3] - _x2[1] * _x3[2] + _x2[2] * _x3[1] + _x2[3] * _x3[0];
  const Scalar _tmp61 = -_x2[0] * _x3[0] - _x2[1] * _x3[1] - _x2[2] * _x3[2];
  const Scalar _tmp62 = _x2[3] * _x3[3];
  const Scalar _tmp63 = std::min<Scalar>(_tmp13, std::fabs(_tmp61 - _tmp62));
  const Scalar _tmp64 = 1 - std::pow(_tmp63, Scalar(2));
  const Scalar _tmp65 =
      2 * std::min<Scalar>(0, (((-_tmp61 + _tmp62) > 0) - ((-_tmp61 + _tmp62) < 0))) + 1;
  const Scalar _tmp66 = std::acos(_tmp63);
  const Scalar _tmp67 = _tmp65 * _tmp66 / std::sqrt(_tmp64);
  const Scalar _tmp68 = 2 * _tmp67;
  const Scalar _tmp69 = _tmp60 * _tmp68;
  const Scalar _tmp70 = _tmp69 * lambdas(2, 1);
  const Scalar _tmp71 = -_x3[0] * _x4[0] - _x3[1] * _x4[1] - _x3[2] * _x4[2];
  const Scalar _tmp72 = _x3[3] * _x4[3];
  const Scalar _tmp73 = std::min<Scalar>(_tmp13, std::fabs(_tmp71 - _tmp72));
  const Scalar _tmp74 =
      2 * (2 * std::min<Scalar>(0, (((-_tmp71 + _tmp72) > 0) - ((-_tmp71 + _tmp72) < 0))) + 1) *
      std::acos(_tmp73) / std::sqrt(Scalar(1 - std::pow(_tmp73, Scalar(2))));
  const Scalar _tmp75 = _tmp74 * lambdas(3, 1);
  const Scalar _tmp76 = -_x3[0] * _x4[3] - _x3[1] * _x4[2] + _x3[2] * _x4[1] + _x3[3] * _x4[0];
  const Scalar _tmp77 = _x2[0] * _x3[2] - _x2[1] * _x3[3] - _x2[2] * _x3[0] + _x2[3] * _x3[1];
  const Scalar _tmp78 = std::pow(_tmp77, Scalar(2));
  const Scalar _tmp79 = std::pow(_tmp65, Scalar(2)) * std::pow(_tmp66, Scalar(2)) *
                        std::pow(lambdas(2, 0), Scalar(2)) / _tmp64;
  const Scalar _tmp80 = 4 * _tmp79;
  const Scalar _tmp81 = std::pow(_tmp60, Scalar(2));
  const Scalar _tmp82 = -_x2[0] * _x3[1] + _x2[1] * _x3[0] - _x2[2] * _x3[3] + _x2[3] * _x3[2];
  const Scalar _tmp83 = std::pow(_tmp82, Scalar(2));
  const Scalar _tmp84 = _tmp21 + _tmp78 * _tmp80 + _tmp80 * _tmp81 + _tmp80 * _tmp83;
  const Scalar _tmp85 = std::sqrt(_tmp84);
  const Scalar _tmp86 = (Scalar(1) / Scalar(2)) * _tmp85;
  const Scalar _tmp87 = std::sin(_tmp86);
  const Scalar _tmp88 = 8 * _tmp79 * std::pow(_tmp87, Scalar(2)) / _tmp84;
  const Scalar _tmp89 = -_tmp78 * _tmp88;
  const Scalar _tmp90 = -_tmp83 * _tmp88 + 1;
  const Scalar _tmp91 = _tmp76 * (_tmp89 + _tmp90);
  const Scalar _tmp92 = _x3[0] * _x4[2] - _x3[1] * _x4[3] - _x3[2] * _x4[0] + _x3[3] * _x4[1];
  const Scalar _tmp93 = _tmp77 * _tmp88;
  const Scalar _tmp94 = _tmp60 * _tmp93;
  const Scalar _tmp95 = 4 * _tmp67 * _tmp87 * lambdas(2, 0) * std::cos(_tmp86) / _tmp85;
  const Scalar _tmp96 = _tmp82 * _tmp95;
  const Scalar _tmp97 = _tmp92 * (_tmp94 - _tmp96);
  const Scalar _tmp98 = -_x3[0] * _x4[1] + _x3[1] * _x4[0] - _x3[2] * _x4[3] + _x3[3] * _x4[2];
  const Scalar _tmp99 = _tmp77 * _tmp95;
  const Scalar _tmp100 = _tmp60 * _tmp82 * _tmp88;
  const Scalar _tmp101 = _tmp98 * (_tmp100 + _tmp99);
  const Scalar _tmp102 = _tmp101 * _tmp75 + _tmp75 * _tmp91 + _tmp75 * _tmp97;
  const Scalar _tmp103 = _tmp102 + _tmp70;
  const Scalar _tmp104 = _tmp68 * _tmp77;
  const Scalar _tmp105 = _tmp104 * lambdas(2, 1);
  const Scalar _tmp106 = _tmp76 * (_tmp94 + _tmp96);
  const Scalar _tmp107 = _tmp60 * _tmp95;
  const Scalar _tmp108 = _tmp82 * _tmp93;
  const Scalar _tmp109 = _tmp98 * (-_tmp107 + _tmp108);
  const Scalar _tmp110 = -_tmp81 * _tmp88;
  const Scalar _tmp111 = _tmp92 * (_tmp110 + _tmp90);
  const Scalar _tmp112 = _tmp106 * _tmp75 + _tmp109 * _tmp75 + _tmp111 * _tmp75;
  const Scalar _tmp113 = _tmp105 + _tmp112;
  const Scalar _tmp114 = _tmp32 * _tmp43 * _tmp56;
  const Scalar _tmp115 = _tmp44 * _tmp54;
  const Scalar _tmp116 = _tmp114 + _tmp115;
  const Scalar _tmp117 = -_tmp49 * _tmp56;
  const Scalar _tmp118 = -_tmp45 * _tmp56 + 1;
  const Scalar _tmp119 = _tmp117 + _tmp118;
  const Scalar _tmp120 = _tmp68 * _tmp82;
  const Scalar _tmp121 = _tmp120 * lambdas(2, 1);
  const Scalar _tmp122 = _tmp98 * (_tmp110 + _tmp89 + 1);
  const Scalar _tmp123 = _tmp92 * (_tmp107 + _tmp108);
  const Scalar _tmp124 = _tmp76 * (_tmp100 - _tmp99);
  const Scalar _tmp125 = _tmp122 * _tmp75 + _tmp123 * _tmp75 + _tmp124 * _tmp75;
  const Scalar _tmp126 = _tmp121 + _tmp125;
  const Scalar _tmp127 = _tmp103 * _tmp59 + _tmp113 * _tmp116 + _tmp119 * _tmp126;
  const Scalar _tmp128 = _tmp127 + _tmp42;
  const Scalar _tmp129 = _tmp40 * lambdas(1, 1);
  const Scalar _tmp130 = _tmp129 * _tmp44;
  const Scalar _tmp131 = _tmp55 + _tmp58;
  const Scalar _tmp132 = -_tmp48 * _tmp56;
  const Scalar _tmp133 = _tmp117 + _tmp132 + 1;
  const Scalar _tmp134 = _tmp43 * _tmp57;
  const Scalar _tmp135 = _tmp32 * _tmp54;
  const Scalar _tmp136 = _tmp134 - _tmp135;
  const Scalar _tmp137 = _tmp103 * _tmp133 + _tmp113 * _tmp136 + _tmp126 * _tmp131;
  const Scalar _tmp138 = _tmp130 + _tmp137;
  const Scalar _tmp139 = _tmp26 * _tmp8;
  const Scalar _tmp140 = _tmp139 * _tmp6;
  const Scalar _tmp141 = _tmp29 * _tmp7;
  const Scalar _tmp142 = _tmp140 + _tmp141;
  const Scalar _tmp143 = _tmp129 * _tmp43;
  const Scalar _tmp144 = _tmp114 - _tmp115;
  const Scalar _tmp145 = _tmp134 + _tmp135;
  const Scalar _tmp146 = _tmp118 + _tmp132;
  const Scalar _tmp147 = _tmp103 * _tmp145 + _tmp113 * _tmp146 + _tmp126 * _tmp144;
  const Scalar _tmp148 = _tmp143 + _tmp147;
  const Scalar _tmp149 = -_tmp26 * _tmp9;
  const Scalar _tmp150 = -_tmp20 * _tmp26;
  const Scalar _tmp151 = _tmp149 + _tmp150 + 1;
  const Scalar _tmp152 = _tmp128 * _tmp31 + _tmp138 * _tmp142 + _tmp148 * _tmp151;
  const Scalar _tmp153 = 2 * _tmp28;
  const Scalar _tmp154 = _tmp153 * lambdas(0, 1);
  const Scalar _tmp155 = _tmp154 * _tmp8;
  const Scalar _tmp156 = _tmp140 - _tmp141;
  const Scalar _tmp157 = _tmp29 * _tmp6;
  const Scalar _tmp158 = _tmp139 * _tmp7;
  const Scalar _tmp159 = _tmp157 + _tmp158;
  const Scalar _tmp160 = -_tmp19 * _tmp26 + 1;
  const Scalar _tmp161 = _tmp150 + _tmp160;
  const Scalar _tmp162 = _tmp128 * _tmp159 + _tmp138 * _tmp161 + _tmp148 * _tmp156;
  const Scalar _tmp163 = _tmp153 * _tmp6;
  const Scalar _tmp164 = _tmp163 * lambdas(0, 1);
  const Scalar _tmp165 = _tmp149 + _tmp160;
  const Scalar _tmp166 = _tmp74 * lambdas(3, 2);
  const Scalar _tmp167 = -_tmp102 * _tmp105 + _tmp112 * _tmp70 + _tmp120 * lambdas(2, 2) +
                         _tmp122 * _tmp166 + _tmp123 * _tmp166 + _tmp124 * _tmp166;
  const Scalar _tmp168 = _tmp102 * _tmp121 + _tmp104 * lambdas(2, 2) + _tmp106 * _tmp166 +
                         _tmp109 * _tmp166 + _tmp111 * _tmp166 - _tmp125 * _tmp70;
  const Scalar _tmp169 = _tmp101 * _tmp166 + _tmp105 * _tmp125 - _tmp112 * _tmp121 +
                         _tmp166 * _tmp91 + _tmp166 * _tmp97 + _tmp69 * lambdas(2, 2);
  const Scalar _tmp170 = _tmp116 * _tmp168 + _tmp119 * _tmp167 + _tmp130 * _tmp147 -
                         _tmp137 * _tmp143 + _tmp169 * _tmp59 + _tmp41 * lambdas(1, 2);
  const Scalar _tmp171 = _tmp40 * lambdas(1, 2);
  const Scalar _tmp172 = _tmp127 * _tmp143 + _tmp131 * _tmp167 + _tmp133 * _tmp169 +
                         _tmp136 * _tmp168 - _tmp147 * _tmp42 + _tmp171 * _tmp44;
  const Scalar _tmp173 = -_tmp157 + _tmp158;
  const Scalar _tmp174 = _tmp153 * lambdas(0, 2);
  const Scalar _tmp175 = -_tmp127 * _tmp130 + _tmp137 * _tmp42 + _tmp144 * _tmp167 +
                         _tmp145 * _tmp169 + _tmp146 * _tmp168 + _tmp171 * _tmp43;
  const Scalar _tmp176 = _tmp27 + _tmp30;
  const Scalar _tmp177 = _tmp152 * _tmp155 - _tmp162 * _tmp164 + _tmp165 * _tmp170 +
                         _tmp172 * _tmp173 + _tmp174 * _tmp7 + _tmp175 * _tmp176;
  const Scalar _tmp178 = 2 * _x0[0] * _x0[1];
  const Scalar _tmp179 = _tmp1 * _x0[2];
  const Scalar _tmp180 = _tmp178 - _tmp179;
  const Scalar _tmp181 = _tmp154 * _tmp7;
  const Scalar _tmp182 = _tmp128 * _tmp165 + _tmp138 * _tmp173 + _tmp148 * _tmp176;
  const Scalar _tmp183 = _tmp142 * _tmp172 + _tmp151 * _tmp175 - _tmp155 * _tmp182 +
                         _tmp162 * _tmp181 + _tmp163 * lambdas(0, 2) + _tmp170 * _tmp31;
  const Scalar _tmp184 = -2 * std::pow(_x0[2], Scalar(2));
  const Scalar _tmp185 = 1 - 2 * std::pow(_x0[1], Scalar(2));
  const Scalar _tmp186 = _tmp184 + _tmp185;
  const Scalar _tmp187 = -_tmp152 * _tmp181 + _tmp156 * _tmp175 + _tmp159 * _tmp170 +
                         _tmp161 * _tmp172 + _tmp164 * _tmp182 + _tmp174 * _tmp8;
  const Scalar _tmp188 = _tmp177 * _tmp5 + _tmp180 * _tmp183 + _tmp186 * _tmp187;
  const Scalar _tmp189 = _tmp1 * _x0[0];
  const Scalar _tmp190 = _tmp3 * _x0[1];
  const Scalar _tmp191 = -_tmp189 + _tmp190;
  const Scalar _tmp192 = -2 * std::pow(_x0[0], Scalar(2));
  const Scalar _tmp193 = _tmp184 + _tmp192 + 1;
  const Scalar _tmp194 = _tmp178 + _tmp179;
  const Scalar _tmp195 = _tmp177 * _tmp191 + _tmp183 * _tmp193 + _tmp187 * _tmp194;
  const Scalar _tmp196 = _tmp185 + _tmp192;
  const Scalar _tmp197 = _tmp189 + _tmp190;
  const Scalar _tmp198 = -_tmp2 + _tmp4;
  const Scalar _tmp199 = _tmp177 * _tmp196 + _tmp183 * _tmp197 + _tmp187 * _tmp198;
  const Scalar _tmp200 = -_x1[4] + _x2[4];
  const Scalar _tmp201 = -_x3[4] + _x4[4];
  const Scalar _tmp202 = -_x2[4] + _x3[4];
  const Scalar _tmp203 = -_x0[4] + _x1[4];
  const Scalar _tmp204 = -_x1[6] + _x2[6];
  const Scalar _tmp205 = -_x3[6] + _x4[6];
  const Scalar _tmp206 = -_x2[6] + _x3[6];
  const Scalar _tmp207 = -_x0[6] + _x1[6];
  const Scalar _tmp208 = _tmp204 * lambdas(1, 1) + _tmp205 * lambdas(3, 1) +
                         _tmp206 * lambdas(2, 1) + _tmp207 * lambdas(0, 1);
  const Scalar _tmp209 = _tmp155 + _tmp162;
  const Scalar _tmp210 = _tmp152 + _tmp164;
  const Scalar _tmp211 = _tmp181 + _tmp182;
  const Scalar _tmp212 = _tmp191 * _tmp211 + _tmp193 * _tmp210 + _tmp194 * _tmp209;
  const Scalar _tmp213 = -_x1[5] + _x2[5];
  const Scalar _tmp214 = -_x3[5] + _x4[5];
  const Scalar _tmp215 = -_x2[5] + _x3[5];
  const Scalar _tmp216 = -_x0[5] + _x1[5];
  const Scalar _tmp217 = _tmp213 * lambdas(1, 0) + _tmp214 * lambdas(3, 0) +
                         _tmp215 * lambdas(2, 0) + _tmp216 * lambdas(0, 0) + _x0[5];
  const Scalar _tmp218 = _tmp204 * lambdas(1, 0) + _tmp205 * lambdas(3, 0) +
                         _tmp206 * lambdas(2, 0) + _tmp207 * lambdas(0, 0) + _x0[6];
  const Scalar _tmp219 = _tmp213 * lambdas(1, 1) + _tmp214 * lambdas(3, 1) +
                         _tmp215 * lambdas(2, 1) + _tmp216 * lambdas(0, 1);
  const Scalar _tmp220 = _tmp196 * _tmp211 + _tmp197 * _tmp210 + _tmp198 * _tmp209;
  const Scalar _tmp221 = _tmp180 * _tmp210 + _tmp186 * _tmp209 + _tmp211 * _tmp5;
  const Scalar _tmp222 = _tmp200 * lambdas(1, 1) + _tmp201 * lambdas(3, 1) +
                         _tmp202 * lambdas(2, 1) + _tmp203 * lambdas(0, 1);
  const Scalar _tmp223 = _tmp200 * lambdas(1, 0) + _tmp201 * lambdas(3, 0) +
                         _tmp202 * lambdas(2, 0) + _tmp203 * lambdas(0, 0) + _x0[4];

  // Output terms (1)
  Eigen::Matrix<Scalar, 6, 1> _res;

  _res(0, 0) = _tmp0 * _tmp188;
  _res(1, 0) = _tmp0 * _tmp195;
  _res(2, 0) = _tmp0 * _tmp199;
  _res(3, 0) = _tmp0 * (-_tmp195 * _tmp218 + _tmp199 * _tmp217 + _tmp200 * lambdas(1, 2) +
                        _tmp201 * lambdas(3, 2) + _tmp202 * lambdas(2, 2) +
                        _tmp203 * lambdas(0, 2) - _tmp208 * _tmp212 + _tmp219 * _tmp220);
  _res(4, 0) = _tmp0 * (_tmp188 * _tmp218 - _tmp199 * _tmp223 + _tmp208 * _tmp221 +
                        _tmp213 * lambdas(1, 2) + _tmp214 * lambdas(3, 2) +
                        _tmp215 * lambdas(2, 2) + _tmp216 * lambdas(0, 2) - _tmp220 * _tmp222);
  _res(5, 0) = _tmp0 * (-_tmp188 * _tmp217 + _tmp195 * _tmp223 + _tmp204 * lambdas(1, 2) +
                        _tmp205 * lambdas(3, 2) + _tmp206 * lambdas(2, 2) +
                        _tmp207 * lambdas(0, 2) + _tmp212 * _tmp222 - _tmp219 * _tmp221);

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
