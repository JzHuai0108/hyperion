// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: spline4_rot3_acceleration
 *
 * Args:
 *     dt: Scalar
 *     lambdas: Matrix43
 *     x0: Rot3
 *     x1: Rot3
 *     x2: Rot3
 *     x3: Rot3
 *     x4: Rot3
 *     epsilon: Scalar
 *
 * Outputs:
 *     res: Matrix31
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 3, 1> Spline4Rot3AccelerationGlobal(
    const Scalar dt, const Eigen::Matrix<Scalar, 4, 3>& lambdas, const sym::Rot3<Scalar>& x0,
    const sym::Rot3<Scalar>& x1, const sym::Rot3<Scalar>& x2, const sym::Rot3<Scalar>& x3,
    const sym::Rot3<Scalar>& x4, const Scalar epsilon) {
  // Total ops: 557

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _x0 = x0.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x1 = x1.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x2 = x2.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x3 = x3.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _x4 = x4.Data();

  // Intermediate terms (189)
  const Scalar _tmp0 = std::pow(dt, Scalar(-2));
  const Scalar _tmp1 = 2 * _x0[3];
  const Scalar _tmp2 = _tmp1 * _x0[2];
  const Scalar _tmp3 = 2 * _x0[0] * _x0[1];
  const Scalar _tmp4 = -_x1[0] * _x2[3] - _x1[1] * _x2[2] + _x1[2] * _x2[1] + _x1[3] * _x2[0];
  const Scalar _tmp5 = -_x1[0] * _x2[0] - _x1[1] * _x2[1] - _x1[2] * _x2[2];
  const Scalar _tmp6 = _x1[3] * _x2[3];
  const Scalar _tmp7 = 1 - epsilon;
  const Scalar _tmp8 = std::min<Scalar>(_tmp7, std::fabs(_tmp5 - _tmp6));
  const Scalar _tmp9 = 1 - std::pow(_tmp8, Scalar(2));
  const Scalar _tmp10 = std::acos(_tmp8);
  const Scalar _tmp11 =
      2 * std::min<Scalar>(0, (((-_tmp5 + _tmp6) > 0) - ((-_tmp5 + _tmp6) < 0))) + 1;
  const Scalar _tmp12 = _tmp10 * _tmp11 / std::sqrt(_tmp9);
  const Scalar _tmp13 = 2 * _tmp12;
  const Scalar _tmp14 = _tmp13 * _tmp4;
  const Scalar _tmp15 = _tmp14 * lambdas(1, 1);
  const Scalar _tmp16 = -_x1[0] * _x2[1] + _x1[1] * _x2[0] - _x1[2] * _x2[3] + _x1[3] * _x2[2];
  const Scalar _tmp17 = _x1[0] * _x2[2] - _x1[1] * _x2[3] - _x1[2] * _x2[0] + _x1[3] * _x2[1];
  const Scalar _tmp18 = std::pow(_tmp17, Scalar(2));
  const Scalar _tmp19 = std::pow(_tmp10, Scalar(2)) * std::pow(_tmp11, Scalar(2)) *
                        std::pow(lambdas(1, 0), Scalar(2)) / _tmp9;
  const Scalar _tmp20 = 4 * _tmp19;
  const Scalar _tmp21 = std::pow(_tmp16, Scalar(2));
  const Scalar _tmp22 = std::pow(_tmp4, Scalar(2));
  const Scalar _tmp23 = std::pow(epsilon, Scalar(2));
  const Scalar _tmp24 = _tmp18 * _tmp20 + _tmp20 * _tmp21 + _tmp20 * _tmp22 + _tmp23;
  const Scalar _tmp25 = std::sqrt(_tmp24);
  const Scalar _tmp26 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp27 = std::sin(_tmp26);
  const Scalar _tmp28 = 4 * _tmp12 * _tmp27 * lambdas(1, 0) * std::cos(_tmp26) / _tmp25;
  const Scalar _tmp29 = _tmp16 * _tmp28;
  const Scalar _tmp30 = 8 * _tmp19 * std::pow(_tmp27, Scalar(2)) / _tmp24;
  const Scalar _tmp31 = _tmp17 * _tmp30;
  const Scalar _tmp32 = _tmp31 * _tmp4;
  const Scalar _tmp33 = -_tmp29 + _tmp32;
  const Scalar _tmp34 = _x2[0] * _x3[2] - _x2[1] * _x3[3] - _x2[2] * _x3[0] + _x2[3] * _x3[1];
  const Scalar _tmp35 = -_x2[0] * _x3[0] - _x2[1] * _x3[1] - _x2[2] * _x3[2];
  const Scalar _tmp36 = _x2[3] * _x3[3];
  const Scalar _tmp37 = std::min<Scalar>(_tmp7, std::fabs(_tmp35 - _tmp36));
  const Scalar _tmp38 = std::acos(_tmp37);
  const Scalar _tmp39 =
      2 * std::min<Scalar>(0, (((-_tmp35 + _tmp36) > 0) - ((-_tmp35 + _tmp36) < 0))) + 1;
  const Scalar _tmp40 = 1 - std::pow(_tmp37, Scalar(2));
  const Scalar _tmp41 = _tmp38 * _tmp39 / std::sqrt(_tmp40);
  const Scalar _tmp42 = 2 * _tmp41;
  const Scalar _tmp43 = _tmp34 * _tmp42;
  const Scalar _tmp44 = _tmp43 * lambdas(2, 1);
  const Scalar _tmp45 = -_x2[0] * _x3[1] + _x2[1] * _x3[0] - _x2[2] * _x3[3] + _x2[3] * _x3[2];
  const Scalar _tmp46 = std::pow(_tmp45, Scalar(2));
  const Scalar _tmp47 = std::pow(_tmp38, Scalar(2)) * std::pow(_tmp39, Scalar(2)) *
                        std::pow(lambdas(2, 0), Scalar(2)) / _tmp40;
  const Scalar _tmp48 = 4 * _tmp47;
  const Scalar _tmp49 = std::pow(_tmp34, Scalar(2));
  const Scalar _tmp50 = -_x2[0] * _x3[3] - _x2[1] * _x3[2] + _x2[2] * _x3[1] + _x2[3] * _x3[0];
  const Scalar _tmp51 = std::pow(_tmp50, Scalar(2));
  const Scalar _tmp52 = _tmp23 + _tmp46 * _tmp48 + _tmp48 * _tmp49 + _tmp48 * _tmp51;
  const Scalar _tmp53 = std::sqrt(_tmp52);
  const Scalar _tmp54 = (Scalar(1) / Scalar(2)) * _tmp53;
  const Scalar _tmp55 = std::sin(_tmp54);
  const Scalar _tmp56 = 4 * _tmp41 * _tmp55 * lambdas(2, 0) * std::cos(_tmp54) / _tmp53;
  const Scalar _tmp57 = _tmp45 * _tmp56;
  const Scalar _tmp58 = 8 * _tmp47 * std::pow(_tmp55, Scalar(2)) / _tmp52;
  const Scalar _tmp59 = _tmp50 * _tmp58;
  const Scalar _tmp60 = _tmp34 * _tmp59;
  const Scalar _tmp61 = _tmp57 + _tmp60;
  const Scalar _tmp62 = -_x3[0] * _x4[3] - _x3[1] * _x4[2] + _x3[2] * _x4[1] + _x3[3] * _x4[0];
  const Scalar _tmp63 = -_x3[0] * _x4[0] - _x3[1] * _x4[1] - _x3[2] * _x4[2];
  const Scalar _tmp64 = _x3[3] * _x4[3];
  const Scalar _tmp65 = std::min<Scalar>(_tmp7, std::fabs(_tmp63 - _tmp64));
  const Scalar _tmp66 =
      2 * (2 * std::min<Scalar>(0, (((-_tmp63 + _tmp64) > 0) - ((-_tmp63 + _tmp64) < 0))) + 1) *
      std::acos(_tmp65) / std::sqrt(Scalar(1 - std::pow(_tmp65, Scalar(2))));
  const Scalar _tmp67 = _tmp66 * lambdas(3, 1);
  const Scalar _tmp68 = _tmp62 * _tmp67;
  const Scalar _tmp69 = -_x3[0] * _x4[1] + _x3[1] * _x4[0] - _x3[2] * _x4[3] + _x3[3] * _x4[2];
  const Scalar _tmp70 = _tmp50 * _tmp56;
  const Scalar _tmp71 = _tmp34 * _tmp45 * _tmp58;
  const Scalar _tmp72 = _tmp69 * (-_tmp70 + _tmp71);
  const Scalar _tmp73 = -_tmp46 * _tmp58;
  const Scalar _tmp74 = -_tmp51 * _tmp58 + 1;
  const Scalar _tmp75 = _tmp73 + _tmp74;
  const Scalar _tmp76 = _x3[0] * _x4[2] - _x3[1] * _x4[3] - _x3[2] * _x4[0] + _x3[3] * _x4[1];
  const Scalar _tmp77 = _tmp67 * _tmp76;
  const Scalar _tmp78 = _tmp61 * _tmp68 + _tmp67 * _tmp72 + _tmp75 * _tmp77;
  const Scalar _tmp79 = _tmp44 + _tmp78;
  const Scalar _tmp80 = -_tmp21 * _tmp30;
  const Scalar _tmp81 = -_tmp18 * _tmp30;
  const Scalar _tmp82 = _tmp80 + _tmp81 + 1;
  const Scalar _tmp83 = _tmp42 * _tmp50;
  const Scalar _tmp84 = _tmp83 * lambdas(2, 1);
  const Scalar _tmp85 = _tmp45 * _tmp59;
  const Scalar _tmp86 = _tmp34 * _tmp56;
  const Scalar _tmp87 = _tmp69 * (_tmp85 + _tmp86);
  const Scalar _tmp88 = -_tmp57 + _tmp60;
  const Scalar _tmp89 = -_tmp49 * _tmp58;
  const Scalar _tmp90 = _tmp73 + _tmp89 + 1;
  const Scalar _tmp91 = _tmp67 * _tmp87 + _tmp68 * _tmp90 + _tmp77 * _tmp88;
  const Scalar _tmp92 = _tmp84 + _tmp91;
  const Scalar _tmp93 = _tmp42 * _tmp45;
  const Scalar _tmp94 = _tmp93 * lambdas(2, 1);
  const Scalar _tmp95 = _tmp70 + _tmp71;
  const Scalar _tmp96 = _tmp69 * (_tmp74 + _tmp89);
  const Scalar _tmp97 = _tmp85 - _tmp86;
  const Scalar _tmp98 = _tmp67 * _tmp96 + _tmp68 * _tmp97 + _tmp77 * _tmp95;
  const Scalar _tmp99 = _tmp94 + _tmp98;
  const Scalar _tmp100 = _tmp17 * _tmp28;
  const Scalar _tmp101 = _tmp16 * _tmp30 * _tmp4;
  const Scalar _tmp102 = _tmp100 + _tmp101;
  const Scalar _tmp103 = _tmp102 * _tmp99 + _tmp33 * _tmp79 + _tmp82 * _tmp92;
  const Scalar _tmp104 = _tmp103 + _tmp15;
  const Scalar _tmp105 = _x0[0] * _x1[2] - _x0[1] * _x1[3] - _x0[2] * _x1[0] + _x0[3] * _x1[1];
  const Scalar _tmp106 = std::pow(_tmp105, Scalar(2));
  const Scalar _tmp107 = -_x0[0] * _x1[0] - _x0[1] * _x1[1] - _x0[2] * _x1[2];
  const Scalar _tmp108 = _x0[3] * _x1[3];
  const Scalar _tmp109 = std::min<Scalar>(_tmp7, std::fabs(_tmp107 - _tmp108));
  const Scalar _tmp110 = 1 - std::pow(_tmp109, Scalar(2));
  const Scalar _tmp111 = std::acos(_tmp109);
  const Scalar _tmp112 =
      2 * std::min<Scalar>(0, (((-_tmp107 + _tmp108) > 0) - ((-_tmp107 + _tmp108) < 0))) + 1;
  const Scalar _tmp113 = std::pow(_tmp111, Scalar(2)) * std::pow(_tmp112, Scalar(2)) *
                         std::pow(lambdas(0, 0), Scalar(2)) / _tmp110;
  const Scalar _tmp114 = 4 * _tmp113;
  const Scalar _tmp115 = -_x0[0] * _x1[3] - _x0[1] * _x1[2] + _x0[2] * _x1[1] + _x0[3] * _x1[0];
  const Scalar _tmp116 = std::pow(_tmp115, Scalar(2));
  const Scalar _tmp117 = -_x0[0] * _x1[1] + _x0[1] * _x1[0] - _x0[2] * _x1[3] + _x0[3] * _x1[2];
  const Scalar _tmp118 = std::pow(_tmp117, Scalar(2));
  const Scalar _tmp119 = _tmp106 * _tmp114 + _tmp114 * _tmp116 + _tmp114 * _tmp118 + _tmp23;
  const Scalar _tmp120 = std::sqrt(_tmp119);
  const Scalar _tmp121 = (Scalar(1) / Scalar(2)) * _tmp120;
  const Scalar _tmp122 = std::sin(_tmp121);
  const Scalar _tmp123 = 8 * _tmp113 * std::pow(_tmp122, Scalar(2)) / _tmp119;
  const Scalar _tmp124 = -_tmp106 * _tmp123;
  const Scalar _tmp125 = -_tmp118 * _tmp123 + 1;
  const Scalar _tmp126 = _tmp124 + _tmp125;
  const Scalar _tmp127 = _tmp13 * _tmp16;
  const Scalar _tmp128 = _tmp127 * lambdas(1, 1);
  const Scalar _tmp129 = _tmp16 * _tmp31;
  const Scalar _tmp130 = _tmp28 * _tmp4;
  const Scalar _tmp131 = _tmp129 + _tmp130;
  const Scalar _tmp132 = -_tmp100 + _tmp101;
  const Scalar _tmp133 = -_tmp22 * _tmp30 + 1;
  const Scalar _tmp134 = _tmp133 + _tmp81;
  const Scalar _tmp135 = _tmp131 * _tmp79 + _tmp132 * _tmp92 + _tmp134 * _tmp99;
  const Scalar _tmp136 = _tmp128 + _tmp135;
  const Scalar _tmp137 = _tmp111 * _tmp112 / std::sqrt(_tmp110);
  const Scalar _tmp138 = 4 * _tmp122 * _tmp137 * lambdas(0, 0) * std::cos(_tmp121) / _tmp120;
  const Scalar _tmp139 = _tmp105 * _tmp138;
  const Scalar _tmp140 = _tmp115 * _tmp117 * _tmp123;
  const Scalar _tmp141 = _tmp139 + _tmp140;
  const Scalar _tmp142 = _tmp117 * _tmp138;
  const Scalar _tmp143 = _tmp105 * _tmp123;
  const Scalar _tmp144 = _tmp115 * _tmp143;
  const Scalar _tmp145 = -_tmp142 + _tmp144;
  const Scalar _tmp146 = _tmp13 * _tmp17;
  const Scalar _tmp147 = _tmp146 * lambdas(1, 1);
  const Scalar _tmp148 = _tmp129 - _tmp130;
  const Scalar _tmp149 = _tmp29 + _tmp32;
  const Scalar _tmp150 = _tmp133 + _tmp80;
  const Scalar _tmp151 = _tmp148 * _tmp99 + _tmp149 * _tmp92 + _tmp150 * _tmp79;
  const Scalar _tmp152 = _tmp147 + _tmp151;
  const Scalar _tmp153 = _tmp104 * _tmp126 + _tmp136 * _tmp141 + _tmp145 * _tmp152;
  const Scalar _tmp154 = 2 * _tmp137;
  const Scalar _tmp155 = _tmp154 * lambdas(0, 1);
  const Scalar _tmp156 = _tmp117 * _tmp155;
  const Scalar _tmp157 = _tmp66 * lambdas(3, 2);
  const Scalar _tmp158 = _tmp157 * _tmp62;
  const Scalar _tmp159 = _tmp157 * _tmp76;
  const Scalar _tmp160 = _tmp157 * _tmp72 + _tmp158 * _tmp61 + _tmp159 * _tmp75 +
                         _tmp43 * lambdas(2, 2) - _tmp84 * _tmp98 + _tmp91 * _tmp94;
  const Scalar _tmp161 = _tmp157 * _tmp96 + _tmp158 * _tmp97 + _tmp159 * _tmp95 - _tmp44 * _tmp91 +
                         _tmp78 * _tmp84 + _tmp93 * lambdas(2, 2);
  const Scalar _tmp162 = _tmp157 * _tmp87 + _tmp158 * _tmp90 + _tmp159 * _tmp88 + _tmp44 * _tmp98 -
                         _tmp78 * _tmp94 + _tmp83 * lambdas(2, 2);
  const Scalar _tmp163 = -_tmp103 * _tmp147 + _tmp127 * lambdas(1, 2) + _tmp131 * _tmp160 +
                         _tmp132 * _tmp162 + _tmp134 * _tmp161 + _tmp15 * _tmp151;
  const Scalar _tmp164 = _tmp117 * _tmp143;
  const Scalar _tmp165 = _tmp115 * _tmp138;
  const Scalar _tmp166 = _tmp164 - _tmp165;
  const Scalar _tmp167 = _tmp103 * _tmp128 - _tmp135 * _tmp15 + _tmp146 * lambdas(1, 2) +
                         _tmp148 * _tmp161 + _tmp149 * _tmp162 + _tmp150 * _tmp160;
  const Scalar _tmp168 = -_tmp116 * _tmp123;
  const Scalar _tmp169 = _tmp125 + _tmp168;
  const Scalar _tmp170 = _tmp142 + _tmp144;
  const Scalar _tmp171 = _tmp102 * _tmp161 - _tmp128 * _tmp151 + _tmp135 * _tmp147 +
                         _tmp14 * lambdas(1, 2) + _tmp160 * _tmp33 + _tmp162 * _tmp82;
  const Scalar _tmp172 = -_tmp139 + _tmp140;
  const Scalar _tmp173 = _tmp164 + _tmp165;
  const Scalar _tmp174 = _tmp124 + _tmp168 + 1;
  const Scalar _tmp175 = _tmp155 * (_tmp104 * _tmp172 + _tmp136 * _tmp174 + _tmp152 * _tmp173);
  const Scalar _tmp176 = _tmp154 * lambdas(0, 2);
  const Scalar _tmp177 = _tmp105 * _tmp176 - _tmp115 * _tmp175 + _tmp153 * _tmp156 +
                         _tmp163 * _tmp166 + _tmp167 * _tmp169 + _tmp170 * _tmp171;
  const Scalar _tmp178 = -2 * std::pow(_x0[1], Scalar(2));
  const Scalar _tmp179 = -2 * std::pow(_x0[2], Scalar(2));
  const Scalar _tmp180 = _tmp104 * _tmp170 + _tmp136 * _tmp166 + _tmp152 * _tmp169;
  const Scalar _tmp181 = _tmp105 * _tmp175 + _tmp115 * _tmp176 + _tmp126 * _tmp171 +
                         _tmp141 * _tmp163 + _tmp145 * _tmp167 - _tmp156 * _tmp180;
  const Scalar _tmp182 = _tmp1 * _x0[1];
  const Scalar _tmp183 = 2 * _x0[2];
  const Scalar _tmp184 = _tmp183 * _x0[0];
  const Scalar _tmp185 = -_tmp105 * _tmp153 * _tmp155 + _tmp115 * _tmp155 * _tmp180 +
                         _tmp117 * _tmp176 + _tmp163 * _tmp174 + _tmp167 * _tmp173 +
                         _tmp171 * _tmp172;
  const Scalar _tmp186 = 1 - 2 * std::pow(_x0[0], Scalar(2));
  const Scalar _tmp187 = _tmp1 * _x0[0];
  const Scalar _tmp188 = _tmp183 * _x0[1];

  // Output terms (1)
  Eigen::Matrix<Scalar, 3, 1> _res;

  _res(0, 0) = _tmp0 * (_tmp177 * (-_tmp2 + _tmp3) + _tmp181 * (_tmp178 + _tmp179 + 1) +
                        _tmp185 * (_tmp182 + _tmp184));
  _res(1, 0) = _tmp0 * (_tmp177 * (_tmp179 + _tmp186) + _tmp181 * (_tmp2 + _tmp3) +
                        _tmp185 * (-_tmp187 + _tmp188));
  _res(2, 0) = _tmp0 * (_tmp177 * (_tmp187 + _tmp188) + _tmp181 * (-_tmp182 + _tmp184) +
                        _tmp185 * (_tmp178 + _tmp186));

  return _res;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
